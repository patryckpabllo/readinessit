<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://www.zain.com/ZESB/Services/IncidentManagement/Types" xmlns:pfx8="http://www.zain.com/ZESB/Types/Common" xmlns:pfx7="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:pfx6="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="urn:HPD_IncidentInterface_Generic_WS" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns13="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns10="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns8="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd2" xmlns:ns11="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/IncidentManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/IncidentManagement_Custom/IncidentManagement_Custom.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/IncidentManagement_Remedy/Implementation/IncidentManagement_UpdateIncident.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>35</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/IncidentManagement_Remedy/UpdateIncident/GW_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1183</pd:endX>
    <pd:endY>294</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="pfx8:FaultType"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Call_ESI_IncidentManagement_QueryIncidents">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>575</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/IncidentManagement_Remedy/HelperProcess/Call_ESI_IncidentManagement_QueryIncidents.process</processName>
        </config>
        <pd:inputBindings>
            <pfx9:QueryIncidentsRequest>
                <pfx9:Filter>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID"/>
                </pfx9:Filter>
                <pfx9:StartRecord>
                    <xsl:value-of select="1"/>
                </pfx9:StartRecord>
                <pfx9:PageSize>
                    <xsl:value-of select="1"/>
                </pfx9:PageSize>
                <pfx9:TransactionID>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:TransactionID"/>
                </pfx9:TransactionID>
                <pfx9:StartTime>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:StartTime"/>
                </pfx9:StartTime>
            </pfx9:QueryIncidentsRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>445</pd:x>
        <pd:y>292</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Fault_Mapper">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>754</pd:x>
        <pd:y>293</pd:y>
        <config>
            <element ref="pfx8:FaultType"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($Call_ESI_IncidentManagement_QueryIncidents/root/pfx8:FaultType)">
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_QueryIncidents/root/pfx8:FaultType"/>
                </xsl:when>
                <xsl:when test="exists($Call_ESI_IncidentManagement_QueryWorkLog/root/pfx8:FaultType)">
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_QueryWorkLog/root/pfx8:FaultType"/>
                </xsl:when>
                <xsl:when test="exists($Call_ESI_IncidentManagement_UpdateIncident/root/pfx8:FaultType)">
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_UpdateIncident/root/pfx8:FaultType"/>
                </xsl:when>
                <xsl:otherwise>
                    <pfx8:FaultType>
                        <pfx8:type>
                            <xsl:value-of select="&quot;Technical&quot;"/>
                        </pfx8:type>
                        <pfx8:code>
                            <xsl:value-of select="$ErrorHandler/pfx2:ExceptionRequest/ExceptionCode"/>
                        </pfx8:code>
                        <pfx8:description>
                            <xsl:value-of select="$ErrorHandler/pfx2:ExceptionRequest/StackTrace"/>
                        </pfx8:description>
                        <pfx8:sourceSystem>
                            <xsl:value-of select="&quot;TIBCO&quot;"/>
                        </pfx8:sourceSystem>
                    </pfx8:FaultType>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>610</pd:x>
        <pd:y>291</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" element="pfx2:ExceptionRequest"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($Catch/exceptiondata/pfx2:ExceptionRequest/StackTrace)">
                    <xsl:copy-of select="$Catch/exceptiondata/pfx2:ExceptionRequest"/>
                </xsl:when>
                <xsl:otherwise>
                    <pfx2:ExceptionRequest>
                        <ns22:Header>
                            <ns22:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns22:ApplicationID>
                            <ns22:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                            </ns22:ComponentName>
                            <ns22:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns22:Hostname>
                            <ns22:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns22:Timestamp>
                            <ns22:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                            </ns22:TransactionDomain>
                            <ns22:TransactionType>
                                <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                            </ns22:TransactionType>
                            <ns22:TransactionID>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                            </ns22:TransactionID>
                        </ns22:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/MiscErrorCode"/>
                        </ExceptionCode>
                        <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                            <StackTrace>
                                <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                            </StackTrace>
                        </xsl:if>
                    </pfx2:ExceptionRequest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1054</pd:x>
        <pd:y>294</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/IncidentManagement_Remedy/UpdateIncident/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Fault_Mapper/pfx8:FaultType)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp >0 )and exists($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;tib:timestamp() - $JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;&quot;0&quot;"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>69</pd:x>
        <pd:y>150</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>308</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/IncidentManagement_Remedy/UpdateIncident/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1177</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/IncidentManagement_Remedy/UpdateIncident/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Call_ESI_IncidentManagement_UpdateIncident/root/pfx9:UpdateIncidentResponse)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>413</pd:x>
        <pd:y>35</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx9:UpdateIncidentRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>145</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1180</pd:x>
        <pd:y>166</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
            <InDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx9:UpdateIncidentResponse"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InDataxsdString>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <root>
                        <pfx9:UpdateIncidentResponse>
                            <pfx9:Status>
                                <xsl:value-of select="$Call_ESI_IncidentManagement_UpdateIncident/root/pfx9:UpdateIncidentResponse/pfx9:Status"/>
                            </pfx9:Status>
                            <pfx9:TransactionID>
                                <xsl:value-of select="$Call_ESI_IncidentManagement_UpdateIncident/root/pfx9:UpdateIncidentResponse/pfx9:TransactionID"/>
                            </pfx9:TransactionID>
                            <pfx9:StartTime>
                                <xsl:value-of select="$Call_ESI_IncidentManagement_UpdateIncident/root/pfx9:UpdateIncidentResponse/pfx9:StartTime"/>
                            </pfx9:StartTime>
                        </pfx9:UpdateIncidentResponse>
                    </root>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate_Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>574</pd:x>
        <pd:y>148</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ESI_IncidentManagement_UpdateIncident">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>992</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/IncidentManagement_Remedy/HelperProcess/Call_ESI_IncidentManagement_UpdateIncident.process</processName>
        </config>
        <pd:inputBindings>
            <pfx9:UpdateIncidentRequest>
                <pfx9:Incident>
                    <pfx9:Customer>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:First">
                            <pfx9:First>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:First"/>
                            </pfx9:First>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:MiddleInitial">
                            <pfx9:MiddleInitial>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:MiddleInitial"/>
                            </pfx9:MiddleInitial>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last&#xA;else $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident[1]/pfx9:Customer/pfx9:Last">
                            <pfx9:Last>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Last&#xA;else $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident[1]/pfx9:Customer/pfx9:Last"/>
                            </pfx9:Last>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:LoginID">
                            <pfx9:LoginID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:LoginID"/>
                            </pfx9:LoginID>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:PhoneNumber">
                            <pfx9:PhoneNumber>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:PhoneNumber"/>
                            </pfx9:PhoneNumber>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:Company">
                            <pfx9:Company>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:Company"/>
                            </pfx9:Company>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:CorporateID">
                            <pfx9:CorporateID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Customer/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Customer/pfx9:CorporateID"/>
                            </pfx9:CorporateID>
                        </xsl:if>
                    </pfx9:Customer>
                    <pfx9:AssignedTo>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:First">
                            <pfx9:First>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:First"/>
                            </pfx9:First>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:MiddleInitial">
                            <pfx9:MiddleInitial>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:MiddleInitial"/>
                            </pfx9:MiddleInitial>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Last">
                            <pfx9:Last>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Last&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Last"/>
                            </pfx9:Last>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:LoginID">
                            <pfx9:LoginID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:LoginID"/>
                            </pfx9:LoginID>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:PhoneNumber">
                            <pfx9:PhoneNumber>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:PhoneNumber"/>
                            </pfx9:PhoneNumber>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Company">
                            <pfx9:Company>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Company"/>
                            </pfx9:Company>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:CorporateID">
                            <pfx9:CorporateID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:CorporateID"/>
                            </pfx9:CorporateID>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Organization">
                            <pfx9:Organization>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Organization&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Organization"/>
                            </pfx9:Organization>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Group">
                            <pfx9:Group>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:Group&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:Group"/>
                            </pfx9:Group>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:ShiftName">
                            <pfx9:ShiftName>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:AssignedTo/pfx9:ShiftName&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:AssignedTo/pfx9:ShiftName"/>
                            </pfx9:ShiftName>
                        </xsl:if>
                    </pfx9:AssignedTo>
                    <xsl:for-each select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization">
                        <pfx9:Categorization>
                            <xsl:for-each select="pfx9:Category">
                                <pfx9:Category>
                                    <xsl:attribute name="Tier">
                                        <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[1]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[1]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[1]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Categorization/pfx9:Category[1]/@Tier"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="."/>
                                </pfx9:Category>
                                <pfx9:Category>
                                    <xsl:attribute name="Tier">
                                        <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[2]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[2]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[2]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Categorization/pfx9:Category[2]/@Tier"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="."/>
                                </pfx9:Category>
                                <pfx9:Category>
                                    <xsl:attribute name="Tier">
                                        <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[3]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[3]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Categorization/pfx9:Category[3]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Categorization/pfx9:Category[3]/@Tier"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="."/>
                                </pfx9:Category>
                            </xsl:for-each>
                        </pfx9:Categorization>
                    </xsl:for-each>
                    <pfx9:Status>
                        <xsl:value-of select="if(string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Status)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Status&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Status"/>
                    </pfx9:Status>
                    <pfx9:Summary>
                        <xsl:value-of select="if(string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Summary)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Summary&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Summary"/>
                    </pfx9:Summary>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Description">
                        <pfx9:Description>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Description&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Description"/>
                        </pfx9:Description>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Impact">
                        <pfx9:Impact>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Impact&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Impact"/>
                        </pfx9:Impact>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Urgency">
                        <pfx9:Urgency>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Urgency&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Urgency"/>
                        </pfx9:Urgency>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ServiceType">
                        <pfx9:ServiceType>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ServiceType&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ServiceType"/>
                        </pfx9:ServiceType>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ReportedSource">
                        <pfx9:ReportedSource>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ReportedSource&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ReportedSource"/>
                        </pfx9:ReportedSource>
                    </xsl:if>
                    <pfx9:DirectContact>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:First">
                            <pfx9:First>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:First&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:First"/>
                            </pfx9:First>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:MiddleInitial">
                            <pfx9:MiddleInitial>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:MiddleInitial&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:MiddleInitial"/>
                            </pfx9:MiddleInitial>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:Last">
                            <pfx9:Last>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Last&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:Last"/>
                            </pfx9:Last>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:LoginID">
                            <pfx9:LoginID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:LoginID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:LoginID"/>
                            </pfx9:LoginID>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:PhoneNumber">
                            <pfx9:PhoneNumber>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:PhoneNumber&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:PhoneNumber"/>
                            </pfx9:PhoneNumber>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:Company">
                            <pfx9:Company>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:Company&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:Company"/>
                            </pfx9:Company>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:CorporateID">
                            <pfx9:CorporateID>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:DirectContact/pfx9:CorporateID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:DirectContact/pfx9:CorporateID"/>
                            </pfx9:CorporateID>
                        </xsl:if>
                    </pfx9:DirectContact>
                    <pfx9:ProductInfo>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Name">
                            <pfx9:Name>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Name"/>
                            </pfx9:Name>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Manufacturer">
                            <pfx9:Manufacturer>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Manufacturer&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Manufacturer"/>
                            </pfx9:Manufacturer>
                        </xsl:if>
                        <xsl:for-each select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization">
                            <pfx9:Categorization>
                                <xsl:for-each select="pfx9:Category">
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                </xsl:for-each>
                            </pfx9:Categorization>
                        </xsl:for-each>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:ModelVersion">
                            <pfx9:ModelVersion>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ProductInfo/pfx9:ModelVersion&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ProductInfo/pfx9:ModelVersion"/>
                            </pfx9:ModelVersion>
                        </xsl:if>
                    </pfx9:ProductInfo>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:IncidentID">
                        <pfx9:IncidentID>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:IncidentID"/>
                        </pfx9:IncidentID>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusReason">
                        <pfx9:StatusReason>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusReason&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusReason"/>
                        </pfx9:StatusReason>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:VIP">
                        <pfx9:VIP>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:VIP&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:VIP"/>
                        </pfx9:VIP>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Priority">
                        <pfx9:Priority>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Priority&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Priority"/>
                        </pfx9:Priority>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:PriorityWeight">
                        <pfx9:PriorityWeight>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:PriorityWeight&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:PriorityWeight"/>
                        </pfx9:PriorityWeight>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:TargetDate">
                        <pfx9:TargetDate>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:TargetDate&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:TargetDate"/>
                        </pfx9:TargetDate>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Resolution">
                        <pfx9:Resolution>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Resolution&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:Resolution"/>
                        </pfx9:Resolution>
                    </xsl:if>
                    <xsl:for-each select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ResolutionCategorization">
                        <pfx9:ResolutionCategorization>
                            <xsl:for-each select="pfx9:Category">
                                <pfx9:Category>
                                    <xsl:attribute name="Tier">
                                        <xsl:value-of select="@Tier"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="."/>
                                </pfx9:Category>
                            </xsl:for-each>
                        </pfx9:ResolutionCategorization>
                    </xsl:for-each>
                    <pfx9:StatusDates>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Created">
                            <pfx9:Created>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Created&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Created"/>
                            </pfx9:Created>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Resolved">
                            <pfx9:Resolved>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Resolved&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Resolved"/>
                            </pfx9:Resolved>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Closed">
                            <pfx9:Closed>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Closed&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Closed"/>
                            </pfx9:Closed>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Cancelled">
                            <pfx9:Cancelled>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:StatusDates/pfx9:Cancelled&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:StatusDates/pfx9:Cancelled"/>
                            </pfx9:Cancelled>
                        </xsl:if>
                    </pfx9:StatusDates>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:LastUpdatedBy">
                        <pfx9:LastUpdatedBy>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:LastUpdatedBy&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:LastUpdatedBy"/>
                        </pfx9:LastUpdatedBy>
                    </xsl:if>
                    <pfx9:ClosureProductInfo>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Name">
                            <pfx9:Name>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Name"/>
                            </pfx9:Name>
                        </xsl:if>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Manufacturer">
                            <pfx9:Manufacturer>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Manufacturer&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Manufacturer"/>
                            </pfx9:Manufacturer>
                        </xsl:if>
                        <xsl:for-each select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization">
                            <pfx9:Categorization>
                                <xsl:for-each select="pfx9:Category">
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[1]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[2]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                    <pfx9:Category>
                                        <xsl:attribute name="Tier">
                                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:Categorization/pfx9:Category[3]/@Tier"/>
                                        </xsl:attribute>
                                        <xsl:value-of select="."/>
                                    </pfx9:Category>
                                </xsl:for-each>
                            </pfx9:Categorization>
                        </xsl:for-each>
                        <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:ModelVersion">
                            <pfx9:ModelVersion>
                                <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:ClosureProductInfo/pfx9:ModelVersion&#xA;else $Call_ESI_IncidentManagement_QueryIncidents/root/pfx9:QueryIncidentsResponse/pfx9:Incidents/pfx9:Incident[1]/pfx9:ClosureProductInfo/pfx9:ModelVersion"/>
                            </pfx9:ModelVersion>
                        </xsl:if>
                    </pfx9:ClosureProductInfo>
                    <pfx9:Params>
                        <xsl:copy-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:Params/*"/>
                    </pfx9:Params>
                </pfx9:Incident>
                <pfx9:WorkLog>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Type">
                        <pfx9:Type>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Type&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Type"/>
                        </pfx9:Type>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Source">
                        <pfx9:Source>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Source&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Source"/>
                        </pfx9:Source>
                    </xsl:if>
                    <pfx9:Summary>
                        <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Summary) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Summary)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Summary&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Summary"/>
                    </pfx9:Summary>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Description">
                        <pfx9:Description>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Description&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Description"/>
                        </pfx9:Description>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Private">
                        <pfx9:Private>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Private&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Private"/>
                        </pfx9:Private>
                    </xsl:if>
                    <xsl:if test="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Locked">
                        <pfx9:Locked>
                            <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Locked&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Locked"/>
                        </pfx9:Locked>
                    </xsl:if>
                    <pfx9:Attachments>
                        <xsl:for-each select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment">
                            <pfx9:Attachment>
                                <pfx9:Name>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Name"/>
                                </pfx9:Name>
                                <pfx9:Data>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Data) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Data)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Data&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Data"/>
                                </pfx9:Data>
                                <pfx9:Size>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Size) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Size)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Size&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[1]/pfx9:Size"/>
                                </pfx9:Size>
                            </pfx9:Attachment>
                            <pfx9:Attachment>
                                <pfx9:Name>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Name"/>
                                </pfx9:Name>
                                <pfx9:Data>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Data) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Data)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Data&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Data"/>
                                </pfx9:Data>
                                <pfx9:Size>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Size) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Size)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Size&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[2]/pfx9:Size"/>
                                </pfx9:Size>
                            </pfx9:Attachment>
                            <pfx9:Attachment>
                                <pfx9:Name>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Name) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Name)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Name&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Name"/>
                                </pfx9:Name>
                                <pfx9:Data>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Data) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Data)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Data&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Data"/>
                                </pfx9:Data>
                                <pfx9:Size>
                                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Size) and string-length($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Size)>0)&#xA;then $Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Size&#xA;else $Call_ESI_IncidentManagement_QueryWorkLog/root/pfx9:QueryWorkLogResponse/pfx9:WorkLog/pfx9:WorkItem[1]/pfx9:Attachments/pfx9:Attachment[3]/pfx9:Size"/>
                                </pfx9:Size>
                            </pfx9:Attachment>
                        </xsl:for-each>
                    </pfx9:Attachments>
                </pfx9:WorkLog>
                <pfx9:TransactionID>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </pfx9:TransactionID>
                <pfx9:StartTime>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </pfx9:StartTime>
            </pfx9:UpdateIncidentRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate_Error_1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>997</pd:x>
        <pd:y>154</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ResCodes">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>198</pd:x>
        <pd:y>35</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>910</pd:x>
        <pd:y>291</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
            <InDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx8:FaultType"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InDataxsdString>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <root>
                        <xsl:copy-of select="$Fault_Mapper/pfx8:FaultType"/>
                    </root>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Fault_Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>681</pd:x>
        <pd:y>125</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_QueryIncidents/root/pfx8:FaultType"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ESI_IncidentManagement_QueryWorkLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>787</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/IncidentManagement_Remedy/HelperProcess/Call_ESI_IncidentManagement_QueryWorkLog.process</processName>
        </config>
        <pd:inputBindings>
            <pfx9:QueryWorkLogRequest>
                <pfx9:IncidentID>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:Incident/pfx9:IncidentID"/>
                </pfx9:IncidentID>
                <pfx9:IncludeAttachments>
                    <xsl:value-of select="if(exists($Parse-XML/pfx9:UpdateIncidentRequest/pfx9:WorkLog/pfx9:Attachments/pfx9:Attachment)) &#xA;then &quot;true&quot;&#xA;else &quot;false&quot;"/>
                </pfx9:IncludeAttachments>
                <pfx9:TransactionID>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:TransactionID"/>
                </pfx9:TransactionID>
                <pfx9:StartTime>
                    <xsl:value-of select="$Parse-XML/pfx9:UpdateIncidentRequest/pfx9:StartTime"/>
                </pfx9:StartTime>
            </pfx9:QueryWorkLogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate_Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>790</pd:x>
        <pd:y>153</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Fault_Error-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>883</pd:x>
        <pd:y>123</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_QueryWorkLog/root/pfx8:FaultType"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Fault_Error-2-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1082</pd:x>
        <pd:y>121</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:copy-of select="$Call_ESI_IncidentManagement_UpdateIncident/root/pfx8:FaultType"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>ResCodes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Call_ESI_IncidentManagement_QueryIncidents</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Fault_Mapper</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Fault_Mapper</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryIncidents</pd:from>
        <pd:to>Generate_Error</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryIncidents</pd:from>
        <pd:to>Call_ESI_IncidentManagement_QueryWorkLog</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_UpdateIncident</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_UpdateIncident</pd:from>
        <pd:to>Generate_Error_1</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ResCodes</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryIncidents</pd:from>
        <pd:to>Fault_Error</pd:to>
        <pd:xpathDescription>FaultType</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Call_ESI_IncidentManagement_QueryIncidents/root/pfx8:FaultType)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryWorkLog</pd:from>
        <pd:to>Call_ESI_IncidentManagement_UpdateIncident</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryWorkLog</pd:from>
        <pd:to>Generate_Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_QueryWorkLog</pd:from>
        <pd:to>Fault_Error-2</pd:to>
        <pd:xpathDescription>FaultType</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Call_ESI_IncidentManagement_QueryWorkLog/root/pfx8:FaultType)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ESI_IncidentManagement_UpdateIncident</pd:from>
        <pd:to>Fault_Error-2-1</pd:to>
        <pd:xpathDescription>FaultType</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Call_ESI_IncidentManagement_UpdateIncident/root/pfx8:FaultType)</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>