<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx15="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsRes.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsReq.xsd" xmlns:pfx13="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/ContractReplaceAck.xsd" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/ContractReplaceReq.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/SimChangeAck.xsd" xmlns:pfx10="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/SimChangeReq.xsd" xmlns:pfx201="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerReq.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceRes.xsd" xmlns:pfx18="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceReq.xsd" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns41="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx241="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetEPointsRegisterRes.xsd" xmlns:pfx51="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns10="http://www.ericsson.com/CDM/telecom/Header" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns51="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx101="http://www.lhsgroup.com/ws_v3" xmlns:pfx231="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetEPointsRegisterReq.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:pfx81="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/NewSubscriptionReq.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" xmlns:pfx5="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx31="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx32="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:pfx33="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd" xmlns:pfx3="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" xmlns:pfx2="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx35="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersReq.xsd" xmlns:pfx9="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetStorageMediumIdRes.xsd" xmlns:pfx161="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/PostPaymentReq.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersRes.xsd" xmlns:pfx8="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetStorageMediumIdReq.xsd" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetOffers/Schema.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx38="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetOffers/Schema1.xsd" xmlns:pfx6="http://www.tibco.com/pe/CheckpointSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd" xmlns:ns9="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns5="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns6="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns7="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerRes.xsd" xmlns:pfx211="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:ns8="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx28="http://www.ericsson.com/ZainKWCommonProject/BusinessSchemas/Services/Query/GetFaFList/GetFaFlistRes.xsd" xmlns:ns4="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:pfx29="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetFnFNumbers/GetFnFNumbersResponse.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd" xmlns:pfx23="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsReq.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsRes.xsd" xmlns:pfx26="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/order" xmlns:pfx27="http://www.ericsson.com/ZainKWCommonProject/BusinessSchemas/Services/Query/GetFaFList/GetFaFlistReq.xsd" xmlns:pfx24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" xmlns:pfx25="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd">
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetStorageMediumIdRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetStorageMediumId/GetStorageMediumIdRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetStorageMediumIdReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetStorageMediumId/GetStorageMediumIdReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/SimChangeAck.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/SimChange/SimChangeAck.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/SimChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/SimChange/SimChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/ContractReplaceReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractReplace/ContractReplaceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/ContractReplaceAck.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractReplace/ContractReplaceAck.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetTransactions/GetTransactionsReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetTransactions/GetTransactionsRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetailsAndBalance/GetAccountDetailsAndBalanceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetailsAndBalance/GetAccountDetailsAndBalanceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKWCommonProject/BusinessSchemas/Services/Query/GetFaFList/GetFaFlistReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetFaFList/GetFaFlistReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetFnFNumbers/GetFnFNumbersResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetFnFNumbers/GetFnFNumbersResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKWCommonProject/BusinessSchemas/Services/Query/GetFaFList/GetFaFlistRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetFaFList/GetFaFListRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AcceptOffer/AcceptOffersReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AcceptOffer/AcceptOffersRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOfferResponse.xsd"/>
    <pd:name>BusinessProcesses/Services/SDP/Query/GetPrepaidBalance/HelperProcess/GetOffers.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx40:GetOfferRequest" minOccurs="0"/>
                    <xsd:element name="TransactionID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>84</pd:startX>
    <pd:startY>161</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$MapOffersResponse/pfx39:GetOfferResponse"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx39:GetOfferResponse"/>
    <pd:endX>847</pd:endX>
    <pd:endY>163</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1328787919179</pd:targetNamespace>
    <pd:activity name="ESI_SDP">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>435</pd:x>
        <pd:y>163</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($MapOffersRequest/pfx40:GetOfferRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetPrepaidBalance/Request_Offers"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                </TransactionType>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <RequestTimeOut>
                    <xsl:value-of select="30"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>548</pd:x>
        <pd:y>269</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns3:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>427</pd:x>
        <pd:y>279</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <xsl:if test="$_error_ESI_SDP/pfx3:ExceptionRequest/ns4:Header/ns4:Message">
                    <message>
                        <xsl:value-of select="$_error_ESI_SDP/pfx3:ExceptionRequest/ns4:Header/ns4:Message"/>
                    </message>
                </xsl:if>
                <messageCode>
                    <xsl:value-of select="$_error_ESI_SDP/pfx3:ExceptionRequest/ExceptionCode"/>
                </messageCode>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapOffersRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>306</pd:x>
        <pd:y>161</pd:y>
        <config>
            <element ref="pfx40:GetOfferRequest"/>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Start/root/pfx40:GetOfferRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapOffersResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>669</pd:x>
        <pd:y>161</pd:y>
        <config>
            <element ref="pfx39:GetOfferResponse"/>
        </config>
        <pd:inputBindings>
            <pfx39:GetOfferResponse>
                <xsl:for-each select="$Parse-XML/pfx39:GetOfferResponse/pfx39:GetOfferRes">
                    <pfx39:GetOfferRes>
                        <xsl:for-each select="pfx7:BusinessMessageHeader">
                            <pfx7:BusinessMessageHeader>
                                <xsl:if test="ExternalTransactionID">
                                    <ExternalTransactionID>
                                        <xsl:value-of select="ExternalTransactionID"/>
                                    </ExternalTransactionID>
                                </xsl:if>
                                <xsl:if test="COName">
                                    <COName>
                                        <xsl:value-of select="COName"/>
                                    </COName>
                                </xsl:if>
                                <xsl:if test="Consumer">
                                    <Consumer>
                                        <xsl:value-of select="Consumer"/>
                                    </Consumer>
                                </xsl:if>
                                <xsl:if test="Provider">
                                    <Provider>
                                        <xsl:value-of select="Provider"/>
                                    </Provider>
                                </xsl:if>
                                <xsl:if test="Timestamp">
                                    <Timestamp>
                                        <xsl:value-of select="Timestamp"/>
                                    </Timestamp>
                                </xsl:if>
                                <xsl:if test="Action">
                                    <Action>
                                        <xsl:value-of select="Action"/>
                                    </Action>
                                </xsl:if>
                                <xsl:if test="ApplicationID">
                                    <ApplicationID>
                                        <xsl:value-of select="ApplicationID"/>
                                    </ApplicationID>
                                </xsl:if>
                                <xsl:if test="ComponentName">
                                    <ComponentName>
                                        <xsl:value-of select="ComponentName"/>
                                    </ComponentName>
                                </xsl:if>
                                <xsl:if test="Hostname">
                                    <Hostname>
                                        <xsl:value-of select="Hostname"/>
                                    </Hostname>
                                </xsl:if>
                                <xsl:if test="TransactionDomain">
                                    <TransactionDomain>
                                        <xsl:value-of select="TransactionDomain"/>
                                    </TransactionDomain>
                                </xsl:if>
                                <xsl:if test="TransactionType">
                                    <TransactionType>
                                        <xsl:value-of select="TransactionType"/>
                                    </TransactionType>
                                </xsl:if>
                                <xsl:if test="TransactionID">
                                    <TransactionID>
                                        <xsl:value-of select="TransactionID"/>
                                    </TransactionID>
                                </xsl:if>
                                <xsl:if test="Version">
                                    <Version>
                                        <xsl:value-of select="Version"/>
                                    </Version>
                                </xsl:if>
                                <xsl:for-each select="SourceSystemInfo">
                                    <SourceSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </SourceSystemInfo>
                                </xsl:for-each>
                                <xsl:for-each select="TargetSystemInfo">
                                    <TargetSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </TargetSystemInfo>
                                </xsl:for-each>
                            </pfx7:BusinessMessageHeader>
                        </xsl:for-each>
                        <xsl:for-each select="pfx7:SubscriberAssets">
                            <pfx7:SubscriberAssets>
                                <xsl:for-each select="Subscriber">
                                    <Subscriber>
                                        <ServiceNo>
                                            <xsl:value-of select="ServiceNo"/>
                                        </ServiceNo>
                                        <xsl:if test="pfx7:IMSI">
                                            <pfx7:IMSI>
                                                <xsl:value-of select="pfx7:IMSI"/>
                                            </pfx7:IMSI>
                                        </xsl:if>
                                        <xsl:if test="SubscriberType">
                                            <SubscriberType>
                                                <xsl:value-of select="SubscriberType"/>
                                            </SubscriberType>
                                        </xsl:if>
                                    </Subscriber>
                                </xsl:for-each>
                                <xsl:for-each select="ListOfAssets">
                                    <ListOfAssets>
                                        <xsl:for-each select="Asset[AssetID &lt; 4900]">
                                            <Asset>
                                                <xsl:if test="AssetID">
                                                    <AssetID>
                                                        <xsl:value-of select="AssetID"/>
                                                    </AssetID>
                                                </xsl:if>
                                                <xsl:if test="AssetType">
                                                    <AssetType>
                                                        <xsl:value-of select="AssetType"/>
                                                    </AssetType>
                                                </xsl:if>
                                                <xsl:if test="AssetsDescription">
                                                    <AssetsDescription>
                                                        <xsl:value-of select="AssetsDescription"/>
                                                    </AssetsDescription>
                                                </xsl:if>
                                                <xsl:if test="AssetAutoRenewalFlag">
                                                    <AssetAutoRenewalFlag>
                                                        <xsl:value-of select="AssetAutoRenewalFlag"/>
                                                    </AssetAutoRenewalFlag>
                                                </xsl:if>
                                                <xsl:for-each select="ListOfServices">
                                                    <ListOfServices>
                                                        <xsl:for-each select="Service">
                                                            <Service>
                                                                <ServiceID>
                                                                    <xsl:value-of select="ServiceID"/>
                                                                </ServiceID>
                                                                <xsl:if test="ServiceType">
                                                                    <ServiceType>
                                                                        <xsl:value-of select="ServiceType"/>
                                                                    </ServiceType>
                                                                </xsl:if>
                                                                <xsl:if test="ServiceVolume">
                                                                    <ServiceVolume>
                                                                        <xsl:value-of select="ServiceVolume"/>
                                                                    </ServiceVolume>
                                                                </xsl:if>
                                                                <xsl:if test="ServiceUnit">
                                                                    <ServiceUnit>
                                                                        <xsl:value-of select="ServiceUnit"/>
                                                                    </ServiceUnit>
                                                                </xsl:if>
                                                            </Service>
                                                        </xsl:for-each>
                                                    </ListOfServices>
                                                </xsl:for-each>
                                                <xsl:for-each select="product">
                                                    <product>
                                                        <xsl:if test="ProductName">
                                                            <ProductName>
                                                                <xsl:value-of select="ProductName"/>
                                                            </ProductName>
                                                        </xsl:if>
                                                        <xsl:if test="ProductID">
                                                            <ProductID>
                                                                <xsl:value-of select="ProductID"/>
                                                            </ProductID>
                                                        </xsl:if>
                                                    </product>
                                                </xsl:for-each>
                                                <xsl:for-each select="Price">
                                                    <Price>
                                                        <xsl:if test="One-Time">
                                                            <One-Time>
                                                                <xsl:value-of select="One-Time"/>
                                                            </One-Time>
                                                        </xsl:if>
                                                        <xsl:if test="Recurring">
                                                            <Recurring>
                                                                <xsl:value-of select="Recurring"/>
                                                            </Recurring>
                                                        </xsl:if>
                                                        <xsl:if test="Unit">
                                                            <Unit>
                                                                <xsl:value-of select="Unit"/>
                                                            </Unit>
                                                        </xsl:if>
                                                        <xsl:if test="RecurringFrequency">
                                                            <RecurringFrequency>
                                                                <xsl:value-of select="RecurringFrequency"/>
                                                            </RecurringFrequency>
                                                        </xsl:if>
                                                    </Price>
                                                </xsl:for-each>
                                                <xsl:if test="AssetStartDate">
                                                    <AssetStartDate>
                                                        <xsl:value-of select="AssetStartDate"/>
                                                    </AssetStartDate>
                                                </xsl:if>
                                                <xsl:if test="AssetEndDate">
                                                    <AssetEndDate>
                                                        <xsl:value-of select="AssetEndDate"/>
                                                    </AssetEndDate>
                                                </xsl:if>
                                                <xsl:if test="AssetActionCode">
                                                    <AssetActionCode>
                                                        <xsl:value-of select="AssetActionCode"/>
                                                    </AssetActionCode>
                                                </xsl:if>
                                                <xsl:if test="AssetActionCommand">
                                                    <AssetActionCommand>
                                                        <xsl:value-of select="AssetActionCommand"/>
                                                    </AssetActionCommand>
                                                </xsl:if>
                                                <xsl:if test="AssetStatus">
                                                    <AssetStatus>
                                                        <xsl:value-of select="AssetStatus"/>
                                                    </AssetStatus>
                                                </xsl:if>
                                                <xsl:if test="AssetStatusDescription">
                                                    <AssetStatusDescription>
                                                        <xsl:value-of select="AssetStatusDescription"/>
                                                    </AssetStatusDescription>
                                                </xsl:if>
                                            </Asset>
                                        </xsl:for-each>
                                    </ListOfAssets>
                                </xsl:for-each>
                            </pfx7:SubscriberAssets>
                        </xsl:for-each>
                        <xsl:for-each select="pfx7:Response">
                            <pfx7:Response>
                                <ResponseCode>
                                    <xsl:value-of select="'0'"/>
                                </ResponseCode>
                                <xsl:if test="ResponseDescription">
                                    <ResponseDescription>
                                        <xsl:value-of select="ResponseDescription"/>
                                    </ResponseDescription>
                                </xsl:if>
                                <xsl:for-each select="ResponseRefernces">
                                    <ResponseRefernces>
                                        <xsl:for-each select="Reference">
                                            <Reference>
                                                <xsl:if test="Name">
                                                    <Name>
                                                        <xsl:value-of select="Name"/>
                                                    </Name>
                                                </xsl:if>
                                                <xsl:if test="Value">
                                                    <Value>
                                                        <xsl:value-of select="Value"/>
                                                    </Value>
                                                </xsl:if>
                                            </Reference>
                                        </xsl:for-each>
                                    </ResponseRefernces>
                                </xsl:for-each>
                            </pfx7:Response>
                        </xsl:for-each>
                    </pfx39:GetOfferRes>
                </xsl:for-each>
            </pfx39:GetOfferResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>542</pd:x>
        <pd:y>161</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx39:GetOfferResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$ESI_SDP/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>MapOffersRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_SDP</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>MapOffersResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_SDP</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapOffersRequest</pd:from>
        <pd:to>ESI_SDP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapOffersResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>