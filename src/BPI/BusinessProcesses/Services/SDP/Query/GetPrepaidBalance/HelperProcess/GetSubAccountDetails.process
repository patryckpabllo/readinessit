<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.zain.com/ZESB/Services/Last3CallDetails" xmlns:ns21="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetOffers/Schema1.xsd" xmlns:ns22="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetOffers/Schema.xsd" xmlns:ns23="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns20="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx5="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" xmlns:pfx3="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateRes.xsd" xmlns:pfx2="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd" xmlns:pfx9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsResponse.xsd" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsRequest.xsd" xmlns:pfx7="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/Schema1.xsd" xmlns:pfx6="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/Schema.xsd" xmlns:ns16="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersRes.xsd" xmlns:ns17="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns15="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:ns18="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd" xmlns:ns19="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes.xsd" xmlns:ns9="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns6="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsRes.xsd" xmlns:ns7="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns10="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/FAF" xmlns:ns8="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.zain.com/ZESB/Types/Common" xmlns:ns3="http://www.zain.com/ZESB/Services/Last3CallDetails/Types" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AcceptOffersReq.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/Response" schemaLocation="/CDM/Response.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/Last3CallDetails/Last3CallDetailsRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/Last3CallDetails" location="/BusinessWSDLS/Services/Query/GetLast3CallDetails/Last3CallDetails.wsdl"/>
    <pd:name>BusinessProcesses/Services/SDP/Query/GetPrepaidBalance/HelperProcess/GetSubAccountDetails.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx8:GetSubAccountDetailsRequest"/>
                    <xsd:element name="TransactionId" type="xsd:string"/>
                    <xsd:element name="StartTimestamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>90</pd:startX>
    <pd:startY>410</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($GenerateFinalOutput/pfx9:GetSubAccountDetailsResponse)">
                <xsl:copy-of select="$GenerateFinalOutput/pfx9:GetSubAccountDetailsResponse"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$GenerateFinalOutput-1/pfx9:GetSubAccountDetailsResponse"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx9:GetSubAccountDetailsResponse"/>
    <pd:endX>1285</pd:endX>
    <pd:endY>547</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1398414787021</pd:targetNamespace>
    <pd:activity name="CLElogException">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>88</pd:x>
        <pd:y>678</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="BW:getCurrentProcessName(zainesbcustom:getTransactionType($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                </ns2:Header>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Logging/Logging_Message/LogRoleError"/>
                </Category>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>92</pd:x>
        <pd:y>541</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns14:ExceptionRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="&quot;TIBCO&quot;"/>
                    </ns2:ApplicationID>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                </ns2:Header>
                <ExceptionCode>
                    <xsl:value-of select="&quot;&quot;"/>
                </ExceptionCode>
            </ns14:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>256</pd:x>
        <pd:y>108</pd:y>
        <pd:width>1444</pd:width>
        <pd:height>363</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Parse XML</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GenerateFinalOutput</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GenerateFinalOutput-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapForNoSubscriber</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSubAccountDetails</pd:from>
            <pd:to>Generate-Error-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse XML</pd:from>
            <pd:to>GetDAWithoutOffer</pd:to>
            <pd:xpathDescription>Action ON</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse XML</pd:from>
            <pd:to>Generate-Error-2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetOffersCall</pd:from>
            <pd:to>Map-Single-offer</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Single-offer</pd:from>
            <pd:to>Map-Data-2</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetOffersCall</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Group</pd:from>
            <pd:to>GenerateFinalOutput</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Data-2</pd:from>
            <pd:to>Map-Data-1-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Data-1-1</pd:from>
            <pd:to>MapForNoSubscriber</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetDAWithoutOffer</pd:from>
            <pd:to>ESB_DAMapping</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSubAccountDetails</pd:from>
            <pd:to>Stand-alone-DA-Check</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Stand-alone-DA-Check</pd:from>
            <pd:to>GetOffersCall</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Stand-alone-DA-Check/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Stand-alone-DA-Check</pd:from>
            <pd:to>GenerateFinalOutput-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Data-1-1</pd:from>
            <pd:to>Null-Expiry</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseCode='0'
and
$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseCode='0'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Null-Expiry</pd:from>
            <pd:to>Group</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESB_DAMapping</pd:from>
            <pd:to>GetSubAccountDetails</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="GetSubAccountDetails">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>600</pd:x>
            <pd:y>188</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/SDP/Query/GetPrepaidBalance/HelperProcess/SubAccounts.process</processName>
            </config>
            <pd:inputBindings>
                <xsl:copy-of select="$Parse-XML/pfx8:GetSubAccountDetailsRequest"/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate-Error-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>482</pd:x>
            <pd:y>404</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse XML">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>346</pd:x>
            <pd:y>295</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term ref="pfx8:GetSubAccountDetailsRequest"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx8:GetSubAccountDetailsRequest)"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate-Error-2">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>345</pd:x>
            <pd:y>402</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetOffersCall">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>712</pd:x>
            <pd:y>181</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/SDP/Query/GetPrepaidBalance/HelperProcess/GetOffers.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns24:GetOfferRequest>
                        <ns24:GetOfferReq>
                            <xsl:copy-of select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader"/>
                            <xsl:copy-of select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:Subscriber"/>
                        </ns24:GetOfferReq>
                    </ns24:GetOfferRequest>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionId"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimestamp"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map-Single-offer">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>823</pd:x>
            <pd:y>182</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:copy-of select="$GetOffersCall/ns23:GetOfferResponse/ns23:GetOfferRes/ns20:BusinessMessageHeader"/>
                        <pfx9:ListOfAccounts>
                            <xsl:for-each select="$GetOffersCall/ns23:GetOfferResponse/ns23:GetOfferRes/ns20:SubscriberAssets/ListOfAssets/Asset">
                                <pfx9:Account>
                                    <xsl:if test="product/ProductName">
                                        <pfx9:AccountName>
                                            <xsl:value-of select="product/ProductName"/>
                                        </pfx9:AccountName>
                                    </xsl:if>
                                    <xsl:if test="AssetStatus">
                                        <pfx9:Balance>
                                            <xsl:value-of select="AssetStatus"/>
                                        </pfx9:Balance>
                                    </xsl:if>
                                    <xsl:if test="AssetEndDate">
                                        <pfx9:ExpiryDate>
                                            <xsl:value-of select="AssetEndDate"/>
                                        </pfx9:ExpiryDate>
                                    </xsl:if>
                                    <xsl:if test="AssetStartDate">
                                        <pfx9:StartDate>
                                            <xsl:value-of select="AssetStartDate"/>
                                        </pfx9:StartDate>
                                    </xsl:if>
                                    <xsl:if test="AssetsDescription">
                                        <pfx9:productID>
                                            <xsl:value-of select="AssetsDescription"/>
                                        </pfx9:productID>
                                    </xsl:if>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                        <ns20:Response>
                            <ResponseCode>
                                <xsl:value-of select="'0'"/>
                            </ResponseCode>
                        </ns20:Response>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>709</pd:x>
            <pd:y>402</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput/>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map-Data-2">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>827</pd:x>
            <pd:y>388</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:copy-of select="$GetOffersCall/ns23:GetOfferResponse/ns23:GetOfferRes/ns20:BusinessMessageHeader"/>
                        <pfx9:ListOfAccounts>
                            <xsl:for-each select="$GetOffersCall/ns23:GetOfferResponse/ns23:GetOfferRes/ns20:Response/ResponseRefernces/Reference">
                                <pfx9:Account>
                                    <xsl:if test="Value">
                                        <pfx9:AccountName>
                                            <xsl:value-of select="Value"/>
                                        </pfx9:AccountName>
                                    </xsl:if>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:group name="Group">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>1091</pd:x>
            <pd:y>155</pd:y>
            <pd:width>302</pd:width>
            <pd:height>158</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>inputLoop</pd:groupType>
                <pd:serializable>false</pd:serializable>
                <pd:over>$Null-Expiry/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account</pd:over>
                <pd:iterationElementSlot>y</pd:iterationElementSlot>
                <pd:indexSlot>x</pd:indexSlot>
                <pd:outSlot>Outputlist</pd:outSlot>
                <pd:activityOutputName>Map-Data-1</pd:activityOutputName>
                <pd:accumulateOutput>true</pd:accumulateOutput>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>CheckDAWithoutOffer</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Map-Data-1</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>CheckDAWithoutOffer</pd:from>
                <pd:to>Map-Data-1</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:activity name="Map-Data-1">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>1309</pd:x>
                <pd:y>231</pd:y>
                <config>
                    <element ref="pfx9:GetSubAccountDetailsResponse"/>
                </config>
                <pd:inputBindings>
                    <pfx9:GetSubAccountDetailsResponse>
                        <pfx9:GetSubAccountDetailsRes>
                            <xsl:for-each select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader">
                                <ns20:BusinessMessageHeader>
                                    <xsl:if test="ExternalTransactionID">
                                        <ExternalTransactionID>
                                            <xsl:value-of select="ExternalTransactionID"/>
                                        </ExternalTransactionID>
                                    </xsl:if>
                                    <xsl:if test="COName">
                                        <COName>
                                            <xsl:value-of select="COName"/>
                                        </COName>
                                    </xsl:if>
                                    <xsl:if test="Consumer">
                                        <Consumer>
                                            <xsl:value-of select="Consumer"/>
                                        </Consumer>
                                    </xsl:if>
                                    <xsl:if test="Provider">
                                        <Provider>
                                            <xsl:value-of select="Provider"/>
                                        </Provider>
                                    </xsl:if>
                                    <xsl:if test="Timestamp">
                                        <Timestamp>
                                            <xsl:value-of select="Timestamp"/>
                                        </Timestamp>
                                    </xsl:if>
                                    <xsl:if test="Action">
                                        <Action>
                                            <xsl:value-of select="Action"/>
                                        </Action>
                                    </xsl:if>
                                    <xsl:if test="ApplicationID">
                                        <ApplicationID>
                                            <xsl:value-of select="ApplicationID"/>
                                        </ApplicationID>
                                    </xsl:if>
                                    <xsl:if test="ComponentName">
                                        <ComponentName>
                                            <xsl:value-of select="ComponentName"/>
                                        </ComponentName>
                                    </xsl:if>
                                    <xsl:if test="Hostname">
                                        <Hostname>
                                            <xsl:value-of select="Hostname"/>
                                        </Hostname>
                                    </xsl:if>
                                    <xsl:if test="TransactionDomain">
                                        <TransactionDomain>
                                            <xsl:value-of select="TransactionDomain"/>
                                        </TransactionDomain>
                                    </xsl:if>
                                    <xsl:if test="TransactionType">
                                        <TransactionType>
                                            <xsl:value-of select="TransactionType"/>
                                        </TransactionType>
                                    </xsl:if>
                                    <xsl:if test="TransactionID">
                                        <TransactionID>
                                            <xsl:value-of select="TransactionID"/>
                                        </TransactionID>
                                    </xsl:if>
                                    <xsl:if test="Version">
                                        <Version>
                                            <xsl:value-of select="Version"/>
                                        </Version>
                                    </xsl:if>
                                    <xsl:for-each select="SourceSystemInfo">
                                        <SourceSystemInfo>
                                            <xsl:if test="@SystemVersion">
                                                <xsl:attribute name="SystemVersion">
                                                    <xsl:value-of select="@SystemVersion"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <SystemtId>
                                                <xsl:value-of select="SystemtId"/>
                                            </SystemtId>
                                            <SystemAddress>
                                                <xsl:value-of select="SystemAddress"/>
                                            </SystemAddress>
                                        </SourceSystemInfo>
                                    </xsl:for-each>
                                    <xsl:for-each select="TargetSystemInfo">
                                        <TargetSystemInfo>
                                            <xsl:if test="@SystemVersion">
                                                <xsl:attribute name="SystemVersion">
                                                    <xsl:value-of select="@SystemVersion"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <SystemtId>
                                                <xsl:value-of select="SystemtId"/>
                                            </SystemtId>
                                            <SystemAddress>
                                                <xsl:value-of select="SystemAddress"/>
                                            </SystemAddress>
                                        </TargetSystemInfo>
                                    </xsl:for-each>
                                </ns20:BusinessMessageHeader>
                            </xsl:for-each>
                            <pfx9:ListOfAccounts>
                                <xsl:variable name="var" select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseRefernces/Reference[Name='productID']/Value"/>
                                <pfx9:Account>
                                    <xsl:if test="$y/pfx9:Account/pfx9:AccountName">
                                        <pfx9:AccountName>
                                            <xsl:value-of select="if($CheckDAWithoutOffer/DA_Flag='false') then $y/pfx9:Account/pfx9:AccountName&#xA;else&#xA;substring-after($y/pfx9:Account/pfx9:AccountName, '-')"/>
                                        </pfx9:AccountName>
                                    </xsl:if>
                                    <pfx9:Balance>
                                        <xsl:value-of select="$y/pfx9:Account/pfx9:Balance"/>
                                    </pfx9:Balance>
                                    <pfx9:ExpiryDate>
                                        <xsl:value-of select="$y/pfx9:Account/pfx9:ExpiryDate"/>
                                    </pfx9:ExpiryDate>
                                    <pfx9:StartDate>
                                        <xsl:value-of select="$y/pfx9:Account/pfx9:StartDate"/>
                                    </pfx9:StartDate>
                                    <pfx9:productID>
                                        <xsl:value-of select="$y/pfx9:Account/pfx9:productID"/>
                                    </pfx9:productID>
                                </pfx9:Account>
                            </pfx9:ListOfAccounts>
                        </pfx9:GetSubAccountDetailsRes>
                    </pfx9:GetSubAccountDetailsResponse>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="CheckDAWithoutOffer">
                <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                <pd:resourceType>ae.process.subprocess</pd:resourceType>
                <pd:x>1185</pd:x>
                <pd:y>234</pd:y>
                <config>
                    <processName>/BusinessProcesses/Services/SDP/Query/GetPrepaidBalance/HelperProcess/CheckDAWithNoOffer.process</processName>
                </config>
                <pd:inputBindings>
                    <root>
                        <DA_INSTANCE>
                            <xsl:value-of select="substring-after($y/pfx9:Account/pfx9:AccountName, '-')"/>
                        </DA_INSTANCE>
                    </root>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
        <pd:activity name="MapForNoSubscriber">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>928</pd:x>
            <pd:y>393</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:for-each select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader">
                            <ns20:BusinessMessageHeader>
                                <xsl:if test="ExternalTransactionID">
                                    <ExternalTransactionID>
                                        <xsl:value-of select="ExternalTransactionID"/>
                                    </ExternalTransactionID>
                                </xsl:if>
                                <xsl:if test="COName">
                                    <COName>
                                        <xsl:value-of select="COName"/>
                                    </COName>
                                </xsl:if>
                                <xsl:if test="Consumer">
                                    <Consumer>
                                        <xsl:value-of select="Consumer"/>
                                    </Consumer>
                                </xsl:if>
                                <xsl:if test="Provider">
                                    <Provider>
                                        <xsl:value-of select="Provider"/>
                                    </Provider>
                                </xsl:if>
                                <xsl:if test="Timestamp">
                                    <Timestamp>
                                        <xsl:value-of select="Timestamp"/>
                                    </Timestamp>
                                </xsl:if>
                                <xsl:if test="Action">
                                    <Action>
                                        <xsl:value-of select="Action"/>
                                    </Action>
                                </xsl:if>
                                <xsl:if test="ApplicationID">
                                    <ApplicationID>
                                        <xsl:value-of select="ApplicationID"/>
                                    </ApplicationID>
                                </xsl:if>
                                <xsl:if test="ComponentName">
                                    <ComponentName>
                                        <xsl:value-of select="ComponentName"/>
                                    </ComponentName>
                                </xsl:if>
                                <xsl:if test="Hostname">
                                    <Hostname>
                                        <xsl:value-of select="Hostname"/>
                                    </Hostname>
                                </xsl:if>
                                <xsl:if test="TransactionDomain">
                                    <TransactionDomain>
                                        <xsl:value-of select="TransactionDomain"/>
                                    </TransactionDomain>
                                </xsl:if>
                                <xsl:if test="TransactionType">
                                    <TransactionType>
                                        <xsl:value-of select="TransactionType"/>
                                    </TransactionType>
                                </xsl:if>
                                <xsl:if test="TransactionID">
                                    <TransactionID>
                                        <xsl:value-of select="TransactionID"/>
                                    </TransactionID>
                                </xsl:if>
                                <xsl:if test="Version">
                                    <Version>
                                        <xsl:value-of select="Version"/>
                                    </Version>
                                </xsl:if>
                                <xsl:for-each select="SourceSystemInfo">
                                    <SourceSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </SourceSystemInfo>
                                </xsl:for-each>
                                <xsl:for-each select="TargetSystemInfo">
                                    <TargetSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </TargetSystemInfo>
                                </xsl:for-each>
                            </ns20:BusinessMessageHeader>
                        </xsl:for-each>
                        <pfx9:ListOfAccounts>
                            <xsl:variable name="var" select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseRefernces/Reference[Name='productID']/Value"/>
                            <xsl:for-each select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account">
                                <pfx9:Account>
                                    <xsl:variable name="var2" select="current()/pfx9:productID"/>
                                    <xsl:variable name="var3" select="current()/pfx9:productID"/>
                                    <xsl:variable name="var4" select="current()/pfx9:productID"/>
                                    <pfx9:AccountName>
                                        <xsl:value-of select="if (exists($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var2]/pfx9:AccountName) and string-length($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var3]/pfx9:AccountName)>0)&#xA;then&#xA;concat($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var4]/pfx9:AccountName,'-',current()/pfx9:AccountName)&#xA;else&#xA;current()/pfx9:AccountName"/>
                                    </pfx9:AccountName>
                                    <pfx9:Balance>
                                        <xsl:value-of select="pfx9:Balance"/>
                                    </pfx9:Balance>
                                    <xsl:choose>
                                        <xsl:when test="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID=current()/pfx9:productID">
                                            <xsl:variable name="var5" select="current()/pfx9:productID"/>
                                            <pfx9:ExpiryDate>
                                                <xsl:value-of select="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var5]/pfx9:ExpiryDate"/>
                                            </pfx9:ExpiryDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx9:ExpiryDate>
                                                <xsl:value-of select="current()/pfx9:ExpiryDate"/>
                                            </pfx9:ExpiryDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID=current()/pfx9:productID">
                                            <xsl:variable name="var6" select="current()/pfx9:productID"/>
                                            <pfx9:StartDate>
                                                <xsl:value-of select="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var6]/pfx9:StartDate"/>
                                            </pfx9:StartDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx9:StartDate>
                                                <xsl:value-of select="current()/pfx9:StartDate"/>
                                            </pfx9:StartDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <pfx9:productID>
                                        <xsl:value-of select="pfx9:productID"/>
                                    </pfx9:productID>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map-Data-1-1">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>920</pd:x>
            <pd:y>186</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:for-each select="$Parse-XML/pfx8:GetSubAccountDetailsRequest/pfx8:GetSubAccountDetailsReq/ns20:BusinessMessageHeader">
                            <ns20:BusinessMessageHeader>
                                <xsl:if test="ExternalTransactionID">
                                    <ExternalTransactionID>
                                        <xsl:value-of select="ExternalTransactionID"/>
                                    </ExternalTransactionID>
                                </xsl:if>
                                <xsl:if test="COName">
                                    <COName>
                                        <xsl:value-of select="COName"/>
                                    </COName>
                                </xsl:if>
                                <xsl:if test="Consumer">
                                    <Consumer>
                                        <xsl:value-of select="Consumer"/>
                                    </Consumer>
                                </xsl:if>
                                <xsl:if test="Provider">
                                    <Provider>
                                        <xsl:value-of select="Provider"/>
                                    </Provider>
                                </xsl:if>
                                <xsl:if test="Timestamp">
                                    <Timestamp>
                                        <xsl:value-of select="Timestamp"/>
                                    </Timestamp>
                                </xsl:if>
                                <xsl:if test="Action">
                                    <Action>
                                        <xsl:value-of select="Action"/>
                                    </Action>
                                </xsl:if>
                                <xsl:if test="ApplicationID">
                                    <ApplicationID>
                                        <xsl:value-of select="ApplicationID"/>
                                    </ApplicationID>
                                </xsl:if>
                                <xsl:if test="ComponentName">
                                    <ComponentName>
                                        <xsl:value-of select="ComponentName"/>
                                    </ComponentName>
                                </xsl:if>
                                <xsl:if test="Hostname">
                                    <Hostname>
                                        <xsl:value-of select="Hostname"/>
                                    </Hostname>
                                </xsl:if>
                                <xsl:if test="TransactionDomain">
                                    <TransactionDomain>
                                        <xsl:value-of select="TransactionDomain"/>
                                    </TransactionDomain>
                                </xsl:if>
                                <xsl:if test="TransactionType">
                                    <TransactionType>
                                        <xsl:value-of select="TransactionType"/>
                                    </TransactionType>
                                </xsl:if>
                                <xsl:if test="TransactionID">
                                    <TransactionID>
                                        <xsl:value-of select="TransactionID"/>
                                    </TransactionID>
                                </xsl:if>
                                <xsl:if test="Version">
                                    <Version>
                                        <xsl:value-of select="Version"/>
                                    </Version>
                                </xsl:if>
                                <xsl:for-each select="SourceSystemInfo">
                                    <SourceSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </SourceSystemInfo>
                                </xsl:for-each>
                                <xsl:for-each select="TargetSystemInfo">
                                    <TargetSystemInfo>
                                        <xsl:if test="@SystemVersion">
                                            <xsl:attribute name="SystemVersion">
                                                <xsl:value-of select="@SystemVersion"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <SystemtId>
                                            <xsl:value-of select="SystemtId"/>
                                        </SystemtId>
                                        <SystemAddress>
                                            <xsl:value-of select="SystemAddress"/>
                                        </SystemAddress>
                                    </TargetSystemInfo>
                                </xsl:for-each>
                            </ns20:BusinessMessageHeader>
                        </xsl:for-each>
                        <pfx9:ListOfAccounts>
                            <xsl:variable name="var" select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseRefernces/Reference[Name='productID']/Value"/>
                            <xsl:for-each select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account">
                                <pfx9:Account>
                                    <xsl:variable name="var2" select="current()/pfx9:productID"/>
                                    <xsl:variable name="var3" select="current()/pfx9:productID"/>
                                    <xsl:variable name="var4" select="current()/pfx9:productID"/>
                                    <pfx9:AccountName>
                                        <xsl:value-of select="if(exists($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var2]/pfx9:AccountName) and string-length($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var3]/pfx9:AccountName)>0)&#xA;then&#xA;concat($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var4]/pfx9:AccountName,'-',current()/pfx9:AccountName)&#xA;else&#xA;current()/pfx9:AccountName"/>
                                    </pfx9:AccountName>
                                    <pfx9:Balance>
                                        <xsl:value-of select="pfx9:Balance"/>
                                    </pfx9:Balance>
                                    <xsl:variable name="var7" select="current()/pfx9:productID"/>
                                    <xsl:choose>
                                        <xsl:when test="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID=current()/pfx9:productID &#xA;and &#xA;exists($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID)&#xA;and&#xA;string-length($Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var7]/pfx9:ExpiryDate)>0&#xA;and string-length(pfx9:ExpiryDate)=0">
                                            <xsl:variable name="var5" select="current()/pfx9:productID"/>
                                            <pfx9:ExpiryDate>
                                                <xsl:value-of select="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var5]/pfx9:ExpiryDate"/>
                                            </pfx9:ExpiryDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx9:ExpiryDate>
                                                <xsl:value-of select="current()/pfx9:ExpiryDate"/>
                                            </pfx9:ExpiryDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account/pfx9:productID=current()/pfx9:productID">
                                            <xsl:variable name="var6" select="current()/pfx9:productID"/>
                                            <pfx9:StartDate>
                                                <xsl:value-of select="$Map-Single-offer/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[pfx9:productID=$var6]/pfx9:StartDate"/>
                                            </pfx9:StartDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx9:StartDate>
                                                <xsl:value-of select="current()/pfx9:StartDate"/>
                                            </pfx9:StartDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <pfx9:productID>
                                        <xsl:value-of select="pfx9:productID"/>
                                    </pfx9:productID>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GenerateFinalOutput">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1561</pd:x>
            <pd:y>240</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:copy-of select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:BusinessMessageHeader"/>
                        <pfx9:ListOfAccounts>
                            <xsl:for-each select="$Outputlist/AccumulatedOutput/pfx9:GetSubAccountDetailsResponse">
                                <pfx9:Account>
                                    <xsl:variable name="DAId" select="substring-after(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:productID,'-')"/>
                                    <pfx9:AccountName>
                                        <xsl:value-of select="pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName"/>
                                    </pfx9:AccountName>
                                    <pfx9:Balance>
                                        <xsl:value-of select="if(contains(current()/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'SSU'))&#xA;then&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance&#xA;else if(contains(current()/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'Minutes'))&#xA;then&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance*60&#xA;else if(contains(current()/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'MONEY'))&#xA;then&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance&#xA;else if(contains(current()/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'TIME'))&#xA;then&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance*60&#xA;else if(contains(current()/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'Data'))&#xA;then&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance div 1073741824&#xA;else&#xA;pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:Balance"/>
                                    </pfx9:Balance>
                                    <pfx9:ExpiryDate>
                                        <xsl:value-of select="pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:ExpiryDate"/>
                                    </pfx9:ExpiryDate>
                                    <pfx9:StartDate>
                                        <xsl:value-of select="pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:StartDate"/>
                                    </pfx9:StartDate>
                                    <pfx9:productID>
                                        <xsl:value-of select="substring-after(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:productID,'-')"/>
                                    </pfx9:productID>
                                    <pfx9:Unit>
                                        <xsl:value-of select="if(contains(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'SSU'))&#xA;then&#xA;'Instances'&#xA;else if(contains(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'Minutes'))&#xA;then&#xA;'Seconds'&#xA;else if(contains(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'MONEY'))&#xA;then&#xA;'KD'&#xA;else if(contains(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'TIME'))&#xA;then&#xA;'Seconds'&#xA;else if(contains(pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:AccountName,'Data'))&#xA;then&#xA;'GB'&#xA;else&#xA;&quot;KD&quot;"/>
                                    </pfx9:Unit>
                                    <xsl:if test="$ESB_DAMapping/root/Records[$DAId=DA_ID]/UPDATE_FLAG">
                                        <pfx9:Update_flag>
                                            <xsl:value-of select="$ESB_DAMapping/root/Records[$DAId=DA_ID]/UPDATE_FLAG"/>
                                        </pfx9:Update_flag>
                                    </xsl:if>
                                    <xsl:if test="$ESB_DAMapping/root/Records[$DAId=DA_ID]/STAND_ALONE_FLAG">
                                        <pfx9:StandaloneFlag>
                                            <xsl:value-of select="$ESB_DAMapping/root/Records[$DAId=DA_ID]/STAND_ALONE_FLAG"/>
                                        </pfx9:StandaloneFlag>
                                    </xsl:if>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                        <xsl:copy-of select="$Map-Data-1/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response"/>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetDAWithoutOffer">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>346</pd:x>
            <pd:y>183</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/VoidOfferDAId.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Stand-alone-DA-Check">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>603</pd:x>
            <pd:y>350</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <xsl:for-each select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes">
                        <pfx9:GetSubAccountDetailsRes>
                            <xsl:for-each select="ns20:BusinessMessageHeader">
                                <ns20:BusinessMessageHeader>
                                    <xsl:if test="ExternalTransactionID">
                                        <ExternalTransactionID>
                                            <xsl:value-of select="ExternalTransactionID"/>
                                        </ExternalTransactionID>
                                    </xsl:if>
                                    <xsl:if test="COName">
                                        <COName>
                                            <xsl:value-of select="COName"/>
                                        </COName>
                                    </xsl:if>
                                    <xsl:if test="Consumer">
                                        <Consumer>
                                            <xsl:value-of select="Consumer"/>
                                        </Consumer>
                                    </xsl:if>
                                    <xsl:if test="Provider">
                                        <Provider>
                                            <xsl:value-of select="Provider"/>
                                        </Provider>
                                    </xsl:if>
                                    <xsl:if test="Timestamp">
                                        <Timestamp>
                                            <xsl:value-of select="Timestamp"/>
                                        </Timestamp>
                                    </xsl:if>
                                    <xsl:if test="Action">
                                        <Action>
                                            <xsl:value-of select="Action"/>
                                        </Action>
                                    </xsl:if>
                                    <xsl:if test="ApplicationID">
                                        <ApplicationID>
                                            <xsl:value-of select="ApplicationID"/>
                                        </ApplicationID>
                                    </xsl:if>
                                    <xsl:if test="ComponentName">
                                        <ComponentName>
                                            <xsl:value-of select="ComponentName"/>
                                        </ComponentName>
                                    </xsl:if>
                                    <xsl:if test="Hostname">
                                        <Hostname>
                                            <xsl:value-of select="Hostname"/>
                                        </Hostname>
                                    </xsl:if>
                                    <xsl:if test="TransactionDomain">
                                        <TransactionDomain>
                                            <xsl:value-of select="TransactionDomain"/>
                                        </TransactionDomain>
                                    </xsl:if>
                                    <xsl:if test="TransactionType">
                                        <TransactionType>
                                            <xsl:value-of select="TransactionType"/>
                                        </TransactionType>
                                    </xsl:if>
                                    <xsl:if test="TransactionID">
                                        <TransactionID>
                                            <xsl:value-of select="TransactionID"/>
                                        </TransactionID>
                                    </xsl:if>
                                    <xsl:if test="Version">
                                        <Version>
                                            <xsl:value-of select="Version"/>
                                        </Version>
                                    </xsl:if>
                                    <xsl:for-each select="SourceSystemInfo">
                                        <SourceSystemInfo>
                                            <xsl:if test="@SystemVersion">
                                                <xsl:attribute name="SystemVersion">
                                                    <xsl:value-of select="@SystemVersion"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <SystemtId>
                                                <xsl:value-of select="SystemtId"/>
                                            </SystemtId>
                                            <SystemAddress>
                                                <xsl:value-of select="SystemAddress"/>
                                            </SystemAddress>
                                        </SourceSystemInfo>
                                    </xsl:for-each>
                                    <xsl:for-each select="TargetSystemInfo">
                                        <TargetSystemInfo>
                                            <xsl:if test="@SystemVersion">
                                                <xsl:attribute name="SystemVersion">
                                                    <xsl:value-of select="@SystemVersion"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <SystemtId>
                                                <xsl:value-of select="SystemtId"/>
                                            </SystemtId>
                                            <SystemAddress>
                                                <xsl:value-of select="SystemAddress"/>
                                            </SystemAddress>
                                        </TargetSystemInfo>
                                    </xsl:for-each>
                                </ns20:BusinessMessageHeader>
                            </xsl:for-each>
                            <xsl:for-each select="pfx9:ListOfAccounts">
                                <pfx9:ListOfAccounts>
                                    <xsl:for-each select="pfx9:Account">
                                        <pfx9:Account>
                                            <pfx9:AccountName>
                                                <xsl:value-of select="pfx9:AccountName"/>
                                            </pfx9:AccountName>
                                            <pfx9:Balance>
                                                <xsl:value-of select="pfx9:Balance"/>
                                            </pfx9:Balance>
                                            <pfx9:ExpiryDate>
                                                <xsl:value-of select="pfx9:ExpiryDate"/>
                                            </pfx9:ExpiryDate>
                                            <pfx9:StartDate>
                                                <xsl:value-of select="pfx9:StartDate"/>
                                            </pfx9:StartDate>
                                            <pfx9:productID>
                                                <xsl:value-of select="if(current()/pfx9:AccountName=$GetDAWithoutOffer/root/DA/DA_INSTANCE)&#xA;then&#xA;concat(1,$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:productID)&#xA;else&#xA;concat(0,$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account[1]/pfx9:productID)"/>
                                            </pfx9:productID>
                                        </pfx9:Account>
                                    </xsl:for-each>
                                </pfx9:ListOfAccounts>
                            </xsl:for-each>
                            <xsl:for-each select="ns20:Response">
                                <ns20:Response>
                                    <xsl:if test="ResponseCode">
                                        <ResponseCode>
                                            <xsl:value-of select="ResponseCode"/>
                                        </ResponseCode>
                                    </xsl:if>
                                    <xsl:if test="ResponseDescription">
                                        <ResponseDescription>
                                            <xsl:value-of select="ResponseDescription"/>
                                        </ResponseDescription>
                                    </xsl:if>
                                    <xsl:for-each select="ResponseRefernces">
                                        <ResponseRefernces>
                                            <xsl:for-each select="Reference">
                                                <Reference>
                                                    <xsl:if test="Name">
                                                        <Name>
                                                            <xsl:value-of select="Name"/>
                                                        </Name>
                                                    </xsl:if>
                                                    <xsl:if test="Value">
                                                        <Value>
                                                            <xsl:value-of select="Value"/>
                                                        </Value>
                                                    </xsl:if>
                                                </Reference>
                                            </xsl:for-each>
                                        </ResponseRefernces>
                                    </xsl:for-each>
                                </ns20:Response>
                            </xsl:for-each>
                        </pfx9:GetSubAccountDetailsRes>
                    </xsl:for-each>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GenerateFinalOutput-1">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1456</pd:x>
            <pd:y>347</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <pfx9:ListOfAccounts>
                            <xsl:for-each select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account">
                                <pfx9:Account>
                                    <xsl:variable name="DAId" select="substring-after(pfx9:productID,'-')"/>
                                    <xsl:if test="pfx9:AccountName">
                                        <pfx9:AccountName>
                                            <xsl:value-of select="pfx9:AccountName"/>
                                        </pfx9:AccountName>
                                    </xsl:if>
                                    <pfx9:Balance>
                                        <xsl:value-of select="if(contains(current()/pfx9:AccountName,'SSU'))&#xA;then&#xA;pfx9:Balance&#xA;else if(contains(current()/pfx9:AccountName,'Minutes'))&#xA;then&#xA;pfx9:Balance*60&#xA;else if(contains(current()/pfx9:AccountName,'MONEY'))&#xA;then&#xA;pfx9:Balance&#xA;else if(contains(current()/pfx9:AccountName,'TIME'))&#xA;then&#xA;pfx9:Balance*60&#xA;else if(contains(current()/pfx9:AccountName,'Data'))&#xA;then&#xA;pfx9:Balance div 1073741824&#xA;else&#xA;pfx9:Balance"/>
                                    </pfx9:Balance>
                                    <xsl:if test="pfx9:ExpiryDate">
                                        <pfx9:ExpiryDate>
                                            <xsl:value-of select="pfx9:ExpiryDate"/>
                                        </pfx9:ExpiryDate>
                                    </xsl:if>
                                    <xsl:if test="pfx9:StartDate">
                                        <pfx9:StartDate>
                                            <xsl:value-of select="pfx9:StartDate"/>
                                        </pfx9:StartDate>
                                    </xsl:if>
                                    <pfx9:productID>
                                        <xsl:value-of select="substring-after(pfx9:productID,&quot;-&quot;)"/>
                                    </pfx9:productID>
                                    <pfx9:Unit>
                                        <xsl:value-of select="if(contains(current()/pfx9:AccountName,'SSU'))&#xA;then&#xA;'Instances'&#xA;else if(contains(current()/pfx9:AccountName,'Minutes'))&#xA;then&#xA;'Seconds'&#xA;else if(contains(current()/pfx9:AccountName,'MONEY'))&#xA;then&#xA;'KD'&#xA;else if(contains(current()/pfx9:AccountName,'TIME'))&#xA;then&#xA;'Seconds'&#xA;else if(contains(current()/pfx9:AccountName,'Data'))&#xA;then&#xA;'GB'&#xA;else&#xA;&quot;KD&quot;"/>
                                    </pfx9:Unit>
                                    <pfx9:Update_flag>
                                        <xsl:value-of select="$ESB_DAMapping/root/Records[$DAId=DA_ID]/UPDATE_FLAG"/>
                                    </pfx9:Update_flag>
                                    <xsl:if test="$ESB_DAMapping/root/Records[$DAId=DA_ID]/STAND_ALONE_FLAG">
                                        <pfx9:StandaloneFlag>
                                            <xsl:value-of select="$ESB_DAMapping/root/Records[$DAId=DA_ID]/STAND_ALONE_FLAG"/>
                                        </pfx9:StandaloneFlag>
                                    </xsl:if>
                                </pfx9:Account>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                        <ns20:Response>
                            <ResponseCode>
                                <xsl:value-of select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseCode"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$GetSubAccountDetails/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response/ResponseDescription"/>
                            </ResponseDescription>
                        </ns20:Response>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null-Expiry">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1023</pd:x>
            <pd:y>234</pd:y>
            <config>
                <element ref="pfx9:GetSubAccountDetailsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx9:GetSubAccountDetailsResponse>
                    <pfx9:GetSubAccountDetailsRes>
                        <xsl:copy-of select="$Map-Data-1-1/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:BusinessMessageHeader"/>
                        <pfx9:ListOfAccounts>
                            <xsl:for-each select="$Map-Data-1-1/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/pfx9:ListOfAccounts/pfx9:Account">
                                <xsl:if test="pfx9:ExpiryDate !=&quot;&quot;">
                                    <pfx9:Account>
                                        <pfx9:AccountName>
                                            <xsl:value-of select="pfx9:AccountName"/>
                                        </pfx9:AccountName>
                                        <pfx9:Balance>
                                            <xsl:value-of select="pfx9:Balance"/>
                                        </pfx9:Balance>
                                        <pfx9:ExpiryDate>
                                            <xsl:value-of select="pfx9:ExpiryDate"/>
                                        </pfx9:ExpiryDate>
                                        <pfx9:StartDate>
                                            <xsl:value-of select="pfx9:StartDate"/>
                                        </pfx9:StartDate>
                                        <pfx9:productID>
                                            <xsl:value-of select="pfx9:productID"/>
                                        </pfx9:productID>
                                    </pfx9:Account>
                                </xsl:if>
                            </xsl:for-each>
                        </pfx9:ListOfAccounts>
                        <xsl:copy-of select="$Map-Data-1-1/pfx9:GetSubAccountDetailsResponse/pfx9:GetSubAccountDetailsRes/ns20:Response"/>
                    </pfx9:GetSubAccountDetailsRes>
                </pfx9:GetSubAccountDetailsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESB_DAMapping">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>466</pd:x>
            <pd:y>184</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESB_DAMapping.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>89</pd:x>
        <pd:y>256</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLElogException</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLElogException</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>