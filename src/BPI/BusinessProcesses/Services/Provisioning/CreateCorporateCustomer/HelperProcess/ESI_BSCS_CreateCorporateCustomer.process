<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns42="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:ns3="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx6="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CorporateCreateCustomer/CorporateCreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationResIo.xsd"/>
    <pd:name>BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/HelperProcess/ESI_BSCS_CreateCorporateCustomer.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TrackingId" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="corporateCustomer">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Customer" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element ref="pfx5:CreateCustomerReq"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>46</pd:startX>
    <pd:startY>118</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$ParseResponse/pfx4:CreateOrderRes"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>2410</pd:endX>
    <pd:endY>245</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397719743</pd:targetNamespace>
    <pd:activity name="SortCustomerLevel">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>384</pd:x>
        <pd:y>118</pd:y>
        <config>
            <element>
                <xsd:element name="corporateCustomer">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Customer" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element ref="pfx5:CreateCustomerReq"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <corporateCustomer>
                <xsl:for-each select="$Start/root/corporateCustomer/Customer">
                    <xsl:sort select="pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/level"/>
                    <Customer>
                        <xsl:for-each select="pfx5:CreateCustomerReq">
                            <pfx5:CreateCustomerReq>
                                <xsl:copy-of select="ns3:BusinessMessageHeader"/>
                                <xsl:copy-of select="ns3:Organization"/>
                                <xsl:copy-of select="ns3:ZainIndividualList"/>
                                <xsl:copy-of select="ns3:ZainCustomerAccountList"/>
                                <xsl:copy-of select="ns3:ZainIdentifiers"/>
                                <xsl:copy-of select="ns3:ZainBusinessIdentifier"/>
                            </pfx5:CreateCustomerReq>
                        </xsl:for-each>
                    </Customer>
                </xsl:for-each>
            </corporateCustomer>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="CorpCustomerList">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>516</pd:x>
        <pd:y>5</pd:y>
        <pd:width>1669</pd:width>
        <pd:height>599</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$SortCustomerLevel/corporateCustomer/Customer</pd:over>
            <pd:iterationElementSlot>CustomerElement</pd:iterationElementSlot>
            <pd:indexSlot>customerIndex</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Log_CDM_Request</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CheckForROOTCustError</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateCorpCustomer</pd:from>
            <pd:to>MapSecondaryBAs</pd:to>
            <pd:xpathDescription>CustomerSuccess&amp;PR</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-13395712</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/csPrepayment="Y"
and not(exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode))</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>MapSecondaryBAs</pd:from>
            <pd:to>CreateBA&amp;PP</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateCorpCustomer</pd:from>
            <pd:to>Check</pd:to>
            <pd:xpathDescription>CustomerFailed OR NoSecondaryBA</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-3407872</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetErroredCustID</pd:from>
            <pd:to>CreateCorpCustomer</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetErroredCustID</pd:from>
            <pd:to>Check</pd:to>
            <pd:xpathDescription>Check for Parent Account ID errors</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16751104</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>count($GetErroredCustID/CustomerList/CustomerAccountID[text()=$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/parentAccountId])&gt;0
and $CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/parentAccountId!=''</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Check</pd:from>
            <pd:to>SetErrorCustID</pd:to>
            <pd:xpathDescription>ErrorCreateCustomer</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407872</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)
 and string-length($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)&gt;0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateBA&amp;PP</pd:from>
            <pd:to>Check</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapCRMResponse</pd:from>
            <pd:to>Log_CRM_Response</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SetErrorCustID</pd:from>
            <pd:to>Check-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CheckForROOTCustError</pd:from>
            <pd:to>ErrorROOTCustomer</pd:to>
            <pd:xpathDescription>ErrorRootCustomer</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407872</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/level='1'
and exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode) 
and $Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode!='0'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log_CDM_Request</pd:from>
            <pd:to>GetErroredCustID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Check</pd:from>
            <pd:to>Check-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log_CRM_Response</pd:from>
            <pd:to>Common_EAI_EMSSender</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Common_EAI_EMSSender</pd:from>
            <pd:to>CheckForROOTCustError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Check-1</pd:from>
            <pd:to>GetResponseCodes</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetResponseCodes</pd:from>
            <pd:to>MapCRMResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetResponseCodes</pd:from>
            <pd:to>Ignore</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Ignore</pd:from>
            <pd:to>MapCRMResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:group name="CreateCorpCustomer">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>621</pd:x>
            <pd:y>46</pd:y>
            <pd:width>386</pd:width>
            <pd:height>190</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>simpleGroup</pd:groupType>
                <pd:serializable>false</pd:serializable>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>MapCreateCorpCustomer</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Call_CreateCorpCustomer</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>MapCreateCorpCustomer</pd:from>
                <pd:to>Call_CreateCorpCustomer</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:activity name="Call_CreateCorpCustomer">
                <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                <pd:resourceType>ae.process.subprocess</pd:resourceType>
                <pd:x>882</pd:x>
                <pd:y>130</pd:y>
                <config>
                    <processName>/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/HelperProcess/Call_CreateCorpCustomer.process</processName>
                </config>
                <pd:inputBindings>
                    <root>
                        <xsl:if test="$Start/root/TrackingId">
                            <TrackingId>
                                <xsl:value-of select="$Start/root/TrackingId"/>
                            </TrackingId>
                        </xsl:if>
                        <xsl:if test="$Start/root/StartTimeStamp">
                            <StartTimeStamp>
                                <xsl:value-of select="$Start/root/StartTimeStamp"/>
                            </StartTimeStamp>
                        </xsl:if>
                        <xsl:copy-of select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq"/>
                        <customerindex>
                            <xsl:value-of select="$customerIndex"/>
                        </customerindex>
                    </root>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="MapCreateCorpCustomer">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>730</pd:x>
                <pd:y>131</pd:y>
                <config>
                    <element>
                        <xsd:element name="root">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="Customer">
                                        <xsd:complexType>
                                            <xsd:sequence>
                                                <xsd:element ref="pfx5:CreateCustomerReq"/>
                                            </xsd:sequence>
                                        </xsd:complexType>
                                    </xsd:element>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </element>
                </config>
                <pd:inputBindings>
                    <root>
                        <Customer>
                            <pfx5:CreateCustomerReq>
                                <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:BusinessMessageHeader"/>
                                <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:Organization"/>
                                <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIndividualList"/>
                                <ns3:ZainCustomerAccountList>
                                    <xsl:for-each select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount">
                                        <ZainCustomerAccount>
                                            <xsl:if test="accountStatus">
                                                <accountStatus>
                                                    <xsl:value-of select="accountStatus"/>
                                                </accountStatus>
                                            </xsl:if>
                                            <xsl:if test="accountType">
                                                <accountType>
                                                    <xsl:value-of select="accountType"/>
                                                </accountType>
                                            </xsl:if>
                                            <xsl:if test="classificationCode">
                                                <classificationCode>
                                                    <xsl:value-of select="classificationCode"/>
                                                </classificationCode>
                                            </xsl:if>
                                            <xsl:if test="creationDateTime">
                                                <creationDateTime>
                                                    <xsl:value-of select="creationDateTime"/>
                                                </creationDateTime>
                                            </xsl:if>
                                            <xsl:if test="creditLimit">
                                                <creditLimit>
                                                    <xsl:value-of select="creditLimit"/>
                                                </creditLimit>
                                            </xsl:if>
                                            <xsl:if test="currencyCode">
                                                <currencyCode>
                                                    <xsl:value-of select="currencyCode"/>
                                                </currencyCode>
                                            </xsl:if>
                                            <xsl:if test="ID">
                                                <ID>
                                                    <xsl:value-of select="ID"/>
                                                </ID>
                                            </xsl:if>
                                            <xsl:if test="name">
                                                <name>
                                                    <xsl:value-of select="name"/>
                                                </name>
                                            </xsl:if>
                                            <xsl:if test="pin">
                                                <pin>
                                                    <xsl:value-of select="pin"/>
                                                </pin>
                                            </xsl:if>
                                            <xsl:if test="parentAccountId">
                                                <parentAccountId>
                                                    <xsl:value-of select="parentAccountId"/>
                                                </parentAccountId>
                                            </xsl:if>
                                            <xsl:if test="rootAccountId">
                                                <rootAccountId>
                                                    <xsl:value-of select="rootAccountId"/>
                                                </rootAccountId>
                                            </xsl:if>
                                            <xsl:for-each select="LogicalResource">
                                                <LogicalResource>
                                                    <xsl:if test="resourceName">
                                                        <resourceName>
                                                            <xsl:value-of select="resourceName"/>
                                                        </resourceName>
                                                    </xsl:if>
                                                    <xsl:if test="resourceValue">
                                                        <resourceValue>
                                                            <xsl:value-of select="resourceValue"/>
                                                        </resourceValue>
                                                    </xsl:if>
                                                </LogicalResource>
                                            </xsl:for-each>
                                            <xsl:if test="ContractID">
                                                <ContractID>
                                                    <xsl:value-of select="ContractID"/>
                                                </ContractID>
                                            </xsl:if>
                                            <xsl:if test="BillingType">
                                                <BillingType>
                                                    <xsl:value-of select="BillingType"/>
                                                </BillingType>
                                            </xsl:if>
                                            <xsl:if test="Category">
                                                <Category>
                                                    <xsl:value-of select="Category"/>
                                                </Category>
                                            </xsl:if>
                                            <xsl:if test="Nationality">
                                                <Nationality>
                                                    <xsl:value-of select="Nationality"/>
                                                </Nationality>
                                            </xsl:if>
                                            <xsl:if test="ContractOwner">
                                                <ContractOwner>
                                                    <xsl:value-of select="ContractOwner"/>
                                                </ContractOwner>
                                            </xsl:if>
                                            <xsl:if test="HasPrepaid">
                                                <HasPrepaid>
                                                    <xsl:value-of select="HasPrepaid"/>
                                                </HasPrepaid>
                                            </xsl:if>
                                            <xsl:if test="HasPostpaid">
                                                <HasPostpaid>
                                                    <xsl:value-of select="HasPostpaid"/>
                                                </HasPostpaid>
                                            </xsl:if>
                                            <xsl:if test="ns3:MSISDN">
                                                <ns3:MSISDN>
                                                    <xsl:value-of select="ns3:MSISDN"/>
                                                </ns3:MSISDN>
                                            </xsl:if>
                                            <xsl:if test="ActivationCode">
                                                <ActivationCode>
                                                    <xsl:value-of select="ActivationCode"/>
                                                </ActivationCode>
                                            </xsl:if>
                                            <xsl:if test="Email">
                                                <Email>
                                                    <xsl:value-of select="Email"/>
                                                </Email>
                                            </xsl:if>
                                            <xsl:for-each select="ns3:EmployeeIdentifier">
                                                <ns3:EmployeeIdentifier>
                                                    <xsl:if test="PFnumber">
                                                        <PFnumber>
                                                            <xsl:value-of select="PFnumber"/>
                                                        </PFnumber>
                                                    </xsl:if>
                                                    <xsl:for-each select="EmployeeId">
                                                        <EmployeeId>
                                                            <xsl:if test="ns3:systemName">
                                                                <ns3:systemName>
                                                                    <xsl:value-of select="ns3:systemName"/>
                                                                </ns3:systemName>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:value">
                                                                <ns3:value>
                                                                    <xsl:value-of select="ns3:value"/>
                                                                </ns3:value>
                                                            </xsl:if>
                                                        </EmployeeId>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ns3:SubscriberIdentifier">
                                                        <ns3:SubscriberIdentifier>
                                                            <xsl:if test="ns3:MSISDN">
                                                                <ns3:MSISDN>
                                                                    <xsl:value-of select="ns3:MSISDN"/>
                                                                </ns3:MSISDN>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:IMSI">
                                                                <ns3:IMSI>
                                                                    <xsl:value-of select="ns3:IMSI"/>
                                                                </ns3:IMSI>
                                                            </xsl:if>
                                                            <xsl:if test="DongleSerialNumber">
                                                                <DongleSerialNumber>
                                                                    <xsl:value-of select="DongleSerialNumber"/>
                                                                </DongleSerialNumber>
                                                            </xsl:if>
                                                            <xsl:if test="ReferenceMSISDN">
                                                                <ReferenceMSISDN>
                                                                    <xsl:value-of select="ReferenceMSISDN"/>
                                                                </ReferenceMSISDN>
                                                            </xsl:if>
                                                        </ns3:SubscriberIdentifier>
                                                    </xsl:for-each>
                                                    <xsl:if test="IsEmployee">
                                                        <IsEmployee>
                                                            <xsl:value-of select="IsEmployee"/>
                                                        </IsEmployee>
                                                    </xsl:if>
                                                </ns3:EmployeeIdentifier>
                                            </xsl:for-each>
                                            <xsl:if test="SourceofSignOff">
                                                <SourceofSignOff>
                                                    <xsl:value-of select="SourceofSignOff"/>
                                                </SourceofSignOff>
                                            </xsl:if>
                                            <xsl:if test="Salesagent">
                                                <Salesagent>
                                                    <xsl:value-of select="Salesagent"/>
                                                </Salesagent>
                                            </xsl:if>
                                            <xsl:if test="contractResponsible">
                                                <contractResponsible>
                                                    <xsl:value-of select="contractResponsible"/>
                                                </contractResponsible>
                                            </xsl:if>
                                            <xsl:if test="costCodePub">
                                                <costCodePub>
                                                    <xsl:value-of select="costCodePub"/>
                                                </costCodePub>
                                            </xsl:if>
                                            <xsl:if test="costId">
                                                <costId>
                                                    <xsl:value-of select="costId"/>
                                                </costId>
                                            </xsl:if>
                                            <xsl:if test="crmCustomerId">
                                                <crmCustomerId>
                                                    <xsl:value-of select="crmCustomerId"/>
                                                </crmCustomerId>
                                            </xsl:if>
                                            <xsl:if test="crmParentCustomerId">
                                                <crmParentCustomerId>
                                                    <xsl:value-of select="crmParentCustomerId"/>
                                                </crmParentCustomerId>
                                            </xsl:if>
                                            <xsl:if test="csBillcycle">
                                                <csBillcycle>
                                                    <xsl:value-of select="csBillcycle"/>
                                                </csBillcycle>
                                            </xsl:if>
                                            <xsl:if test="csPrepayment">
                                                <csPrepayment>
                                                    <xsl:value-of select="csPrepayment"/>
                                                </csPrepayment>
                                            </xsl:if>
                                            <xsl:if test="csStatus">
                                                <csStatus>
                                                    <xsl:value-of select="csStatus"/>
                                                </csStatus>
                                            </xsl:if>
                                            <xsl:if test="customerCategory">
                                                <customerCategory>
                                                    <xsl:value-of select="customerCategory"/>
                                                </customerCategory>
                                            </xsl:if>
                                            <xsl:if test="level">
                                                <level>
                                                    <xsl:value-of select="level"/>
                                                </level>
                                            </xsl:if>
                                            <xsl:if test="mode">
                                                <mode>
                                                    <xsl:value-of select="mode"/>
                                                </mode>
                                            </xsl:if>
                                            <xsl:if test="PartyType">
                                                <PartyType>
                                                    <xsl:value-of select="PartyType"/>
                                                </PartyType>
                                            </xsl:if>
                                            <xsl:if test="paymentResponsible">
                                                <paymentResponsible>
                                                    <xsl:value-of select="paymentResponsible"/>
                                                </paymentResponsible>
                                            </xsl:if>
                                            <xsl:if test="accountStatusChangeReason">
                                                <accountStatusChangeReason>
                                                    <xsl:value-of select="accountStatusChangeReason"/>
                                                </accountStatusChangeReason>
                                            </xsl:if>
                                            <xsl:if test="accountStatusChangeDate">
                                                <accountStatusChangeDate>
                                                    <xsl:value-of select="accountStatusChangeDate"/>
                                                </accountStatusChangeDate>
                                            </xsl:if>
                                            <xsl:if test="reasonCode">
                                                <reasonCode>
                                                    <xsl:value-of select="reasonCode"/>
                                                </reasonCode>
                                            </xsl:if>
                                            <xsl:if test="rpCode">
                                                <rpCode>
                                                    <xsl:value-of select="rpCode"/>
                                                </rpCode>
                                            </xsl:if>
                                            <xsl:if test="sourceCustomerID">
                                                <sourceCustomerID>
                                                    <xsl:value-of select="sourceCustomerID"/>
                                                </sourceCustomerID>
                                            </xsl:if>
                                            <xsl:if test="targetCustomerID">
                                                <targetCustomerID>
                                                    <xsl:value-of select="targetCustomerID"/>
                                                </targetCustomerID>
                                            </xsl:if>
                                            <xsl:for-each select="CustomerBill[upper-case(RequestType)=&quot;PRIMARY ACCOUNT&quot;]">
                                                <CustomerBill>
                                                    <xsl:if test="billDate">
                                                        <billDate>
                                                            <xsl:value-of select="billDate"/>
                                                        </billDate>
                                                    </xsl:if>
                                                    <xsl:if test="billNo">
                                                        <billNo>
                                                            <xsl:value-of select="billNo"/>
                                                        </billNo>
                                                    </xsl:if>
                                                    <xsl:for-each select="ns3:billId">
                                                        <ns3:billId>
                                                            <xsl:if test="ns3:systemName">
                                                                <ns3:systemName>
                                                                    <xsl:value-of select="ns3:systemName"/>
                                                                </ns3:systemName>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:value">
                                                                <ns3:value>
                                                                    <xsl:value-of select="ns3:value"/>
                                                                </ns3:value>
                                                            </xsl:if>
                                                        </ns3:billId>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ns3:addressId">
                                                        <ns3:addressId>
                                                            <xsl:if test="ns3:systemName">
                                                                <ns3:systemName>
                                                                    <xsl:value-of select="ns3:systemName"/>
                                                                </ns3:systemName>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:value">
                                                                <ns3:value>
                                                                    <xsl:value-of select="ns3:value"/>
                                                                </ns3:value>
                                                            </xsl:if>
                                                        </ns3:addressId>
                                                    </xsl:for-each>
                                                    <xsl:if test="Format">
                                                        <Format>
                                                            <xsl:value-of select="Format"/>
                                                        </Format>
                                                    </xsl:if>
                                                    <xsl:if test="chargeDate">
                                                        <chargeDate>
                                                            <xsl:value-of select="chargeDate"/>
                                                        </chargeDate>
                                                    </xsl:if>
                                                    <xsl:if test="creditDate">
                                                        <creditDate>
                                                            <xsl:value-of select="creditDate"/>
                                                        </creditDate>
                                                    </xsl:if>
                                                    <xsl:if test="creditLimit">
                                                        <creditLimit>
                                                            <xsl:value-of select="creditLimit"/>
                                                        </creditLimit>
                                                    </xsl:if>
                                                    <xsl:if test="mailingDate">
                                                        <mailingDate>
                                                            <xsl:value-of select="mailingDate"/>
                                                        </mailingDate>
                                                    </xsl:if>
                                                    <xsl:if test="paymentDueDate">
                                                        <paymentDueDate>
                                                            <xsl:value-of select="paymentDueDate"/>
                                                        </paymentDueDate>
                                                    </xsl:if>
                                                    <xsl:if test="relationshipType">
                                                        <relationshipType>
                                                            <xsl:value-of select="relationshipType"/>
                                                        </relationshipType>
                                                    </xsl:if>
                                                    <xsl:for-each select="CustomerBillingCycle">
                                                        <CustomerBillingCycle>
                                                            <xsl:if test="billCyclechange">
                                                                <billCyclechange>
                                                                    <xsl:value-of select="billCyclechange"/>
                                                                </billCyclechange>
                                                            </xsl:if>
                                                            <xsl:if test="billSource">
                                                                <billSource>
                                                                    <xsl:value-of select="billSource"/>
                                                                </billSource>
                                                            </xsl:if>
                                                            <xsl:if test="billFrequency">
                                                                <billFrequency>
                                                                    <xsl:value-of select="billFrequency"/>
                                                                </billFrequency>
                                                            </xsl:if>
                                                            <xsl:if test="billingDate">
                                                                <billingDate>
                                                                    <xsl:value-of select="billingDate"/>
                                                                </billingDate>
                                                            </xsl:if>
                                                            <xsl:if test="billCycle">
                                                                <billCycle>
                                                                    <xsl:value-of select="billCycle"/>
                                                                </billCycle>
                                                            </xsl:if>
                                                            <xsl:if test="chargeDate">
                                                                <chargeDate>
                                                                    <xsl:value-of select="chargeDate"/>
                                                                </chargeDate>
                                                            </xsl:if>
                                                            <xsl:if test="Currency">
                                                                <Currency>
                                                                    <xsl:value-of select="Currency"/>
                                                                </Currency>
                                                            </xsl:if>
                                                            <xsl:if test="ExchangeRate">
                                                                <ExchangeRate>
                                                                    <xsl:value-of select="ExchangeRate"/>
                                                                </ExchangeRate>
                                                            </xsl:if>
                                                            <xsl:if test="creditDate">
                                                                <creditDate>
                                                                    <xsl:value-of select="creditDate"/>
                                                                </creditDate>
                                                            </xsl:if>
                                                            <xsl:if test="mailingDate">
                                                                <mailingDate>
                                                                    <xsl:value-of select="mailingDate"/>
                                                                </mailingDate>
                                                            </xsl:if>
                                                            <xsl:if test="paymentDueDate">
                                                                <paymentDueDate>
                                                                    <xsl:value-of select="paymentDueDate"/>
                                                                </paymentDueDate>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByAccountClose">
                                                                <triggeredByAccountClose>
                                                                    <xsl:value-of select="triggeredByAccountClose"/>
                                                                </triggeredByAccountClose>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByCustomer">
                                                                <triggeredByCustomer>
                                                                    <xsl:value-of select="triggeredByCustomer"/>
                                                                </triggeredByCustomer>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByProvider">
                                                                <triggeredByProvider>
                                                                    <xsl:value-of select="triggeredByProvider"/>
                                                                </triggeredByProvider>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByScheduler">
                                                                <triggeredByScheduler>
                                                                    <xsl:value-of select="triggeredByScheduler"/>
                                                                </triggeredByScheduler>
                                                            </xsl:if>
                                                        </CustomerBillingCycle>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="CustomerBillFormat">
                                                        <CustomerBillFormat>
                                                            <xsl:if test="description">
                                                                <description>
                                                                    <xsl:value-of select="description"/>
                                                                </description>
                                                            </xsl:if>
                                                            <xsl:if test="name">
                                                                <name>
                                                                    <xsl:value-of select="name"/>
                                                                </name>
                                                            </xsl:if>
                                                            <xsl:if test="hasCallDetails">
                                                                <hasCallDetails>
                                                                    <xsl:value-of select="hasCallDetails"/>
                                                                </hasCallDetails>
                                                            </xsl:if>
                                                            <xsl:for-each select="CustomerBillPresentationMedia">
                                                                <CustomerBillPresentationMedia>
                                                                    <xsl:if test="description">
                                                                        <description>
                                                                            <xsl:value-of select="description"/>
                                                                        </description>
                                                                    </xsl:if>
                                                                    <xsl:if test="name">
                                                                        <name>
                                                                            <xsl:value-of select="name"/>
                                                                        </name>
                                                                    </xsl:if>
                                                                </CustomerBillPresentationMedia>
                                                            </xsl:for-each>
                                                        </CustomerBillFormat>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="Money">
                                                        <Money>
                                                            <xsl:if test="amount">
                                                                <amount>
                                                                    <xsl:value-of select="amount"/>
                                                                </amount>
                                                            </xsl:if>
                                                            <xsl:if test="units">
                                                                <units>
                                                                    <xsl:value-of select="units"/>
                                                                </units>
                                                            </xsl:if>
                                                        </Money>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ns3:ZainContact">
                                                        <ns3:ZainContact>
                                                            <xsl:for-each select="TimePeriod">
                                                                <TimePeriod>
                                                                    <xsl:if test="endDateTime">
                                                                        <endDateTime>
                                                                            <xsl:value-of select="endDateTime"/>
                                                                        </endDateTime>
                                                                    </xsl:if>
                                                                    <xsl:if test="startDateTime">
                                                                        <startDateTime>
                                                                            <xsl:value-of select="startDateTime"/>
                                                                        </startDateTime>
                                                                    </xsl:if>
                                                                </TimePeriod>
                                                            </xsl:for-each>
                                                            <xsl:if test="eMailAddress">
                                                                <eMailAddress>
                                                                    <xsl:value-of select="eMailAddress"/>
                                                                </eMailAddress>
                                                            </xsl:if>
                                                            <xsl:if test="faxContact">
                                                                <faxContact>
                                                                    <xsl:value-of select="faxContact"/>
                                                                </faxContact>
                                                            </xsl:if>
                                                            <xsl:if test="homeContact">
                                                                <homeContact>
                                                                    <xsl:value-of select="homeContact"/>
                                                                </homeContact>
                                                            </xsl:if>
                                                            <xsl:if test="otherContact">
                                                                <otherContact>
                                                                    <xsl:value-of select="otherContact"/>
                                                                </otherContact>
                                                            </xsl:if>
                                                            <xsl:if test="workContact">
                                                                <workContact>
                                                                    <xsl:value-of select="workContact"/>
                                                                </workContact>
                                                            </xsl:if>
                                                            <xsl:if test="mobileNumber">
                                                                <mobileNumber>
                                                                    <xsl:value-of select="mobileNumber"/>
                                                                </mobileNumber>
                                                            </xsl:if>
                                                            <xsl:if test="SMSNotificationNumForAccount">
                                                                <SMSNotificationNumForAccount>
                                                                    <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                                </SMSNotificationNumForAccount>
                                                            </xsl:if>
                                                            <xsl:if test="ContactPersonName">
                                                                <ContactPersonName>
                                                                    <xsl:value-of select="ContactPersonName"/>
                                                                </ContactPersonName>
                                                            </xsl:if>
                                                            <xsl:if test="Notificationnumber">
                                                                <Notificationnumber>
                                                                    <xsl:value-of select="Notificationnumber"/>
                                                                </Notificationnumber>
                                                            </xsl:if>
                                                            <xsl:if test="AuthorizedPerson">
                                                                <AuthorizedPerson>
                                                                    <xsl:value-of select="AuthorizedPerson"/>
                                                                </AuthorizedPerson>
                                                            </xsl:if>
                                                            <xsl:if test="ModeOfCommunication">
                                                                <ModeOfCommunication>
                                                                    <xsl:value-of select="ModeOfCommunication"/>
                                                                </ModeOfCommunication>
                                                            </xsl:if>
                                                            <xsl:if test="PrefferredCommunication">
                                                                <PrefferredCommunication>
                                                                    <xsl:value-of select="PrefferredCommunication"/>
                                                                </PrefferredCommunication>
                                                            </xsl:if>
                                                            <xsl:if test="Preferredlanguage">
                                                                <Preferredlanguage>
                                                                    <xsl:value-of select="Preferredlanguage"/>
                                                                </Preferredlanguage>
                                                            </xsl:if>
                                                        </ns3:ZainContact>
                                                    </xsl:for-each>
                                                    <xsl:if test="numberOfCopies">
                                                        <numberOfCopies>
                                                            <xsl:value-of select="numberOfCopies"/>
                                                        </numberOfCopies>
                                                    </xsl:if>
                                                    <xsl:if test="nameToPrint">
                                                        <nameToPrint>
                                                            <xsl:value-of select="nameToPrint"/>
                                                        </nameToPrint>
                                                    </xsl:if>
                                                    <xsl:if test="RequestType">
                                                        <RequestType>
                                                            <xsl:value-of select="RequestType"/>
                                                        </RequestType>
                                                    </xsl:if>
                                                    <xsl:if test="RequestsubType">
                                                        <RequestsubType>
                                                            <xsl:value-of select="RequestsubType"/>
                                                        </RequestsubType>
                                                    </xsl:if>
                                                    <xsl:if test="ContractTypeId">
                                                        <ContractTypeId>
                                                            <xsl:value-of select="ContractTypeId"/>
                                                        </ContractTypeId>
                                                    </xsl:if>
                                                    <xsl:if test="Information">
                                                        <Information>
                                                            <xsl:value-of select="Information"/>
                                                        </Information>
                                                    </xsl:if>
                                                    <xsl:if test="simulation">
                                                        <simulation>
                                                            <xsl:value-of select="simulation"/>
                                                        </simulation>
                                                    </xsl:if>
                                                    <xsl:if test="RefernceDate">
                                                        <RefernceDate>
                                                            <xsl:value-of select="RefernceDate"/>
                                                        </RefernceDate>
                                                    </xsl:if>
                                                    <xsl:if test="PostingPeriod">
                                                        <PostingPeriod>
                                                            <xsl:value-of select="PostingPeriod"/>
                                                        </PostingPeriod>
                                                    </xsl:if>
                                                    <xsl:if test="acknowledgment">
                                                        <acknowledgment>
                                                            <xsl:value-of select="acknowledgment"/>
                                                        </acknowledgment>
                                                    </xsl:if>
                                                    <xsl:if test="CollectInd">
                                                        <CollectInd>
                                                            <xsl:value-of select="CollectInd"/>
                                                        </CollectInd>
                                                    </xsl:if>
                                                    <xsl:if test="Ignorebuind">
                                                        <Ignorebuind>
                                                            <xsl:value-of select="Ignorebuind"/>
                                                        </Ignorebuind>
                                                    </xsl:if>
                                                    <xsl:if test="allbusinesunits">
                                                        <allbusinesunits>
                                                            <xsl:value-of select="allbusinesunits"/>
                                                        </allbusinesunits>
                                                    </xsl:if>
                                                    <xsl:if test="disableinvoiceforwarding">
                                                        <disableinvoiceforwarding>
                                                            <xsl:value-of select="disableinvoiceforwarding"/>
                                                        </disableinvoiceforwarding>
                                                    </xsl:if>
                                                </CustomerBill>
                                            </xsl:for-each>
                                            <xsl:for-each select="ZainDealer">
                                                <ZainDealer>
                                                    <xsl:if test="dealerID">
                                                        <dealerID>
                                                            <xsl:value-of select="dealerID"/>
                                                        </dealerID>
                                                    </xsl:if>
                                                    <xsl:if test="dealerIDPub">
                                                        <dealerIDPub>
                                                            <xsl:value-of select="dealerIDPub"/>
                                                        </dealerIDPub>
                                                    </xsl:if>
                                                </ZainDealer>
                                            </xsl:for-each>
                                            <xsl:for-each select="ZainThreshold">
                                                <ZainThreshold>
                                                    <xsl:if test="LimitTr1">
                                                        <LimitTr1>
                                                            <xsl:value-of select="LimitTr1"/>
                                                        </LimitTr1>
                                                    </xsl:if>
                                                    <xsl:if test="LimitTr1Pub">
                                                        <LimitTr1Pub>
                                                            <xsl:value-of select="LimitTr1Pub"/>
                                                        </LimitTr1Pub>
                                                    </xsl:if>
                                                    <xsl:if test="LimitTr2">
                                                        <LimitTr2>
                                                            <xsl:value-of select="LimitTr2"/>
                                                        </LimitTr2>
                                                    </xsl:if>
                                                    <xsl:if test="LimitTr2Pub">
                                                        <LimitTr2Pub>
                                                            <xsl:value-of select="LimitTr2Pub"/>
                                                        </LimitTr2Pub>
                                                    </xsl:if>
                                                    <xsl:if test="LimitTr3">
                                                        <LimitTr3>
                                                            <xsl:value-of select="LimitTr3"/>
                                                        </LimitTr3>
                                                    </xsl:if>
                                                    <xsl:if test="LimitTr3Pub">
                                                        <LimitTr3Pub>
                                                            <xsl:value-of select="LimitTr3Pub"/>
                                                        </LimitTr3Pub>
                                                    </xsl:if>
                                                </ZainThreshold>
                                            </xsl:for-each>
                                            <xsl:if test="customerRating">
                                                <customerRating>
                                                    <xsl:value-of select="customerRating"/>
                                                </customerRating>
                                            </xsl:if>
                                            <xsl:if test="LineOfBusiness">
                                                <LineOfBusiness>
                                                    <xsl:value-of select="LineOfBusiness"/>
                                                </LineOfBusiness>
                                            </xsl:if>
                                            <xsl:if test="LineOfBusinessType">
                                                <LineOfBusinessType>
                                                    <xsl:value-of select="LineOfBusinessType"/>
                                                </LineOfBusinessType>
                                            </xsl:if>
                                            <xsl:if test="AccountNumber">
                                                <AccountNumber>
                                                    <xsl:value-of select="AccountNumber"/>
                                                </AccountNumber>
                                            </xsl:if>
                                            <xsl:if test="ParentAccountName">
                                                <ParentAccountName>
                                                    <xsl:value-of select="ParentAccountName"/>
                                                </ParentAccountName>
                                            </xsl:if>
                                            <xsl:if test="WriteOffAmount">
                                                <WriteOffAmount>
                                                    <xsl:value-of select="WriteOffAmount"/>
                                                </WriteOffAmount>
                                            </xsl:if>
                                            <xsl:if test="Oldcontract">
                                                <Oldcontract>
                                                    <xsl:value-of select="Oldcontract"/>
                                                </Oldcontract>
                                            </xsl:if>
                                            <xsl:if test="PortIn">
                                                <PortIn>
                                                    <xsl:value-of select="PortIn"/>
                                                </PortIn>
                                            </xsl:if>
                                            <xsl:if test="PortOut">
                                                <PortOut>
                                                    <xsl:value-of select="PortOut"/>
                                                </PortOut>
                                            </xsl:if>
                                            <xsl:if test="ContractStartDate">
                                                <ContractStartDate>
                                                    <xsl:value-of select="ContractStartDate"/>
                                                </ContractStartDate>
                                            </xsl:if>
                                            <xsl:if test="ContractPeriod">
                                                <ContractPeriod>
                                                    <xsl:value-of select="ContractPeriod"/>
                                                </ContractPeriod>
                                            </xsl:if>
                                            <xsl:if test="ContractEndDate">
                                                <ContractEndDate>
                                                    <xsl:value-of select="ContractEndDate"/>
                                                </ContractEndDate>
                                            </xsl:if>
                                            <xsl:if test="Sector">
                                                <Sector>
                                                    <xsl:value-of select="Sector"/>
                                                </Sector>
                                            </xsl:if>
                                            <xsl:if test="SubAccounts">
                                                <SubAccounts>
                                                    <xsl:value-of select="SubAccounts"/>
                                                </SubAccounts>
                                            </xsl:if>
                                        </ZainCustomerAccount>
                                    </xsl:for-each>
                                </ns3:ZainCustomerAccountList>
                                <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers"/>
                                <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainBusinessIdentifier"/>
                            </pfx5:CreateCustomerReq>
                        </Customer>
                    </root>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
        <pd:activity name="MapSecondaryBAs">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1145</pd:x>
            <pd:y>140</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Customer">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element ref="pfx5:CreateCustomerReq"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <Customer>
                        <pfx5:CreateCustomerReq>
                            <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:BusinessMessageHeader"/>
                            <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:Organization"/>
                            <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIndividualList"/>
                            <ns3:ZainCustomerAccountList>
                                <xsl:for-each select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount">
                                    <ZainCustomerAccount>
                                        <xsl:if test="accountStatus">
                                            <accountStatus>
                                                <xsl:value-of select="accountStatus"/>
                                            </accountStatus>
                                        </xsl:if>
                                        <xsl:if test="accountType">
                                            <accountType>
                                                <xsl:value-of select="accountType"/>
                                            </accountType>
                                        </xsl:if>
                                        <xsl:if test="classificationCode">
                                            <classificationCode>
                                                <xsl:value-of select="classificationCode"/>
                                            </classificationCode>
                                        </xsl:if>
                                        <xsl:if test="creationDateTime">
                                            <creationDateTime>
                                                <xsl:value-of select="creationDateTime"/>
                                            </creationDateTime>
                                        </xsl:if>
                                        <xsl:if test="creditLimit">
                                            <creditLimit>
                                                <xsl:value-of select="creditLimit"/>
                                            </creditLimit>
                                        </xsl:if>
                                        <xsl:if test="currencyCode">
                                            <currencyCode>
                                                <xsl:value-of select="currencyCode"/>
                                            </currencyCode>
                                        </xsl:if>
                                        <xsl:if test="ID">
                                            <ID>
                                                <xsl:value-of select="ID"/>
                                            </ID>
                                        </xsl:if>
                                        <xsl:if test="name">
                                            <name>
                                                <xsl:value-of select="name"/>
                                            </name>
                                        </xsl:if>
                                        <xsl:if test="pin">
                                            <pin>
                                                <xsl:value-of select="pin"/>
                                            </pin>
                                        </xsl:if>
                                        <xsl:if test="parentAccountId">
                                            <parentAccountId>
                                                <xsl:value-of select="parentAccountId"/>
                                            </parentAccountId>
                                        </xsl:if>
                                        <xsl:if test="rootAccountId">
                                            <rootAccountId>
                                                <xsl:value-of select="rootAccountId"/>
                                            </rootAccountId>
                                        </xsl:if>
                                        <xsl:for-each select="LogicalResource">
                                            <LogicalResource>
                                                <xsl:if test="resourceName">
                                                    <resourceName>
                                                        <xsl:value-of select="resourceName"/>
                                                    </resourceName>
                                                </xsl:if>
                                                <xsl:if test="resourceValue">
                                                    <resourceValue>
                                                        <xsl:value-of select="resourceValue"/>
                                                    </resourceValue>
                                                </xsl:if>
                                            </LogicalResource>
                                        </xsl:for-each>
                                        <xsl:if test="ContractID">
                                            <ContractID>
                                                <xsl:value-of select="ContractID"/>
                                            </ContractID>
                                        </xsl:if>
                                        <xsl:if test="BillingType">
                                            <BillingType>
                                                <xsl:value-of select="BillingType"/>
                                            </BillingType>
                                        </xsl:if>
                                        <xsl:if test="Category">
                                            <Category>
                                                <xsl:value-of select="Category"/>
                                            </Category>
                                        </xsl:if>
                                        <xsl:if test="Nationality">
                                            <Nationality>
                                                <xsl:value-of select="Nationality"/>
                                            </Nationality>
                                        </xsl:if>
                                        <xsl:if test="ContractOwner">
                                            <ContractOwner>
                                                <xsl:value-of select="ContractOwner"/>
                                            </ContractOwner>
                                        </xsl:if>
                                        <xsl:if test="HasPrepaid">
                                            <HasPrepaid>
                                                <xsl:value-of select="HasPrepaid"/>
                                            </HasPrepaid>
                                        </xsl:if>
                                        <xsl:if test="HasPostpaid">
                                            <HasPostpaid>
                                                <xsl:value-of select="HasPostpaid"/>
                                            </HasPostpaid>
                                        </xsl:if>
                                        <xsl:if test="ns3:MSISDN">
                                            <ns3:MSISDN>
                                                <xsl:value-of select="ns3:MSISDN"/>
                                            </ns3:MSISDN>
                                        </xsl:if>
                                        <xsl:if test="ActivationCode">
                                            <ActivationCode>
                                                <xsl:value-of select="ActivationCode"/>
                                            </ActivationCode>
                                        </xsl:if>
                                        <xsl:if test="Email">
                                            <Email>
                                                <xsl:value-of select="Email"/>
                                            </Email>
                                        </xsl:if>
                                        <xsl:for-each select="ns3:EmployeeIdentifier">
                                            <ns3:EmployeeIdentifier>
                                                <xsl:if test="PFnumber">
                                                    <PFnumber>
                                                        <xsl:value-of select="PFnumber"/>
                                                    </PFnumber>
                                                </xsl:if>
                                                <xsl:for-each select="EmployeeId">
                                                    <EmployeeId>
                                                        <xsl:if test="ns3:systemName">
                                                            <ns3:systemName>
                                                                <xsl:value-of select="ns3:systemName"/>
                                                            </ns3:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:value">
                                                            <ns3:value>
                                                                <xsl:value-of select="ns3:value"/>
                                                            </ns3:value>
                                                        </xsl:if>
                                                    </EmployeeId>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns3:SubscriberIdentifier">
                                                    <ns3:SubscriberIdentifier>
                                                        <xsl:if test="ns3:MSISDN">
                                                            <ns3:MSISDN>
                                                                <xsl:value-of select="ns3:MSISDN"/>
                                                            </ns3:MSISDN>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:IMSI">
                                                            <ns3:IMSI>
                                                                <xsl:value-of select="ns3:IMSI"/>
                                                            </ns3:IMSI>
                                                        </xsl:if>
                                                        <xsl:if test="DongleSerialNumber">
                                                            <DongleSerialNumber>
                                                                <xsl:value-of select="DongleSerialNumber"/>
                                                            </DongleSerialNumber>
                                                        </xsl:if>
                                                        <xsl:if test="ReferenceMSISDN">
                                                            <ReferenceMSISDN>
                                                                <xsl:value-of select="ReferenceMSISDN"/>
                                                            </ReferenceMSISDN>
                                                        </xsl:if>
                                                    </ns3:SubscriberIdentifier>
                                                </xsl:for-each>
                                                <xsl:if test="IsEmployee">
                                                    <IsEmployee>
                                                        <xsl:value-of select="IsEmployee"/>
                                                    </IsEmployee>
                                                </xsl:if>
                                            </ns3:EmployeeIdentifier>
                                        </xsl:for-each>
                                        <xsl:if test="SourceofSignOff">
                                            <SourceofSignOff>
                                                <xsl:value-of select="SourceofSignOff"/>
                                            </SourceofSignOff>
                                        </xsl:if>
                                        <xsl:if test="Salesagent">
                                            <Salesagent>
                                                <xsl:value-of select="Salesagent"/>
                                            </Salesagent>
                                        </xsl:if>
                                        <xsl:if test="contractResponsible">
                                            <contractResponsible>
                                                <xsl:value-of select="contractResponsible"/>
                                            </contractResponsible>
                                        </xsl:if>
                                        <xsl:if test="costCodePub">
                                            <costCodePub>
                                                <xsl:value-of select="costCodePub"/>
                                            </costCodePub>
                                        </xsl:if>
                                        <xsl:if test="costId">
                                            <costId>
                                                <xsl:value-of select="costId"/>
                                            </costId>
                                        </xsl:if>
                                        <xsl:if test="crmCustomerId">
                                            <crmCustomerId>
                                                <xsl:value-of select="crmCustomerId"/>
                                            </crmCustomerId>
                                        </xsl:if>
                                        <xsl:if test="crmParentCustomerId">
                                            <crmParentCustomerId>
                                                <xsl:value-of select="crmParentCustomerId"/>
                                            </crmParentCustomerId>
                                        </xsl:if>
                                        <xsl:if test="csBillcycle">
                                            <csBillcycle>
                                                <xsl:value-of select="csBillcycle"/>
                                            </csBillcycle>
                                        </xsl:if>
                                        <xsl:if test="csPrepayment">
                                            <csPrepayment>
                                                <xsl:value-of select="csPrepayment"/>
                                            </csPrepayment>
                                        </xsl:if>
                                        <xsl:if test="csStatus">
                                            <csStatus>
                                                <xsl:value-of select="csStatus"/>
                                            </csStatus>
                                        </xsl:if>
                                        <xsl:if test="customerCategory">
                                            <customerCategory>
                                                <xsl:value-of select="customerCategory"/>
                                            </customerCategory>
                                        </xsl:if>
                                        <xsl:if test="level">
                                            <level>
                                                <xsl:value-of select="level"/>
                                            </level>
                                        </xsl:if>
                                        <xsl:if test="mode">
                                            <mode>
                                                <xsl:value-of select="mode"/>
                                            </mode>
                                        </xsl:if>
                                        <xsl:if test="PartyType">
                                            <PartyType>
                                                <xsl:value-of select="PartyType"/>
                                            </PartyType>
                                        </xsl:if>
                                        <xsl:if test="paymentResponsible">
                                            <paymentResponsible>
                                                <xsl:value-of select="paymentResponsible"/>
                                            </paymentResponsible>
                                        </xsl:if>
                                        <xsl:if test="accountStatusChangeReason">
                                            <accountStatusChangeReason>
                                                <xsl:value-of select="accountStatusChangeReason"/>
                                            </accountStatusChangeReason>
                                        </xsl:if>
                                        <xsl:if test="accountStatusChangeDate">
                                            <accountStatusChangeDate>
                                                <xsl:value-of select="accountStatusChangeDate"/>
                                            </accountStatusChangeDate>
                                        </xsl:if>
                                        <xsl:if test="reasonCode">
                                            <reasonCode>
                                                <xsl:value-of select="reasonCode"/>
                                            </reasonCode>
                                        </xsl:if>
                                        <xsl:if test="rpCode">
                                            <rpCode>
                                                <xsl:value-of select="rpCode"/>
                                            </rpCode>
                                        </xsl:if>
                                        <xsl:if test="sourceCustomerID">
                                            <sourceCustomerID>
                                                <xsl:value-of select="sourceCustomerID"/>
                                            </sourceCustomerID>
                                        </xsl:if>
                                        <xsl:if test="targetCustomerID">
                                            <targetCustomerID>
                                                <xsl:value-of select="targetCustomerID"/>
                                            </targetCustomerID>
                                        </xsl:if>
                                        <xsl:for-each select="ZainCustomerPayment">
                                            <ZainCustomerPayment>
                                                <xsl:if test="ID">
                                                    <ID>
                                                        <xsl:value-of select="ID"/>
                                                    </ID>
                                                </xsl:if>
                                                <xsl:if test="paymentDate">
                                                    <paymentDate>
                                                        <xsl:value-of select="paymentDate"/>
                                                    </paymentDate>
                                                </xsl:if>
                                                <xsl:if test="paymentReceiptDate">
                                                    <paymentReceiptDate>
                                                        <xsl:value-of select="paymentReceiptDate"/>
                                                    </paymentReceiptDate>
                                                </xsl:if>
                                                <xsl:if test="paymentType">
                                                    <paymentType>
                                                        <xsl:value-of select="paymentType"/>
                                                    </paymentType>
                                                </xsl:if>
                                                <xsl:if test="ID_Public">
                                                    <ID_Public>
                                                        <xsl:value-of select="ID_Public"/>
                                                    </ID_Public>
                                                </xsl:if>
                                                <xsl:if test="cardtype">
                                                    <cardtype>
                                                        <xsl:value-of select="cardtype"/>
                                                    </cardtype>
                                                </xsl:if>
                                                <xsl:if test="csConvratetypePaymentPub">
                                                    <csConvratetypePaymentPub>
                                                        <xsl:value-of select="csConvratetypePaymentPub"/>
                                                    </csConvratetypePaymentPub>
                                                </xsl:if>
                                                <xsl:if test="csConvratetypeRefund">
                                                    <csConvratetypeRefund>
                                                        <xsl:value-of select="csConvratetypeRefund"/>
                                                    </csConvratetypeRefund>
                                                </xsl:if>
                                                <xsl:if test="csConvratetypeRefundPub">
                                                    <csConvratetypeRefundPub>
                                                        <xsl:value-of select="csConvratetypeRefundPub"/>
                                                    </csConvratetypeRefundPub>
                                                </xsl:if>
                                                <xsl:if test="conversionRate">
                                                    <conversionRate>
                                                        <xsl:value-of select="conversionRate"/>
                                                    </conversionRate>
                                                </xsl:if>
                                                <xsl:for-each select="Money">
                                                    <Money>
                                                        <xsl:if test="amount">
                                                            <amount>
                                                                <xsl:value-of select="amount"/>
                                                            </amount>
                                                        </xsl:if>
                                                        <xsl:if test="units">
                                                            <units>
                                                                <xsl:value-of select="units"/>
                                                            </units>
                                                        </xsl:if>
                                                    </Money>
                                                </xsl:for-each>
                                                <xsl:for-each select="PaymentMethod">
                                                    <PaymentMethod>
                                                        <xsl:if test="description">
                                                            <description>
                                                                <xsl:value-of select="description"/>
                                                            </description>
                                                        </xsl:if>
                                                        <xsl:if test="ID">
                                                            <ID>
                                                                <xsl:value-of select="ID"/>
                                                            </ID>
                                                        </xsl:if>
                                                        <xsl:if test="name">
                                                            <name>
                                                                <xsl:value-of select="name"/>
                                                            </name>
                                                        </xsl:if>
                                                        <xsl:if test="paymentMethodType">
                                                            <paymentMethodType>
                                                                <xsl:value-of select="paymentMethodType"/>
                                                            </paymentMethodType>
                                                        </xsl:if>
                                                        <xsl:for-each select="CreditCardPM">
                                                            <CreditCardPM>
                                                                <xsl:if test="creditCardNumber">
                                                                    <creditCardNumber>
                                                                        <xsl:value-of select="creditCardNumber"/>
                                                                    </creditCardNumber>
                                                                </xsl:if>
                                                                <xsl:if test="CreditCardCompanyName">
                                                                    <CreditCardCompanyName>
                                                                        <xsl:value-of select="CreditCardCompanyName"/>
                                                                    </CreditCardCompanyName>
                                                                </xsl:if>
                                                                <xsl:if test="expirationDate">
                                                                    <expirationDate>
                                                                        <xsl:value-of select="expirationDate"/>
                                                                    </expirationDate>
                                                                </xsl:if>
                                                                <xsl:if test="ExpirationMonth">
                                                                    <ExpirationMonth>
                                                                        <xsl:value-of select="ExpirationMonth"/>
                                                                    </ExpirationMonth>
                                                                </xsl:if>
                                                                <xsl:if test="ExpirationYear">
                                                                    <ExpirationYear>
                                                                        <xsl:value-of select="ExpirationYear"/>
                                                                    </ExpirationYear>
                                                                </xsl:if>
                                                                <xsl:if test="nameOnCard">
                                                                    <nameOnCard>
                                                                        <xsl:value-of select="nameOnCard"/>
                                                                    </nameOnCard>
                                                                </xsl:if>
                                                                <xsl:if test="authorizationCode">
                                                                    <authorizationCode>
                                                                        <xsl:value-of select="authorizationCode"/>
                                                                    </authorizationCode>
                                                                </xsl:if>
                                                                <xsl:if test="creditCardType">
                                                                    <creditCardType>
                                                                        <xsl:value-of select="creditCardType"/>
                                                                    </creditCardType>
                                                                </xsl:if>
                                                            </CreditCardPM>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="CashPM">
                                                            <CashPM>
                                                                <xsl:if test="cashierInfo">
                                                                    <cashierInfo>
                                                                        <xsl:value-of select="cashierInfo"/>
                                                                    </cashierInfo>
                                                                </xsl:if>
                                                            </CashPM>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="ZainBankPM">
                                                            <ZainBankPM>
                                                                <xsl:if test="accountNumber">
                                                                    <accountNumber>
                                                                        <xsl:value-of select="accountNumber"/>
                                                                    </accountNumber>
                                                                </xsl:if>
                                                                <xsl:if test="accountowner">
                                                                    <accountowner>
                                                                        <xsl:value-of select="accountowner"/>
                                                                    </accountowner>
                                                                </xsl:if>
                                                                <xsl:if test="BankCode">
                                                                    <BankCode>
                                                                        <xsl:value-of select="BankCode"/>
                                                                    </BankCode>
                                                                </xsl:if>
                                                                <xsl:if test="BankCountry">
                                                                    <BankCountry>
                                                                        <xsl:value-of select="BankCountry"/>
                                                                    </BankCountry>
                                                                </xsl:if>
                                                                <xsl:if test="BankName">
                                                                    <BankName>
                                                                        <xsl:value-of select="BankName"/>
                                                                    </BankName>
                                                                </xsl:if>
                                                                <xsl:if test="BankState">
                                                                    <BankState>
                                                                        <xsl:value-of select="BankState"/>
                                                                    </BankState>
                                                                </xsl:if>
                                                                <xsl:if test="BankStreetName">
                                                                    <BankStreetName>
                                                                        <xsl:value-of select="BankStreetName"/>
                                                                    </BankStreetName>
                                                                </xsl:if>
                                                                <xsl:if test="BankStreetNumber">
                                                                    <BankStreetNumber>
                                                                        <xsl:value-of select="BankStreetNumber"/>
                                                                    </BankStreetNumber>
                                                                </xsl:if>
                                                                <xsl:if test="BankZipCode">
                                                                    <BankZipCode>
                                                                        <xsl:value-of select="BankZipCode"/>
                                                                    </BankZipCode>
                                                                </xsl:if>
                                                                <xsl:if test="CityOfBank">
                                                                    <CityOfBank>
                                                                        <xsl:value-of select="CityOfBank"/>
                                                                    </CityOfBank>
                                                                </xsl:if>
                                                                <xsl:if test="lso3Code">
                                                                    <lso3Code>
                                                                        <xsl:value-of select="lso3Code"/>
                                                                    </lso3Code>
                                                                </xsl:if>
                                                                <xsl:if test="swiftCode">
                                                                    <swiftCode>
                                                                        <xsl:value-of select="swiftCode"/>
                                                                    </swiftCode>
                                                                </xsl:if>
                                                                <xsl:if test="verificationCode">
                                                                    <verificationCode>
                                                                        <xsl:value-of select="verificationCode"/>
                                                                    </verificationCode>
                                                                </xsl:if>
                                                                <xsl:if test="BankBranchName">
                                                                    <BankBranchName>
                                                                        <xsl:value-of select="BankBranchName"/>
                                                                    </BankBranchName>
                                                                </xsl:if>
                                                            </ZainBankPM>
                                                        </xsl:for-each>
                                                        <xsl:if test="PreferredPaymentMode">
                                                            <PreferredPaymentMode>
                                                                <xsl:value-of select="PreferredPaymentMode"/>
                                                            </PreferredPaymentMode>
                                                        </xsl:if>
                                                        <xsl:for-each select="ns3:ChequeDetails">
                                                            <ns3:ChequeDetails>
                                                                <ns3:chequeNumber>
                                                                    <xsl:value-of select="ns3:chequeNumber"/>
                                                                </ns3:chequeNumber>
                                                                <xsl:if test="ns3:bankName">
                                                                    <ns3:bankName>
                                                                        <xsl:value-of select="ns3:bankName"/>
                                                                    </ns3:bankName>
                                                                </xsl:if>
                                                            </ns3:ChequeDetails>
                                                        </xsl:for-each>
                                                    </PaymentMethod>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns3:CustomerBill">
                                                    <ns3:CustomerBill>
                                                        <xsl:if test="billDate">
                                                            <billDate>
                                                                <xsl:value-of select="billDate"/>
                                                            </billDate>
                                                        </xsl:if>
                                                        <xsl:if test="billNo">
                                                            <billNo>
                                                                <xsl:value-of select="billNo"/>
                                                            </billNo>
                                                        </xsl:if>
                                                        <xsl:for-each select="ns3:billId">
                                                            <ns3:billId>
                                                                <xsl:if test="ns3:systemName">
                                                                    <ns3:systemName>
                                                                        <xsl:value-of select="ns3:systemName"/>
                                                                    </ns3:systemName>
                                                                </xsl:if>
                                                                <xsl:if test="ns3:value">
                                                                    <ns3:value>
                                                                        <xsl:value-of select="ns3:value"/>
                                                                    </ns3:value>
                                                                </xsl:if>
                                                            </ns3:billId>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="ns3:addressId">
                                                            <ns3:addressId>
                                                                <xsl:if test="ns3:systemName">
                                                                    <ns3:systemName>
                                                                        <xsl:value-of select="ns3:systemName"/>
                                                                    </ns3:systemName>
                                                                </xsl:if>
                                                                <xsl:if test="ns3:value">
                                                                    <ns3:value>
                                                                        <xsl:value-of select="ns3:value"/>
                                                                    </ns3:value>
                                                                </xsl:if>
                                                            </ns3:addressId>
                                                        </xsl:for-each>
                                                        <xsl:if test="Format">
                                                            <Format>
                                                                <xsl:value-of select="Format"/>
                                                            </Format>
                                                        </xsl:if>
                                                        <xsl:if test="chargeDate">
                                                            <chargeDate>
                                                                <xsl:value-of select="chargeDate"/>
                                                            </chargeDate>
                                                        </xsl:if>
                                                        <xsl:if test="creditDate">
                                                            <creditDate>
                                                                <xsl:value-of select="creditDate"/>
                                                            </creditDate>
                                                        </xsl:if>
                                                        <xsl:if test="creditLimit">
                                                            <creditLimit>
                                                                <xsl:value-of select="creditLimit"/>
                                                            </creditLimit>
                                                        </xsl:if>
                                                        <xsl:if test="mailingDate">
                                                            <mailingDate>
                                                                <xsl:value-of select="mailingDate"/>
                                                            </mailingDate>
                                                        </xsl:if>
                                                        <xsl:if test="paymentDueDate">
                                                            <paymentDueDate>
                                                                <xsl:value-of select="paymentDueDate"/>
                                                            </paymentDueDate>
                                                        </xsl:if>
                                                        <xsl:if test="relationshipType">
                                                            <relationshipType>
                                                                <xsl:value-of select="relationshipType"/>
                                                            </relationshipType>
                                                        </xsl:if>
                                                        <xsl:for-each select="CustomerBillingCycle">
                                                            <CustomerBillingCycle>
                                                                <xsl:if test="billCyclechange">
                                                                    <billCyclechange>
                                                                        <xsl:value-of select="billCyclechange"/>
                                                                    </billCyclechange>
                                                                </xsl:if>
                                                                <xsl:if test="billSource">
                                                                    <billSource>
                                                                        <xsl:value-of select="billSource"/>
                                                                    </billSource>
                                                                </xsl:if>
                                                                <xsl:if test="billFrequency">
                                                                    <billFrequency>
                                                                        <xsl:value-of select="billFrequency"/>
                                                                    </billFrequency>
                                                                </xsl:if>
                                                                <xsl:if test="billingDate">
                                                                    <billingDate>
                                                                        <xsl:value-of select="billingDate"/>
                                                                    </billingDate>
                                                                </xsl:if>
                                                                <xsl:if test="billCycle">
                                                                    <billCycle>
                                                                        <xsl:value-of select="billCycle"/>
                                                                    </billCycle>
                                                                </xsl:if>
                                                                <xsl:if test="chargeDate">
                                                                    <chargeDate>
                                                                        <xsl:value-of select="chargeDate"/>
                                                                    </chargeDate>
                                                                </xsl:if>
                                                                <xsl:if test="Currency">
                                                                    <Currency>
                                                                        <xsl:value-of select="Currency"/>
                                                                    </Currency>
                                                                </xsl:if>
                                                                <xsl:if test="ExchangeRate">
                                                                    <ExchangeRate>
                                                                        <xsl:value-of select="ExchangeRate"/>
                                                                    </ExchangeRate>
                                                                </xsl:if>
                                                                <xsl:if test="creditDate">
                                                                    <creditDate>
                                                                        <xsl:value-of select="creditDate"/>
                                                                    </creditDate>
                                                                </xsl:if>
                                                                <xsl:if test="mailingDate">
                                                                    <mailingDate>
                                                                        <xsl:value-of select="mailingDate"/>
                                                                    </mailingDate>
                                                                </xsl:if>
                                                                <xsl:if test="paymentDueDate">
                                                                    <paymentDueDate>
                                                                        <xsl:value-of select="paymentDueDate"/>
                                                                    </paymentDueDate>
                                                                </xsl:if>
                                                                <xsl:if test="triggeredByAccountClose">
                                                                    <triggeredByAccountClose>
                                                                        <xsl:value-of select="triggeredByAccountClose"/>
                                                                    </triggeredByAccountClose>
                                                                </xsl:if>
                                                                <xsl:if test="triggeredByCustomer">
                                                                    <triggeredByCustomer>
                                                                        <xsl:value-of select="triggeredByCustomer"/>
                                                                    </triggeredByCustomer>
                                                                </xsl:if>
                                                                <xsl:if test="triggeredByProvider">
                                                                    <triggeredByProvider>
                                                                        <xsl:value-of select="triggeredByProvider"/>
                                                                    </triggeredByProvider>
                                                                </xsl:if>
                                                                <xsl:if test="triggeredByScheduler">
                                                                    <triggeredByScheduler>
                                                                        <xsl:value-of select="triggeredByScheduler"/>
                                                                    </triggeredByScheduler>
                                                                </xsl:if>
                                                            </CustomerBillingCycle>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="CustomerBillFormat">
                                                            <CustomerBillFormat>
                                                                <xsl:if test="description">
                                                                    <description>
                                                                        <xsl:value-of select="description"/>
                                                                    </description>
                                                                </xsl:if>
                                                                <xsl:if test="name">
                                                                    <name>
                                                                        <xsl:value-of select="name"/>
                                                                    </name>
                                                                </xsl:if>
                                                                <xsl:if test="hasCallDetails">
                                                                    <hasCallDetails>
                                                                        <xsl:value-of select="hasCallDetails"/>
                                                                    </hasCallDetails>
                                                                </xsl:if>
                                                                <xsl:for-each select="CustomerBillPresentationMedia">
                                                                    <CustomerBillPresentationMedia>
                                                                        <xsl:if test="description">
                                                                            <description>
                                                                                <xsl:value-of select="description"/>
                                                                            </description>
                                                                        </xsl:if>
                                                                        <xsl:if test="name">
                                                                            <name>
                                                                                <xsl:value-of select="name"/>
                                                                            </name>
                                                                        </xsl:if>
                                                                    </CustomerBillPresentationMedia>
                                                                </xsl:for-each>
                                                            </CustomerBillFormat>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="Money">
                                                            <Money>
                                                                <xsl:if test="amount">
                                                                    <amount>
                                                                        <xsl:value-of select="amount"/>
                                                                    </amount>
                                                                </xsl:if>
                                                                <xsl:if test="units">
                                                                    <units>
                                                                        <xsl:value-of select="units"/>
                                                                    </units>
                                                                </xsl:if>
                                                            </Money>
                                                        </xsl:for-each>
                                                        <xsl:for-each select="ns3:ZainContact">
                                                            <ns3:ZainContact>
                                                                <xsl:for-each select="TimePeriod">
                                                                    <TimePeriod>
                                                                        <xsl:if test="endDateTime">
                                                                            <endDateTime>
                                                                                <xsl:value-of select="endDateTime"/>
                                                                            </endDateTime>
                                                                        </xsl:if>
                                                                        <xsl:if test="startDateTime">
                                                                            <startDateTime>
                                                                                <xsl:value-of select="startDateTime"/>
                                                                            </startDateTime>
                                                                        </xsl:if>
                                                                    </TimePeriod>
                                                                </xsl:for-each>
                                                                <xsl:if test="eMailAddress">
                                                                    <eMailAddress>
                                                                        <xsl:value-of select="eMailAddress"/>
                                                                    </eMailAddress>
                                                                </xsl:if>
                                                                <xsl:if test="faxContact">
                                                                    <faxContact>
                                                                        <xsl:value-of select="faxContact"/>
                                                                    </faxContact>
                                                                </xsl:if>
                                                                <xsl:if test="homeContact">
                                                                    <homeContact>
                                                                        <xsl:value-of select="homeContact"/>
                                                                    </homeContact>
                                                                </xsl:if>
                                                                <xsl:if test="otherContact">
                                                                    <otherContact>
                                                                        <xsl:value-of select="otherContact"/>
                                                                    </otherContact>
                                                                </xsl:if>
                                                                <xsl:if test="workContact">
                                                                    <workContact>
                                                                        <xsl:value-of select="workContact"/>
                                                                    </workContact>
                                                                </xsl:if>
                                                                <xsl:if test="mobileNumber">
                                                                    <mobileNumber>
                                                                        <xsl:value-of select="mobileNumber"/>
                                                                    </mobileNumber>
                                                                </xsl:if>
                                                                <xsl:if test="SMSNotificationNumForAccount">
                                                                    <SMSNotificationNumForAccount>
                                                                        <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                                    </SMSNotificationNumForAccount>
                                                                </xsl:if>
                                                                <xsl:if test="ContactPersonName">
                                                                    <ContactPersonName>
                                                                        <xsl:value-of select="ContactPersonName"/>
                                                                    </ContactPersonName>
                                                                </xsl:if>
                                                                <xsl:if test="Notificationnumber">
                                                                    <Notificationnumber>
                                                                        <xsl:value-of select="Notificationnumber"/>
                                                                    </Notificationnumber>
                                                                </xsl:if>
                                                                <xsl:if test="AuthorizedPerson">
                                                                    <AuthorizedPerson>
                                                                        <xsl:value-of select="AuthorizedPerson"/>
                                                                    </AuthorizedPerson>
                                                                </xsl:if>
                                                                <xsl:if test="ModeOfCommunication">
                                                                    <ModeOfCommunication>
                                                                        <xsl:value-of select="ModeOfCommunication"/>
                                                                    </ModeOfCommunication>
                                                                </xsl:if>
                                                                <xsl:if test="PrefferredCommunication">
                                                                    <PrefferredCommunication>
                                                                        <xsl:value-of select="PrefferredCommunication"/>
                                                                    </PrefferredCommunication>
                                                                </xsl:if>
                                                                <xsl:if test="Preferredlanguage">
                                                                    <Preferredlanguage>
                                                                        <xsl:value-of select="Preferredlanguage"/>
                                                                    </Preferredlanguage>
                                                                </xsl:if>
                                                            </ns3:ZainContact>
                                                        </xsl:for-each>
                                                        <xsl:if test="numberOfCopies">
                                                            <numberOfCopies>
                                                                <xsl:value-of select="numberOfCopies"/>
                                                            </numberOfCopies>
                                                        </xsl:if>
                                                        <xsl:if test="nameToPrint">
                                                            <nameToPrint>
                                                                <xsl:value-of select="nameToPrint"/>
                                                            </nameToPrint>
                                                        </xsl:if>
                                                        <xsl:if test="RequestType">
                                                            <RequestType>
                                                                <xsl:value-of select="RequestType"/>
                                                            </RequestType>
                                                        </xsl:if>
                                                        <xsl:if test="RequestsubType">
                                                            <RequestsubType>
                                                                <xsl:value-of select="RequestsubType"/>
                                                            </RequestsubType>
                                                        </xsl:if>
                                                        <xsl:if test="ContractTypeId">
                                                            <ContractTypeId>
                                                                <xsl:value-of select="ContractTypeId"/>
                                                            </ContractTypeId>
                                                        </xsl:if>
                                                        <xsl:if test="Information">
                                                            <Information>
                                                                <xsl:value-of select="Information"/>
                                                            </Information>
                                                        </xsl:if>
                                                        <xsl:if test="simulation">
                                                            <simulation>
                                                                <xsl:value-of select="simulation"/>
                                                            </simulation>
                                                        </xsl:if>
                                                        <xsl:if test="RefernceDate">
                                                            <RefernceDate>
                                                                <xsl:value-of select="RefernceDate"/>
                                                            </RefernceDate>
                                                        </xsl:if>
                                                        <xsl:if test="PostingPeriod">
                                                            <PostingPeriod>
                                                                <xsl:value-of select="PostingPeriod"/>
                                                            </PostingPeriod>
                                                        </xsl:if>
                                                        <xsl:if test="acknowledgment">
                                                            <acknowledgment>
                                                                <xsl:value-of select="acknowledgment"/>
                                                            </acknowledgment>
                                                        </xsl:if>
                                                        <xsl:if test="CollectInd">
                                                            <CollectInd>
                                                                <xsl:value-of select="CollectInd"/>
                                                            </CollectInd>
                                                        </xsl:if>
                                                        <xsl:if test="Ignorebuind">
                                                            <Ignorebuind>
                                                                <xsl:value-of select="Ignorebuind"/>
                                                            </Ignorebuind>
                                                        </xsl:if>
                                                        <xsl:if test="allbusinesunits">
                                                            <allbusinesunits>
                                                                <xsl:value-of select="allbusinesunits"/>
                                                            </allbusinesunits>
                                                        </xsl:if>
                                                        <xsl:if test="disableinvoiceforwarding">
                                                            <disableinvoiceforwarding>
                                                                <xsl:value-of select="disableinvoiceforwarding"/>
                                                            </disableinvoiceforwarding>
                                                        </xsl:if>
                                                    </ns3:CustomerBill>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns3:ZainBankPM">
                                                    <ns3:ZainBankPM>
                                                        <xsl:if test="accountNumber">
                                                            <accountNumber>
                                                                <xsl:value-of select="accountNumber"/>
                                                            </accountNumber>
                                                        </xsl:if>
                                                        <xsl:if test="accountowner">
                                                            <accountowner>
                                                                <xsl:value-of select="accountowner"/>
                                                            </accountowner>
                                                        </xsl:if>
                                                        <xsl:if test="BankCode">
                                                            <BankCode>
                                                                <xsl:value-of select="BankCode"/>
                                                            </BankCode>
                                                        </xsl:if>
                                                        <xsl:if test="BankCountry">
                                                            <BankCountry>
                                                                <xsl:value-of select="BankCountry"/>
                                                            </BankCountry>
                                                        </xsl:if>
                                                        <xsl:if test="BankName">
                                                            <BankName>
                                                                <xsl:value-of select="BankName"/>
                                                            </BankName>
                                                        </xsl:if>
                                                        <xsl:if test="BankState">
                                                            <BankState>
                                                                <xsl:value-of select="BankState"/>
                                                            </BankState>
                                                        </xsl:if>
                                                        <xsl:if test="BankStreetName">
                                                            <BankStreetName>
                                                                <xsl:value-of select="BankStreetName"/>
                                                            </BankStreetName>
                                                        </xsl:if>
                                                        <xsl:if test="BankStreetNumber">
                                                            <BankStreetNumber>
                                                                <xsl:value-of select="BankStreetNumber"/>
                                                            </BankStreetNumber>
                                                        </xsl:if>
                                                        <xsl:if test="BankZipCode">
                                                            <BankZipCode>
                                                                <xsl:value-of select="BankZipCode"/>
                                                            </BankZipCode>
                                                        </xsl:if>
                                                        <xsl:if test="CityOfBank">
                                                            <CityOfBank>
                                                                <xsl:value-of select="CityOfBank"/>
                                                            </CityOfBank>
                                                        </xsl:if>
                                                        <xsl:if test="lso3Code">
                                                            <lso3Code>
                                                                <xsl:value-of select="lso3Code"/>
                                                            </lso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="swiftCode">
                                                            <swiftCode>
                                                                <xsl:value-of select="swiftCode"/>
                                                            </swiftCode>
                                                        </xsl:if>
                                                        <xsl:if test="verificationCode">
                                                            <verificationCode>
                                                                <xsl:value-of select="verificationCode"/>
                                                            </verificationCode>
                                                        </xsl:if>
                                                        <xsl:if test="BankBranchName">
                                                            <BankBranchName>
                                                                <xsl:value-of select="BankBranchName"/>
                                                            </BankBranchName>
                                                        </xsl:if>
                                                    </ns3:ZainBankPM>
                                                </xsl:for-each>
                                                <xsl:if test="isPrimaryBillingAccount">
                                                    <isPrimaryBillingAccount>
                                                        <xsl:value-of select="isPrimaryBillingAccount"/>
                                                    </isPrimaryBillingAccount>
                                                </xsl:if>
                                                <xsl:if test="isActiveBillingAccount">
                                                    <isActiveBillingAccount>
                                                        <xsl:value-of select="isActiveBillingAccount"/>
                                                    </isActiveBillingAccount>
                                                </xsl:if>
                                                <xsl:for-each select="BillingAddressId">
                                                    <BillingAddressId>
                                                        <xsl:if test="ns3:systemName">
                                                            <ns3:systemName>
                                                                <xsl:value-of select="ns3:systemName"/>
                                                            </ns3:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:value">
                                                            <ns3:value>
                                                                <xsl:value-of select="ns3:value"/>
                                                            </ns3:value>
                                                        </xsl:if>
                                                    </BillingAddressId>
                                                </xsl:for-each>
                                                <xsl:if test="ns3:paymentReferenceNumber">
                                                    <ns3:paymentReferenceNumber>
                                                        <xsl:value-of select="ns3:paymentReferenceNumber"/>
                                                    </ns3:paymentReferenceNumber>
                                                </xsl:if>
                                                <xsl:if test="PaymentChannel">
                                                    <PaymentChannel>
                                                        <xsl:value-of select="PaymentChannel"/>
                                                    </PaymentChannel>
                                                </xsl:if>
                                                <xsl:if test="Currency">
                                                    <Currency>
                                                        <xsl:value-of select="Currency"/>
                                                    </Currency>
                                                </xsl:if>
                                                <xsl:if test="IncomeRange">
                                                    <IncomeRange>
                                                        <xsl:value-of select="IncomeRange"/>
                                                    </IncomeRange>
                                                </xsl:if>
                                                <xsl:if test="DefaultCreditLimit">
                                                    <DefaultCreditLimit>
                                                        <xsl:value-of select="DefaultCreditLimit"/>
                                                    </DefaultCreditLimit>
                                                </xsl:if>
                                                <xsl:if test="CutomerCreditLimit">
                                                    <CutomerCreditLimit>
                                                        <xsl:value-of select="CutomerCreditLimit"/>
                                                    </CutomerCreditLimit>
                                                </xsl:if>
                                                <xsl:if test="CreditNote">
                                                    <CreditNote>
                                                        <xsl:value-of select="CreditNote"/>
                                                    </CreditNote>
                                                </xsl:if>
                                                <xsl:if test="CurrentPricePlan">
                                                    <CurrentPricePlan>
                                                        <xsl:value-of select="CurrentPricePlan"/>
                                                    </CurrentPricePlan>
                                                </xsl:if>
                                            </ZainCustomerPayment>
                                        </xsl:for-each>
                                        <xsl:for-each select="CustomerBill[upper-case(RequestType)!=&quot;PRIMARY ACCOUNT&quot;]">
                                            <CustomerBill>
                                                <xsl:if test="billDate">
                                                    <billDate>
                                                        <xsl:value-of select="billDate"/>
                                                    </billDate>
                                                </xsl:if>
                                                <xsl:if test="billNo">
                                                    <billNo>
                                                        <xsl:value-of select="billNo"/>
                                                    </billNo>
                                                </xsl:if>
                                                <xsl:for-each select="ns3:billId">
                                                    <ns3:billId>
                                                        <xsl:if test="ns3:systemName">
                                                            <ns3:systemName>
                                                                <xsl:value-of select="ns3:systemName"/>
                                                            </ns3:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:value">
                                                            <ns3:value>
                                                                <xsl:value-of select="ns3:value"/>
                                                            </ns3:value>
                                                        </xsl:if>
                                                    </ns3:billId>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns3:addressId">
                                                    <ns3:addressId>
                                                        <xsl:if test="ns3:systemName">
                                                            <ns3:systemName>
                                                                <xsl:value-of select="ns3:systemName"/>
                                                            </ns3:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:value">
                                                            <ns3:value>
                                                                <xsl:value-of select="ns3:value"/>
                                                            </ns3:value>
                                                        </xsl:if>
                                                    </ns3:addressId>
                                                </xsl:for-each>
                                                <xsl:if test="Format">
                                                    <Format>
                                                        <xsl:value-of select="Format"/>
                                                    </Format>
                                                </xsl:if>
                                                <xsl:if test="chargeDate">
                                                    <chargeDate>
                                                        <xsl:value-of select="chargeDate"/>
                                                    </chargeDate>
                                                </xsl:if>
                                                <xsl:if test="creditDate">
                                                    <creditDate>
                                                        <xsl:value-of select="creditDate"/>
                                                    </creditDate>
                                                </xsl:if>
                                                <xsl:if test="creditLimit">
                                                    <creditLimit>
                                                        <xsl:value-of select="creditLimit"/>
                                                    </creditLimit>
                                                </xsl:if>
                                                <xsl:if test="mailingDate">
                                                    <mailingDate>
                                                        <xsl:value-of select="mailingDate"/>
                                                    </mailingDate>
                                                </xsl:if>
                                                <xsl:if test="paymentDueDate">
                                                    <paymentDueDate>
                                                        <xsl:value-of select="paymentDueDate"/>
                                                    </paymentDueDate>
                                                </xsl:if>
                                                <xsl:if test="relationshipType">
                                                    <relationshipType>
                                                        <xsl:value-of select="relationshipType"/>
                                                    </relationshipType>
                                                </xsl:if>
                                                <xsl:for-each select="CustomerBillingCycle">
                                                    <CustomerBillingCycle>
                                                        <xsl:if test="billCyclechange">
                                                            <billCyclechange>
                                                                <xsl:value-of select="billCyclechange"/>
                                                            </billCyclechange>
                                                        </xsl:if>
                                                        <xsl:if test="billSource">
                                                            <billSource>
                                                                <xsl:value-of select="billSource"/>
                                                            </billSource>
                                                        </xsl:if>
                                                        <xsl:if test="billFrequency">
                                                            <billFrequency>
                                                                <xsl:value-of select="billFrequency"/>
                                                            </billFrequency>
                                                        </xsl:if>
                                                        <xsl:if test="billingDate">
                                                            <billingDate>
                                                                <xsl:value-of select="billingDate"/>
                                                            </billingDate>
                                                        </xsl:if>
                                                        <xsl:if test="billCycle">
                                                            <billCycle>
                                                                <xsl:value-of select="billCycle"/>
                                                            </billCycle>
                                                        </xsl:if>
                                                        <xsl:if test="chargeDate">
                                                            <chargeDate>
                                                                <xsl:value-of select="chargeDate"/>
                                                            </chargeDate>
                                                        </xsl:if>
                                                        <xsl:if test="Currency">
                                                            <Currency>
                                                                <xsl:value-of select="Currency"/>
                                                            </Currency>
                                                        </xsl:if>
                                                        <xsl:if test="ExchangeRate">
                                                            <ExchangeRate>
                                                                <xsl:value-of select="ExchangeRate"/>
                                                            </ExchangeRate>
                                                        </xsl:if>
                                                        <xsl:if test="creditDate">
                                                            <creditDate>
                                                                <xsl:value-of select="creditDate"/>
                                                            </creditDate>
                                                        </xsl:if>
                                                        <xsl:if test="mailingDate">
                                                            <mailingDate>
                                                                <xsl:value-of select="mailingDate"/>
                                                            </mailingDate>
                                                        </xsl:if>
                                                        <xsl:if test="paymentDueDate">
                                                            <paymentDueDate>
                                                                <xsl:value-of select="paymentDueDate"/>
                                                            </paymentDueDate>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByAccountClose">
                                                            <triggeredByAccountClose>
                                                                <xsl:value-of select="triggeredByAccountClose"/>
                                                            </triggeredByAccountClose>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByCustomer">
                                                            <triggeredByCustomer>
                                                                <xsl:value-of select="triggeredByCustomer"/>
                                                            </triggeredByCustomer>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByProvider">
                                                            <triggeredByProvider>
                                                                <xsl:value-of select="triggeredByProvider"/>
                                                            </triggeredByProvider>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByScheduler">
                                                            <triggeredByScheduler>
                                                                <xsl:value-of select="triggeredByScheduler"/>
                                                            </triggeredByScheduler>
                                                        </xsl:if>
                                                    </CustomerBillingCycle>
                                                </xsl:for-each>
                                                <xsl:for-each select="CustomerBillFormat">
                                                    <CustomerBillFormat>
                                                        <xsl:if test="description">
                                                            <description>
                                                                <xsl:value-of select="description"/>
                                                            </description>
                                                        </xsl:if>
                                                        <xsl:if test="name">
                                                            <name>
                                                                <xsl:value-of select="name"/>
                                                            </name>
                                                        </xsl:if>
                                                        <xsl:if test="hasCallDetails">
                                                            <hasCallDetails>
                                                                <xsl:value-of select="hasCallDetails"/>
                                                            </hasCallDetails>
                                                        </xsl:if>
                                                        <xsl:for-each select="CustomerBillPresentationMedia">
                                                            <CustomerBillPresentationMedia>
                                                                <xsl:if test="description">
                                                                    <description>
                                                                        <xsl:value-of select="description"/>
                                                                    </description>
                                                                </xsl:if>
                                                                <xsl:if test="name">
                                                                    <name>
                                                                        <xsl:value-of select="name"/>
                                                                    </name>
                                                                </xsl:if>
                                                            </CustomerBillPresentationMedia>
                                                        </xsl:for-each>
                                                    </CustomerBillFormat>
                                                </xsl:for-each>
                                                <xsl:for-each select="Money">
                                                    <Money>
                                                        <xsl:if test="amount">
                                                            <amount>
                                                                <xsl:value-of select="amount"/>
                                                            </amount>
                                                        </xsl:if>
                                                        <xsl:if test="units">
                                                            <units>
                                                                <xsl:value-of select="units"/>
                                                            </units>
                                                        </xsl:if>
                                                    </Money>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns3:ZainContact">
                                                    <ns3:ZainContact>
                                                        <xsl:for-each select="TimePeriod">
                                                            <TimePeriod>
                                                                <xsl:if test="endDateTime">
                                                                    <endDateTime>
                                                                        <xsl:value-of select="endDateTime"/>
                                                                    </endDateTime>
                                                                </xsl:if>
                                                                <xsl:if test="startDateTime">
                                                                    <startDateTime>
                                                                        <xsl:value-of select="startDateTime"/>
                                                                    </startDateTime>
                                                                </xsl:if>
                                                            </TimePeriod>
                                                        </xsl:for-each>
                                                        <xsl:if test="eMailAddress">
                                                            <eMailAddress>
                                                                <xsl:value-of select="eMailAddress"/>
                                                            </eMailAddress>
                                                        </xsl:if>
                                                        <xsl:if test="faxContact">
                                                            <faxContact>
                                                                <xsl:value-of select="faxContact"/>
                                                            </faxContact>
                                                        </xsl:if>
                                                        <xsl:if test="homeContact">
                                                            <homeContact>
                                                                <xsl:value-of select="homeContact"/>
                                                            </homeContact>
                                                        </xsl:if>
                                                        <xsl:if test="otherContact">
                                                            <otherContact>
                                                                <xsl:value-of select="otherContact"/>
                                                            </otherContact>
                                                        </xsl:if>
                                                        <xsl:if test="workContact">
                                                            <workContact>
                                                                <xsl:value-of select="workContact"/>
                                                            </workContact>
                                                        </xsl:if>
                                                        <xsl:if test="mobileNumber">
                                                            <mobileNumber>
                                                                <xsl:value-of select="mobileNumber"/>
                                                            </mobileNumber>
                                                        </xsl:if>
                                                        <xsl:if test="SMSNotificationNumForAccount">
                                                            <SMSNotificationNumForAccount>
                                                                <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                            </SMSNotificationNumForAccount>
                                                        </xsl:if>
                                                        <xsl:if test="ContactPersonName">
                                                            <ContactPersonName>
                                                                <xsl:value-of select="ContactPersonName"/>
                                                            </ContactPersonName>
                                                        </xsl:if>
                                                        <xsl:if test="Notificationnumber">
                                                            <Notificationnumber>
                                                                <xsl:value-of select="Notificationnumber"/>
                                                            </Notificationnumber>
                                                        </xsl:if>
                                                        <xsl:if test="AuthorizedPerson">
                                                            <AuthorizedPerson>
                                                                <xsl:value-of select="AuthorizedPerson"/>
                                                            </AuthorizedPerson>
                                                        </xsl:if>
                                                        <xsl:if test="ModeOfCommunication">
                                                            <ModeOfCommunication>
                                                                <xsl:value-of select="ModeOfCommunication"/>
                                                            </ModeOfCommunication>
                                                        </xsl:if>
                                                        <xsl:if test="PrefferredCommunication">
                                                            <PrefferredCommunication>
                                                                <xsl:value-of select="PrefferredCommunication"/>
                                                            </PrefferredCommunication>
                                                        </xsl:if>
                                                        <xsl:if test="Preferredlanguage">
                                                            <Preferredlanguage>
                                                                <xsl:value-of select="Preferredlanguage"/>
                                                            </Preferredlanguage>
                                                        </xsl:if>
                                                    </ns3:ZainContact>
                                                </xsl:for-each>
                                                <xsl:if test="numberOfCopies">
                                                    <numberOfCopies>
                                                        <xsl:value-of select="numberOfCopies"/>
                                                    </numberOfCopies>
                                                </xsl:if>
                                                <xsl:if test="nameToPrint">
                                                    <nameToPrint>
                                                        <xsl:value-of select="nameToPrint"/>
                                                    </nameToPrint>
                                                </xsl:if>
                                                <xsl:if test="RequestType">
                                                    <RequestType>
                                                        <xsl:value-of select="RequestType"/>
                                                    </RequestType>
                                                </xsl:if>
                                                <xsl:if test="RequestsubType">
                                                    <RequestsubType>
                                                        <xsl:value-of select="RequestsubType"/>
                                                    </RequestsubType>
                                                </xsl:if>
                                                <xsl:if test="ContractTypeId">
                                                    <ContractTypeId>
                                                        <xsl:value-of select="ContractTypeId"/>
                                                    </ContractTypeId>
                                                </xsl:if>
                                                <xsl:if test="Information">
                                                    <Information>
                                                        <xsl:value-of select="Information"/>
                                                    </Information>
                                                </xsl:if>
                                                <xsl:if test="simulation">
                                                    <simulation>
                                                        <xsl:value-of select="simulation"/>
                                                    </simulation>
                                                </xsl:if>
                                                <xsl:if test="RefernceDate">
                                                    <RefernceDate>
                                                        <xsl:value-of select="RefernceDate"/>
                                                    </RefernceDate>
                                                </xsl:if>
                                                <xsl:if test="PostingPeriod">
                                                    <PostingPeriod>
                                                        <xsl:value-of select="PostingPeriod"/>
                                                    </PostingPeriod>
                                                </xsl:if>
                                                <xsl:if test="acknowledgment">
                                                    <acknowledgment>
                                                        <xsl:value-of select="acknowledgment"/>
                                                    </acknowledgment>
                                                </xsl:if>
                                                <xsl:if test="CollectInd">
                                                    <CollectInd>
                                                        <xsl:value-of select="CollectInd"/>
                                                    </CollectInd>
                                                </xsl:if>
                                                <xsl:if test="Ignorebuind">
                                                    <Ignorebuind>
                                                        <xsl:value-of select="Ignorebuind"/>
                                                    </Ignorebuind>
                                                </xsl:if>
                                                <xsl:if test="allbusinesunits">
                                                    <allbusinesunits>
                                                        <xsl:value-of select="allbusinesunits"/>
                                                    </allbusinesunits>
                                                </xsl:if>
                                                <xsl:if test="disableinvoiceforwarding">
                                                    <disableinvoiceforwarding>
                                                        <xsl:value-of select="disableinvoiceforwarding"/>
                                                    </disableinvoiceforwarding>
                                                </xsl:if>
                                            </CustomerBill>
                                        </xsl:for-each>
                                        <xsl:for-each select="ZainDealer">
                                            <ZainDealer>
                                                <xsl:if test="dealerID">
                                                    <dealerID>
                                                        <xsl:value-of select="dealerID"/>
                                                    </dealerID>
                                                </xsl:if>
                                                <xsl:if test="dealerIDPub">
                                                    <dealerIDPub>
                                                        <xsl:value-of select="dealerIDPub"/>
                                                    </dealerIDPub>
                                                </xsl:if>
                                            </ZainDealer>
                                        </xsl:for-each>
                                        <xsl:for-each select="ZainThreshold">
                                            <ZainThreshold>
                                                <xsl:if test="LimitTr1">
                                                    <LimitTr1>
                                                        <xsl:value-of select="LimitTr1"/>
                                                    </LimitTr1>
                                                </xsl:if>
                                                <xsl:if test="LimitTr1Pub">
                                                    <LimitTr1Pub>
                                                        <xsl:value-of select="LimitTr1Pub"/>
                                                    </LimitTr1Pub>
                                                </xsl:if>
                                                <xsl:if test="LimitTr2">
                                                    <LimitTr2>
                                                        <xsl:value-of select="LimitTr2"/>
                                                    </LimitTr2>
                                                </xsl:if>
                                                <xsl:if test="LimitTr2Pub">
                                                    <LimitTr2Pub>
                                                        <xsl:value-of select="LimitTr2Pub"/>
                                                    </LimitTr2Pub>
                                                </xsl:if>
                                                <xsl:if test="LimitTr3">
                                                    <LimitTr3>
                                                        <xsl:value-of select="LimitTr3"/>
                                                    </LimitTr3>
                                                </xsl:if>
                                                <xsl:if test="LimitTr3Pub">
                                                    <LimitTr3Pub>
                                                        <xsl:value-of select="LimitTr3Pub"/>
                                                    </LimitTr3Pub>
                                                </xsl:if>
                                            </ZainThreshold>
                                        </xsl:for-each>
                                        <xsl:if test="customerRating">
                                            <customerRating>
                                                <xsl:value-of select="customerRating"/>
                                            </customerRating>
                                        </xsl:if>
                                        <xsl:if test="LineOfBusiness">
                                            <LineOfBusiness>
                                                <xsl:value-of select="LineOfBusiness"/>
                                            </LineOfBusiness>
                                        </xsl:if>
                                        <xsl:if test="LineOfBusinessType">
                                            <LineOfBusinessType>
                                                <xsl:value-of select="LineOfBusinessType"/>
                                            </LineOfBusinessType>
                                        </xsl:if>
                                        <xsl:if test="AccountNumber">
                                            <AccountNumber>
                                                <xsl:value-of select="AccountNumber"/>
                                            </AccountNumber>
                                        </xsl:if>
                                        <xsl:if test="ParentAccountName">
                                            <ParentAccountName>
                                                <xsl:value-of select="ParentAccountName"/>
                                            </ParentAccountName>
                                        </xsl:if>
                                        <xsl:if test="WriteOffAmount">
                                            <WriteOffAmount>
                                                <xsl:value-of select="WriteOffAmount"/>
                                            </WriteOffAmount>
                                        </xsl:if>
                                        <xsl:if test="Oldcontract">
                                            <Oldcontract>
                                                <xsl:value-of select="Oldcontract"/>
                                            </Oldcontract>
                                        </xsl:if>
                                        <xsl:if test="PortIn">
                                            <PortIn>
                                                <xsl:value-of select="PortIn"/>
                                            </PortIn>
                                        </xsl:if>
                                        <xsl:if test="PortOut">
                                            <PortOut>
                                                <xsl:value-of select="PortOut"/>
                                            </PortOut>
                                        </xsl:if>
                                        <xsl:if test="ContractStartDate">
                                            <ContractStartDate>
                                                <xsl:value-of select="ContractStartDate"/>
                                            </ContractStartDate>
                                        </xsl:if>
                                        <xsl:if test="ContractPeriod">
                                            <ContractPeriod>
                                                <xsl:value-of select="ContractPeriod"/>
                                            </ContractPeriod>
                                        </xsl:if>
                                        <xsl:if test="ContractEndDate">
                                            <ContractEndDate>
                                                <xsl:value-of select="ContractEndDate"/>
                                            </ContractEndDate>
                                        </xsl:if>
                                        <xsl:if test="Sector">
                                            <Sector>
                                                <xsl:value-of select="Sector"/>
                                            </Sector>
                                        </xsl:if>
                                        <xsl:if test="SubAccounts">
                                            <SubAccounts>
                                                <xsl:value-of select="SubAccounts"/>
                                            </SubAccounts>
                                        </xsl:if>
                                    </ZainCustomerAccount>
                                </xsl:for-each>
                            </ns3:ZainCustomerAccountList>
                            <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers"/>
                            <xsl:copy-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainBusinessIdentifier"/>
                        </pfx5:CreateCustomerReq>
                    </Customer>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:group name="CreateBA&amp;PP">
            <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
            <pd:resourceType>ae.process.group</pd:resourceType>
            <pd:x>1268</pd:x>
            <pd:y>44</pd:y>
            <pd:width>376</pd:width>
            <pd:height>167</pd:height>
            <pd:collapsedWidth>57</pd:collapsedWidth>
            <pd:collapsedHeight>70</pd:collapsedHeight>
            <pd:groupVariables/>
            <pd:joinToggle>inherit</pd:joinToggle>
            <config>
                <pd:groupType>simpleGroup</pd:groupType>
                <pd:serializable>false</pd:serializable>
            </config>
            <pd:inputBindings/>
            <pd:expanded>true</pd:expanded>
            <pd:transition>
                <pd:from>start</pd:from>
                <pd:to>MapBA&amp;PP</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>Call_CreateSecondaryBA&amp;PP</pd:from>
                <pd:to>end</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:transition>
                <pd:from>MapBA&amp;PP</pd:from>
                <pd:to>Call_CreateSecondaryBA&amp;PP</pd:to>
                <pd:lineType>Default</pd:lineType>
                <pd:lineColor>-16777216</pd:lineColor>
                <pd:conditionType>always</pd:conditionType>
            </pd:transition>
            <pd:activity name="MapBA&amp;PP">
                <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
                <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
                <pd:x>1377</pd:x>
                <pd:y>128</pd:y>
                <config>
                    <element ref="pfx6:CreateBillProcessRequest"/>
                </config>
                <pd:inputBindings>
                    <pfx6:CreateBillProcessRequest>
                        <xsl:copy-of select="$MapSecondaryBAs/root/Customer/pfx5:CreateCustomerReq/ns3:BusinessMessageHeader"/>
                        <ns3:ZainCustomerAccountList>
                            <xsl:for-each select="$MapSecondaryBAs/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount">
                                <ZainCustomerAccount>
                                    <xsl:if test="ID">
                                        <ID>
                                            <xsl:value-of select="ID"/>
                                        </ID>
                                    </xsl:if>
                                    <xsl:for-each select="ZainCustomerPayment">
                                        <ZainCustomerPayment>
                                            <xsl:if test="ID">
                                                <ID>
                                                    <xsl:value-of select="ID"/>
                                                </ID>
                                            </xsl:if>
                                            <xsl:if test="paymentDate">
                                                <paymentDate>
                                                    <xsl:value-of select="paymentDate"/>
                                                </paymentDate>
                                            </xsl:if>
                                            <xsl:if test="paymentReceiptDate">
                                                <paymentReceiptDate>
                                                    <xsl:value-of select="paymentReceiptDate"/>
                                                </paymentReceiptDate>
                                            </xsl:if>
                                            <xsl:if test="paymentType">
                                                <paymentType>
                                                    <xsl:value-of select="paymentType"/>
                                                </paymentType>
                                            </xsl:if>
                                            <xsl:if test="ID_Public">
                                                <ID_Public>
                                                    <xsl:value-of select="ID_Public"/>
                                                </ID_Public>
                                            </xsl:if>
                                            <xsl:if test="cardtype">
                                                <cardtype>
                                                    <xsl:value-of select="cardtype"/>
                                                </cardtype>
                                            </xsl:if>
                                            <xsl:if test="csConvratetypePaymentPub">
                                                <csConvratetypePaymentPub>
                                                    <xsl:value-of select="csConvratetypePaymentPub"/>
                                                </csConvratetypePaymentPub>
                                            </xsl:if>
                                            <xsl:if test="csConvratetypeRefund">
                                                <csConvratetypeRefund>
                                                    <xsl:value-of select="csConvratetypeRefund"/>
                                                </csConvratetypeRefund>
                                            </xsl:if>
                                            <xsl:if test="csConvratetypeRefundPub">
                                                <csConvratetypeRefundPub>
                                                    <xsl:value-of select="csConvratetypeRefundPub"/>
                                                </csConvratetypeRefundPub>
                                            </xsl:if>
                                            <xsl:if test="conversionRate">
                                                <conversionRate>
                                                    <xsl:value-of select="conversionRate"/>
                                                </conversionRate>
                                            </xsl:if>
                                            <xsl:for-each select="Money">
                                                <Money>
                                                    <xsl:if test="amount">
                                                        <amount>
                                                            <xsl:value-of select="amount"/>
                                                        </amount>
                                                    </xsl:if>
                                                    <xsl:if test="units">
                                                        <units>
                                                            <xsl:value-of select="units"/>
                                                        </units>
                                                    </xsl:if>
                                                </Money>
                                            </xsl:for-each>
                                            <xsl:for-each select="PaymentMethod">
                                                <PaymentMethod>
                                                    <xsl:if test="description">
                                                        <description>
                                                            <xsl:value-of select="description"/>
                                                        </description>
                                                    </xsl:if>
                                                    <xsl:if test="ID">
                                                        <ID>
                                                            <xsl:value-of select="ID"/>
                                                        </ID>
                                                    </xsl:if>
                                                    <xsl:if test="name">
                                                        <name>
                                                            <xsl:value-of select="name"/>
                                                        </name>
                                                    </xsl:if>
                                                    <xsl:if test="paymentMethodType">
                                                        <paymentMethodType>
                                                            <xsl:value-of select="paymentMethodType"/>
                                                        </paymentMethodType>
                                                    </xsl:if>
                                                    <xsl:for-each select="CreditCardPM">
                                                        <CreditCardPM>
                                                            <xsl:if test="creditCardNumber">
                                                                <creditCardNumber>
                                                                    <xsl:value-of select="creditCardNumber"/>
                                                                </creditCardNumber>
                                                            </xsl:if>
                                                            <xsl:if test="CreditCardCompanyName">
                                                                <CreditCardCompanyName>
                                                                    <xsl:value-of select="CreditCardCompanyName"/>
                                                                </CreditCardCompanyName>
                                                            </xsl:if>
                                                            <xsl:if test="expirationDate">
                                                                <expirationDate>
                                                                    <xsl:value-of select="expirationDate"/>
                                                                </expirationDate>
                                                            </xsl:if>
                                                            <xsl:if test="ExpirationMonth">
                                                                <ExpirationMonth>
                                                                    <xsl:value-of select="ExpirationMonth"/>
                                                                </ExpirationMonth>
                                                            </xsl:if>
                                                            <xsl:if test="ExpirationYear">
                                                                <ExpirationYear>
                                                                    <xsl:value-of select="ExpirationYear"/>
                                                                </ExpirationYear>
                                                            </xsl:if>
                                                            <xsl:if test="nameOnCard">
                                                                <nameOnCard>
                                                                    <xsl:value-of select="nameOnCard"/>
                                                                </nameOnCard>
                                                            </xsl:if>
                                                            <xsl:if test="authorizationCode">
                                                                <authorizationCode>
                                                                    <xsl:value-of select="authorizationCode"/>
                                                                </authorizationCode>
                                                            </xsl:if>
                                                            <xsl:if test="creditCardType">
                                                                <creditCardType>
                                                                    <xsl:value-of select="creditCardType"/>
                                                                </creditCardType>
                                                            </xsl:if>
                                                        </CreditCardPM>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="CashPM">
                                                        <CashPM>
                                                            <xsl:if test="cashierInfo">
                                                                <cashierInfo>
                                                                    <xsl:value-of select="cashierInfo"/>
                                                                </cashierInfo>
                                                            </xsl:if>
                                                        </CashPM>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ZainBankPM">
                                                        <ZainBankPM>
                                                            <xsl:if test="accountNumber">
                                                                <accountNumber>
                                                                    <xsl:value-of select="accountNumber"/>
                                                                </accountNumber>
                                                            </xsl:if>
                                                            <xsl:if test="accountowner">
                                                                <accountowner>
                                                                    <xsl:value-of select="accountowner"/>
                                                                </accountowner>
                                                            </xsl:if>
                                                            <xsl:if test="BankCode">
                                                                <BankCode>
                                                                    <xsl:value-of select="BankCode"/>
                                                                </BankCode>
                                                            </xsl:if>
                                                            <xsl:if test="BankCountry">
                                                                <BankCountry>
                                                                    <xsl:value-of select="BankCountry"/>
                                                                </BankCountry>
                                                            </xsl:if>
                                                            <xsl:if test="BankName">
                                                                <BankName>
                                                                    <xsl:value-of select="BankName"/>
                                                                </BankName>
                                                            </xsl:if>
                                                            <xsl:if test="BankState">
                                                                <BankState>
                                                                    <xsl:value-of select="BankState"/>
                                                                </BankState>
                                                            </xsl:if>
                                                            <xsl:if test="BankStreetName">
                                                                <BankStreetName>
                                                                    <xsl:value-of select="BankStreetName"/>
                                                                </BankStreetName>
                                                            </xsl:if>
                                                            <xsl:if test="BankStreetNumber">
                                                                <BankStreetNumber>
                                                                    <xsl:value-of select="BankStreetNumber"/>
                                                                </BankStreetNumber>
                                                            </xsl:if>
                                                            <xsl:if test="BankZipCode">
                                                                <BankZipCode>
                                                                    <xsl:value-of select="BankZipCode"/>
                                                                </BankZipCode>
                                                            </xsl:if>
                                                            <xsl:if test="CityOfBank">
                                                                <CityOfBank>
                                                                    <xsl:value-of select="CityOfBank"/>
                                                                </CityOfBank>
                                                            </xsl:if>
                                                            <xsl:if test="lso3Code">
                                                                <lso3Code>
                                                                    <xsl:value-of select="lso3Code"/>
                                                                </lso3Code>
                                                            </xsl:if>
                                                            <xsl:if test="swiftCode">
                                                                <swiftCode>
                                                                    <xsl:value-of select="swiftCode"/>
                                                                </swiftCode>
                                                            </xsl:if>
                                                            <xsl:if test="verificationCode">
                                                                <verificationCode>
                                                                    <xsl:value-of select="verificationCode"/>
                                                                </verificationCode>
                                                            </xsl:if>
                                                            <xsl:if test="BankBranchName">
                                                                <BankBranchName>
                                                                    <xsl:value-of select="BankBranchName"/>
                                                                </BankBranchName>
                                                            </xsl:if>
                                                        </ZainBankPM>
                                                    </xsl:for-each>
                                                    <xsl:if test="PreferredPaymentMode">
                                                        <PreferredPaymentMode>
                                                            <xsl:value-of select="PreferredPaymentMode"/>
                                                        </PreferredPaymentMode>
                                                    </xsl:if>
                                                    <xsl:for-each select="ns3:ChequeDetails">
                                                        <ns3:ChequeDetails>
                                                            <ns3:chequeNumber>
                                                                <xsl:value-of select="ns3:chequeNumber"/>
                                                            </ns3:chequeNumber>
                                                            <xsl:if test="ns3:bankName">
                                                                <ns3:bankName>
                                                                    <xsl:value-of select="ns3:bankName"/>
                                                                </ns3:bankName>
                                                            </xsl:if>
                                                        </ns3:ChequeDetails>
                                                    </xsl:for-each>
                                                </PaymentMethod>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns3:CustomerBill">
                                                <ns3:CustomerBill>
                                                    <xsl:if test="billDate">
                                                        <billDate>
                                                            <xsl:value-of select="billDate"/>
                                                        </billDate>
                                                    </xsl:if>
                                                    <xsl:if test="billNo">
                                                        <billNo>
                                                            <xsl:value-of select="billNo"/>
                                                        </billNo>
                                                    </xsl:if>
                                                    <xsl:for-each select="ns3:billId">
                                                        <ns3:billId>
                                                            <xsl:if test="ns3:systemName">
                                                                <ns3:systemName>
                                                                    <xsl:value-of select="ns3:systemName"/>
                                                                </ns3:systemName>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:value">
                                                                <ns3:value>
                                                                    <xsl:value-of select="ns3:value"/>
                                                                </ns3:value>
                                                            </xsl:if>
                                                        </ns3:billId>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ns3:addressId">
                                                        <ns3:addressId>
                                                            <xsl:if test="ns3:systemName">
                                                                <ns3:systemName>
                                                                    <xsl:value-of select="ns3:systemName"/>
                                                                </ns3:systemName>
                                                            </xsl:if>
                                                            <xsl:if test="ns3:value">
                                                                <ns3:value>
                                                                    <xsl:value-of select="ns3:value"/>
                                                                </ns3:value>
                                                            </xsl:if>
                                                        </ns3:addressId>
                                                    </xsl:for-each>
                                                    <xsl:if test="Format">
                                                        <Format>
                                                            <xsl:value-of select="Format"/>
                                                        </Format>
                                                    </xsl:if>
                                                    <xsl:if test="chargeDate">
                                                        <chargeDate>
                                                            <xsl:value-of select="chargeDate"/>
                                                        </chargeDate>
                                                    </xsl:if>
                                                    <xsl:if test="creditDate">
                                                        <creditDate>
                                                            <xsl:value-of select="creditDate"/>
                                                        </creditDate>
                                                    </xsl:if>
                                                    <xsl:if test="creditLimit">
                                                        <creditLimit>
                                                            <xsl:value-of select="creditLimit"/>
                                                        </creditLimit>
                                                    </xsl:if>
                                                    <xsl:if test="mailingDate">
                                                        <mailingDate>
                                                            <xsl:value-of select="mailingDate"/>
                                                        </mailingDate>
                                                    </xsl:if>
                                                    <xsl:if test="paymentDueDate">
                                                        <paymentDueDate>
                                                            <xsl:value-of select="paymentDueDate"/>
                                                        </paymentDueDate>
                                                    </xsl:if>
                                                    <xsl:if test="relationshipType">
                                                        <relationshipType>
                                                            <xsl:value-of select="relationshipType"/>
                                                        </relationshipType>
                                                    </xsl:if>
                                                    <xsl:for-each select="CustomerBillingCycle">
                                                        <CustomerBillingCycle>
                                                            <xsl:if test="billCyclechange">
                                                                <billCyclechange>
                                                                    <xsl:value-of select="billCyclechange"/>
                                                                </billCyclechange>
                                                            </xsl:if>
                                                            <xsl:if test="billSource">
                                                                <billSource>
                                                                    <xsl:value-of select="billSource"/>
                                                                </billSource>
                                                            </xsl:if>
                                                            <xsl:if test="billFrequency">
                                                                <billFrequency>
                                                                    <xsl:value-of select="billFrequency"/>
                                                                </billFrequency>
                                                            </xsl:if>
                                                            <xsl:if test="billingDate">
                                                                <billingDate>
                                                                    <xsl:value-of select="billingDate"/>
                                                                </billingDate>
                                                            </xsl:if>
                                                            <xsl:if test="billCycle">
                                                                <billCycle>
                                                                    <xsl:value-of select="billCycle"/>
                                                                </billCycle>
                                                            </xsl:if>
                                                            <xsl:if test="chargeDate">
                                                                <chargeDate>
                                                                    <xsl:value-of select="chargeDate"/>
                                                                </chargeDate>
                                                            </xsl:if>
                                                            <xsl:if test="Currency">
                                                                <Currency>
                                                                    <xsl:value-of select="Currency"/>
                                                                </Currency>
                                                            </xsl:if>
                                                            <xsl:if test="ExchangeRate">
                                                                <ExchangeRate>
                                                                    <xsl:value-of select="ExchangeRate"/>
                                                                </ExchangeRate>
                                                            </xsl:if>
                                                            <xsl:if test="creditDate">
                                                                <creditDate>
                                                                    <xsl:value-of select="creditDate"/>
                                                                </creditDate>
                                                            </xsl:if>
                                                            <xsl:if test="mailingDate">
                                                                <mailingDate>
                                                                    <xsl:value-of select="mailingDate"/>
                                                                </mailingDate>
                                                            </xsl:if>
                                                            <xsl:if test="paymentDueDate">
                                                                <paymentDueDate>
                                                                    <xsl:value-of select="paymentDueDate"/>
                                                                </paymentDueDate>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByAccountClose">
                                                                <triggeredByAccountClose>
                                                                    <xsl:value-of select="triggeredByAccountClose"/>
                                                                </triggeredByAccountClose>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByCustomer">
                                                                <triggeredByCustomer>
                                                                    <xsl:value-of select="triggeredByCustomer"/>
                                                                </triggeredByCustomer>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByProvider">
                                                                <triggeredByProvider>
                                                                    <xsl:value-of select="triggeredByProvider"/>
                                                                </triggeredByProvider>
                                                            </xsl:if>
                                                            <xsl:if test="triggeredByScheduler">
                                                                <triggeredByScheduler>
                                                                    <xsl:value-of select="triggeredByScheduler"/>
                                                                </triggeredByScheduler>
                                                            </xsl:if>
                                                        </CustomerBillingCycle>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="CustomerBillFormat">
                                                        <CustomerBillFormat>
                                                            <xsl:if test="description">
                                                                <description>
                                                                    <xsl:value-of select="description"/>
                                                                </description>
                                                            </xsl:if>
                                                            <xsl:if test="name">
                                                                <name>
                                                                    <xsl:value-of select="name"/>
                                                                </name>
                                                            </xsl:if>
                                                            <xsl:if test="hasCallDetails">
                                                                <hasCallDetails>
                                                                    <xsl:value-of select="hasCallDetails"/>
                                                                </hasCallDetails>
                                                            </xsl:if>
                                                            <xsl:for-each select="CustomerBillPresentationMedia">
                                                                <CustomerBillPresentationMedia>
                                                                    <xsl:if test="description">
                                                                        <description>
                                                                            <xsl:value-of select="description"/>
                                                                        </description>
                                                                    </xsl:if>
                                                                    <xsl:if test="name">
                                                                        <name>
                                                                            <xsl:value-of select="name"/>
                                                                        </name>
                                                                    </xsl:if>
                                                                </CustomerBillPresentationMedia>
                                                            </xsl:for-each>
                                                        </CustomerBillFormat>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="Money">
                                                        <Money>
                                                            <xsl:if test="amount">
                                                                <amount>
                                                                    <xsl:value-of select="amount"/>
                                                                </amount>
                                                            </xsl:if>
                                                            <xsl:if test="units">
                                                                <units>
                                                                    <xsl:value-of select="units"/>
                                                                </units>
                                                            </xsl:if>
                                                        </Money>
                                                    </xsl:for-each>
                                                    <xsl:for-each select="ns3:ZainContact">
                                                        <ns3:ZainContact>
                                                            <xsl:for-each select="TimePeriod">
                                                                <TimePeriod>
                                                                    <xsl:if test="endDateTime">
                                                                        <endDateTime>
                                                                            <xsl:value-of select="endDateTime"/>
                                                                        </endDateTime>
                                                                    </xsl:if>
                                                                    <xsl:if test="startDateTime">
                                                                        <startDateTime>
                                                                            <xsl:value-of select="startDateTime"/>
                                                                        </startDateTime>
                                                                    </xsl:if>
                                                                </TimePeriod>
                                                            </xsl:for-each>
                                                            <xsl:if test="eMailAddress">
                                                                <eMailAddress>
                                                                    <xsl:value-of select="eMailAddress"/>
                                                                </eMailAddress>
                                                            </xsl:if>
                                                            <xsl:if test="faxContact">
                                                                <faxContact>
                                                                    <xsl:value-of select="faxContact"/>
                                                                </faxContact>
                                                            </xsl:if>
                                                            <xsl:if test="homeContact">
                                                                <homeContact>
                                                                    <xsl:value-of select="homeContact"/>
                                                                </homeContact>
                                                            </xsl:if>
                                                            <xsl:if test="otherContact">
                                                                <otherContact>
                                                                    <xsl:value-of select="otherContact"/>
                                                                </otherContact>
                                                            </xsl:if>
                                                            <xsl:if test="workContact">
                                                                <workContact>
                                                                    <xsl:value-of select="workContact"/>
                                                                </workContact>
                                                            </xsl:if>
                                                            <xsl:if test="mobileNumber">
                                                                <mobileNumber>
                                                                    <xsl:value-of select="mobileNumber"/>
                                                                </mobileNumber>
                                                            </xsl:if>
                                                            <xsl:if test="SMSNotificationNumForAccount">
                                                                <SMSNotificationNumForAccount>
                                                                    <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                                </SMSNotificationNumForAccount>
                                                            </xsl:if>
                                                            <xsl:if test="ContactPersonName">
                                                                <ContactPersonName>
                                                                    <xsl:value-of select="ContactPersonName"/>
                                                                </ContactPersonName>
                                                            </xsl:if>
                                                            <xsl:if test="Notificationnumber">
                                                                <Notificationnumber>
                                                                    <xsl:value-of select="Notificationnumber"/>
                                                                </Notificationnumber>
                                                            </xsl:if>
                                                            <xsl:if test="AuthorizedPerson">
                                                                <AuthorizedPerson>
                                                                    <xsl:value-of select="AuthorizedPerson"/>
                                                                </AuthorizedPerson>
                                                            </xsl:if>
                                                            <xsl:if test="ModeOfCommunication">
                                                                <ModeOfCommunication>
                                                                    <xsl:value-of select="ModeOfCommunication"/>
                                                                </ModeOfCommunication>
                                                            </xsl:if>
                                                            <xsl:if test="PrefferredCommunication">
                                                                <PrefferredCommunication>
                                                                    <xsl:value-of select="PrefferredCommunication"/>
                                                                </PrefferredCommunication>
                                                            </xsl:if>
                                                            <xsl:if test="Preferredlanguage">
                                                                <Preferredlanguage>
                                                                    <xsl:value-of select="Preferredlanguage"/>
                                                                </Preferredlanguage>
                                                            </xsl:if>
                                                        </ns3:ZainContact>
                                                    </xsl:for-each>
                                                    <xsl:if test="numberOfCopies">
                                                        <numberOfCopies>
                                                            <xsl:value-of select="numberOfCopies"/>
                                                        </numberOfCopies>
                                                    </xsl:if>
                                                    <xsl:if test="nameToPrint">
                                                        <nameToPrint>
                                                            <xsl:value-of select="nameToPrint"/>
                                                        </nameToPrint>
                                                    </xsl:if>
                                                    <xsl:if test="RequestType">
                                                        <RequestType>
                                                            <xsl:value-of select="RequestType"/>
                                                        </RequestType>
                                                    </xsl:if>
                                                    <xsl:if test="RequestsubType">
                                                        <RequestsubType>
                                                            <xsl:value-of select="RequestsubType"/>
                                                        </RequestsubType>
                                                    </xsl:if>
                                                    <xsl:if test="ContractTypeId">
                                                        <ContractTypeId>
                                                            <xsl:value-of select="ContractTypeId"/>
                                                        </ContractTypeId>
                                                    </xsl:if>
                                                    <xsl:if test="Information">
                                                        <Information>
                                                            <xsl:value-of select="Information"/>
                                                        </Information>
                                                    </xsl:if>
                                                    <xsl:if test="simulation">
                                                        <simulation>
                                                            <xsl:value-of select="simulation"/>
                                                        </simulation>
                                                    </xsl:if>
                                                    <xsl:if test="RefernceDate">
                                                        <RefernceDate>
                                                            <xsl:value-of select="RefernceDate"/>
                                                        </RefernceDate>
                                                    </xsl:if>
                                                    <xsl:if test="PostingPeriod">
                                                        <PostingPeriod>
                                                            <xsl:value-of select="PostingPeriod"/>
                                                        </PostingPeriod>
                                                    </xsl:if>
                                                    <xsl:if test="acknowledgment">
                                                        <acknowledgment>
                                                            <xsl:value-of select="acknowledgment"/>
                                                        </acknowledgment>
                                                    </xsl:if>
                                                    <xsl:if test="CollectInd">
                                                        <CollectInd>
                                                            <xsl:value-of select="CollectInd"/>
                                                        </CollectInd>
                                                    </xsl:if>
                                                    <xsl:if test="Ignorebuind">
                                                        <Ignorebuind>
                                                            <xsl:value-of select="Ignorebuind"/>
                                                        </Ignorebuind>
                                                    </xsl:if>
                                                    <xsl:if test="allbusinesunits">
                                                        <allbusinesunits>
                                                            <xsl:value-of select="allbusinesunits"/>
                                                        </allbusinesunits>
                                                    </xsl:if>
                                                    <xsl:if test="disableinvoiceforwarding">
                                                        <disableinvoiceforwarding>
                                                            <xsl:value-of select="disableinvoiceforwarding"/>
                                                        </disableinvoiceforwarding>
                                                    </xsl:if>
                                                </ns3:CustomerBill>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns3:ZainBankPM">
                                                <ns3:ZainBankPM>
                                                    <xsl:if test="accountNumber">
                                                        <accountNumber>
                                                            <xsl:value-of select="accountNumber"/>
                                                        </accountNumber>
                                                    </xsl:if>
                                                    <xsl:if test="accountowner">
                                                        <accountowner>
                                                            <xsl:value-of select="accountowner"/>
                                                        </accountowner>
                                                    </xsl:if>
                                                    <xsl:if test="BankCode">
                                                        <BankCode>
                                                            <xsl:value-of select="BankCode"/>
                                                        </BankCode>
                                                    </xsl:if>
                                                    <xsl:if test="BankCountry">
                                                        <BankCountry>
                                                            <xsl:value-of select="BankCountry"/>
                                                        </BankCountry>
                                                    </xsl:if>
                                                    <xsl:if test="BankName">
                                                        <BankName>
                                                            <xsl:value-of select="BankName"/>
                                                        </BankName>
                                                    </xsl:if>
                                                    <xsl:if test="BankState">
                                                        <BankState>
                                                            <xsl:value-of select="BankState"/>
                                                        </BankState>
                                                    </xsl:if>
                                                    <xsl:if test="BankStreetName">
                                                        <BankStreetName>
                                                            <xsl:value-of select="BankStreetName"/>
                                                        </BankStreetName>
                                                    </xsl:if>
                                                    <xsl:if test="BankStreetNumber">
                                                        <BankStreetNumber>
                                                            <xsl:value-of select="BankStreetNumber"/>
                                                        </BankStreetNumber>
                                                    </xsl:if>
                                                    <xsl:if test="BankZipCode">
                                                        <BankZipCode>
                                                            <xsl:value-of select="BankZipCode"/>
                                                        </BankZipCode>
                                                    </xsl:if>
                                                    <xsl:if test="CityOfBank">
                                                        <CityOfBank>
                                                            <xsl:value-of select="CityOfBank"/>
                                                        </CityOfBank>
                                                    </xsl:if>
                                                    <xsl:if test="lso3Code">
                                                        <lso3Code>
                                                            <xsl:value-of select="lso3Code"/>
                                                        </lso3Code>
                                                    </xsl:if>
                                                    <xsl:if test="swiftCode">
                                                        <swiftCode>
                                                            <xsl:value-of select="swiftCode"/>
                                                        </swiftCode>
                                                    </xsl:if>
                                                    <xsl:if test="verificationCode">
                                                        <verificationCode>
                                                            <xsl:value-of select="verificationCode"/>
                                                        </verificationCode>
                                                    </xsl:if>
                                                    <xsl:if test="BankBranchName">
                                                        <BankBranchName>
                                                            <xsl:value-of select="BankBranchName"/>
                                                        </BankBranchName>
                                                    </xsl:if>
                                                </ns3:ZainBankPM>
                                            </xsl:for-each>
                                            <xsl:if test="isPrimaryBillingAccount">
                                                <isPrimaryBillingAccount>
                                                    <xsl:value-of select="isPrimaryBillingAccount"/>
                                                </isPrimaryBillingAccount>
                                            </xsl:if>
                                            <xsl:if test="isActiveBillingAccount">
                                                <isActiveBillingAccount>
                                                    <xsl:value-of select="isActiveBillingAccount"/>
                                                </isActiveBillingAccount>
                                            </xsl:if>
                                            <xsl:for-each select="BillingAddressId">
                                                <BillingAddressId>
                                                    <xsl:if test="ns3:systemName">
                                                        <ns3:systemName>
                                                            <xsl:value-of select="ns3:systemName"/>
                                                        </ns3:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="ns3:value">
                                                        <ns3:value>
                                                            <xsl:value-of select="ns3:value"/>
                                                        </ns3:value>
                                                    </xsl:if>
                                                </BillingAddressId>
                                            </xsl:for-each>
                                            <xsl:if test="ns3:paymentReferenceNumber">
                                                <ns3:paymentReferenceNumber>
                                                    <xsl:value-of select="ns3:paymentReferenceNumber"/>
                                                </ns3:paymentReferenceNumber>
                                            </xsl:if>
                                            <xsl:if test="PaymentChannel">
                                                <PaymentChannel>
                                                    <xsl:value-of select="PaymentChannel"/>
                                                </PaymentChannel>
                                            </xsl:if>
                                            <xsl:if test="Currency">
                                                <Currency>
                                                    <xsl:value-of select="Currency"/>
                                                </Currency>
                                            </xsl:if>
                                            <xsl:if test="IncomeRange">
                                                <IncomeRange>
                                                    <xsl:value-of select="IncomeRange"/>
                                                </IncomeRange>
                                            </xsl:if>
                                            <xsl:if test="DefaultCreditLimit">
                                                <DefaultCreditLimit>
                                                    <xsl:value-of select="DefaultCreditLimit"/>
                                                </DefaultCreditLimit>
                                            </xsl:if>
                                            <xsl:if test="CutomerCreditLimit">
                                                <CutomerCreditLimit>
                                                    <xsl:value-of select="CutomerCreditLimit"/>
                                                </CutomerCreditLimit>
                                            </xsl:if>
                                            <xsl:if test="CreditNote">
                                                <CreditNote>
                                                    <xsl:value-of select="CreditNote"/>
                                                </CreditNote>
                                            </xsl:if>
                                            <xsl:if test="CurrentPricePlan">
                                                <CurrentPricePlan>
                                                    <xsl:value-of select="CurrentPricePlan"/>
                                                </CurrentPricePlan>
                                            </xsl:if>
                                        </ZainCustomerPayment>
                                    </xsl:for-each>
                                    <xsl:for-each select="CustomerBill">
                                        <CustomerBill>
                                            <xsl:if test="ns3:billId/ns3:value">
                                                <billNo>
                                                    <xsl:value-of select="ns3:billId/ns3:value"/>
                                                </billNo>
                                            </xsl:if>
                                            <CustomerBillFormat>
                                                <CustomerBillPresentationMedia>
                                                    <xsl:if test="Format">
                                                        <name>
                                                            <xsl:value-of select="Format"/>
                                                        </name>
                                                    </xsl:if>
                                                </CustomerBillPresentationMedia>
                                            </CustomerBillFormat>
                                            <xsl:if test="RequestsubType">
                                                <RequestType>
                                                    <xsl:value-of select="RequestsubType"/>
                                                </RequestType>
                                            </xsl:if>
                                        </CustomerBill>
                                    </xsl:for-each>
                                </ZainCustomerAccount>
                            </xsl:for-each>
                        </ns3:ZainCustomerAccountList>
                    </pfx6:CreateBillProcessRequest>
                </pd:inputBindings>
            </pd:activity>
            <pd:activity name="Call_CreateSecondaryBA&amp;PP">
                <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
                <pd:resourceType>ae.process.subprocess</pd:resourceType>
                <pd:x>1524</pd:x>
                <pd:y>126</pd:y>
                <config>
                    <processName>/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/HelperProcess/Call_CreateSecondaryBA&amp;PP.process</processName>
                </config>
                <pd:inputBindings>
                    <root>
                        <xsl:if test="$Start/root/TrackingId">
                            <TrackingId>
                                <xsl:value-of select="$Start/root/TrackingId"/>
                            </TrackingId>
                        </xsl:if>
                        <xsl:if test="$Start/root/StartTimeStamp">
                            <StartTimeStamp>
                                <xsl:value-of select="$Start/root/StartTimeStamp"/>
                            </StartTimeStamp>
                        </xsl:if>
                        <xsl:copy-of select="$MapBAPP/pfx6:CreateBillProcessRequest"/>
                        <customerindex>
                            <xsl:value-of select="$customerIndex"/>
                        </customerindex>
                    </root>
                </pd:inputBindings>
            </pd:activity>
        </pd:group>
        <pd:activity name="Check">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1070</pd:x>
            <pd:y>308</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="GetErroredCustID">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>810</pd:x>
            <pd:y>341</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/CustomerLists.jobsharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="MapCRMResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1511</pd:x>
            <pd:y>320</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx8:ListOfCbio2CustomerCreationResIo"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx8:ListOfCbio2CustomerCreationResIo>
                        <xsl:variable name="varPrimaryCustErrCode" select="tib:trim(substring-after($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode, &quot;CMS.&quot;))"/>
                        <xsl:choose>
                            <xsl:when test="(not(exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)) &#xA; and $Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode='0')&#xA;or&#xA;(not(exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode))&#xA;and $CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/csPrepayment!=&quot;Y&quot;)">
                                <pfx8:Account>
                                    <xsl:if test="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId">
                                        <pfx8:Id>
                                            <xsl:value-of select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                                        </pfx8:Id>
                                    </xsl:if>
                                    <xsl:if test="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/ns3:customerId[ns3:systemName= 'BSCS-Id']/ns3:value">
                                        <pfx8:CBiO2BSCSId>
                                            <xsl:value-of select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/ns3:customerId[ns3:systemName= 'BSCS-Id']/ns3:value"/>
                                        </pfx8:CBiO2BSCSId>
                                    </xsl:if>
                                    <xsl:if test="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers/ns3:accountId/ns3:value">
                                        <pfx8:CBiO2BSCSHierarchyId>
                                            <xsl:value-of select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers/ns3:accountId/ns3:value"/>
                                        </pfx8:CBiO2BSCSHierarchyId>
                                    </xsl:if>
                                    <pfx8:Status>
                                        <xsl:value-of select="&quot;Success&quot;"/>
                                    </pfx8:Status>
                                    <pfx8:ListOfCutAddress>
                                        <xsl:for-each select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:addressId">
                                            <pfx8:CutAddress>
                                                <xsl:if test="ns3:systemName">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ns3:systemName"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <xsl:if test="ns3:value">
                                                    <pfx8:CBiOBSCSId>
                                                        <xsl:value-of select="ns3:value"/>
                                                    </pfx8:CBiOBSCSId>
                                                </xsl:if>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Success&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:CutAddress>
                                        </xsl:for-each>
                                    </pfx8:ListOfCutAddress>
                                    <pfx8:ListOfComInvoiceProfile>
                                        <xsl:for-each select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill[RequestType=&quot;Primary Account&quot;]">
                                            <pfx8:ComInvoiceProfile>
                                                <xsl:if test="ns3:billId/ns3:value">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ns3:billId/ns3:value"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <xsl:if test="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/billingAccountID[ns3:systemName= 'BSCS-BillingAccountId']/ns3:value">
                                                    <pfx8:CBiO2BSCSId>
                                                        <xsl:value-of select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/billingAccountID[ns3:systemName= 'BSCS-BillingAccountId']/ns3:value"/>
                                                    </pfx8:CBiO2BSCSId>
                                                </xsl:if>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Success&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:ComInvoiceProfile>
                                        </xsl:for-each>
                                        <xsl:if test="exists($Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode)&#xA;and $Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode='0'">
                                            <xsl:for-each select="$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist">
                                                <pfx8:ComInvoiceProfile>
                                                    <xsl:if test="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='CRMBillID']/ns3:value">
                                                        <pfx8:Id>
                                                            <xsl:value-of select="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='CRMBillID']/ns3:value"/>
                                                        </pfx8:Id>
                                                    </xsl:if>
                                                    <xsl:if test="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value">
                                                        <pfx8:CBiO2BSCSId>
                                                            <xsl:value-of select="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value"/>
                                                        </pfx8:CBiO2BSCSId>
                                                    </xsl:if>
                                                    <pfx8:Status>
                                                        <xsl:value-of select="&quot;Success&quot;"/>
                                                    </pfx8:Status>
                                                </pfx8:ComInvoiceProfile>
                                            </xsl:for-each>
                                        </xsl:if>
                                    </pfx8:ListOfComInvoiceProfile>
                                    <pfx8:ListOfOrganizationPaymentProfile>
                                        <xsl:if test="exists($Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)&#xA;and string-length($Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)>0&#xA;and string-length($Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value)>0">
                                            <xsl:for-each select="$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist">
                                                <xsl:if test="exists(current()/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)&#xA;and string-length(current()/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)>0&#xA;and string-length(current()/ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value)>0">
                                                    <pfx8:OrganizationPaymentProfile>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value">
                                                            <pfx8:Id>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value"/>
                                                            </pfx8:Id>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value">
                                                            <pfx8:CBiO2BSCSId>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value"/>
                                                            </pfx8:CBiO2BSCSId>
                                                        </xsl:if>
                                                        <pfx8:Status>
                                                            <xsl:value-of select="&quot;Success&quot;"/>
                                                        </pfx8:Status>
                                                    </pfx8:OrganizationPaymentProfile>
                                                </xsl:if>
                                            </xsl:for-each>
                                        </xsl:if>
                                    </pfx8:ListOfOrganizationPaymentProfile>
                                </pfx8:Account>
                            </xsl:when>
                            <xsl:when test="not(exists($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)) &#xA; and $Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode!='0'">
                                <pfx8:Account>
                                    <xsl:if test="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId">
                                        <pfx8:Id>
                                            <xsl:value-of select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                                        </pfx8:Id>
                                    </xsl:if>
                                    <xsl:if test="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/ns3:customerId[ns3:systemName= 'BSCS-Id']/ns3:value">
                                        <pfx8:CBiO2BSCSId>
                                            <xsl:value-of select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/ns3:customerId[ns3:systemName= 'BSCS-Id']/ns3:value"/>
                                        </pfx8:CBiO2BSCSId>
                                    </xsl:if>
                                    <pfx8:Status>
                                        <xsl:value-of select="&quot;Success&quot;"/>
                                    </pfx8:Status>
                                    <pfx8:ListOfCutAddress>
                                        <xsl:for-each select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:addressId">
                                            <pfx8:CutAddress>
                                                <xsl:if test="ns3:systemName">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ns3:systemName"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <xsl:if test="ns3:value">
                                                    <pfx8:CBiOBSCSId>
                                                        <xsl:value-of select="ns3:value"/>
                                                    </pfx8:CBiOBSCSId>
                                                </xsl:if>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Success&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:CutAddress>
                                        </xsl:for-each>
                                    </pfx8:ListOfCutAddress>
                                    <pfx8:ListOfComInvoiceProfile>
                                        <xsl:for-each select="$MapCreateCorpCustomer/root/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill[RequestType=&quot;Primary Account&quot;]">
                                            <pfx8:ComInvoiceProfile>
                                                <xsl:if test="ns3:billId/ns3:value">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ns3:billId/ns3:value"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <xsl:if test="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/billingAccountID[ns3:systemName= 'BSCS-BillingAccountId']/ns3:value">
                                                    <pfx8:CBiO2BSCSId>
                                                        <xsl:value-of select="$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:ZainIdentifiers/billingAccountID[ns3:systemName= 'BSCS-BillingAccountId']/ns3:value"/>
                                                    </pfx8:CBiO2BSCSId>
                                                </xsl:if>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Success&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:ComInvoiceProfile>
                                        </xsl:for-each>
                                        <xsl:for-each select="$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist">
                                            <xsl:choose>
                                                <xsl:when test="string-length(ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value)>0&#xA;and string-length(ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value)>0">
                                                    <pfx8:ComInvoiceProfile>
                                                        <xsl:if test="ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value">
                                                            <pfx8:Id>
                                                                <xsl:value-of select="ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value"/>
                                                            </pfx8:Id>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value">
                                                            <pfx8:CBiO2BSCSId>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value"/>
                                                            </pfx8:CBiO2BSCSId>
                                                        </xsl:if>
                                                        <pfx8:Status>
                                                            <xsl:value-of select="&quot;Success&quot;"/>
                                                        </pfx8:Status>
                                                    </pfx8:ComInvoiceProfile>
                                                </xsl:when>
                                                <xsl:when test="((string-length(ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value)>0&#xA;and string-length(ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value)=0))&#xA;or&#xA;((string-length(ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value)=0&#xA;and string-length(ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value)=0))">
                                                    <pfx8:ComInvoiceProfile>
                                                        <xsl:if test="ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value">
                                                            <pfx8:Id>
                                                                <xsl:value-of select="ns3:ZainIdentifiers[ns3:billId/ns3:systemName='CRMBillID']/ns3:billId/ns3:value"/>
                                                            </pfx8:Id>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value">
                                                            <pfx8:CBiO2BSCSId>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:billId[ns3:systemName='BSCSBillID']/ns3:value"/>
                                                            </pfx8:CBiO2BSCSId>
                                                        </xsl:if>
                                                        <pfx8:ErrorOccuranceTime>
                                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                        </pfx8:ErrorOccuranceTime>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode">
                                                            <pfx8:ErrorSourceErrCode>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode"/>
                                                            </pfx8:ErrorSourceErrCode>
                                                        </xsl:if>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription">
                                                            <pfx8:ErrorSourceErrDesc>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription"/>
                                                            </pfx8:ErrorSourceErrDesc>
                                                        </xsl:if>
                                                        <pfx8:ErrorSourceSystem>
                                                            <xsl:value-of select="if(string-length(current()/ns3:Response/ResponseCode)>0)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else &quot;TIBCO&quot;"/>
                                                        </pfx8:ErrorSourceSystem>
                                                        <pfx8:ErrorType>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                        </pfx8:ErrorType>
                                                        <pfx8:ErrorUserErrCode>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                        </pfx8:ErrorUserErrCode>
                                                        <pfx8:ErrorUserErrDesc>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA;else&#xA; $_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                                        </pfx8:ErrorUserErrDesc>
                                                        <pfx8:Status>
                                                            <xsl:value-of select="&quot;Failed&quot;"/>
                                                        </pfx8:Status>
                                                    </pfx8:ComInvoiceProfile>
                                                </xsl:when>
                                            </xsl:choose>
                                        </xsl:for-each>
                                    </pfx8:ListOfComInvoiceProfile>
                                    <pfx8:ListOfOrganizationPaymentProfile>
                                        <xsl:for-each select="$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist">
                                            <xsl:choose>
                                                <xsl:when test="string-length(ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)>0&#xA;and string-length(ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value)>0">
                                                    <pfx8:OrganizationPaymentProfile>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value">
                                                            <pfx8:Id>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value"/>
                                                            </pfx8:Id>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value">
                                                            <pfx8:CBiO2BSCSId>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value"/>
                                                            </pfx8:CBiO2BSCSId>
                                                        </xsl:if>
                                                        <pfx8:ErrorOccuranceTime>
                                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                        </pfx8:ErrorOccuranceTime>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode">
                                                            <pfx8:ErrorSourceErrCode>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode"/>
                                                            </pfx8:ErrorSourceErrCode>
                                                        </xsl:if>
                                                        <pfx8:ErrorSourceSystem>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else&#xA;&quot;TIBCO&quot;"/>
                                                        </pfx8:ErrorSourceSystem>
                                                        <pfx8:ErrorType>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                        </pfx8:ErrorType>
                                                        <pfx8:ErrorUserErrDesc>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                        </pfx8:ErrorUserErrDesc>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription">
                                                            <pfx8:ErrorSourceErrDesc>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription"/>
                                                            </pfx8:ErrorSourceErrDesc>
                                                        </xsl:if>
                                                        <pfx8:ErrorUserErrCode>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                                        </pfx8:ErrorUserErrCode>
                                                        <pfx8:Status>
                                                            <xsl:value-of select="&quot;Partial Success&quot;"/>
                                                        </pfx8:Status>
                                                    </pfx8:OrganizationPaymentProfile>
                                                </xsl:when>
                                                <xsl:when test="string-length(ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value)>0&#xA;and string-length(ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value)=0">
                                                    <pfx8:OrganizationPaymentProfile>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value">
                                                            <pfx8:Id>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='CRM']/ns3:value"/>
                                                            </pfx8:Id>
                                                        </xsl:if>
                                                        <xsl:if test="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value">
                                                            <pfx8:CBiO2BSCSId>
                                                                <xsl:value-of select="ns3:ZainIdentifiers/ns3:paymentId[ns3:systemName='BSCS']/ns3:value"/>
                                                            </pfx8:CBiO2BSCSId>
                                                        </xsl:if>
                                                        <pfx8:ErrorOccuranceTime>
                                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                        </pfx8:ErrorOccuranceTime>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode">
                                                            <pfx8:ErrorSourceErrCode>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;current()/ns3:Response/ResponseCode"/>
                                                            </pfx8:ErrorSourceErrCode>
                                                        </xsl:if>
                                                        <pfx8:ErrorSourceSystem>
                                                            <xsl:value-of select="&quot;BSCS&quot;"/>
                                                        </pfx8:ErrorSourceSystem>
                                                        <pfx8:ErrorType>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                        </pfx8:ErrorType>
                                                        <pfx8:ErrorUserErrDesc>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                        </pfx8:ErrorUserErrDesc>
                                                        <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription">
                                                            <pfx8:ErrorSourceErrDesc>
                                                                <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateSecondaryBAPP/root/ns4:CreateBillProcessResponse/ns4:resultlist/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC&#xA;else&#xA;current()/ns3:Response/ResponseDescription"/>
                                                            </pfx8:ErrorSourceErrDesc>
                                                        </xsl:if>
                                                        <pfx8:ErrorUserErrCode>
                                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=current()/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                                        </pfx8:ErrorUserErrCode>
                                                        <pfx8:Status>
                                                            <xsl:value-of select="&quot;Failed&quot;"/>
                                                        </pfx8:Status>
                                                    </pfx8:OrganizationPaymentProfile>
                                                </xsl:when>
                                            </xsl:choose>
                                        </xsl:for-each>
                                    </pfx8:ListOfOrganizationPaymentProfile>
                                </pfx8:Account>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx8:Account>
                                    <xsl:if test="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId">
                                        <pfx8:Id>
                                            <xsl:value-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                                        </pfx8:Id>
                                    </xsl:if>
                                    <xsl:if test="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers/ns3:accountId/ns3:value">
                                        <pfx8:CBiO2BSCSHierarchyId>
                                            <xsl:value-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIdentifiers/ns3:accountId/ns3:value"/>
                                        </pfx8:CBiO2BSCSHierarchyId>
                                    </xsl:if>
                                    <pfx8:ErrorSourceSystem>
                                        <xsl:value-of select="if(string-length($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)>0)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else &quot;TIBCO&quot;"/>
                                    </pfx8:ErrorSourceSystem>
                                    <pfx8:ErrorOccuranceTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                    </pfx8:ErrorOccuranceTime>
                                    <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode">
                                        <pfx8:ErrorSourceErrCode>
                                            <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORCODE &#xA;else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode"/>
                                        </pfx8:ErrorSourceErrCode>
                                    </xsl:if>
                                    <pfx8:ErrorSourceErrDesc>
                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System &#xA;and ns5:SOURCEERRORCODE=$varPrimaryCustErrCode]/ns5:SOURCEERRORDESC&#xA; else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription"/>
                                    </pfx8:ErrorSourceErrDesc>
                                    <pfx8:ErrorType>
                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                    </pfx8:ErrorType>
                                    <pfx8:ErrorUserErrCode>
                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                    </pfx8:ErrorUserErrCode>
                                    <pfx8:ErrorUserErrDesc>
                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                    </pfx8:ErrorUserErrDesc>
                                    <pfx8:Status>
                                        <xsl:value-of select="&quot;Failed&quot;"/>
                                    </pfx8:Status>
                                    <pfx8:ListOfCutAddress>
                                        <xsl:for-each select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainIndividualList/ZainIndividual/ZainAddress">
                                            <pfx8:CutAddress>
                                                <xsl:if test="sourceAddressId">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="sourceAddressId"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <pfx8:ErrorOccuranceTime>
                                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                </pfx8:ErrorOccuranceTime>
                                                <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode">
                                                    <pfx8:ErrorSourceErrCode>
                                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode"/>
                                                    </pfx8:ErrorSourceErrCode>
                                                </xsl:if>
                                                <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription">
                                                    <pfx8:ErrorSourceErrDesc>
                                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription"/>
                                                    </pfx8:ErrorSourceErrDesc>
                                                </xsl:if>
                                                <pfx8:ErrorSourceSystem>
                                                    <xsl:value-of select="if(string-length($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)>0)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else &quot;TIBCO&quot;"/>
                                                </pfx8:ErrorSourceSystem>
                                                <pfx8:ErrorType>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                </pfx8:ErrorType>
                                                <pfx8:ErrorUserErrDesc>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                </pfx8:ErrorUserErrDesc>
                                                <pfx8:ErrorUserErrCode>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                                </pfx8:ErrorUserErrCode>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Failed&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:CutAddress>
                                        </xsl:for-each>
                                    </pfx8:ListOfCutAddress>
                                    <pfx8:ListOfComInvoiceProfile>
                                        <xsl:for-each select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill">
                                            <pfx8:ComInvoiceProfile>
                                                <xsl:if test="ns3:billId/ns3:value">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ns3:billId/ns3:value"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <pfx8:ErrorOccuranceTime>
                                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                </pfx8:ErrorOccuranceTime>
                                                <pfx8:ErrorSourceErrCode>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode"/>
                                                </pfx8:ErrorSourceErrCode>
                                                <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription">
                                                    <pfx8:ErrorSourceErrDesc>
                                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription"/>
                                                    </pfx8:ErrorSourceErrDesc>
                                                </xsl:if>
                                                <pfx8:ErrorSourceSystem>
                                                    <xsl:value-of select="if(string-length($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)>0)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else &quot;TIBCO&quot;"/>
                                                </pfx8:ErrorSourceSystem>
                                                <pfx8:ErrorType>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                </pfx8:ErrorType>
                                                <pfx8:ErrorUserErrCode>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                </pfx8:ErrorUserErrCode>
                                                <pfx8:ErrorUserErrDesc>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription"/>
                                                </pfx8:ErrorUserErrDesc>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Failed&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:ComInvoiceProfile>
                                        </xsl:for-each>
                                    </pfx8:ListOfComInvoiceProfile>
                                    <pfx8:ListOfOrganizationPaymentProfile>
                                        <xsl:for-each select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                                            <pfx8:OrganizationPaymentProfile>
                                                <xsl:if test="ID">
                                                    <pfx8:Id>
                                                        <xsl:value-of select="ID"/>
                                                    </pfx8:Id>
                                                </xsl:if>
                                                <pfx8:ErrorOccuranceTime>
                                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                                </pfx8:ErrorOccuranceTime>
                                                <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode">
                                                    <pfx8:ErrorSourceErrCode>
                                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode"/>
                                                    </pfx8:ErrorSourceErrCode>
                                                </xsl:if>
                                                <pfx8:ErrorSourceSystem>
                                                    <xsl:value-of select="if(string-length($Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode)>0)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System&#xA;else &quot;TIBCO&quot;"/>
                                                </pfx8:ErrorSourceSystem>
                                                <pfx8:ErrorType>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:ERRORTYPE&#xA; else&#xA;&quot;1&quot;"/>
                                                </pfx8:ErrorType>
                                                <pfx8:ErrorUserErrDesc>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) &#xA;then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORDESC &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                                                </pfx8:ErrorUserErrDesc>
                                                <xsl:if test="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription">
                                                    <pfx8:ErrorSourceErrDesc>
                                                        <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE)) then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORDESC else&#xA;$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseDescription"/>
                                                    </pfx8:ErrorSourceErrDesc>
                                                </xsl:if>
                                                <pfx8:ErrorUserErrCode>
                                                    <xsl:value-of select="if(exists($GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:SOURCEERRORCODE))&#xA; then&#xA;$GetResponseCodes/ns5:ResponseCodeVar/ns5:paramgroup[ns5:SOURCESYSTEM=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/Source_System and ns5:USERERRORCODE=$Call_CreateCorpCustomer/root/pfx7:CreateCustomerRes/ns3:Response/ResponseCode]/ns5:USERERRORCODE &#xA; else&#xA;$_globalVariables/ns:GlobalVariables/CommonErrors/MiscErrorCode"/>
                                                </pfx8:ErrorUserErrCode>
                                                <pfx8:Status>
                                                    <xsl:value-of select="&quot;Failed&quot;"/>
                                                </pfx8:Status>
                                            </pfx8:OrganizationPaymentProfile>
                                        </xsl:for-each>
                                    </pfx8:ListOfOrganizationPaymentProfile>
                                </pfx8:Account>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx8:ListOfCbio2CustomerCreationResIo>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SetErrorCustID">
            <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
            <pd:x>1066</pd:x>
            <pd:y>435</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/CustomerLists.jobsharedvariable</variableConfig>
            </config>
            <pd:inputBindings>
                <CustomerList>
                    <xsl:for-each select="$SetErroredCustID/CustomerList/CustomerAccountID">
                        <CustomerAccountID>
                            <xsl:value-of select="."/>
                        </CustomerAccountID>
                    </xsl:for-each>
                    <xsl:if test="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/ID">
                        <CustomerAccountID>
                            <xsl:value-of select="$CustomerElement/Customer/pfx5:CreateCustomerReq/ns3:ZainCustomerAccountList/ZainCustomerAccount[1]/ID"/>
                        </CustomerAccountID>
                    </xsl:if>
                </CustomerList>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CheckForROOTCustError">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1968</pd:x>
            <pd:y>308</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorROOTCustomer">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>1974</pd:x>
            <pd:y>435</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns0:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/ROOTCustErrMsg"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/ROOTCustErrCode"/>
                    </messageCode>
                </ns0:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log_CDM_Request">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>662</pd:x>
            <pd:y>336</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$Start/root/TrackingId"/>
                        </ns2:TransactionID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($CustomerElement/Customer)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log_CRM_Response">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1614</pd:x>
            <pd:y>473</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$Start/root/TrackingId"/>
                        </ns2:TransactionID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($MapCRMResponse/root/pfx8:ListOfCbio2CustomerCreationResIo)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/CRM_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Common_EAI_EMSSender">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1731</pd:x>
            <pd:y>309</pd:y>
            <config>
                <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSender.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <MessageBody>
                        <xsl:value-of select="tib:render-xml($MapCRMResponse/root/pfx8:ListOfCbio2CustomerCreationResIo)"/>
                    </MessageBody>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TrackingId"/>
                    </TransactionID>
                    <EMS_DestinationQueue>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Provisioning/CreateCorporateCustomer/CRM_Response_Queue"/>
                    </EMS_DestinationQueue>
                    <xsl:if test="$Start/root/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$Start/root/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Check-1">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1243</pd:x>
            <pd:y>313</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="GetResponseCodes">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>1376</pd:x>
            <pd:y>315</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Ignore">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1376</pd:x>
            <pd:y>443</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="SetErroredCustID">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>190</pd:x>
        <pd:y>117</pd:y>
        <config>
            <showResult>true</showResult>
            <variableConfig>/CommonResources/SharedVariables/Internal/CustomerLists.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings>
            <CustomerList>
                <CustomerAccountID>
                    <xsl:value-of select="&quot;&quot;"/>
                </CustomerAccountID>
            </CustomerList>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SortCustomerLevel</pd:from>
        <pd:to>CorpCustomerList</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CorpCustomerList</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>SetErroredCustID</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetErroredCustID</pd:from>
        <pd:to>SortCustomerLevel</pd:to>
        <pd:xpathDescription>Otherwise</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>