<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <pd:name>Test/rc4decrypter.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="passcode" type="xsd:string"/>
                    <xsd:element name="key" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>77</pd:startY>
    <pd:returnBindings>
        <root>
            <param>
                <xsl:value-of select="$rc4Encryptor/javaCodeActivityOutput/encrypted"/>
            </param>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="param" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>591</pd:endX>
    <pd:endY>75</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1546863763185</pd:targetNamespace>
    <pd:activity name="rc4Encryptor">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>345</pd:x>
        <pd:y>75</pd:y>
        <config>
            <fileName>rc4decrypterrc4Encryptor</fileName>
            <packageName>Test.rc4decrypter</packageName>
            <fullsource>package Test.rc4decrypter;
import java.util.*;
import java.io.*;
public class rc4decrypterrc4Encryptor{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String password = "";
	protected String key = "";
	protected String encrypted = "";
	public String getpassword() {
		return password;
	}
	public void setpassword(String val) {
		password = val;
	}
	public String getkey() {
		return key;
	}
	public void setkey(String val) {
		key = val;
	}
	public String getencrypted() {
		return encrypted;
	}
	public void setencrypted(String val) {
		encrypted = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public rc4decrypterrc4Encryptor() {





    }
    public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String password
	In  : String key
	Out : String encrypted
* Available Variables: DO NOT MODIFY *****/
         byte[] S = new byte[256];
        byte[] T = new byte[256];
        int keylen;

        byte[] akey = getkey().getBytes();
        if (akey.length &lt; 1 || akey.length &gt; 256) {
            throw new Exception(
                    "key must be between 1 and 256 bytes");
        } else {
            keylen = akey.length;
            for (int i = 0; i &lt; 256; i++) {
                S[i] = (byte) i;
                T[i] = akey[i % keylen];
            }
            int j = 0;
            byte tmp;
            for (int i = 0; i &lt; 256; i++) {
                j = (j + S[i] + T[i]) &amp; 0xFF;
                tmp = S[j];
                S[j] = S[i];
                S[i] = tmp;
            }

            byte [] plaintext = getpassword().getBytes();
             byte[] ciphertext = new byte[ plaintext.length];
            int i1 = 0, j1 = 0, k, t;
            byte tmp1;
            for (int counter = 0; counter &lt; plaintext.length; counter++) {
                i1 = (i1 + 1) &amp; 0xFF;
                j1 = (j1 + S[i1]) &amp; 0xFF;
                tmp1 = S[j1];
                S[j1] = S[i1];
                S[i1] = tmp1;
                t = (S[i1] + S[j1]) &amp; 0xFF;
                k = S[t];
                ciphertext[counter] = (byte) (plaintext[counter] ^ k);
            }

            StringBuilder hexString = new StringBuilder();
            for (int i = 0; i &lt; ciphertext.length; i++) {
                String hex = Integer.toHexString(0xFF &amp; ciphertext[i]);
                if (hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            setencrypted(hexString.toString().toUpperCase());
        }
    }
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>password</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>key</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>encrypted</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>rc4decrypterrc4Encryptor</name>
                    <byteCode>yv66vgAAADMAVQkAFQAwCQAVADEJABUAMgoAFgAzCAA0CgAVADUKADYANwcAOAgAOQoACAA6CgAVADsHADwKAAwAMwoAPQA+CgA2AD8KAAwAQAoADABBCgAMAEIKADYAQwoAFQBEBwBFBwBGAQAIcGFzc3dvcmQBABJMamF2YS9sYW5nL1N0cmluZzsBAANrZXkBAAllbmNyeXB0ZWQBAAtnZXRwYXNzd29yZAEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAC3NldHBhc3N3b3JkAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAGZ2V0a2V5AQAGc2V0a2V5AQAMZ2V0ZW5jcnlwdGVkAQAMc2V0ZW5jcnlwdGVkAQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQANU3RhY2tNYXBUYWJsZQcARQcARwcAPAcASAEACkV4Y2VwdGlvbnMBAApTb3VyY2VGaWxlAQAdcmM0ZGVjcnlwdGVycmM0RW5jcnlwdG9yLmphdmEMABcAGAwAGQAYDAAaABgMACUAJgEAAAwAIQAcBwBIDABJAEoBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAja2V5IG11c3QgYmUgYmV0d2VlbiAxIGFuZCAyNTYgYnl0ZXMMACUAIAwAGwAcAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIHAEsMAEwATQwATgBPDABQAFEMAFAAUgwAUwAcDABUABwMACQAIAEAKlRlc3QvcmM0ZGVjcnlwdGVyL3JjNGRlY3J5cHRlcnJjNEVuY3J5cHRvcgEAEGphdmEvbGFuZy9PYmplY3QBAAJbQgEAEGphdmEvbGFuZy9TdHJpbmcBAAhnZXRCeXRlcwEABCgpW0IBABFqYXZhL2xhbmcvSW50ZWdlcgEAC3RvSGV4U3RyaW5nAQAVKEkpTGphdmEvbGFuZy9TdHJpbmc7AQAGbGVuZ3RoAQADKClJAQAGYXBwZW5kAQAcKEMpTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQALdG9VcHBlckNhc2UAIQAVABYAAAADAAQAFwAYAAAABAAZABgAAAAEABoAGAAAAAgAAQAbABwAAQAdAAAAHQABAAEAAAAFKrQAAbAAAAABAB4AAAAGAAEAAAAKAAEAHwAgAAEAHQAAACIAAgACAAAABiortQABsQAAAAEAHgAAAAoAAgAAAA0ABQAOAAEAIQAcAAEAHQAAAB0AAQABAAAABSq0AAKwAAAAAQAeAAAABgABAAAAEAABACIAIAABAB0AAAAiAAIAAgAAAAYqK7UAArEAAAABAB4AAAAKAAIAAAATAAUAFAABACMAHAABAB0AAAAdAAEAAQAAAAUqtAADsAAAAAEAHgAAAAYAAQAAABYAAQAkACAAAQAdAAAAIgACAAIAAAAGKiu1AAOxAAAAAQAeAAAACgACAAAAGQAFABoAAQAlACYAAQAdAAAAPwACAAEAAAAXKrcABCoSBbUAASoSBbUAAioSBbUAA7EAAAABAB4AAAAWAAUAAAAcAAQABgAKAAcAEAAIABYAIgABACcAJgACAB0AAAKvAAUAEQAAAVMRAQC8CEwRAQC8CE0qtgAGtgAHOgQZBL4EoQAMGQS+EQEApAANuwAIWRIJtwAKvxkEvj4DNgUVBREBAKIAGysVBRUFkVQsFQUZBBUFHXAzVIQFAaf/4wM2BQM2BxUHEQEAogAvFQUrFQczYCwVBzNgEQD/fjYFKxUFMzYGKxUFKxUHM1QrFQcVBlSEBwGn/88qtgALtgAHOgcZB768CDoIAzYJAzYKAzYOFQ4ZB76iAFcVCQRgEQD/fjYJFQorFQkzYBEA/342CisVCjM2DSsVCisVCTNUKxUJFQ1UKxUJMysVCjNgEQD/fjYMKxUMMzYLGQgVDhkHFQ4zFQuCkVSEDgGn/6e7AAxZtwANOg4DNg8VDxkIvqIAMBEA/xkIFQ8zfrgADjoQGRC2AA8EoAALGQ4QMLYAEFcZDhkQtgARV4QPAaf/zioZDrYAErYAE7YAFLEAAAACAB4AAACeACcAAAApAAYAKgAMAC0AFQAuACUALwAvADIAMwAzAD4ANABFADUAUAAzAFYANwBZADkAZAA6AHYAOwB8ADwAhAA9AIoAOQCQAEAAmQBBAKAAQgCmAEQAsQBFALsARgDIAEcAzgBIANYASQDcAEoA6wBLAPEATAD/AEQBBQBPAQ4AUAEZAFEBJwBSATAAUwE4AFUBQABQAUYAVwFSAFkAKAAAAKYAC/8AJQAFBwApBwAqBwAqAAcAKgAACf8ABgAGBwApBwAqBwAqAQcAKgEAAPoAH/4ABQEAAfkAM/8AGAAPBwApBwAqBwAqAQcAKgEABwAqBwAqAQEAAAABAAD/AFsACwcAKQcAKgcAKgEHACoBAAcAKgcAKgEBAAD/AAsAEAcAKQcAKgcAKgEHACoBAAcAKgcAKgEBAAAABwArAQAA/AAmBwAs+QANAC0AAAAEAAEACAABAC4AAAACAC8=</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <password>
                    <xsl:value-of select="$Start/root/passcode"/>
                </password>
                <key>
                    <xsl:value-of select="$Start/root/key"/>
                </key>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>rc4Encryptor</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>rc4Encryptor</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>