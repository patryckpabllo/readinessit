<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns8="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:pfx7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx6="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2BillingProfileModificationResIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationResIo.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <pd:name>BusinessProcesses/Services/Provisioning/CreateCustomer/Implementation/CreateCustomer.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>122</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Provisioning/CreayeCustomer/Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1497</pd:endX>
    <pd:endY>527</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="pfx6:ListOfCbio2CustomerCreationResIo"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="CheckStatus" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="ParseCreateCustomer">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>292</pd:x>
        <pd:y>187</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx4:CreateCustomerReq"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>62</pd:x>
        <pd:y>279</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>291</pd:x>
        <pd:y>307</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>405</pd:x>
        <pd:y>187</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_ORDER"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'SecretValue'"/>
                                </ns22:AltKeyName>
                                <xsl:if test="current()/PaymentMethod[1]/ZainBankPM/accountNumber">
                                    <ns22:AltKeyValue>
                                        <xsl:value-of select="current()/PaymentMethod[1]/ZainBankPM/accountNumber"/>
                                    </ns22:AltKeyValue>
                                </xsl:if>
                            </ns22:AltKey>
                        </xsl:if>
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'MaskedValue'"/>
                                </ns22:AltKeyName>
                                <ns22:AltKeyValue>
                                    <xsl:value-of select="concat(tib:left(current()/PaymentMethod[1]/ZainBankPM/accountNumber,6),'XXXXXX',tib:right(current()/PaymentMethod[1]/ZainBankPM/accountNumber,4))"/>
                                </ns22:AltKeyValue>
                            </ns22:AltKey>
                        </xsl:if>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1612</pd:x>
        <pd:y>452</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_ORDER"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="if (exists($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:Response/ResponseCode)) then&#xA;tib:render-xml($PrepareDataForFailed/pfx6:ListOfCbio2CustomerCreationResIo) else &#xA;&#xA;if (exists($Map-Response-for-CRM/pfx6:ListOfCbio2CustomerCreationResIo)) then&#xA;tib:render-xml($Map-Response-for-CRM/pfx6:ListOfCbio2CustomerCreationResIo)&#xA;&#xA;else&#xA;tib:render-xml($PrepareDataForCRMResponse_Prepaid/pfx6:ListOfCbio2CustomerCreationResIo)"/>
                    </ns22:Message>
                    <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'SecretValue'"/>
                                </ns22:AltKeyName>
                                <xsl:if test="current()/PaymentMethod[1]/ZainBankPM/accountNumber">
                                    <ns22:AltKeyValue>
                                        <xsl:value-of select="current()/PaymentMethod[1]/ZainBankPM/accountNumber"/>
                                    </ns22:AltKeyValue>
                                </xsl:if>
                            </ns22:AltKey>
                        </xsl:if>
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'MaskedValue'"/>
                                </ns22:AltKeyName>
                                <ns22:AltKeyValue>
                                    <xsl:value-of select="concat(tib:left(current()/PaymentMethod[1]/ZainBankPM/accountNumber,6),'XXXXXX',tib:right(current()/PaymentMethod[1]/ZainBankPM/accountNumber,4))"/>
                                </ns22:AltKeyValue>
                            </ns22:AltKey>
                        </xsl:if>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>376</pd:x>
        <pd:y>690</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>518</pd:x>
        <pd:y>691</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_ORDER"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/Msg">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>779</pd:x>
        <pd:y>690</pd:y>
        <config>
            <element ref="pfx6:ListOfCbio2CustomerCreationResIo"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value)">
                    <pfx6:ListOfCbio2CustomerCreationResIo>
                        <pfx6:Account>
                            <pfx6:Id>
                                <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                            </pfx6:Id>
                            <xsl:if test="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value">
                                <pfx6:CBiO2BSCSId>
                                    <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value"/>
                                </pfx6:CBiO2BSCSId>
                            </xsl:if>
                            <xsl:if test="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value">
                                <pfx6:CBiO2BSCSHierarchyId>
                                    <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value"/>
                                </pfx6:CBiO2BSCSHierarchyId>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                <pfx6:ErrorSourceSystem>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                </pfx6:ErrorSourceSystem>
                            </xsl:if>
                            <pfx6:ErrorOccuranceTime>
                                <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                            </pfx6:ErrorOccuranceTime>
                            <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                <pfx6:ErrorSourceErrCode>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                </pfx6:ErrorSourceErrCode>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                <pfx6:ErrorSourceErrDesc>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                </pfx6:ErrorSourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorType">
                                <pfx6:ErrorType>
                                    <xsl:value-of select="$FailedResCode/root/ErrorType"/>
                                </pfx6:ErrorType>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                <pfx6:ErrorUserErrCode>
                                    <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                </pfx6:ErrorUserErrCode>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                <pfx6:ErrorUserErrDesc>
                                    <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                </pfx6:ErrorUserErrDesc>
                            </xsl:if>
                            <pfx6:Status>
                                <xsl:value-of select="'Partial Success'"/>
                            </pfx6:Status>
                            <pfx6:ListOfCutAddress>
                                <xsl:for-each select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId">
                                    <pfx6:CutAddress>
                                        <xsl:if test="ns4:systemName">
                                            <pfx6:Id>
                                                <xsl:value-of select="ns4:systemName"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <xsl:if test="ns4:value">
                                            <pfx6:CBiOBSCSId>
                                                <xsl:value-of select="ns4:value"/>
                                            </pfx6:CBiOBSCSId>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Success'"/>
                                        </pfx6:Status>
                                    </pfx6:CutAddress>
                                </xsl:for-each>
                            </pfx6:ListOfCutAddress>
                            <pfx6:ListOfComInvoiceProfile>
                                <pfx6:ComInvoiceProfile>
                                    <xsl:if test="$MapCreateCustomer/root/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill[1]/billNo">
                                        <pfx6:Id>
                                            <xsl:value-of select="$MapCreateCustomer/root/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill[1]/billNo"/>
                                        </pfx6:Id>
                                    </xsl:if>
                                    <xsl:if test="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value">
                                        <pfx6:CBiO2BSCSId>
                                            <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value"/>
                                        </pfx6:CBiO2BSCSId>
                                    </xsl:if>
                                    <pfx6:Status>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx6:Status>
                                </pfx6:ComInvoiceProfile>
                                <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill[RequestType!='Primary Account']">
                                    <pfx6:ComInvoiceProfile>
                                        <xsl:if test="billNo">
                                            <pfx6:Id>
                                                <xsl:value-of select="billNo"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <pfx6:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx6:ErrorOccuranceTime>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                            <pfx6:ErrorSourceErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                            </pfx6:ErrorSourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                            <pfx6:ErrorSourceErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                            </pfx6:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                            <pfx6:ErrorSourceSystem>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                            </pfx6:ErrorSourceSystem>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorType">
                                            <pfx6:ErrorType>
                                                <xsl:value-of select="$FailedResCode/root/ErrorType"/>
                                            </pfx6:ErrorType>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                            <pfx6:ErrorUserErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                            </pfx6:ErrorUserErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                            <pfx6:ErrorUserErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                            </pfx6:ErrorUserErrDesc>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx6:Status>
                                    </pfx6:ComInvoiceProfile>
                                </xsl:for-each>
                            </pfx6:ListOfComInvoiceProfile>
                            <pfx6:ListOfOrganizationPaymentProfile>
                                <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                                    <pfx6:OrganizationPaymentProfile>
                                        <xsl:if test="ID">
                                            <pfx6:Id>
                                                <xsl:value-of select="ID"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <pfx6:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx6:ErrorOccuranceTime>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                            <pfx6:ErrorSourceErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                            </pfx6:ErrorSourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                            <pfx6:ErrorSourceSystem>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                            </pfx6:ErrorSourceSystem>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorType">
                                            <pfx6:ErrorType>
                                                <xsl:value-of select="$FailedResCode/root/ErrorType"/>
                                            </pfx6:ErrorType>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                            <pfx6:ErrorUserErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                            </pfx6:ErrorUserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                            <pfx6:ErrorSourceErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                            </pfx6:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                            <pfx6:ErrorUserErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                            </pfx6:ErrorUserErrCode>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx6:Status>
                                    </pfx6:OrganizationPaymentProfile>
                                </xsl:for-each>
                            </pfx6:ListOfOrganizationPaymentProfile>
                        </pfx6:Account>
                    </pfx6:ListOfCbio2CustomerCreationResIo>
                </xsl:when>
                <xsl:otherwise>
                    <pfx6:ListOfCbio2CustomerCreationResIo>
                        <pfx6:Account>
                            <pfx6:Id>
                                <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                            </pfx6:Id>
                            <xsl:if test="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value">
                                <pfx6:CBiO2BSCSId>
                                    <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value"/>
                                </pfx6:CBiO2BSCSId>
                            </xsl:if>
                            <xsl:if test="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value">
                                <pfx6:CBiO2BSCSHierarchyId>
                                    <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value"/>
                                </pfx6:CBiO2BSCSHierarchyId>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                <pfx6:ErrorSourceSystem>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                </pfx6:ErrorSourceSystem>
                            </xsl:if>
                            <pfx6:ErrorOccuranceTime>
                                <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                            </pfx6:ErrorOccuranceTime>
                            <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                <pfx6:ErrorSourceErrCode>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                </pfx6:ErrorSourceErrCode>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                <pfx6:ErrorSourceErrDesc>
                                    <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                </pfx6:ErrorSourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                <pfx6:ErrorUserErrCode>
                                    <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                </pfx6:ErrorUserErrCode>
                            </xsl:if>
                            <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                <pfx6:ErrorUserErrDesc>
                                    <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                </pfx6:ErrorUserErrDesc>
                            </xsl:if>
                            <pfx6:Status>
                                <xsl:value-of select="'Failed'"/>
                            </pfx6:Status>
                            <pfx6:ListOfCutAddress>
                                <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual/ZainAddress">
                                    <pfx6:CutAddress>
                                        <xsl:if test="sourceAddressId">
                                            <pfx6:Id>
                                                <xsl:value-of select="sourceAddressId"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <xsl:if test="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:value">
                                            <pfx6:CBiOBSCSId>
                                                <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:value"/>
                                            </pfx6:CBiOBSCSId>
                                        </xsl:if>
                                        <pfx6:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx6:ErrorOccuranceTime>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                            <pfx6:ErrorSourceErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                            </pfx6:ErrorSourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                            <pfx6:ErrorSourceErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                            </pfx6:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                            <pfx6:ErrorSourceSystem>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                            </pfx6:ErrorSourceSystem>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                            <pfx6:ErrorUserErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                            </pfx6:ErrorUserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                            <pfx6:ErrorUserErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                            </pfx6:ErrorUserErrCode>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx6:Status>
                                    </pfx6:CutAddress>
                                </xsl:for-each>
                            </pfx6:ListOfCutAddress>
                            <pfx6:ListOfComInvoiceProfile>
                                <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill">
                                    <pfx6:ComInvoiceProfile>
                                        <xsl:if test="billNo">
                                            <pfx6:Id>
                                                <xsl:value-of select="billNo"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <pfx6:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx6:ErrorOccuranceTime>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                            <pfx6:ErrorSourceErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                            </pfx6:ErrorSourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                            <pfx6:ErrorSourceErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                            </pfx6:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                            <pfx6:ErrorSourceSystem>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                            </pfx6:ErrorSourceSystem>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                            <pfx6:ErrorUserErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                            </pfx6:ErrorUserErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                            <pfx6:ErrorUserErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                            </pfx6:ErrorUserErrDesc>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx6:Status>
                                    </pfx6:ComInvoiceProfile>
                                </xsl:for-each>
                            </pfx6:ListOfComInvoiceProfile>
                            <pfx6:ListOfOrganizationPaymentProfile>
                                <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                                    <pfx6:OrganizationPaymentProfile>
                                        <xsl:if test="ID">
                                            <pfx6:Id>
                                                <xsl:value-of select="ID"/>
                                            </pfx6:Id>
                                        </xsl:if>
                                        <pfx6:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx6:ErrorOccuranceTime>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrCode">
                                            <pfx6:ErrorSourceErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrCode"/>
                                            </pfx6:ErrorSourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceSystem">
                                            <pfx6:ErrorSourceSystem>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceSystem"/>
                                            </pfx6:ErrorSourceSystem>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrDesc">
                                            <pfx6:ErrorUserErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrDesc"/>
                                            </pfx6:ErrorUserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorSourceErrDesc">
                                            <pfx6:ErrorSourceErrDesc>
                                                <xsl:value-of select="$FailedResCode/root/ErrorSourceErrDesc"/>
                                            </pfx6:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$FailedResCode/root/ErrorUserErrCode">
                                            <pfx6:ErrorUserErrCode>
                                                <xsl:value-of select="$FailedResCode/root/ErrorUserErrCode"/>
                                            </pfx6:ErrorUserErrCode>
                                        </xsl:if>
                                        <pfx6:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx6:Status>
                                    </pfx6:OrganizationPaymentProfile>
                                </xsl:for-each>
                            </pfx6:ListOfOrganizationPaymentProfile>
                        </pfx6:Account>
                    </pfx6:ListOfCbio2CustomerCreationResIo>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorReplyToJMS">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1011</pd:x>
        <pd:y>685</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSender.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx6:ListOfCbio2CustomerCreationResIo)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$ErrorHandler/pfx2:ExceptionRequest/ns22:Header/ns22:TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/CRM_Response_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                </TransactionType>
                <xsl:if test="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                    <ReplyToEngineID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                    </ReplyToEngineID>
                </xsl:if>
                <xsl:if test="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                    <ReplyToDeployment>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                    </ReplyToDeployment>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1301</pd:x>
        <pd:y>722</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx6:ListOfCbio2CustomerCreationResIo)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>1015</pd:x>
        <pd:y>814</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="CreateCustomer">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>469</pd:x>
        <pd:y>1</pd:y>
        <pd:width>474</pd:width>
        <pd:height>200</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>MapCreateCustomer</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log_CreateCustomerResponse</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapCreateCustomer</pd:from>
            <pd:to>CreateCustomerBSCS</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateCustomerBSCS</pd:from>
            <pd:to>ParseResponsePrimary</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseResponsePrimary</pd:from>
            <pd:to>Log_CreateCustomerResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateCustomerBSCS</pd:from>
            <pd:to>ErrorEMSReceive</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407872</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="CreateCustomerBSCS">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>630</pd:x>
            <pd:y>67</pd:y>
            <config>
                <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <MessageBody>
                        <xsl:value-of select="tib:render-xml($MapCreateCustomer/root/pfx4:CreateCustomerReq)"/>
                    </MessageBody>
                    <TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <EMS_DestinationQueue>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ESI_Request_Queue"/>
                    </EMS_DestinationQueue>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                    <RequestTimeOut>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/RequestTimeout"/>
                    </RequestTimeOut>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapCreateCustomer">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>557</pd:x>
            <pd:y>147</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx4:CreateCustomerReq"/>
                                <xsd:element name="TransactionID" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="startTimeStamp" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx4:CreateCustomerReq>
                        <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:BusinessMessageHeader"/>
                        <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:Organization"/>
                        <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList"/>
                        <ns4:ZainCustomerAccountList>
                            <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount">
                                <ZainCustomerAccount>
                                    <xsl:if test="accountStatus">
                                        <accountStatus>
                                            <xsl:value-of select="accountStatus"/>
                                        </accountStatus>
                                    </xsl:if>
                                    <xsl:if test="accountType">
                                        <accountType>
                                            <xsl:value-of select="accountType"/>
                                        </accountType>
                                    </xsl:if>
                                    <xsl:if test="classificationCode">
                                        <classificationCode>
                                            <xsl:value-of select="classificationCode"/>
                                        </classificationCode>
                                    </xsl:if>
                                    <xsl:if test="creationDateTime">
                                        <creationDateTime>
                                            <xsl:value-of select="creationDateTime"/>
                                        </creationDateTime>
                                    </xsl:if>
                                    <xsl:if test="creditLimit">
                                        <creditLimit>
                                            <xsl:value-of select="creditLimit"/>
                                        </creditLimit>
                                    </xsl:if>
                                    <xsl:if test="currencyCode">
                                        <currencyCode>
                                            <xsl:value-of select="currencyCode"/>
                                        </currencyCode>
                                    </xsl:if>
                                    <xsl:if test="ID">
                                        <ID>
                                            <xsl:value-of select="ID"/>
                                        </ID>
                                    </xsl:if>
                                    <xsl:if test="name">
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                    </xsl:if>
                                    <xsl:if test="pin">
                                        <pin>
                                            <xsl:value-of select="pin"/>
                                        </pin>
                                    </xsl:if>
                                    <xsl:if test="parentAccountId">
                                        <parentAccountId>
                                            <xsl:value-of select="parentAccountId"/>
                                        </parentAccountId>
                                    </xsl:if>
                                    <xsl:if test="rootAccountId">
                                        <rootAccountId>
                                            <xsl:value-of select="rootAccountId"/>
                                        </rootAccountId>
                                    </xsl:if>
                                    <xsl:for-each select="LogicalResource">
                                        <LogicalResource>
                                            <xsl:if test="resourceName">
                                                <resourceName>
                                                    <xsl:value-of select="resourceName"/>
                                                </resourceName>
                                            </xsl:if>
                                            <xsl:if test="resourceValue">
                                                <resourceValue>
                                                    <xsl:value-of select="resourceValue"/>
                                                </resourceValue>
                                            </xsl:if>
                                        </LogicalResource>
                                    </xsl:for-each>
                                    <xsl:if test="ContractID">
                                        <ContractID>
                                            <xsl:value-of select="ContractID"/>
                                        </ContractID>
                                    </xsl:if>
                                    <xsl:if test="BillingType">
                                        <BillingType>
                                            <xsl:value-of select="BillingType"/>
                                        </BillingType>
                                    </xsl:if>
                                    <xsl:if test="Category">
                                        <Category>
                                            <xsl:value-of select="Category"/>
                                        </Category>
                                    </xsl:if>
                                    <xsl:if test="Nationality">
                                        <Nationality>
                                            <xsl:value-of select="Nationality"/>
                                        </Nationality>
                                    </xsl:if>
                                    <xsl:if test="ContractOwner">
                                        <ContractOwner>
                                            <xsl:value-of select="ContractOwner"/>
                                        </ContractOwner>
                                    </xsl:if>
                                    <xsl:if test="HasPrepaid">
                                        <HasPrepaid>
                                            <xsl:value-of select="HasPrepaid"/>
                                        </HasPrepaid>
                                    </xsl:if>
                                    <xsl:if test="HasPostpaid">
                                        <HasPostpaid>
                                            <xsl:value-of select="HasPostpaid"/>
                                        </HasPostpaid>
                                    </xsl:if>
                                    <xsl:if test="ns4:MSISDN">
                                        <ns4:MSISDN>
                                            <xsl:value-of select="ns4:MSISDN"/>
                                        </ns4:MSISDN>
                                    </xsl:if>
                                    <xsl:if test="ActivationCode">
                                        <ActivationCode>
                                            <xsl:value-of select="ActivationCode"/>
                                        </ActivationCode>
                                    </xsl:if>
                                    <xsl:if test="Email">
                                        <Email>
                                            <xsl:value-of select="Email"/>
                                        </Email>
                                    </xsl:if>
                                    <xsl:for-each select="ns4:EmployeeIdentifier">
                                        <ns4:EmployeeIdentifier>
                                            <xsl:if test="PFnumber">
                                                <PFnumber>
                                                    <xsl:value-of select="PFnumber"/>
                                                </PFnumber>
                                            </xsl:if>
                                            <xsl:for-each select="EmployeeId">
                                                <EmployeeId>
                                                    <xsl:if test="ns4:systemName">
                                                        <ns4:systemName>
                                                            <xsl:value-of select="ns4:systemName"/>
                                                        </ns4:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:value">
                                                        <ns4:value>
                                                            <xsl:value-of select="ns4:value"/>
                                                        </ns4:value>
                                                    </xsl:if>
                                                </EmployeeId>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns4:SubscriberIdentifier">
                                                <ns4:SubscriberIdentifier>
                                                    <xsl:if test="ns4:MSISDN">
                                                        <ns4:MSISDN>
                                                            <xsl:value-of select="ns4:MSISDN"/>
                                                        </ns4:MSISDN>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:IMSI">
                                                        <ns4:IMSI>
                                                            <xsl:value-of select="ns4:IMSI"/>
                                                        </ns4:IMSI>
                                                    </xsl:if>
                                                    <xsl:if test="DongleSerialNumber">
                                                        <DongleSerialNumber>
                                                            <xsl:value-of select="DongleSerialNumber"/>
                                                        </DongleSerialNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ReferenceMSISDN">
                                                        <ReferenceMSISDN>
                                                            <xsl:value-of select="ReferenceMSISDN"/>
                                                        </ReferenceMSISDN>
                                                    </xsl:if>
                                                </ns4:SubscriberIdentifier>
                                            </xsl:for-each>
                                            <xsl:if test="IsEmployee">
                                                <IsEmployee>
                                                    <xsl:value-of select="IsEmployee"/>
                                                </IsEmployee>
                                            </xsl:if>
                                        </ns4:EmployeeIdentifier>
                                    </xsl:for-each>
                                    <xsl:if test="SourceofSignOff">
                                        <SourceofSignOff>
                                            <xsl:value-of select="SourceofSignOff"/>
                                        </SourceofSignOff>
                                    </xsl:if>
                                    <xsl:if test="Salesagent">
                                        <Salesagent>
                                            <xsl:value-of select="Salesagent"/>
                                        </Salesagent>
                                    </xsl:if>
                                    <xsl:if test="contractResponsible">
                                        <contractResponsible>
                                            <xsl:value-of select="contractResponsible"/>
                                        </contractResponsible>
                                    </xsl:if>
                                    <xsl:if test="costCodePub">
                                        <costCodePub>
                                            <xsl:value-of select="costCodePub"/>
                                        </costCodePub>
                                    </xsl:if>
                                    <xsl:if test="costId">
                                        <costId>
                                            <xsl:value-of select="costId"/>
                                        </costId>
                                    </xsl:if>
                                    <xsl:if test="crmCustomerId">
                                        <crmCustomerId>
                                            <xsl:value-of select="crmCustomerId"/>
                                        </crmCustomerId>
                                    </xsl:if>
                                    <xsl:if test="crmParentCustomerId">
                                        <crmParentCustomerId>
                                            <xsl:value-of select="crmParentCustomerId"/>
                                        </crmParentCustomerId>
                                    </xsl:if>
                                    <xsl:if test="csBillcycle">
                                        <csBillcycle>
                                            <xsl:value-of select="csBillcycle"/>
                                        </csBillcycle>
                                    </xsl:if>
                                    <xsl:if test="csPrepayment">
                                        <csPrepayment>
                                            <xsl:value-of select="csPrepayment"/>
                                        </csPrepayment>
                                    </xsl:if>
                                    <xsl:if test="csStatus">
                                        <csStatus>
                                            <xsl:value-of select="csStatus"/>
                                        </csStatus>
                                    </xsl:if>
                                    <xsl:if test="customerCategory">
                                        <customerCategory>
                                            <xsl:value-of select="customerCategory"/>
                                        </customerCategory>
                                    </xsl:if>
                                    <xsl:if test="level">
                                        <level>
                                            <xsl:value-of select="level"/>
                                        </level>
                                    </xsl:if>
                                    <xsl:if test="mode">
                                        <mode>
                                            <xsl:value-of select="mode"/>
                                        </mode>
                                    </xsl:if>
                                    <xsl:if test="PartyType">
                                        <PartyType>
                                            <xsl:value-of select="PartyType"/>
                                        </PartyType>
                                    </xsl:if>
                                    <xsl:if test="paymentResponsible">
                                        <paymentResponsible>
                                            <xsl:value-of select="paymentResponsible"/>
                                        </paymentResponsible>
                                    </xsl:if>
                                    <xsl:if test="accountStatusChangeReason">
                                        <accountStatusChangeReason>
                                            <xsl:value-of select="accountStatusChangeReason"/>
                                        </accountStatusChangeReason>
                                    </xsl:if>
                                    <xsl:if test="accountStatusChangeDate">
                                        <accountStatusChangeDate>
                                            <xsl:value-of select="accountStatusChangeDate"/>
                                        </accountStatusChangeDate>
                                    </xsl:if>
                                    <xsl:if test="reasonCode">
                                        <reasonCode>
                                            <xsl:value-of select="reasonCode"/>
                                        </reasonCode>
                                    </xsl:if>
                                    <xsl:if test="rpCode">
                                        <rpCode>
                                            <xsl:value-of select="rpCode"/>
                                        </rpCode>
                                    </xsl:if>
                                    <xsl:if test="sourceCustomerID">
                                        <sourceCustomerID>
                                            <xsl:value-of select="sourceCustomerID"/>
                                        </sourceCustomerID>
                                    </xsl:if>
                                    <xsl:if test="targetCustomerID">
                                        <targetCustomerID>
                                            <xsl:value-of select="targetCustomerID"/>
                                        </targetCustomerID>
                                    </xsl:if>
                                    <xsl:for-each select="CustomerBill[RequestType=&quot;Primary Account&quot;]">
                                        <CustomerBill>
                                            <xsl:if test="billDate">
                                                <billDate>
                                                    <xsl:value-of select="billDate"/>
                                                </billDate>
                                            </xsl:if>
                                            <xsl:if test="billNo">
                                                <billNo>
                                                    <xsl:value-of select="billNo"/>
                                                </billNo>
                                            </xsl:if>
                                            <xsl:for-each select="ns4:billId">
                                                <ns4:billId>
                                                    <xsl:if test="ns4:systemName">
                                                        <ns4:systemName>
                                                            <xsl:value-of select="ns4:systemName"/>
                                                        </ns4:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:value">
                                                        <ns4:value>
                                                            <xsl:value-of select="ns4:value"/>
                                                        </ns4:value>
                                                    </xsl:if>
                                                </ns4:billId>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns4:addressId">
                                                <ns4:addressId>
                                                    <xsl:if test="ns4:systemName">
                                                        <ns4:systemName>
                                                            <xsl:value-of select="ns4:systemName"/>
                                                        </ns4:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:value">
                                                        <ns4:value>
                                                            <xsl:value-of select="ns4:value"/>
                                                        </ns4:value>
                                                    </xsl:if>
                                                </ns4:addressId>
                                            </xsl:for-each>
                                            <xsl:if test="Format">
                                                <Format>
                                                    <xsl:value-of select="Format"/>
                                                </Format>
                                            </xsl:if>
                                            <xsl:if test="chargeDate">
                                                <chargeDate>
                                                    <xsl:value-of select="chargeDate"/>
                                                </chargeDate>
                                            </xsl:if>
                                            <xsl:if test="creditDate">
                                                <creditDate>
                                                    <xsl:value-of select="creditDate"/>
                                                </creditDate>
                                            </xsl:if>
                                            <xsl:if test="creditLimit">
                                                <creditLimit>
                                                    <xsl:value-of select="creditLimit"/>
                                                </creditLimit>
                                            </xsl:if>
                                            <xsl:if test="mailingDate">
                                                <mailingDate>
                                                    <xsl:value-of select="mailingDate"/>
                                                </mailingDate>
                                            </xsl:if>
                                            <xsl:if test="paymentDueDate">
                                                <paymentDueDate>
                                                    <xsl:value-of select="paymentDueDate"/>
                                                </paymentDueDate>
                                            </xsl:if>
                                            <xsl:if test="relationshipType">
                                                <relationshipType>
                                                    <xsl:value-of select="relationshipType"/>
                                                </relationshipType>
                                            </xsl:if>
                                            <xsl:for-each select="CustomerBillingCycle">
                                                <CustomerBillingCycle>
                                                    <xsl:if test="billCyclechange">
                                                        <billCyclechange>
                                                            <xsl:value-of select="billCyclechange"/>
                                                        </billCyclechange>
                                                    </xsl:if>
                                                    <xsl:if test="billSource">
                                                        <billSource>
                                                            <xsl:value-of select="billSource"/>
                                                        </billSource>
                                                    </xsl:if>
                                                    <xsl:if test="billFrequency">
                                                        <billFrequency>
                                                            <xsl:value-of select="billFrequency"/>
                                                        </billFrequency>
                                                    </xsl:if>
                                                    <xsl:if test="billingDate">
                                                        <billingDate>
                                                            <xsl:value-of select="billingDate"/>
                                                        </billingDate>
                                                    </xsl:if>
                                                    <xsl:if test="billCycle">
                                                        <billCycle>
                                                            <xsl:value-of select="billCycle"/>
                                                        </billCycle>
                                                    </xsl:if>
                                                    <xsl:if test="chargeDate">
                                                        <chargeDate>
                                                            <xsl:value-of select="chargeDate"/>
                                                        </chargeDate>
                                                    </xsl:if>
                                                    <xsl:if test="Currency">
                                                        <Currency>
                                                            <xsl:value-of select="Currency"/>
                                                        </Currency>
                                                    </xsl:if>
                                                    <xsl:if test="ExchangeRate">
                                                        <ExchangeRate>
                                                            <xsl:value-of select="ExchangeRate"/>
                                                        </ExchangeRate>
                                                    </xsl:if>
                                                    <xsl:if test="creditDate">
                                                        <creditDate>
                                                            <xsl:value-of select="creditDate"/>
                                                        </creditDate>
                                                    </xsl:if>
                                                    <xsl:if test="mailingDate">
                                                        <mailingDate>
                                                            <xsl:value-of select="mailingDate"/>
                                                        </mailingDate>
                                                    </xsl:if>
                                                    <xsl:if test="paymentDueDate">
                                                        <paymentDueDate>
                                                            <xsl:value-of select="paymentDueDate"/>
                                                        </paymentDueDate>
                                                    </xsl:if>
                                                    <xsl:if test="triggeredByAccountClose">
                                                        <triggeredByAccountClose>
                                                            <xsl:value-of select="triggeredByAccountClose"/>
                                                        </triggeredByAccountClose>
                                                    </xsl:if>
                                                    <xsl:if test="triggeredByCustomer">
                                                        <triggeredByCustomer>
                                                            <xsl:value-of select="triggeredByCustomer"/>
                                                        </triggeredByCustomer>
                                                    </xsl:if>
                                                    <xsl:if test="triggeredByProvider">
                                                        <triggeredByProvider>
                                                            <xsl:value-of select="triggeredByProvider"/>
                                                        </triggeredByProvider>
                                                    </xsl:if>
                                                    <xsl:if test="triggeredByScheduler">
                                                        <triggeredByScheduler>
                                                            <xsl:value-of select="triggeredByScheduler"/>
                                                        </triggeredByScheduler>
                                                    </xsl:if>
                                                </CustomerBillingCycle>
                                            </xsl:for-each>
                                            <xsl:for-each select="CustomerBillFormat">
                                                <CustomerBillFormat>
                                                    <xsl:if test="description">
                                                        <description>
                                                            <xsl:value-of select="description"/>
                                                        </description>
                                                    </xsl:if>
                                                    <xsl:if test="name">
                                                        <name>
                                                            <xsl:value-of select="name"/>
                                                        </name>
                                                    </xsl:if>
                                                    <xsl:if test="hasCallDetails">
                                                        <hasCallDetails>
                                                            <xsl:value-of select="hasCallDetails"/>
                                                        </hasCallDetails>
                                                    </xsl:if>
                                                    <xsl:for-each select="CustomerBillPresentationMedia">
                                                        <CustomerBillPresentationMedia>
                                                            <xsl:if test="description">
                                                                <description>
                                                                    <xsl:value-of select="description"/>
                                                                </description>
                                                            </xsl:if>
                                                            <xsl:if test="name">
                                                                <name>
                                                                    <xsl:value-of select="name"/>
                                                                </name>
                                                            </xsl:if>
                                                        </CustomerBillPresentationMedia>
                                                    </xsl:for-each>
                                                </CustomerBillFormat>
                                            </xsl:for-each>
                                            <xsl:for-each select="Money">
                                                <Money>
                                                    <xsl:if test="amount">
                                                        <amount>
                                                            <xsl:value-of select="amount"/>
                                                        </amount>
                                                    </xsl:if>
                                                    <xsl:if test="units">
                                                        <units>
                                                            <xsl:value-of select="units"/>
                                                        </units>
                                                    </xsl:if>
                                                </Money>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns4:ZainContact">
                                                <ns4:ZainContact>
                                                    <xsl:for-each select="TimePeriod">
                                                        <TimePeriod>
                                                            <xsl:if test="endDateTime">
                                                                <endDateTime>
                                                                    <xsl:value-of select="endDateTime"/>
                                                                </endDateTime>
                                                            </xsl:if>
                                                            <xsl:if test="startDateTime">
                                                                <startDateTime>
                                                                    <xsl:value-of select="startDateTime"/>
                                                                </startDateTime>
                                                            </xsl:if>
                                                        </TimePeriod>
                                                    </xsl:for-each>
                                                    <xsl:if test="eMailAddress">
                                                        <eMailAddress>
                                                            <xsl:value-of select="eMailAddress"/>
                                                        </eMailAddress>
                                                    </xsl:if>
                                                    <xsl:if test="faxContact">
                                                        <faxContact>
                                                            <xsl:value-of select="faxContact"/>
                                                        </faxContact>
                                                    </xsl:if>
                                                    <xsl:if test="homeContact">
                                                        <homeContact>
                                                            <xsl:value-of select="homeContact"/>
                                                        </homeContact>
                                                    </xsl:if>
                                                    <xsl:if test="otherContact">
                                                        <otherContact>
                                                            <xsl:value-of select="otherContact"/>
                                                        </otherContact>
                                                    </xsl:if>
                                                    <xsl:if test="workContact">
                                                        <workContact>
                                                            <xsl:value-of select="workContact"/>
                                                        </workContact>
                                                    </xsl:if>
                                                    <xsl:if test="mobileNumber">
                                                        <mobileNumber>
                                                            <xsl:value-of select="mobileNumber"/>
                                                        </mobileNumber>
                                                    </xsl:if>
                                                    <xsl:if test="SMSNotificationNumForAccount">
                                                        <SMSNotificationNumForAccount>
                                                            <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                        </SMSNotificationNumForAccount>
                                                    </xsl:if>
                                                    <xsl:if test="ContactPersonName">
                                                        <ContactPersonName>
                                                            <xsl:value-of select="ContactPersonName"/>
                                                        </ContactPersonName>
                                                    </xsl:if>
                                                    <xsl:if test="Notificationnumber">
                                                        <Notificationnumber>
                                                            <xsl:value-of select="Notificationnumber"/>
                                                        </Notificationnumber>
                                                    </xsl:if>
                                                    <xsl:if test="AuthorizedPerson">
                                                        <AuthorizedPerson>
                                                            <xsl:value-of select="AuthorizedPerson"/>
                                                        </AuthorizedPerson>
                                                    </xsl:if>
                                                    <xsl:if test="ModeOfCommunication">
                                                        <ModeOfCommunication>
                                                            <xsl:value-of select="ModeOfCommunication"/>
                                                        </ModeOfCommunication>
                                                    </xsl:if>
                                                    <xsl:if test="PrefferredCommunication">
                                                        <PrefferredCommunication>
                                                            <xsl:value-of select="PrefferredCommunication"/>
                                                        </PrefferredCommunication>
                                                    </xsl:if>
                                                    <xsl:if test="Preferredlanguage">
                                                        <Preferredlanguage>
                                                            <xsl:value-of select="Preferredlanguage"/>
                                                        </Preferredlanguage>
                                                    </xsl:if>
                                                </ns4:ZainContact>
                                            </xsl:for-each>
                                            <xsl:if test="numberOfCopies">
                                                <numberOfCopies>
                                                    <xsl:value-of select="numberOfCopies"/>
                                                </numberOfCopies>
                                            </xsl:if>
                                            <xsl:if test="nameToPrint">
                                                <nameToPrint>
                                                    <xsl:value-of select="nameToPrint"/>
                                                </nameToPrint>
                                            </xsl:if>
                                            <xsl:if test="RequestType">
                                                <RequestType>
                                                    <xsl:value-of select="RequestType"/>
                                                </RequestType>
                                            </xsl:if>
                                            <xsl:if test="RequestsubType">
                                                <RequestsubType>
                                                    <xsl:value-of select="RequestsubType"/>
                                                </RequestsubType>
                                            </xsl:if>
                                            <xsl:if test="ContractTypeId">
                                                <ContractTypeId>
                                                    <xsl:value-of select="ContractTypeId"/>
                                                </ContractTypeId>
                                            </xsl:if>
                                            <xsl:if test="Information">
                                                <Information>
                                                    <xsl:value-of select="Information"/>
                                                </Information>
                                            </xsl:if>
                                            <xsl:if test="simulation">
                                                <simulation>
                                                    <xsl:value-of select="simulation"/>
                                                </simulation>
                                            </xsl:if>
                                            <xsl:if test="RefernceDate">
                                                <RefernceDate>
                                                    <xsl:value-of select="RefernceDate"/>
                                                </RefernceDate>
                                            </xsl:if>
                                            <xsl:if test="PostingPeriod">
                                                <PostingPeriod>
                                                    <xsl:value-of select="PostingPeriod"/>
                                                </PostingPeriod>
                                            </xsl:if>
                                            <xsl:if test="acknowledgment">
                                                <acknowledgment>
                                                    <xsl:value-of select="acknowledgment"/>
                                                </acknowledgment>
                                            </xsl:if>
                                            <xsl:if test="CollectInd">
                                                <CollectInd>
                                                    <xsl:value-of select="CollectInd"/>
                                                </CollectInd>
                                            </xsl:if>
                                            <xsl:if test="Ignorebuind">
                                                <Ignorebuind>
                                                    <xsl:value-of select="Ignorebuind"/>
                                                </Ignorebuind>
                                            </xsl:if>
                                            <xsl:if test="allbusinesunits">
                                                <allbusinesunits>
                                                    <xsl:value-of select="allbusinesunits"/>
                                                </allbusinesunits>
                                            </xsl:if>
                                            <xsl:if test="disableinvoiceforwarding">
                                                <disableinvoiceforwarding>
                                                    <xsl:value-of select="disableinvoiceforwarding"/>
                                                </disableinvoiceforwarding>
                                            </xsl:if>
                                        </CustomerBill>
                                    </xsl:for-each>
                                    <xsl:for-each select="ZainDealer">
                                        <ZainDealer>
                                            <xsl:if test="dealerID">
                                                <dealerID>
                                                    <xsl:value-of select="dealerID"/>
                                                </dealerID>
                                            </xsl:if>
                                            <xsl:if test="dealerIDPub">
                                                <dealerIDPub>
                                                    <xsl:value-of select="dealerIDPub"/>
                                                </dealerIDPub>
                                            </xsl:if>
                                        </ZainDealer>
                                    </xsl:for-each>
                                    <xsl:for-each select="ZainThreshold">
                                        <ZainThreshold>
                                            <xsl:if test="LimitTr1">
                                                <LimitTr1>
                                                    <xsl:value-of select="LimitTr1"/>
                                                </LimitTr1>
                                            </xsl:if>
                                            <xsl:if test="LimitTr1Pub">
                                                <LimitTr1Pub>
                                                    <xsl:value-of select="LimitTr1Pub"/>
                                                </LimitTr1Pub>
                                            </xsl:if>
                                            <xsl:if test="LimitTr2">
                                                <LimitTr2>
                                                    <xsl:value-of select="LimitTr2"/>
                                                </LimitTr2>
                                            </xsl:if>
                                            <xsl:if test="LimitTr2Pub">
                                                <LimitTr2Pub>
                                                    <xsl:value-of select="LimitTr2Pub"/>
                                                </LimitTr2Pub>
                                            </xsl:if>
                                            <xsl:if test="LimitTr3">
                                                <LimitTr3>
                                                    <xsl:value-of select="LimitTr3"/>
                                                </LimitTr3>
                                            </xsl:if>
                                            <xsl:if test="LimitTr3Pub">
                                                <LimitTr3Pub>
                                                    <xsl:value-of select="LimitTr3Pub"/>
                                                </LimitTr3Pub>
                                            </xsl:if>
                                        </ZainThreshold>
                                    </xsl:for-each>
                                    <xsl:if test="customerRating">
                                        <customerRating>
                                            <xsl:value-of select="customerRating"/>
                                        </customerRating>
                                    </xsl:if>
                                    <xsl:if test="LineOfBusiness">
                                        <LineOfBusiness>
                                            <xsl:value-of select="LineOfBusiness"/>
                                        </LineOfBusiness>
                                    </xsl:if>
                                    <xsl:if test="LineOfBusinessType">
                                        <LineOfBusinessType>
                                            <xsl:value-of select="LineOfBusinessType"/>
                                        </LineOfBusinessType>
                                    </xsl:if>
                                    <xsl:if test="AccountNumber">
                                        <AccountNumber>
                                            <xsl:value-of select="AccountNumber"/>
                                        </AccountNumber>
                                    </xsl:if>
                                    <xsl:if test="ParentAccountName">
                                        <ParentAccountName>
                                            <xsl:value-of select="ParentAccountName"/>
                                        </ParentAccountName>
                                    </xsl:if>
                                    <xsl:if test="WriteOffAmount">
                                        <WriteOffAmount>
                                            <xsl:value-of select="WriteOffAmount"/>
                                        </WriteOffAmount>
                                    </xsl:if>
                                    <xsl:if test="Oldcontract">
                                        <Oldcontract>
                                            <xsl:value-of select="Oldcontract"/>
                                        </Oldcontract>
                                    </xsl:if>
                                    <xsl:if test="PortIn">
                                        <PortIn>
                                            <xsl:value-of select="PortIn"/>
                                        </PortIn>
                                    </xsl:if>
                                    <xsl:if test="PortOut">
                                        <PortOut>
                                            <xsl:value-of select="PortOut"/>
                                        </PortOut>
                                    </xsl:if>
                                    <xsl:if test="ContractStartDate">
                                        <ContractStartDate>
                                            <xsl:value-of select="ContractStartDate"/>
                                        </ContractStartDate>
                                    </xsl:if>
                                    <xsl:if test="ContractPeriod">
                                        <ContractPeriod>
                                            <xsl:value-of select="ContractPeriod"/>
                                        </ContractPeriod>
                                    </xsl:if>
                                    <xsl:if test="ContractEndDate">
                                        <ContractEndDate>
                                            <xsl:value-of select="ContractEndDate"/>
                                        </ContractEndDate>
                                    </xsl:if>
                                    <xsl:if test="Sector">
                                        <Sector>
                                            <xsl:value-of select="Sector"/>
                                        </Sector>
                                    </xsl:if>
                                    <xsl:if test="SubAccounts">
                                        <SubAccounts>
                                            <xsl:value-of select="SubAccounts"/>
                                        </SubAccounts>
                                    </xsl:if>
                                </ZainCustomerAccount>
                            </xsl:for-each>
                        </ns4:ZainCustomerAccountList>
                        <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIdentifiers"/>
                        <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainBusinessIdentifier"/>
                    </pfx4:CreateCustomerReq>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ParseResponsePrimary">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>807</pd:x>
            <pd:y>65</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx7:CreateCustomerRes"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </term>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$CreateCustomerBSCS/ResponseData"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log_CreateCustomerResponse">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>867</pd:x>
            <pd:y>143</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns22:Header>
                        <ns22:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns22:ApplicationID>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName">
                            <ns22:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName"/>
                            </ns22:ComponentName>
                        </xsl:if>
                        <ns22:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns22:Hostname>
                        <ns22:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns22:Timestamp>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER">
                            <ns22:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                            </ns22:TransactionDomain>
                        </xsl:if>
                        <ns22:TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </ns22:TransactionType>
                        <ns22:TransactionID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                        <ns22:Filename>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                        </ns22:Filename>
                        <ns22:Message>
                            <xsl:value-of select="tib:render-xml($ParseResponsePrimary/root/pfx7:CreateCustomerRes)"/>
                        </ns22:Message>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                            <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                                <ns22:AltKey>
                                    <ns22:AltKeyName>
                                        <xsl:value-of select="'SecretValue'"/>
                                    </ns22:AltKeyName>
                                    <xsl:if test="current()/PaymentMethod[1]/ZainBankPM/accountNumber">
                                        <ns22:AltKeyValue>
                                            <xsl:value-of select="current()/PaymentMethod[1]/ZainBankPM/accountNumber"/>
                                        </ns22:AltKeyValue>
                                    </xsl:if>
                                </ns22:AltKey>
                            </xsl:if>
                            <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                                <ns22:AltKey>
                                    <ns22:AltKeyName>
                                        <xsl:value-of select="'MaskedValue'"/>
                                    </ns22:AltKeyName>
                                    <ns22:AltKeyValue>
                                        <xsl:value-of select="concat(tib:left(current()/PaymentMethod[1]/ZainBankPM/accountNumber,6),'XXXXXX',tib:right(current()/PaymentMethod[1]/ZainBankPM/accountNumber,4))"/>
                                    </ns22:AltKeyValue>
                                </ns22:AltKey>
                            </xsl:if>
                        </xsl:for-each>
                    </ns22:Header>
                    <TimeDuration>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorEMSReceive">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>753</pd:x>
            <pd:y>144</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSReceiveErrorDesc"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                    </messageCode>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="SendBPResponse">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1425</pd:x>
        <pd:y>373</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Provisioning/CreayeCustomer/CRM_Response_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/External/CRMtoGW_EMSConnection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <Body>
                    <xsl:value-of select="if (exists($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:Response/ResponseCode)) then&#xA;tib:render-xml($PrepareDataForFailed/pfx6:ListOfCbio2CustomerCreationResIo) else &#xA;&#xA;if (exists($Map-Response-for-CRM/pfx6:ListOfCbio2CustomerCreationResIo)) then&#xA;tib:render-xml($Map-Response-for-CRM/pfx6:ListOfCbio2CustomerCreationResIo)&#xA;&#xA;else&#xA;tib:render-xml($PrepareDataForCRMResponse_Prepaid/pfx6:ListOfCbio2CustomerCreationResIo)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PrepareDataForCRMResponse_Prepaid">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1117</pd:x>
        <pd:y>305</pd:y>
        <config>
            <element ref="pfx6:ListOfCbio2CustomerCreationResIo"/>
        </config>
        <pd:inputBindings>
            <pfx6:ListOfCbio2CustomerCreationResIo>
                <pfx6:Account>
                    <pfx6:Id>
                        <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                    </pfx6:Id>
                    <pfx6:CBiO2BSCSId>
                        <xsl:value-of select="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value&#xA;else if(string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName='BSCS']/ns4:value)>0)&#xA;then $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName='BSCS']/ns4:value&#xA;else ''"/>
                    </pfx6:CBiO2BSCSId>
                    <xsl:if test="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value">
                        <pfx6:CBiO2BSCSHierarchyId>
                            <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value"/>
                        </pfx6:CBiO2BSCSHierarchyId>
                    </xsl:if>
                    <pfx6:Status>
                        <xsl:value-of select="'Success'"/>
                    </pfx6:Status>
                    <pfx6:ListOfCutAddress>
                        <xsl:if test="string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:systemName)>0">
                            <xsl:for-each select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId">
                                <pfx6:CutAddress>
                                    <xsl:if test="ns4:systemName">
                                        <pfx6:Id>
                                            <xsl:value-of select="ns4:systemName"/>
                                        </pfx6:Id>
                                    </xsl:if>
                                    <xsl:if test="ns4:value">
                                        <pfx6:CBiOBSCSId>
                                            <xsl:value-of select="ns4:value"/>
                                        </pfx6:CBiOBSCSId>
                                    </xsl:if>
                                    <pfx6:Status>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx6:Status>
                                </pfx6:CutAddress>
                            </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:value)>0">
                            <xsl:for-each select="$ParseQryCustRes/pfx7:CreateCustomerRes/ns4:addressId">
                                <pfx6:CutAddress>
                                    <xsl:if test="ns4:systemName">
                                        <pfx6:Id>
                                            <xsl:value-of select="ns4:systemName"/>
                                        </pfx6:Id>
                                    </xsl:if>
                                    <xsl:if test="ns4:value">
                                        <pfx6:CBiOBSCSId>
                                            <xsl:value-of select="ns4:value"/>
                                        </pfx6:CBiOBSCSId>
                                    </xsl:if>
                                    <pfx6:Status>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx6:Status>
                                </pfx6:CutAddress>
                            </xsl:for-each>
                        </xsl:if>
                    </pfx6:ListOfCutAddress>
                    <pfx6:ListOfComInvoiceProfile>
                        <xsl:if test="string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value)>0">
                            <pfx6:ComInvoiceProfile>
                                <xsl:if test="$MapCreateCustomer/root/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill[1]/billNo">
                                    <pfx6:Id>
                                        <xsl:value-of select="$MapCreateCustomer/root/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill[1]/billNo"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <pfx6:CBiO2BSCSId>
                                    <xsl:value-of select="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value&#xA;else if(string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value)>0)&#xA;then $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value&#xA;else ''"/>
                                </pfx6:CBiO2BSCSId>
                                <pfx6:Status>
                                    <xsl:value-of select="'Success'"/>
                                </pfx6:Status>
                            </pfx6:ComInvoiceProfile>
                        </xsl:if>
                        <xsl:if test="string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value)>0">
                            <pfx6:ComInvoiceProfile>
                                <xsl:if test="$ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='CRM']/ns4:value">
                                    <pfx6:Id>
                                        <xsl:value-of select="$ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='CRM']/ns4:value"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <pfx6:CBiO2BSCSId>
                                    <xsl:value-of select="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName= 'BSCS-BillingAccountId']/ns4:value&#xA;else if(string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value)>0)&#xA;then $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value&#xA;else ''"/>
                                </pfx6:CBiO2BSCSId>
                                <pfx6:Status>
                                    <xsl:value-of select="'Success'"/>
                                </pfx6:Status>
                            </pfx6:ComInvoiceProfile>
                        </xsl:if>
                    </pfx6:ListOfComInvoiceProfile>
                    <pfx6:ListOfOrganizationPaymentProfile/>
                </pfx6:Account>
            </pfx6:ListOfCbio2CustomerCreationResIo>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Create Secondary BA">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>1063</pd:x>
        <pd:y>1</pd:y>
        <pd:width>525</pd:width>
        <pd:height>226</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>MapSecondaryBAs</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Billing Response</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapSecondaryBAs</pd:from>
            <pd:to>MapToBillProcessRequest</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call Biling Process</pd:from>
            <pd:to>Parse Billing Response</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapToBillProcessRequest</pd:from>
            <pd:to>Log_BP_Request</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log_BP_Request</pd:from>
            <pd:to>Call Biling Process</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call Biling Process</pd:from>
            <pd:to>ErrorEMSReceiveBA</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="MapSecondaryBAs">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1148</pd:x>
            <pd:y>75</pd:y>
            <config>
                <element ref="pfx4:CreateCustomerReq"/>
            </config>
            <pd:inputBindings>
                <pfx4:CreateCustomerReq>
                    <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:BusinessMessageHeader"/>
                    <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:Organization"/>
                    <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList"/>
                    <ns4:ZainCustomerAccountList>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount">
                            <ZainCustomerAccount>
                                <xsl:if test="accountStatus">
                                    <accountStatus>
                                        <xsl:value-of select="accountStatus"/>
                                    </accountStatus>
                                </xsl:if>
                                <xsl:if test="accountType">
                                    <accountType>
                                        <xsl:value-of select="accountType"/>
                                    </accountType>
                                </xsl:if>
                                <xsl:if test="classificationCode">
                                    <classificationCode>
                                        <xsl:value-of select="classificationCode"/>
                                    </classificationCode>
                                </xsl:if>
                                <xsl:if test="creationDateTime">
                                    <creationDateTime>
                                        <xsl:value-of select="creationDateTime"/>
                                    </creationDateTime>
                                </xsl:if>
                                <xsl:if test="creditLimit">
                                    <creditLimit>
                                        <xsl:value-of select="creditLimit"/>
                                    </creditLimit>
                                </xsl:if>
                                <xsl:if test="currencyCode">
                                    <currencyCode>
                                        <xsl:value-of select="currencyCode"/>
                                    </currencyCode>
                                </xsl:if>
                                <xsl:if test="ID">
                                    <ID>
                                        <xsl:value-of select="ID"/>
                                    </ID>
                                </xsl:if>
                                <xsl:if test="name">
                                    <name>
                                        <xsl:value-of select="name"/>
                                    </name>
                                </xsl:if>
                                <xsl:if test="pin">
                                    <pin>
                                        <xsl:value-of select="pin"/>
                                    </pin>
                                </xsl:if>
                                <xsl:if test="parentAccountId">
                                    <parentAccountId>
                                        <xsl:value-of select="parentAccountId"/>
                                    </parentAccountId>
                                </xsl:if>
                                <xsl:if test="rootAccountId">
                                    <rootAccountId>
                                        <xsl:value-of select="rootAccountId"/>
                                    </rootAccountId>
                                </xsl:if>
                                <xsl:for-each select="LogicalResource">
                                    <LogicalResource>
                                        <xsl:if test="resourceName">
                                            <resourceName>
                                                <xsl:value-of select="resourceName"/>
                                            </resourceName>
                                        </xsl:if>
                                        <xsl:if test="resourceValue">
                                            <resourceValue>
                                                <xsl:value-of select="resourceValue"/>
                                            </resourceValue>
                                        </xsl:if>
                                    </LogicalResource>
                                </xsl:for-each>
                                <xsl:if test="ContractID">
                                    <ContractID>
                                        <xsl:value-of select="ContractID"/>
                                    </ContractID>
                                </xsl:if>
                                <xsl:if test="BillingType">
                                    <BillingType>
                                        <xsl:value-of select="BillingType"/>
                                    </BillingType>
                                </xsl:if>
                                <xsl:if test="Category">
                                    <Category>
                                        <xsl:value-of select="Category"/>
                                    </Category>
                                </xsl:if>
                                <xsl:if test="Nationality">
                                    <Nationality>
                                        <xsl:value-of select="Nationality"/>
                                    </Nationality>
                                </xsl:if>
                                <xsl:if test="ContractOwner">
                                    <ContractOwner>
                                        <xsl:value-of select="ContractOwner"/>
                                    </ContractOwner>
                                </xsl:if>
                                <xsl:if test="HasPrepaid">
                                    <HasPrepaid>
                                        <xsl:value-of select="HasPrepaid"/>
                                    </HasPrepaid>
                                </xsl:if>
                                <xsl:if test="HasPostpaid">
                                    <HasPostpaid>
                                        <xsl:value-of select="HasPostpaid"/>
                                    </HasPostpaid>
                                </xsl:if>
                                <xsl:if test="ns4:MSISDN">
                                    <ns4:MSISDN>
                                        <xsl:value-of select="ns4:MSISDN"/>
                                    </ns4:MSISDN>
                                </xsl:if>
                                <xsl:if test="ActivationCode">
                                    <ActivationCode>
                                        <xsl:value-of select="ActivationCode"/>
                                    </ActivationCode>
                                </xsl:if>
                                <xsl:if test="Email">
                                    <Email>
                                        <xsl:value-of select="Email"/>
                                    </Email>
                                </xsl:if>
                                <xsl:for-each select="ns4:EmployeeIdentifier">
                                    <ns4:EmployeeIdentifier>
                                        <xsl:if test="PFnumber">
                                            <PFnumber>
                                                <xsl:value-of select="PFnumber"/>
                                            </PFnumber>
                                        </xsl:if>
                                        <xsl:for-each select="EmployeeId">
                                            <EmployeeId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </EmployeeId>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns4:SubscriberIdentifier">
                                            <ns4:SubscriberIdentifier>
                                                <xsl:if test="ns4:MSISDN">
                                                    <ns4:MSISDN>
                                                        <xsl:value-of select="ns4:MSISDN"/>
                                                    </ns4:MSISDN>
                                                </xsl:if>
                                                <xsl:if test="ns4:IMSI">
                                                    <ns4:IMSI>
                                                        <xsl:value-of select="ns4:IMSI"/>
                                                    </ns4:IMSI>
                                                </xsl:if>
                                                <xsl:if test="DongleSerialNumber">
                                                    <DongleSerialNumber>
                                                        <xsl:value-of select="DongleSerialNumber"/>
                                                    </DongleSerialNumber>
                                                </xsl:if>
                                                <xsl:if test="ReferenceMSISDN">
                                                    <ReferenceMSISDN>
                                                        <xsl:value-of select="ReferenceMSISDN"/>
                                                    </ReferenceMSISDN>
                                                </xsl:if>
                                            </ns4:SubscriberIdentifier>
                                        </xsl:for-each>
                                        <xsl:if test="IsEmployee">
                                            <IsEmployee>
                                                <xsl:value-of select="IsEmployee"/>
                                            </IsEmployee>
                                        </xsl:if>
                                    </ns4:EmployeeIdentifier>
                                </xsl:for-each>
                                <xsl:if test="SourceofSignOff">
                                    <SourceofSignOff>
                                        <xsl:value-of select="SourceofSignOff"/>
                                    </SourceofSignOff>
                                </xsl:if>
                                <xsl:if test="Salesagent">
                                    <Salesagent>
                                        <xsl:value-of select="Salesagent"/>
                                    </Salesagent>
                                </xsl:if>
                                <xsl:if test="contractResponsible">
                                    <contractResponsible>
                                        <xsl:value-of select="contractResponsible"/>
                                    </contractResponsible>
                                </xsl:if>
                                <xsl:if test="costCodePub">
                                    <costCodePub>
                                        <xsl:value-of select="costCodePub"/>
                                    </costCodePub>
                                </xsl:if>
                                <xsl:if test="costId">
                                    <costId>
                                        <xsl:value-of select="costId"/>
                                    </costId>
                                </xsl:if>
                                <xsl:if test="crmCustomerId">
                                    <crmCustomerId>
                                        <xsl:value-of select="crmCustomerId"/>
                                    </crmCustomerId>
                                </xsl:if>
                                <xsl:if test="crmParentCustomerId">
                                    <crmParentCustomerId>
                                        <xsl:value-of select="crmParentCustomerId"/>
                                    </crmParentCustomerId>
                                </xsl:if>
                                <xsl:if test="csBillcycle">
                                    <csBillcycle>
                                        <xsl:value-of select="csBillcycle"/>
                                    </csBillcycle>
                                </xsl:if>
                                <xsl:if test="csPrepayment">
                                    <csPrepayment>
                                        <xsl:value-of select="csPrepayment"/>
                                    </csPrepayment>
                                </xsl:if>
                                <xsl:if test="csStatus">
                                    <csStatus>
                                        <xsl:value-of select="csStatus"/>
                                    </csStatus>
                                </xsl:if>
                                <xsl:if test="customerCategory">
                                    <customerCategory>
                                        <xsl:value-of select="customerCategory"/>
                                    </customerCategory>
                                </xsl:if>
                                <xsl:if test="level">
                                    <level>
                                        <xsl:value-of select="level"/>
                                    </level>
                                </xsl:if>
                                <xsl:if test="level">
                                    <mode>
                                        <xsl:value-of select="level"/>
                                    </mode>
                                </xsl:if>
                                <xsl:if test="PartyType">
                                    <PartyType>
                                        <xsl:value-of select="PartyType"/>
                                    </PartyType>
                                </xsl:if>
                                <xsl:if test="paymentResponsible">
                                    <paymentResponsible>
                                        <xsl:value-of select="paymentResponsible"/>
                                    </paymentResponsible>
                                </xsl:if>
                                <xsl:if test="accountStatusChangeReason">
                                    <accountStatusChangeReason>
                                        <xsl:value-of select="accountStatusChangeReason"/>
                                    </accountStatusChangeReason>
                                </xsl:if>
                                <xsl:if test="accountStatusChangeDate">
                                    <accountStatusChangeDate>
                                        <xsl:value-of select="accountStatusChangeDate"/>
                                    </accountStatusChangeDate>
                                </xsl:if>
                                <xsl:if test="reasonCode">
                                    <reasonCode>
                                        <xsl:value-of select="reasonCode"/>
                                    </reasonCode>
                                </xsl:if>
                                <xsl:if test="rpCode">
                                    <rpCode>
                                        <xsl:value-of select="rpCode"/>
                                    </rpCode>
                                </xsl:if>
                                <xsl:if test="sourceCustomerID">
                                    <sourceCustomerID>
                                        <xsl:value-of select="sourceCustomerID"/>
                                    </sourceCustomerID>
                                </xsl:if>
                                <xsl:if test="targetCustomerID">
                                    <targetCustomerID>
                                        <xsl:value-of select="targetCustomerID"/>
                                    </targetCustomerID>
                                </xsl:if>
                                <xsl:for-each select="ZainCustomerPayment">
                                    <ZainCustomerPayment>
                                        <xsl:if test="ID">
                                            <ID>
                                                <xsl:value-of select="ID"/>
                                            </ID>
                                        </xsl:if>
                                        <xsl:if test="paymentDate">
                                            <paymentDate>
                                                <xsl:value-of select="paymentDate"/>
                                            </paymentDate>
                                        </xsl:if>
                                        <xsl:if test="paymentReceiptDate">
                                            <paymentReceiptDate>
                                                <xsl:value-of select="paymentReceiptDate"/>
                                            </paymentReceiptDate>
                                        </xsl:if>
                                        <xsl:if test="paymentType">
                                            <paymentType>
                                                <xsl:value-of select="paymentType"/>
                                            </paymentType>
                                        </xsl:if>
                                        <xsl:if test="ID_Public">
                                            <ID_Public>
                                                <xsl:value-of select="ID_Public"/>
                                            </ID_Public>
                                        </xsl:if>
                                        <xsl:if test="current()/ns4:Status">
                                            <ns4:Status>
                                                <xsl:value-of select="current()/ns4:Status"/>
                                            </ns4:Status>
                                        </xsl:if>
                                        <xsl:if test="current()/ns4:Level">
                                            <ns4:Level>
                                                <xsl:value-of select="current()/ns4:Level"/>
                                            </ns4:Level>
                                        </xsl:if>
                                        <ns4:ModificationFlag>
                                            <xsl:if test="current()/ns4:ModificationFlag/ns4:Name">
                                                <ns4:Name>
                                                    <xsl:value-of select="current()/ns4:ModificationFlag/ns4:Name"/>
                                                </ns4:Name>
                                            </xsl:if>
                                            <xsl:if test="current()/ns4:ModificationFlag/ns4:Value">
                                                <ns4:Value>
                                                    <xsl:value-of select="current()/ns4:ModificationFlag/ns4:Value"/>
                                                </ns4:Value>
                                            </xsl:if>
                                        </ns4:ModificationFlag>
                                        <xsl:if test="cardtype">
                                            <cardtype>
                                                <xsl:value-of select="cardtype"/>
                                            </cardtype>
                                        </xsl:if>
                                        <xsl:if test="csConvratetypePaymentPub">
                                            <csConvratetypePaymentPub>
                                                <xsl:value-of select="csConvratetypePaymentPub"/>
                                            </csConvratetypePaymentPub>
                                        </xsl:if>
                                        <xsl:if test="csConvratetypeRefund">
                                            <csConvratetypeRefund>
                                                <xsl:value-of select="csConvratetypeRefund"/>
                                            </csConvratetypeRefund>
                                        </xsl:if>
                                        <xsl:if test="csConvratetypeRefundPub">
                                            <csConvratetypeRefundPub>
                                                <xsl:value-of select="csConvratetypeRefundPub"/>
                                            </csConvratetypeRefundPub>
                                        </xsl:if>
                                        <xsl:if test="conversionRate">
                                            <conversionRate>
                                                <xsl:value-of select="conversionRate"/>
                                            </conversionRate>
                                        </xsl:if>
                                        <xsl:for-each select="Money">
                                            <Money>
                                                <xsl:if test="amount">
                                                    <amount>
                                                        <xsl:value-of select="amount"/>
                                                    </amount>
                                                </xsl:if>
                                                <xsl:if test="units">
                                                    <units>
                                                        <xsl:value-of select="units"/>
                                                    </units>
                                                </xsl:if>
                                            </Money>
                                        </xsl:for-each>
                                        <xsl:for-each select="PaymentMethod">
                                            <PaymentMethod>
                                                <xsl:if test="description">
                                                    <description>
                                                        <xsl:value-of select="description"/>
                                                    </description>
                                                </xsl:if>
                                                <xsl:if test="ID">
                                                    <ID>
                                                        <xsl:value-of select="ID"/>
                                                    </ID>
                                                </xsl:if>
                                                <xsl:if test="name">
                                                    <name>
                                                        <xsl:value-of select="name"/>
                                                    </name>
                                                </xsl:if>
                                                <xsl:if test="paymentMethodType">
                                                    <paymentMethodType>
                                                        <xsl:value-of select="paymentMethodType"/>
                                                    </paymentMethodType>
                                                </xsl:if>
                                                <xsl:for-each select="CreditCardPM">
                                                    <CreditCardPM>
                                                        <xsl:if test="creditCardNumber">
                                                            <creditCardNumber>
                                                                <xsl:value-of select="creditCardNumber"/>
                                                            </creditCardNumber>
                                                        </xsl:if>
                                                        <xsl:if test="CreditCardCompanyName">
                                                            <CreditCardCompanyName>
                                                                <xsl:value-of select="CreditCardCompanyName"/>
                                                            </CreditCardCompanyName>
                                                        </xsl:if>
                                                        <xsl:if test="expirationDate">
                                                            <expirationDate>
                                                                <xsl:value-of select="expirationDate"/>
                                                            </expirationDate>
                                                        </xsl:if>
                                                        <xsl:if test="ExpirationMonth">
                                                            <ExpirationMonth>
                                                                <xsl:value-of select="ExpirationMonth"/>
                                                            </ExpirationMonth>
                                                        </xsl:if>
                                                        <xsl:if test="ExpirationYear">
                                                            <ExpirationYear>
                                                                <xsl:value-of select="ExpirationYear"/>
                                                            </ExpirationYear>
                                                        </xsl:if>
                                                        <xsl:if test="nameOnCard">
                                                            <nameOnCard>
                                                                <xsl:value-of select="nameOnCard"/>
                                                            </nameOnCard>
                                                        </xsl:if>
                                                        <xsl:if test="authorizationCode">
                                                            <authorizationCode>
                                                                <xsl:value-of select="authorizationCode"/>
                                                            </authorizationCode>
                                                        </xsl:if>
                                                        <xsl:if test="creditCardType">
                                                            <creditCardType>
                                                                <xsl:value-of select="creditCardType"/>
                                                            </creditCardType>
                                                        </xsl:if>
                                                    </CreditCardPM>
                                                </xsl:for-each>
                                                <xsl:for-each select="CashPM">
                                                    <CashPM>
                                                        <xsl:if test="cashierInfo">
                                                            <cashierInfo>
                                                                <xsl:value-of select="cashierInfo"/>
                                                            </cashierInfo>
                                                        </xsl:if>
                                                    </CashPM>
                                                </xsl:for-each>
                                                <xsl:for-each select="ZainBankPM">
                                                    <ZainBankPM>
                                                        <xsl:if test="accountNumber">
                                                            <accountNumber>
                                                                <xsl:value-of select="accountNumber"/>
                                                            </accountNumber>
                                                        </xsl:if>
                                                        <xsl:if test="accountowner">
                                                            <accountowner>
                                                                <xsl:value-of select="accountowner"/>
                                                            </accountowner>
                                                        </xsl:if>
                                                        <xsl:if test="BankCode">
                                                            <BankCode>
                                                                <xsl:value-of select="BankCode"/>
                                                            </BankCode>
                                                        </xsl:if>
                                                        <xsl:if test="BankCountry">
                                                            <BankCountry>
                                                                <xsl:value-of select="BankCountry"/>
                                                            </BankCountry>
                                                        </xsl:if>
                                                        <xsl:if test="BankName">
                                                            <BankName>
                                                                <xsl:value-of select="BankName"/>
                                                            </BankName>
                                                        </xsl:if>
                                                        <xsl:if test="BankState">
                                                            <BankState>
                                                                <xsl:value-of select="BankState"/>
                                                            </BankState>
                                                        </xsl:if>
                                                        <xsl:if test="BankStreetName">
                                                            <BankStreetName>
                                                                <xsl:value-of select="BankStreetName"/>
                                                            </BankStreetName>
                                                        </xsl:if>
                                                        <xsl:if test="BankStreetNumber">
                                                            <BankStreetNumber>
                                                                <xsl:value-of select="BankStreetNumber"/>
                                                            </BankStreetNumber>
                                                        </xsl:if>
                                                        <xsl:if test="BankZipCode">
                                                            <BankZipCode>
                                                                <xsl:value-of select="BankZipCode"/>
                                                            </BankZipCode>
                                                        </xsl:if>
                                                        <xsl:if test="CityOfBank">
                                                            <CityOfBank>
                                                                <xsl:value-of select="CityOfBank"/>
                                                            </CityOfBank>
                                                        </xsl:if>
                                                        <xsl:if test="lso3Code">
                                                            <lso3Code>
                                                                <xsl:value-of select="lso3Code"/>
                                                            </lso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="swiftCode">
                                                            <swiftCode>
                                                                <xsl:value-of select="swiftCode"/>
                                                            </swiftCode>
                                                        </xsl:if>
                                                        <xsl:if test="verificationCode">
                                                            <verificationCode>
                                                                <xsl:value-of select="verificationCode"/>
                                                            </verificationCode>
                                                        </xsl:if>
                                                        <xsl:if test="BankBranchName">
                                                            <BankBranchName>
                                                                <xsl:value-of select="BankBranchName"/>
                                                            </BankBranchName>
                                                        </xsl:if>
                                                    </ZainBankPM>
                                                </xsl:for-each>
                                                <xsl:if test="PreferredPaymentMode">
                                                    <PreferredPaymentMode>
                                                        <xsl:value-of select="PreferredPaymentMode"/>
                                                    </PreferredPaymentMode>
                                                </xsl:if>
                                                <xsl:for-each select="ns4:ChequeDetails">
                                                    <ns4:ChequeDetails>
                                                        <ns4:chequeNumber>
                                                            <xsl:value-of select="ns4:chequeNumber"/>
                                                        </ns4:chequeNumber>
                                                        <xsl:if test="ns4:bankName">
                                                            <ns4:bankName>
                                                                <xsl:value-of select="ns4:bankName"/>
                                                            </ns4:bankName>
                                                        </xsl:if>
                                                    </ns4:ChequeDetails>
                                                </xsl:for-each>
                                            </PaymentMethod>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns4:CustomerBill">
                                            <ns4:CustomerBill>
                                                <xsl:if test="billDate">
                                                    <billDate>
                                                        <xsl:value-of select="billDate"/>
                                                    </billDate>
                                                </xsl:if>
                                                <xsl:if test="billNo">
                                                    <billNo>
                                                        <xsl:value-of select="billNo"/>
                                                    </billNo>
                                                </xsl:if>
                                                <xsl:for-each select="ns4:billId">
                                                    <ns4:billId>
                                                        <xsl:if test="ns4:systemName">
                                                            <ns4:systemName>
                                                                <xsl:value-of select="ns4:systemName"/>
                                                            </ns4:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns4:value">
                                                            <ns4:value>
                                                                <xsl:value-of select="ns4:value"/>
                                                            </ns4:value>
                                                        </xsl:if>
                                                    </ns4:billId>
                                                </xsl:for-each>
                                                <ns4:paymentId>
                                                    <xsl:if test="current()/ns4:paymentId/ns4:systemName">
                                                        <ns4:systemName>
                                                            <xsl:value-of select="current()/ns4:paymentId/ns4:systemName"/>
                                                        </ns4:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="current()/ns4:paymentId/ns4:value">
                                                        <ns4:value>
                                                            <xsl:value-of select="current()/ns4:paymentId/ns4:value"/>
                                                        </ns4:value>
                                                    </xsl:if>
                                                </ns4:paymentId>
                                                <xsl:if test="current()/ModIndicator">
                                                    <ModIndicator>
                                                        <xsl:value-of select="current()/ModIndicator"/>
                                                    </ModIndicator>
                                                </xsl:if>
                                                <xsl:if test="current()/ns4:Level">
                                                    <ns4:Level>
                                                        <xsl:value-of select="current()/ns4:Level"/>
                                                    </ns4:Level>
                                                </xsl:if>
                                                <xsl:for-each select="ns4:addressId">
                                                    <ns4:addressId>
                                                        <xsl:if test="ns4:systemName">
                                                            <ns4:systemName>
                                                                <xsl:value-of select="ns4:systemName"/>
                                                            </ns4:systemName>
                                                        </xsl:if>
                                                        <xsl:if test="ns4:value">
                                                            <ns4:value>
                                                                <xsl:value-of select="ns4:value"/>
                                                            </ns4:value>
                                                        </xsl:if>
                                                    </ns4:addressId>
                                                </xsl:for-each>
                                                <xsl:if test="Format">
                                                    <Format>
                                                        <xsl:value-of select="Format"/>
                                                    </Format>
                                                </xsl:if>
                                                <xsl:if test="chargeDate">
                                                    <chargeDate>
                                                        <xsl:value-of select="chargeDate"/>
                                                    </chargeDate>
                                                </xsl:if>
                                                <xsl:if test="creditDate">
                                                    <creditDate>
                                                        <xsl:value-of select="creditDate"/>
                                                    </creditDate>
                                                </xsl:if>
                                                <xsl:if test="creditLimit">
                                                    <creditLimit>
                                                        <xsl:value-of select="creditLimit"/>
                                                    </creditLimit>
                                                </xsl:if>
                                                <xsl:if test="mailingDate">
                                                    <mailingDate>
                                                        <xsl:value-of select="mailingDate"/>
                                                    </mailingDate>
                                                </xsl:if>
                                                <xsl:if test="paymentDueDate">
                                                    <paymentDueDate>
                                                        <xsl:value-of select="paymentDueDate"/>
                                                    </paymentDueDate>
                                                </xsl:if>
                                                <xsl:if test="relationshipType">
                                                    <relationshipType>
                                                        <xsl:value-of select="relationshipType"/>
                                                    </relationshipType>
                                                </xsl:if>
                                                <xsl:for-each select="CustomerBillingCycle">
                                                    <CustomerBillingCycle>
                                                        <xsl:if test="billCyclechange">
                                                            <billCyclechange>
                                                                <xsl:value-of select="billCyclechange"/>
                                                            </billCyclechange>
                                                        </xsl:if>
                                                        <xsl:if test="billSource">
                                                            <billSource>
                                                                <xsl:value-of select="billSource"/>
                                                            </billSource>
                                                        </xsl:if>
                                                        <xsl:if test="billFrequency">
                                                            <billFrequency>
                                                                <xsl:value-of select="billFrequency"/>
                                                            </billFrequency>
                                                        </xsl:if>
                                                        <xsl:if test="billingDate">
                                                            <billingDate>
                                                                <xsl:value-of select="billingDate"/>
                                                            </billingDate>
                                                        </xsl:if>
                                                        <xsl:if test="billCycle">
                                                            <billCycle>
                                                                <xsl:value-of select="billCycle"/>
                                                            </billCycle>
                                                        </xsl:if>
                                                        <xsl:if test="chargeDate">
                                                            <chargeDate>
                                                                <xsl:value-of select="chargeDate"/>
                                                            </chargeDate>
                                                        </xsl:if>
                                                        <xsl:if test="Currency">
                                                            <Currency>
                                                                <xsl:value-of select="Currency"/>
                                                            </Currency>
                                                        </xsl:if>
                                                        <xsl:if test="ExchangeRate">
                                                            <ExchangeRate>
                                                                <xsl:value-of select="ExchangeRate"/>
                                                            </ExchangeRate>
                                                        </xsl:if>
                                                        <xsl:if test="creditDate">
                                                            <creditDate>
                                                                <xsl:value-of select="creditDate"/>
                                                            </creditDate>
                                                        </xsl:if>
                                                        <xsl:if test="mailingDate">
                                                            <mailingDate>
                                                                <xsl:value-of select="mailingDate"/>
                                                            </mailingDate>
                                                        </xsl:if>
                                                        <xsl:if test="paymentDueDate">
                                                            <paymentDueDate>
                                                                <xsl:value-of select="paymentDueDate"/>
                                                            </paymentDueDate>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByAccountClose">
                                                            <triggeredByAccountClose>
                                                                <xsl:value-of select="triggeredByAccountClose"/>
                                                            </triggeredByAccountClose>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByCustomer">
                                                            <triggeredByCustomer>
                                                                <xsl:value-of select="triggeredByCustomer"/>
                                                            </triggeredByCustomer>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByProvider">
                                                            <triggeredByProvider>
                                                                <xsl:value-of select="triggeredByProvider"/>
                                                            </triggeredByProvider>
                                                        </xsl:if>
                                                        <xsl:if test="triggeredByScheduler">
                                                            <triggeredByScheduler>
                                                                <xsl:value-of select="triggeredByScheduler"/>
                                                            </triggeredByScheduler>
                                                        </xsl:if>
                                                    </CustomerBillingCycle>
                                                </xsl:for-each>
                                                <xsl:for-each select="CustomerBillFormat">
                                                    <CustomerBillFormat>
                                                        <xsl:if test="description">
                                                            <description>
                                                                <xsl:value-of select="description"/>
                                                            </description>
                                                        </xsl:if>
                                                        <xsl:if test="name">
                                                            <name>
                                                                <xsl:value-of select="name"/>
                                                            </name>
                                                        </xsl:if>
                                                        <xsl:if test="hasCallDetails">
                                                            <hasCallDetails>
                                                                <xsl:value-of select="hasCallDetails"/>
                                                            </hasCallDetails>
                                                        </xsl:if>
                                                        <xsl:for-each select="CustomerBillPresentationMedia">
                                                            <CustomerBillPresentationMedia>
                                                                <xsl:if test="description">
                                                                    <description>
                                                                        <xsl:value-of select="description"/>
                                                                    </description>
                                                                </xsl:if>
                                                                <xsl:if test="name">
                                                                    <name>
                                                                        <xsl:value-of select="name"/>
                                                                    </name>
                                                                </xsl:if>
                                                            </CustomerBillPresentationMedia>
                                                        </xsl:for-each>
                                                    </CustomerBillFormat>
                                                </xsl:for-each>
                                                <xsl:for-each select="Money">
                                                    <Money>
                                                        <xsl:if test="amount">
                                                            <amount>
                                                                <xsl:value-of select="amount"/>
                                                            </amount>
                                                        </xsl:if>
                                                        <xsl:if test="units">
                                                            <units>
                                                                <xsl:value-of select="units"/>
                                                            </units>
                                                        </xsl:if>
                                                    </Money>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns4:ZainContact">
                                                    <ns4:ZainContact>
                                                        <xsl:for-each select="TimePeriod">
                                                            <TimePeriod>
                                                                <xsl:if test="endDateTime">
                                                                    <endDateTime>
                                                                        <xsl:value-of select="endDateTime"/>
                                                                    </endDateTime>
                                                                </xsl:if>
                                                                <xsl:if test="startDateTime">
                                                                    <startDateTime>
                                                                        <xsl:value-of select="startDateTime"/>
                                                                    </startDateTime>
                                                                </xsl:if>
                                                            </TimePeriod>
                                                        </xsl:for-each>
                                                        <xsl:if test="eMailAddress">
                                                            <eMailAddress>
                                                                <xsl:value-of select="eMailAddress"/>
                                                            </eMailAddress>
                                                        </xsl:if>
                                                        <xsl:if test="faxContact">
                                                            <faxContact>
                                                                <xsl:value-of select="faxContact"/>
                                                            </faxContact>
                                                        </xsl:if>
                                                        <xsl:if test="homeContact">
                                                            <homeContact>
                                                                <xsl:value-of select="homeContact"/>
                                                            </homeContact>
                                                        </xsl:if>
                                                        <xsl:if test="otherContact">
                                                            <otherContact>
                                                                <xsl:value-of select="otherContact"/>
                                                            </otherContact>
                                                        </xsl:if>
                                                        <xsl:if test="workContact">
                                                            <workContact>
                                                                <xsl:value-of select="workContact"/>
                                                            </workContact>
                                                        </xsl:if>
                                                        <xsl:if test="mobileNumber">
                                                            <mobileNumber>
                                                                <xsl:value-of select="mobileNumber"/>
                                                            </mobileNumber>
                                                        </xsl:if>
                                                        <xsl:if test="SMSNotificationNumForAccount">
                                                            <SMSNotificationNumForAccount>
                                                                <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                            </SMSNotificationNumForAccount>
                                                        </xsl:if>
                                                        <xsl:if test="ContactPersonName">
                                                            <ContactPersonName>
                                                                <xsl:value-of select="ContactPersonName"/>
                                                            </ContactPersonName>
                                                        </xsl:if>
                                                        <xsl:if test="Notificationnumber">
                                                            <Notificationnumber>
                                                                <xsl:value-of select="Notificationnumber"/>
                                                            </Notificationnumber>
                                                        </xsl:if>
                                                        <xsl:if test="AuthorizedPerson">
                                                            <AuthorizedPerson>
                                                                <xsl:value-of select="AuthorizedPerson"/>
                                                            </AuthorizedPerson>
                                                        </xsl:if>
                                                        <xsl:if test="ModeOfCommunication">
                                                            <ModeOfCommunication>
                                                                <xsl:value-of select="ModeOfCommunication"/>
                                                            </ModeOfCommunication>
                                                        </xsl:if>
                                                        <xsl:if test="PrefferredCommunication">
                                                            <PrefferredCommunication>
                                                                <xsl:value-of select="PrefferredCommunication"/>
                                                            </PrefferredCommunication>
                                                        </xsl:if>
                                                        <xsl:if test="Preferredlanguage">
                                                            <Preferredlanguage>
                                                                <xsl:value-of select="Preferredlanguage"/>
                                                            </Preferredlanguage>
                                                        </xsl:if>
                                                    </ns4:ZainContact>
                                                </xsl:for-each>
                                                <xsl:if test="numberOfCopies">
                                                    <numberOfCopies>
                                                        <xsl:value-of select="numberOfCopies"/>
                                                    </numberOfCopies>
                                                </xsl:if>
                                                <xsl:if test="nameToPrint">
                                                    <nameToPrint>
                                                        <xsl:value-of select="nameToPrint"/>
                                                    </nameToPrint>
                                                </xsl:if>
                                                <xsl:if test="RequestType">
                                                    <RequestType>
                                                        <xsl:value-of select="RequestType"/>
                                                    </RequestType>
                                                </xsl:if>
                                                <xsl:if test="RequestsubType">
                                                    <RequestsubType>
                                                        <xsl:value-of select="RequestsubType"/>
                                                    </RequestsubType>
                                                </xsl:if>
                                                <xsl:if test="ContractTypeId">
                                                    <ContractTypeId>
                                                        <xsl:value-of select="ContractTypeId"/>
                                                    </ContractTypeId>
                                                </xsl:if>
                                                <xsl:if test="Information">
                                                    <Information>
                                                        <xsl:value-of select="Information"/>
                                                    </Information>
                                                </xsl:if>
                                                <xsl:if test="simulation">
                                                    <simulation>
                                                        <xsl:value-of select="simulation"/>
                                                    </simulation>
                                                </xsl:if>
                                                <xsl:if test="RefernceDate">
                                                    <RefernceDate>
                                                        <xsl:value-of select="RefernceDate"/>
                                                    </RefernceDate>
                                                </xsl:if>
                                                <xsl:if test="PostingPeriod">
                                                    <PostingPeriod>
                                                        <xsl:value-of select="PostingPeriod"/>
                                                    </PostingPeriod>
                                                </xsl:if>
                                                <xsl:if test="acknowledgment">
                                                    <acknowledgment>
                                                        <xsl:value-of select="acknowledgment"/>
                                                    </acknowledgment>
                                                </xsl:if>
                                                <xsl:if test="CollectInd">
                                                    <CollectInd>
                                                        <xsl:value-of select="CollectInd"/>
                                                    </CollectInd>
                                                </xsl:if>
                                                <xsl:if test="Ignorebuind">
                                                    <Ignorebuind>
                                                        <xsl:value-of select="Ignorebuind"/>
                                                    </Ignorebuind>
                                                </xsl:if>
                                                <xsl:if test="allbusinesunits">
                                                    <allbusinesunits>
                                                        <xsl:value-of select="allbusinesunits"/>
                                                    </allbusinesunits>
                                                </xsl:if>
                                                <xsl:if test="disableinvoiceforwarding">
                                                    <disableinvoiceforwarding>
                                                        <xsl:value-of select="disableinvoiceforwarding"/>
                                                    </disableinvoiceforwarding>
                                                </xsl:if>
                                                <xsl:if test="current()/ns4:Status">
                                                    <ns4:Status>
                                                        <xsl:value-of select="current()/ns4:Status"/>
                                                    </ns4:Status>
                                                </xsl:if>
                                            </ns4:CustomerBill>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns4:ZainBankPM">
                                            <ns4:ZainBankPM>
                                                <xsl:if test="accountNumber">
                                                    <accountNumber>
                                                        <xsl:value-of select="accountNumber"/>
                                                    </accountNumber>
                                                </xsl:if>
                                                <xsl:if test="accountowner">
                                                    <accountowner>
                                                        <xsl:value-of select="accountowner"/>
                                                    </accountowner>
                                                </xsl:if>
                                                <xsl:if test="BankCode">
                                                    <BankCode>
                                                        <xsl:value-of select="BankCode"/>
                                                    </BankCode>
                                                </xsl:if>
                                                <xsl:if test="BankCountry">
                                                    <BankCountry>
                                                        <xsl:value-of select="BankCountry"/>
                                                    </BankCountry>
                                                </xsl:if>
                                                <xsl:if test="BankName">
                                                    <BankName>
                                                        <xsl:value-of select="BankName"/>
                                                    </BankName>
                                                </xsl:if>
                                                <xsl:if test="BankState">
                                                    <BankState>
                                                        <xsl:value-of select="BankState"/>
                                                    </BankState>
                                                </xsl:if>
                                                <xsl:if test="BankStreetName">
                                                    <BankStreetName>
                                                        <xsl:value-of select="BankStreetName"/>
                                                    </BankStreetName>
                                                </xsl:if>
                                                <xsl:if test="BankStreetNumber">
                                                    <BankStreetNumber>
                                                        <xsl:value-of select="BankStreetNumber"/>
                                                    </BankStreetNumber>
                                                </xsl:if>
                                                <xsl:if test="BankZipCode">
                                                    <BankZipCode>
                                                        <xsl:value-of select="BankZipCode"/>
                                                    </BankZipCode>
                                                </xsl:if>
                                                <xsl:if test="CityOfBank">
                                                    <CityOfBank>
                                                        <xsl:value-of select="CityOfBank"/>
                                                    </CityOfBank>
                                                </xsl:if>
                                                <xsl:if test="lso3Code">
                                                    <lso3Code>
                                                        <xsl:value-of select="lso3Code"/>
                                                    </lso3Code>
                                                </xsl:if>
                                                <xsl:if test="swiftCode">
                                                    <swiftCode>
                                                        <xsl:value-of select="swiftCode"/>
                                                    </swiftCode>
                                                </xsl:if>
                                                <xsl:if test="verificationCode">
                                                    <verificationCode>
                                                        <xsl:value-of select="verificationCode"/>
                                                    </verificationCode>
                                                </xsl:if>
                                                <xsl:if test="BankBranchName">
                                                    <BankBranchName>
                                                        <xsl:value-of select="BankBranchName"/>
                                                    </BankBranchName>
                                                </xsl:if>
                                            </ns4:ZainBankPM>
                                        </xsl:for-each>
                                        <xsl:if test="isPrimaryBillingAccount">
                                            <isPrimaryBillingAccount>
                                                <xsl:value-of select="isPrimaryBillingAccount"/>
                                            </isPrimaryBillingAccount>
                                        </xsl:if>
                                        <xsl:if test="isActiveBillingAccount">
                                            <isActiveBillingAccount>
                                                <xsl:value-of select="isActiveBillingAccount"/>
                                            </isActiveBillingAccount>
                                        </xsl:if>
                                        <xsl:for-each select="BillingAddressId">
                                            <BillingAddressId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </BillingAddressId>
                                        </xsl:for-each>
                                        <xsl:if test="ns4:paymentReferenceNumber">
                                            <ns4:paymentReferenceNumber>
                                                <xsl:value-of select="ns4:paymentReferenceNumber"/>
                                            </ns4:paymentReferenceNumber>
                                        </xsl:if>
                                        <xsl:if test="PaymentChannel">
                                            <PaymentChannel>
                                                <xsl:value-of select="PaymentChannel"/>
                                            </PaymentChannel>
                                        </xsl:if>
                                        <xsl:if test="Currency">
                                            <Currency>
                                                <xsl:value-of select="Currency"/>
                                            </Currency>
                                        </xsl:if>
                                        <xsl:if test="IncomeRange">
                                            <IncomeRange>
                                                <xsl:value-of select="IncomeRange"/>
                                            </IncomeRange>
                                        </xsl:if>
                                        <xsl:if test="DefaultCreditLimit">
                                            <DefaultCreditLimit>
                                                <xsl:value-of select="DefaultCreditLimit"/>
                                            </DefaultCreditLimit>
                                        </xsl:if>
                                        <xsl:if test="CutomerCreditLimit">
                                            <CutomerCreditLimit>
                                                <xsl:value-of select="CutomerCreditLimit"/>
                                            </CutomerCreditLimit>
                                        </xsl:if>
                                        <xsl:if test="CreditNote">
                                            <CreditNote>
                                                <xsl:value-of select="CreditNote"/>
                                            </CreditNote>
                                        </xsl:if>
                                        <xsl:if test="CurrentPricePlan">
                                            <CurrentPricePlan>
                                                <xsl:value-of select="CurrentPricePlan"/>
                                            </CurrentPricePlan>
                                        </xsl:if>
                                    </ZainCustomerPayment>
                                </xsl:for-each>
                                <xsl:for-each select="CustomerBill[RequestType!=&quot;Primary Account&quot;]">
                                    <CustomerBill>
                                        <xsl:if test="billDate">
                                            <billDate>
                                                <xsl:value-of select="billDate"/>
                                            </billDate>
                                        </xsl:if>
                                        <xsl:if test="billNo">
                                            <billNo>
                                                <xsl:value-of select="billNo"/>
                                            </billNo>
                                        </xsl:if>
                                        <xsl:for-each select="ns4:billId">
                                            <ns4:billId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </ns4:billId>
                                        </xsl:for-each>
                                        <ns4:paymentId>
                                            <xsl:if test="current()/ns4:paymentId/ns4:systemName">
                                                <ns4:systemName>
                                                    <xsl:value-of select="current()/ns4:paymentId/ns4:systemName"/>
                                                </ns4:systemName>
                                            </xsl:if>
                                            <xsl:if test="current()/ns4:paymentId/ns4:value">
                                                <ns4:value>
                                                    <xsl:value-of select="current()/ns4:paymentId/ns4:value"/>
                                                </ns4:value>
                                            </xsl:if>
                                        </ns4:paymentId>
                                        <ModIndicator>
                                            <xsl:value-of select="'1'"/>
                                        </ModIndicator>
                                        <xsl:if test="current()/ns4:Level">
                                            <ns4:Level>
                                                <xsl:value-of select="current()/ns4:Level"/>
                                            </ns4:Level>
                                        </xsl:if>
                                        <xsl:for-each select="ns4:addressId">
                                            <ns4:addressId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </ns4:addressId>
                                        </xsl:for-each>
                                        <Format>
                                            <xsl:value-of select="relationshipType"/>
                                        </Format>
                                        <xsl:if test="chargeDate">
                                            <chargeDate>
                                                <xsl:value-of select="chargeDate"/>
                                            </chargeDate>
                                        </xsl:if>
                                        <xsl:if test="creditDate">
                                            <creditDate>
                                                <xsl:value-of select="creditDate"/>
                                            </creditDate>
                                        </xsl:if>
                                        <xsl:if test="creditLimit">
                                            <creditLimit>
                                                <xsl:value-of select="creditLimit"/>
                                            </creditLimit>
                                        </xsl:if>
                                        <xsl:if test="mailingDate">
                                            <mailingDate>
                                                <xsl:value-of select="mailingDate"/>
                                            </mailingDate>
                                        </xsl:if>
                                        <xsl:if test="paymentDueDate">
                                            <paymentDueDate>
                                                <xsl:value-of select="paymentDueDate"/>
                                            </paymentDueDate>
                                        </xsl:if>
                                        <xsl:if test="relationshipType">
                                            <relationshipType>
                                                <xsl:value-of select="relationshipType"/>
                                            </relationshipType>
                                        </xsl:if>
                                        <xsl:for-each select="CustomerBillingCycle">
                                            <CustomerBillingCycle>
                                                <xsl:if test="billCyclechange">
                                                    <billCyclechange>
                                                        <xsl:value-of select="billCyclechange"/>
                                                    </billCyclechange>
                                                </xsl:if>
                                                <xsl:if test="billSource">
                                                    <billSource>
                                                        <xsl:value-of select="billSource"/>
                                                    </billSource>
                                                </xsl:if>
                                                <xsl:if test="billFrequency">
                                                    <billFrequency>
                                                        <xsl:value-of select="billFrequency"/>
                                                    </billFrequency>
                                                </xsl:if>
                                                <xsl:if test="billingDate">
                                                    <billingDate>
                                                        <xsl:value-of select="billingDate"/>
                                                    </billingDate>
                                                </xsl:if>
                                                <xsl:if test="billCycle">
                                                    <billCycle>
                                                        <xsl:value-of select="billCycle"/>
                                                    </billCycle>
                                                </xsl:if>
                                                <xsl:if test="chargeDate">
                                                    <chargeDate>
                                                        <xsl:value-of select="chargeDate"/>
                                                    </chargeDate>
                                                </xsl:if>
                                                <xsl:if test="Currency">
                                                    <Currency>
                                                        <xsl:value-of select="Currency"/>
                                                    </Currency>
                                                </xsl:if>
                                                <xsl:if test="ExchangeRate">
                                                    <ExchangeRate>
                                                        <xsl:value-of select="ExchangeRate"/>
                                                    </ExchangeRate>
                                                </xsl:if>
                                                <xsl:if test="creditDate">
                                                    <creditDate>
                                                        <xsl:value-of select="creditDate"/>
                                                    </creditDate>
                                                </xsl:if>
                                                <xsl:if test="mailingDate">
                                                    <mailingDate>
                                                        <xsl:value-of select="mailingDate"/>
                                                    </mailingDate>
                                                </xsl:if>
                                                <xsl:if test="paymentDueDate">
                                                    <paymentDueDate>
                                                        <xsl:value-of select="paymentDueDate"/>
                                                    </paymentDueDate>
                                                </xsl:if>
                                                <xsl:if test="triggeredByAccountClose">
                                                    <triggeredByAccountClose>
                                                        <xsl:value-of select="triggeredByAccountClose"/>
                                                    </triggeredByAccountClose>
                                                </xsl:if>
                                                <xsl:if test="triggeredByCustomer">
                                                    <triggeredByCustomer>
                                                        <xsl:value-of select="triggeredByCustomer"/>
                                                    </triggeredByCustomer>
                                                </xsl:if>
                                                <xsl:if test="triggeredByProvider">
                                                    <triggeredByProvider>
                                                        <xsl:value-of select="triggeredByProvider"/>
                                                    </triggeredByProvider>
                                                </xsl:if>
                                                <xsl:if test="triggeredByScheduler">
                                                    <triggeredByScheduler>
                                                        <xsl:value-of select="triggeredByScheduler"/>
                                                    </triggeredByScheduler>
                                                </xsl:if>
                                            </CustomerBillingCycle>
                                        </xsl:for-each>
                                        <CustomerBillFormat>
                                            <CustomerBillPresentationMedia>
                                                <xsl:if test="Format">
                                                    <name>
                                                        <xsl:value-of select="Format"/>
                                                    </name>
                                                </xsl:if>
                                            </CustomerBillPresentationMedia>
                                        </CustomerBillFormat>
                                        <xsl:for-each select="Money">
                                            <Money>
                                                <xsl:if test="amount">
                                                    <amount>
                                                        <xsl:value-of select="amount"/>
                                                    </amount>
                                                </xsl:if>
                                                <xsl:if test="units">
                                                    <units>
                                                        <xsl:value-of select="units"/>
                                                    </units>
                                                </xsl:if>
                                            </Money>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns4:ZainContact">
                                            <ns4:ZainContact>
                                                <xsl:for-each select="TimePeriod">
                                                    <TimePeriod>
                                                        <xsl:if test="endDateTime">
                                                            <endDateTime>
                                                                <xsl:value-of select="endDateTime"/>
                                                            </endDateTime>
                                                        </xsl:if>
                                                        <xsl:if test="startDateTime">
                                                            <startDateTime>
                                                                <xsl:value-of select="startDateTime"/>
                                                            </startDateTime>
                                                        </xsl:if>
                                                    </TimePeriod>
                                                </xsl:for-each>
                                                <xsl:if test="eMailAddress">
                                                    <eMailAddress>
                                                        <xsl:value-of select="eMailAddress"/>
                                                    </eMailAddress>
                                                </xsl:if>
                                                <xsl:if test="faxContact">
                                                    <faxContact>
                                                        <xsl:value-of select="faxContact"/>
                                                    </faxContact>
                                                </xsl:if>
                                                <xsl:if test="homeContact">
                                                    <homeContact>
                                                        <xsl:value-of select="homeContact"/>
                                                    </homeContact>
                                                </xsl:if>
                                                <xsl:if test="otherContact">
                                                    <otherContact>
                                                        <xsl:value-of select="otherContact"/>
                                                    </otherContact>
                                                </xsl:if>
                                                <xsl:if test="workContact">
                                                    <workContact>
                                                        <xsl:value-of select="workContact"/>
                                                    </workContact>
                                                </xsl:if>
                                                <xsl:if test="mobileNumber">
                                                    <mobileNumber>
                                                        <xsl:value-of select="mobileNumber"/>
                                                    </mobileNumber>
                                                </xsl:if>
                                                <xsl:if test="SMSNotificationNumForAccount">
                                                    <SMSNotificationNumForAccount>
                                                        <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                    </SMSNotificationNumForAccount>
                                                </xsl:if>
                                                <xsl:if test="ContactPersonName">
                                                    <ContactPersonName>
                                                        <xsl:value-of select="ContactPersonName"/>
                                                    </ContactPersonName>
                                                </xsl:if>
                                                <xsl:if test="Notificationnumber">
                                                    <Notificationnumber>
                                                        <xsl:value-of select="Notificationnumber"/>
                                                    </Notificationnumber>
                                                </xsl:if>
                                                <xsl:if test="AuthorizedPerson">
                                                    <AuthorizedPerson>
                                                        <xsl:value-of select="AuthorizedPerson"/>
                                                    </AuthorizedPerson>
                                                </xsl:if>
                                                <xsl:if test="ModeOfCommunication">
                                                    <ModeOfCommunication>
                                                        <xsl:value-of select="ModeOfCommunication"/>
                                                    </ModeOfCommunication>
                                                </xsl:if>
                                                <xsl:if test="PrefferredCommunication">
                                                    <PrefferredCommunication>
                                                        <xsl:value-of select="PrefferredCommunication"/>
                                                    </PrefferredCommunication>
                                                </xsl:if>
                                                <xsl:if test="Preferredlanguage">
                                                    <Preferredlanguage>
                                                        <xsl:value-of select="Preferredlanguage"/>
                                                    </Preferredlanguage>
                                                </xsl:if>
                                            </ns4:ZainContact>
                                        </xsl:for-each>
                                        <xsl:if test="numberOfCopies">
                                            <numberOfCopies>
                                                <xsl:value-of select="numberOfCopies"/>
                                            </numberOfCopies>
                                        </xsl:if>
                                        <xsl:if test="nameToPrint">
                                            <nameToPrint>
                                                <xsl:value-of select="nameToPrint"/>
                                            </nameToPrint>
                                        </xsl:if>
                                        <xsl:if test="RequestsubType">
                                            <RequestType>
                                                <xsl:value-of select="RequestsubType"/>
                                            </RequestType>
                                        </xsl:if>
                                        <xsl:if test="RequestType">
                                            <RequestsubType>
                                                <xsl:value-of select="RequestType"/>
                                            </RequestsubType>
                                        </xsl:if>
                                        <xsl:if test="ContractTypeId">
                                            <ContractTypeId>
                                                <xsl:value-of select="ContractTypeId"/>
                                            </ContractTypeId>
                                        </xsl:if>
                                        <xsl:if test="Information">
                                            <Information>
                                                <xsl:value-of select="Information"/>
                                            </Information>
                                        </xsl:if>
                                        <xsl:if test="simulation">
                                            <simulation>
                                                <xsl:value-of select="simulation"/>
                                            </simulation>
                                        </xsl:if>
                                        <xsl:if test="RefernceDate">
                                            <RefernceDate>
                                                <xsl:value-of select="RefernceDate"/>
                                            </RefernceDate>
                                        </xsl:if>
                                        <xsl:if test="PostingPeriod">
                                            <PostingPeriod>
                                                <xsl:value-of select="PostingPeriod"/>
                                            </PostingPeriod>
                                        </xsl:if>
                                        <xsl:if test="acknowledgment">
                                            <acknowledgment>
                                                <xsl:value-of select="acknowledgment"/>
                                            </acknowledgment>
                                        </xsl:if>
                                        <xsl:if test="CollectInd">
                                            <CollectInd>
                                                <xsl:value-of select="CollectInd"/>
                                            </CollectInd>
                                        </xsl:if>
                                        <xsl:if test="Ignorebuind">
                                            <Ignorebuind>
                                                <xsl:value-of select="Ignorebuind"/>
                                            </Ignorebuind>
                                        </xsl:if>
                                        <xsl:if test="allbusinesunits">
                                            <allbusinesunits>
                                                <xsl:value-of select="allbusinesunits"/>
                                            </allbusinesunits>
                                        </xsl:if>
                                        <xsl:if test="disableinvoiceforwarding">
                                            <disableinvoiceforwarding>
                                                <xsl:value-of select="disableinvoiceforwarding"/>
                                            </disableinvoiceforwarding>
                                        </xsl:if>
                                        <xsl:if test="current()/ns4:Status">
                                            <ns4:Status>
                                                <xsl:value-of select="current()/ns4:Status"/>
                                            </ns4:Status>
                                        </xsl:if>
                                    </CustomerBill>
                                </xsl:for-each>
                                <xsl:for-each select="CustomerBill[RequestType=&quot;Primary Account&quot;]">
                                    <CustomerBill>
                                        <xsl:if test="billDate">
                                            <billDate>
                                                <xsl:value-of select="billDate"/>
                                            </billDate>
                                        </xsl:if>
                                        <xsl:if test="billNo">
                                            <billNo>
                                                <xsl:value-of select="billNo"/>
                                            </billNo>
                                        </xsl:if>
                                        <xsl:for-each select="ns4:billId">
                                            <ns4:billId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS-BillingAccountId']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS-BillingAccountId']/ns4:value&#xA;else $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS-BillingAccountId']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS-BillingAccountId']/ns4:value&#xA;else $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/billingAccountID[ns4:systemName='BSCS']/ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </ns4:billId>
                                        </xsl:for-each>
                                        <ns4:paymentId>
                                            <xsl:if test="current()/ns4:paymentId/ns4:systemName">
                                                <ns4:systemName>
                                                    <xsl:value-of select="current()/ns4:paymentId/ns4:systemName"/>
                                                </ns4:systemName>
                                            </xsl:if>
                                            <xsl:if test="current()/ns4:paymentId/ns4:value">
                                                <ns4:value>
                                                    <xsl:value-of select="current()/ns4:paymentId/ns4:value"/>
                                                </ns4:value>
                                            </xsl:if>
                                        </ns4:paymentId>
                                        <ModIndicator>
                                            <xsl:value-of select="'1'"/>
                                        </ModIndicator>
                                        <xsl:if test="current()/ns4:Level">
                                            <ns4:Level>
                                                <xsl:value-of select="current()/ns4:Level"/>
                                            </ns4:Level>
                                        </xsl:if>
                                        <xsl:for-each select="ns4:addressId">
                                            <ns4:addressId>
                                                <xsl:if test="ns4:systemName">
                                                    <ns4:systemName>
                                                        <xsl:value-of select="ns4:systemName"/>
                                                    </ns4:systemName>
                                                </xsl:if>
                                                <xsl:if test="ns4:value">
                                                    <ns4:value>
                                                        <xsl:value-of select="ns4:value"/>
                                                    </ns4:value>
                                                </xsl:if>
                                            </ns4:addressId>
                                        </xsl:for-each>
                                        <Format>
                                            <xsl:value-of select="relationshipType"/>
                                        </Format>
                                        <xsl:if test="chargeDate">
                                            <chargeDate>
                                                <xsl:value-of select="chargeDate"/>
                                            </chargeDate>
                                        </xsl:if>
                                        <xsl:if test="creditDate">
                                            <creditDate>
                                                <xsl:value-of select="creditDate"/>
                                            </creditDate>
                                        </xsl:if>
                                        <xsl:if test="creditLimit">
                                            <creditLimit>
                                                <xsl:value-of select="creditLimit"/>
                                            </creditLimit>
                                        </xsl:if>
                                        <xsl:if test="mailingDate">
                                            <mailingDate>
                                                <xsl:value-of select="mailingDate"/>
                                            </mailingDate>
                                        </xsl:if>
                                        <xsl:if test="paymentDueDate">
                                            <paymentDueDate>
                                                <xsl:value-of select="paymentDueDate"/>
                                            </paymentDueDate>
                                        </xsl:if>
                                        <xsl:if test="relationshipType">
                                            <relationshipType>
                                                <xsl:value-of select="relationshipType"/>
                                            </relationshipType>
                                        </xsl:if>
                                        <xsl:for-each select="CustomerBillingCycle">
                                            <CustomerBillingCycle>
                                                <xsl:if test="billCyclechange">
                                                    <billCyclechange>
                                                        <xsl:value-of select="billCyclechange"/>
                                                    </billCyclechange>
                                                </xsl:if>
                                                <xsl:if test="billSource">
                                                    <billSource>
                                                        <xsl:value-of select="billSource"/>
                                                    </billSource>
                                                </xsl:if>
                                                <xsl:if test="billFrequency">
                                                    <billFrequency>
                                                        <xsl:value-of select="billFrequency"/>
                                                    </billFrequency>
                                                </xsl:if>
                                                <xsl:if test="billingDate">
                                                    <billingDate>
                                                        <xsl:value-of select="billingDate"/>
                                                    </billingDate>
                                                </xsl:if>
                                                <xsl:if test="billCycle">
                                                    <billCycle>
                                                        <xsl:value-of select="billCycle"/>
                                                    </billCycle>
                                                </xsl:if>
                                                <xsl:if test="chargeDate">
                                                    <chargeDate>
                                                        <xsl:value-of select="chargeDate"/>
                                                    </chargeDate>
                                                </xsl:if>
                                                <xsl:if test="Currency">
                                                    <Currency>
                                                        <xsl:value-of select="Currency"/>
                                                    </Currency>
                                                </xsl:if>
                                                <xsl:if test="ExchangeRate">
                                                    <ExchangeRate>
                                                        <xsl:value-of select="ExchangeRate"/>
                                                    </ExchangeRate>
                                                </xsl:if>
                                                <xsl:if test="creditDate">
                                                    <creditDate>
                                                        <xsl:value-of select="creditDate"/>
                                                    </creditDate>
                                                </xsl:if>
                                                <xsl:if test="mailingDate">
                                                    <mailingDate>
                                                        <xsl:value-of select="mailingDate"/>
                                                    </mailingDate>
                                                </xsl:if>
                                                <xsl:if test="paymentDueDate">
                                                    <paymentDueDate>
                                                        <xsl:value-of select="paymentDueDate"/>
                                                    </paymentDueDate>
                                                </xsl:if>
                                                <xsl:if test="triggeredByAccountClose">
                                                    <triggeredByAccountClose>
                                                        <xsl:value-of select="triggeredByAccountClose"/>
                                                    </triggeredByAccountClose>
                                                </xsl:if>
                                                <xsl:if test="triggeredByCustomer">
                                                    <triggeredByCustomer>
                                                        <xsl:value-of select="triggeredByCustomer"/>
                                                    </triggeredByCustomer>
                                                </xsl:if>
                                                <xsl:if test="triggeredByProvider">
                                                    <triggeredByProvider>
                                                        <xsl:value-of select="triggeredByProvider"/>
                                                    </triggeredByProvider>
                                                </xsl:if>
                                                <xsl:if test="triggeredByScheduler">
                                                    <triggeredByScheduler>
                                                        <xsl:value-of select="triggeredByScheduler"/>
                                                    </triggeredByScheduler>
                                                </xsl:if>
                                            </CustomerBillingCycle>
                                        </xsl:for-each>
                                        <CustomerBillFormat>
                                            <CustomerBillPresentationMedia>
                                                <xsl:if test="Format">
                                                    <name>
                                                        <xsl:value-of select="Format"/>
                                                    </name>
                                                </xsl:if>
                                            </CustomerBillPresentationMedia>
                                        </CustomerBillFormat>
                                        <xsl:for-each select="Money">
                                            <Money>
                                                <xsl:if test="amount">
                                                    <amount>
                                                        <xsl:value-of select="amount"/>
                                                    </amount>
                                                </xsl:if>
                                                <xsl:if test="units">
                                                    <units>
                                                        <xsl:value-of select="units"/>
                                                    </units>
                                                </xsl:if>
                                            </Money>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns4:ZainContact">
                                            <ns4:ZainContact>
                                                <xsl:for-each select="TimePeriod">
                                                    <TimePeriod>
                                                        <xsl:if test="endDateTime">
                                                            <endDateTime>
                                                                <xsl:value-of select="endDateTime"/>
                                                            </endDateTime>
                                                        </xsl:if>
                                                        <xsl:if test="startDateTime">
                                                            <startDateTime>
                                                                <xsl:value-of select="startDateTime"/>
                                                            </startDateTime>
                                                        </xsl:if>
                                                    </TimePeriod>
                                                </xsl:for-each>
                                                <xsl:if test="eMailAddress">
                                                    <eMailAddress>
                                                        <xsl:value-of select="eMailAddress"/>
                                                    </eMailAddress>
                                                </xsl:if>
                                                <xsl:if test="faxContact">
                                                    <faxContact>
                                                        <xsl:value-of select="faxContact"/>
                                                    </faxContact>
                                                </xsl:if>
                                                <xsl:if test="homeContact">
                                                    <homeContact>
                                                        <xsl:value-of select="homeContact"/>
                                                    </homeContact>
                                                </xsl:if>
                                                <xsl:if test="otherContact">
                                                    <otherContact>
                                                        <xsl:value-of select="otherContact"/>
                                                    </otherContact>
                                                </xsl:if>
                                                <xsl:if test="workContact">
                                                    <workContact>
                                                        <xsl:value-of select="workContact"/>
                                                    </workContact>
                                                </xsl:if>
                                                <xsl:if test="mobileNumber">
                                                    <mobileNumber>
                                                        <xsl:value-of select="mobileNumber"/>
                                                    </mobileNumber>
                                                </xsl:if>
                                                <xsl:if test="SMSNotificationNumForAccount">
                                                    <SMSNotificationNumForAccount>
                                                        <xsl:value-of select="SMSNotificationNumForAccount"/>
                                                    </SMSNotificationNumForAccount>
                                                </xsl:if>
                                                <xsl:if test="ContactPersonName">
                                                    <ContactPersonName>
                                                        <xsl:value-of select="ContactPersonName"/>
                                                    </ContactPersonName>
                                                </xsl:if>
                                                <xsl:if test="Notificationnumber">
                                                    <Notificationnumber>
                                                        <xsl:value-of select="Notificationnumber"/>
                                                    </Notificationnumber>
                                                </xsl:if>
                                                <xsl:if test="AuthorizedPerson">
                                                    <AuthorizedPerson>
                                                        <xsl:value-of select="AuthorizedPerson"/>
                                                    </AuthorizedPerson>
                                                </xsl:if>
                                                <xsl:if test="ModeOfCommunication">
                                                    <ModeOfCommunication>
                                                        <xsl:value-of select="ModeOfCommunication"/>
                                                    </ModeOfCommunication>
                                                </xsl:if>
                                                <xsl:if test="PrefferredCommunication">
                                                    <PrefferredCommunication>
                                                        <xsl:value-of select="PrefferredCommunication"/>
                                                    </PrefferredCommunication>
                                                </xsl:if>
                                                <xsl:if test="Preferredlanguage">
                                                    <Preferredlanguage>
                                                        <xsl:value-of select="Preferredlanguage"/>
                                                    </Preferredlanguage>
                                                </xsl:if>
                                            </ns4:ZainContact>
                                        </xsl:for-each>
                                        <xsl:if test="numberOfCopies">
                                            <numberOfCopies>
                                                <xsl:value-of select="numberOfCopies"/>
                                            </numberOfCopies>
                                        </xsl:if>
                                        <xsl:if test="nameToPrint">
                                            <nameToPrint>
                                                <xsl:value-of select="nameToPrint"/>
                                            </nameToPrint>
                                        </xsl:if>
                                        <xsl:if test="RequestsubType">
                                            <RequestType>
                                                <xsl:value-of select="RequestsubType"/>
                                            </RequestType>
                                        </xsl:if>
                                        <xsl:if test="RequestType">
                                            <RequestsubType>
                                                <xsl:value-of select="RequestType"/>
                                            </RequestsubType>
                                        </xsl:if>
                                        <xsl:if test="ContractTypeId">
                                            <ContractTypeId>
                                                <xsl:value-of select="ContractTypeId"/>
                                            </ContractTypeId>
                                        </xsl:if>
                                        <xsl:if test="Information">
                                            <Information>
                                                <xsl:value-of select="Information"/>
                                            </Information>
                                        </xsl:if>
                                        <xsl:if test="simulation">
                                            <simulation>
                                                <xsl:value-of select="simulation"/>
                                            </simulation>
                                        </xsl:if>
                                        <xsl:if test="RefernceDate">
                                            <RefernceDate>
                                                <xsl:value-of select="RefernceDate"/>
                                            </RefernceDate>
                                        </xsl:if>
                                        <xsl:if test="PostingPeriod">
                                            <PostingPeriod>
                                                <xsl:value-of select="PostingPeriod"/>
                                            </PostingPeriod>
                                        </xsl:if>
                                        <xsl:if test="acknowledgment">
                                            <acknowledgment>
                                                <xsl:value-of select="acknowledgment"/>
                                            </acknowledgment>
                                        </xsl:if>
                                        <xsl:if test="CollectInd">
                                            <CollectInd>
                                                <xsl:value-of select="CollectInd"/>
                                            </CollectInd>
                                        </xsl:if>
                                        <xsl:if test="Ignorebuind">
                                            <Ignorebuind>
                                                <xsl:value-of select="Ignorebuind"/>
                                            </Ignorebuind>
                                        </xsl:if>
                                        <xsl:if test="allbusinesunits">
                                            <allbusinesunits>
                                                <xsl:value-of select="allbusinesunits"/>
                                            </allbusinesunits>
                                        </xsl:if>
                                        <xsl:if test="disableinvoiceforwarding">
                                            <disableinvoiceforwarding>
                                                <xsl:value-of select="disableinvoiceforwarding"/>
                                            </disableinvoiceforwarding>
                                        </xsl:if>
                                        <xsl:if test="current()/ns4:Status">
                                            <ns4:Status>
                                                <xsl:value-of select="current()/ns4:Status"/>
                                            </ns4:Status>
                                        </xsl:if>
                                    </CustomerBill>
                                </xsl:for-each>
                                <xsl:for-each select="ZainDealer">
                                    <ZainDealer>
                                        <xsl:if test="dealerID">
                                            <dealerID>
                                                <xsl:value-of select="dealerID"/>
                                            </dealerID>
                                        </xsl:if>
                                        <xsl:if test="dealerIDPub">
                                            <dealerIDPub>
                                                <xsl:value-of select="dealerIDPub"/>
                                            </dealerIDPub>
                                        </xsl:if>
                                    </ZainDealer>
                                </xsl:for-each>
                                <xsl:for-each select="ZainThreshold">
                                    <ZainThreshold>
                                        <xsl:if test="LimitTr1">
                                            <LimitTr1>
                                                <xsl:value-of select="LimitTr1"/>
                                            </LimitTr1>
                                        </xsl:if>
                                        <xsl:if test="LimitTr1Pub">
                                            <LimitTr1Pub>
                                                <xsl:value-of select="LimitTr1Pub"/>
                                            </LimitTr1Pub>
                                        </xsl:if>
                                        <xsl:if test="LimitTr2">
                                            <LimitTr2>
                                                <xsl:value-of select="LimitTr2"/>
                                            </LimitTr2>
                                        </xsl:if>
                                        <xsl:if test="LimitTr2Pub">
                                            <LimitTr2Pub>
                                                <xsl:value-of select="LimitTr2Pub"/>
                                            </LimitTr2Pub>
                                        </xsl:if>
                                        <xsl:if test="LimitTr3">
                                            <LimitTr3>
                                                <xsl:value-of select="LimitTr3"/>
                                            </LimitTr3>
                                        </xsl:if>
                                        <xsl:if test="LimitTr3Pub">
                                            <LimitTr3Pub>
                                                <xsl:value-of select="LimitTr3Pub"/>
                                            </LimitTr3Pub>
                                        </xsl:if>
                                    </ZainThreshold>
                                </xsl:for-each>
                                <xsl:if test="customerRating">
                                    <customerRating>
                                        <xsl:value-of select="customerRating"/>
                                    </customerRating>
                                </xsl:if>
                                <xsl:if test="LineOfBusiness">
                                    <LineOfBusiness>
                                        <xsl:value-of select="LineOfBusiness"/>
                                    </LineOfBusiness>
                                </xsl:if>
                                <xsl:if test="LineOfBusinessType">
                                    <LineOfBusinessType>
                                        <xsl:value-of select="LineOfBusinessType"/>
                                    </LineOfBusinessType>
                                </xsl:if>
                                <xsl:if test="ID">
                                    <AccountNumber>
                                        <xsl:value-of select="ID"/>
                                    </AccountNumber>
                                </xsl:if>
                                <xsl:if test="ParentAccountName">
                                    <ParentAccountName>
                                        <xsl:value-of select="ParentAccountName"/>
                                    </ParentAccountName>
                                </xsl:if>
                                <xsl:if test="WriteOffAmount">
                                    <WriteOffAmount>
                                        <xsl:value-of select="WriteOffAmount"/>
                                    </WriteOffAmount>
                                </xsl:if>
                                <xsl:if test="Oldcontract">
                                    <Oldcontract>
                                        <xsl:value-of select="Oldcontract"/>
                                    </Oldcontract>
                                </xsl:if>
                                <xsl:if test="PortIn">
                                    <PortIn>
                                        <xsl:value-of select="PortIn"/>
                                    </PortIn>
                                </xsl:if>
                                <xsl:if test="PortOut">
                                    <PortOut>
                                        <xsl:value-of select="PortOut"/>
                                    </PortOut>
                                </xsl:if>
                                <xsl:if test="ContractStartDate">
                                    <ContractStartDate>
                                        <xsl:value-of select="ContractStartDate"/>
                                    </ContractStartDate>
                                </xsl:if>
                                <xsl:if test="ContractPeriod">
                                    <ContractPeriod>
                                        <xsl:value-of select="ContractPeriod"/>
                                    </ContractPeriod>
                                </xsl:if>
                                <xsl:if test="ContractEndDate">
                                    <ContractEndDate>
                                        <xsl:value-of select="ContractEndDate"/>
                                    </ContractEndDate>
                                </xsl:if>
                                <xsl:if test="Sector">
                                    <Sector>
                                        <xsl:value-of select="Sector"/>
                                    </Sector>
                                </xsl:if>
                                <xsl:if test="SubAccounts">
                                    <SubAccounts>
                                        <xsl:value-of select="SubAccounts"/>
                                    </SubAccounts>
                                </xsl:if>
                            </ZainCustomerAccount>
                        </xsl:for-each>
                    </ns4:ZainCustomerAccountList>
                    <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIdentifiers"/>
                    <xsl:copy-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainBusinessIdentifier"/>
                </pfx4:CreateCustomerReq>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call Biling Process">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1387</pd:x>
            <pd:y>79</pd:y>
            <config>
                <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <MessageBody>
                        <xsl:value-of select="tib:render-xml($MapToBillProcessRequest/pfx5:CreateBillProcessRequest)"/>
                    </MessageBody>
                    <TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <EMS_DestinationQueue>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Modification/CreateModifyBillingProfile/BPI_Request_CreateModifyBP"/>
                    </EMS_DestinationQueue>
                    <xsl:if test="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <RequestTimeOut>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/BPIRequestTimeout"/>
                    </RequestTimeOut>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapToBillProcessRequest">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1247</pd:x>
            <pd:y>71</pd:y>
            <config>
                <element ref="pfx5:CreateBillProcessRequest"/>
            </config>
            <pd:inputBindings>
                <pfx5:CreateBillProcessRequest>
                    <xsl:copy-of select="$MapSecondaryBAs/pfx4:CreateCustomerReq/ns4:BusinessMessageHeader"/>
                    <ns4:ZainCustomerAccountList>
                        <xsl:for-each select="$MapSecondaryBAs/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount">
                            <ZainCustomerAccount>
                                <xsl:if test="ID">
                                    <ID>
                                        <xsl:value-of select="ID"/>
                                    </ID>
                                </xsl:if>
                                <xsl:if test="costCodePub">
                                    <costCodePub>
                                        <xsl:value-of select="costCodePub"/>
                                    </costCodePub>
                                </xsl:if>
                                <xsl:if test="costId">
                                    <costId>
                                        <xsl:value-of select="costId"/>
                                    </costId>
                                </xsl:if>
                                <xsl:if test="level">
                                    <level>
                                        <xsl:value-of select="level"/>
                                    </level>
                                </xsl:if>
                                <xsl:copy-of select="ZainCustomerPayment"/>
                                <xsl:copy-of select="CustomerBill"/>
                            </ZainCustomerAccount>
                        </xsl:for-each>
                    </ns4:ZainCustomerAccountList>
                </pfx5:CreateBillProcessRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Billing Response">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>1491</pd:x>
            <pd:y>96</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term ref="pfx5:CreateBillProcessRequest"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Call-Biling-Process/ResponseData"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log_BP_Request">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1296</pd:x>
            <pd:y>159</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns22:Header>
                        <ns22:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns22:ApplicationID>
                        <ns22:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName"/>
                        </ns22:ComponentName>
                        <ns22:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns22:Hostname>
                        <ns22:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns22:Timestamp>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER">
                            <ns22:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                            </ns22:TransactionDomain>
                        </xsl:if>
                        <ns22:TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </ns22:TransactionType>
                        <ns22:TransactionID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                        <ns22:Filename>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                        </ns22:Filename>
                        <ns22:Message>
                            <xsl:value-of select="tib:render-xml($MapToBillProcessRequest/pfx5:CreateBillProcessRequest)"/>
                        </ns22:Message>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                            <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                                <ns22:AltKey>
                                    <ns22:AltKeyName>
                                        <xsl:value-of select="'SecretValue'"/>
                                    </ns22:AltKeyName>
                                    <xsl:if test="current()/PaymentMethod[1]/ZainBankPM/accountNumber">
                                        <ns22:AltKeyValue>
                                            <xsl:value-of select="current()/PaymentMethod[1]/ZainBankPM/accountNumber"/>
                                        </ns22:AltKeyValue>
                                    </xsl:if>
                                </ns22:AltKey>
                            </xsl:if>
                            <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                                <ns22:AltKey>
                                    <ns22:AltKeyName>
                                        <xsl:value-of select="'MaskedValue'"/>
                                    </ns22:AltKeyName>
                                    <ns22:AltKeyValue>
                                        <xsl:value-of select="concat(tib:left(current()/PaymentMethod[1]/ZainBankPM/accountNumber,6),'XXXXXX',tib:right(current()/PaymentMethod[1]/ZainBankPM/accountNumber,4))"/>
                                    </ns22:AltKeyValue>
                                </ns22:AltKey>
                            </xsl:if>
                        </xsl:for-each>
                    </ns22:Header>
                    <TimeDuration>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorEMSReceiveBA">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>1453</pd:x>
            <pd:y>165</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSReceiveErrorDesc">
                        <message>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSReceiveErrorDesc"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode">
                        <messageCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="PrepareDataForFailed">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1170</pd:x>
        <pd:y>395</pd:y>
        <config>
            <element ref="pfx6:ListOfCbio2CustomerCreationResIo"/>
        </config>
        <pd:inputBindings>
            <pfx6:ListOfCbio2CustomerCreationResIo>
                <pfx6:Account>
                    <pfx6:Id>
                        <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                    </pfx6:Id>
                    <xsl:if test="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value">
                        <pfx6:CBiO2BSCSHierarchyId>
                            <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value"/>
                        </pfx6:CBiO2BSCSHierarchyId>
                    </xsl:if>
                    <pfx6:ErrorSourceSystem>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceSystem"/>
                    </pfx6:ErrorSourceSystem>
                    <pfx6:ErrorAdditionalDesc1>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc1"/>
                    </pfx6:ErrorAdditionalDesc1>
                    <pfx6:ErrorAdditionalDesc2>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc2"/>
                    </pfx6:ErrorAdditionalDesc2>
                    <pfx6:ErrorOccuranceTime>
                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                    </pfx6:ErrorOccuranceTime>
                    <pfx6:ErrorSourceErrCode>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrCode"/>
                    </pfx6:ErrorSourceErrCode>
                    <pfx6:ErrorSourceErrDesc>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrDesc"/>
                    </pfx6:ErrorSourceErrDesc>
                    <pfx6:ErrorType>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorType"/>
                    </pfx6:ErrorType>
                    <pfx6:ErrorUserErrCode>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrCode"/>
                    </pfx6:ErrorUserErrCode>
                    <pfx6:ErrorUserErrDesc>
                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrDesc"/>
                    </pfx6:ErrorUserErrDesc>
                    <pfx6:Status>
                        <xsl:value-of select="'Failed'"/>
                    </pfx6:Status>
                    <pfx6:ListOfCutAddress>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual/ZainAddress">
                            <pfx6:CutAddress>
                                <xsl:if test="sourceAddressId">
                                    <pfx6:Id>
                                        <xsl:value-of select="sourceAddressId"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <pfx6:ErrorAdditionalDesc1>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc1"/>
                                </pfx6:ErrorAdditionalDesc1>
                                <pfx6:ErrorAdditionalDesc2>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc2"/>
                                </pfx6:ErrorAdditionalDesc2>
                                <pfx6:ErrorOccuranceTime>
                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                </pfx6:ErrorOccuranceTime>
                                <pfx6:ErrorSourceErrCode>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrCode"/>
                                </pfx6:ErrorSourceErrCode>
                                <pfx6:ErrorSourceErrDesc>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrDesc"/>
                                </pfx6:ErrorSourceErrDesc>
                                <pfx6:ErrorSourceSystem>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceSystem"/>
                                </pfx6:ErrorSourceSystem>
                                <pfx6:ErrorType>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorType"/>
                                </pfx6:ErrorType>
                                <pfx6:ErrorUserErrDesc>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrCode"/>
                                </pfx6:ErrorUserErrDesc>
                                <pfx6:ErrorUserErrCode>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrDesc"/>
                                </pfx6:ErrorUserErrCode>
                                <pfx6:Status>
                                    <xsl:value-of select="'Failed'"/>
                                </pfx6:Status>
                            </pfx6:CutAddress>
                        </xsl:for-each>
                    </pfx6:ListOfCutAddress>
                    <pfx6:ListOfComInvoiceProfile>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill">
                            <pfx6:ComInvoiceProfile>
                                <xsl:if test="billNo">
                                    <pfx6:Id>
                                        <xsl:value-of select="billNo"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <pfx6:ErrorAdditionalDesc1>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc1"/>
                                </pfx6:ErrorAdditionalDesc1>
                                <pfx6:ErrorAdditionalDesc2>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc2"/>
                                </pfx6:ErrorAdditionalDesc2>
                                <pfx6:ErrorOccuranceTime>
                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                </pfx6:ErrorOccuranceTime>
                                <pfx6:ErrorSourceErrCode>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrCode"/>
                                </pfx6:ErrorSourceErrCode>
                                <pfx6:ErrorSourceErrDesc>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrDesc"/>
                                </pfx6:ErrorSourceErrDesc>
                                <pfx6:ErrorSourceSystem>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceSystem"/>
                                </pfx6:ErrorSourceSystem>
                                <pfx6:ErrorType>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorType"/>
                                </pfx6:ErrorType>
                                <pfx6:ErrorUserErrCode>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrCode"/>
                                </pfx6:ErrorUserErrCode>
                                <pfx6:ErrorUserErrDesc>
                                    <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrDesc"/>
                                </pfx6:ErrorUserErrDesc>
                                <pfx6:Status>
                                    <xsl:value-of select="'Failed'"/>
                                </pfx6:Status>
                            </pfx6:ComInvoiceProfile>
                        </xsl:for-each>
                    </pfx6:ListOfComInvoiceProfile>
                    <pfx6:ListOfOrganizationPaymentProfile>
                        <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                            <pfx6:OrganizationPaymentProfile>
                                <xsl:if test="ID">
                                    <pfx6:Id>
                                        <xsl:value-of select="ID"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorAdditionalDesc1">
                                    <pfx6:ErrorAdditionalDesc1>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc1"/>
                                    </pfx6:ErrorAdditionalDesc1>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorAdditionalDesc2">
                                    <pfx6:ErrorAdditionalDesc2>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorAdditionalDesc2"/>
                                    </pfx6:ErrorAdditionalDesc2>
                                </xsl:if>
                                <pfx6:ErrorOccuranceTime>
                                    <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                </pfx6:ErrorOccuranceTime>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorSourceErrCode">
                                    <pfx6:ErrorSourceErrCode>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrCode"/>
                                    </pfx6:ErrorSourceErrCode>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorSourceSystem">
                                    <pfx6:ErrorSourceSystem>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceSystem"/>
                                    </pfx6:ErrorSourceSystem>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorType">
                                    <pfx6:ErrorType>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorType"/>
                                    </pfx6:ErrorType>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorUserErrDesc">
                                    <pfx6:ErrorUserErrDesc>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrDesc"/>
                                    </pfx6:ErrorUserErrDesc>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorSourceErrDesc">
                                    <pfx6:ErrorSourceErrDesc>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorSourceErrDesc"/>
                                    </pfx6:ErrorSourceErrDesc>
                                </xsl:if>
                                <xsl:if test="$GetResponseCodeForFailed/root/ErrorUserErrCode">
                                    <pfx6:ErrorUserErrCode>
                                        <xsl:value-of select="$GetResponseCodeForFailed/root/ErrorUserErrCode"/>
                                    </pfx6:ErrorUserErrCode>
                                </xsl:if>
                                <pfx6:Status>
                                    <xsl:value-of select="'Failed'"/>
                                </pfx6:Status>
                            </pfx6:OrganizationPaymentProfile>
                        </xsl:for-each>
                    </pfx6:ListOfOrganizationPaymentProfile>
                </pfx6:Account>
            </pfx6:ListOfCbio2CustomerCreationResIo>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>993</pd:x>
        <pd:y>191</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetResponseCodeForFailed">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>995</pd:x>
        <pd:y>406</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="'BSCS'"/>
                </SourceSystem>
                <ResponseCode>
                    <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:Response/ResponseCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:Response/ResponseDescription"/>
                </ResponseDescription>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetDefaultStatus">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>990</pd:x>
        <pd:y>66</pd:y>
        <config>
            <variableName>Variable0</variableName>
        </config>
        <pd:inputBindings>
            <CheckStatus>
                <xsl:value-of select="'Success'"/>
            </CheckStatus>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>705</pd:x>
        <pd:y>307</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="CheckStatusForBP">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>1777</pd:x>
        <pd:y>1</pd:y>
        <pd:width>150</pd:width>
        <pd:height>151</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-Billing-Response/pfx5:CreateBillProcessRequest/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill</pd:over>
            <pd:iterationElementSlot>result</pd:iterationElementSlot>
            <pd:indexSlot>ii</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>FetchStatus</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>FetchStatus</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="FetchStatus">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>1847</pd:x>
            <pd:y>64</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <CheckStatus>
                    <xsl:value-of select="if(($result/CustomerBill/ns4:Status='0') and $Variable0/CheckStatus='Success') then 'Success'&#xA;else 'Failed'"/>
                </CheckStatus>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Log_BP_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1668</pd:x>
        <pd:y>54</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER">
                        <ns22:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                        </ns22:TransactionDomain>
                    </xsl:if>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Parse-Billing-Response/pfx5:CreateBillProcessRequest)"/>
                    </ns22:Message>
                    <xsl:for-each select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'SecretValue'"/>
                                </ns22:AltKeyName>
                                <xsl:if test="current()/PaymentMethod[1]/ZainBankPM/accountNumber">
                                    <ns22:AltKeyValue>
                                        <xsl:value-of select="current()/PaymentMethod[1]/ZainBankPM/accountNumber"/>
                                    </ns22:AltKeyValue>
                                </xsl:if>
                            </ns22:AltKey>
                        </xsl:if>
                        <xsl:if test="string-length(current()/PaymentMethod[1]/ZainBankPM/accountNumber)>0">
                            <ns22:AltKey>
                                <ns22:AltKeyName>
                                    <xsl:value-of select="'MaskedValue'"/>
                                </ns22:AltKeyName>
                                <ns22:AltKeyValue>
                                    <xsl:value-of select="concat(tib:left(current()/PaymentMethod[1]/ZainBankPM/accountNumber,6),'XXXXXX',tib:right(current()/PaymentMethod[1]/ZainBankPM/accountNumber,4))"/>
                                </ns22:AltKeyValue>
                            </ns22:AltKey>
                        </xsl:if>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Response for CRM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1851</pd:x>
        <pd:y>386</pd:y>
        <config>
            <element ref="pfx6:ListOfCbio2CustomerCreationResIo"/>
        </config>
        <pd:inputBindings>
            <pfx6:ListOfCbio2CustomerCreationResIo>
                <pfx6:Account>
                    <pfx6:Id>
                        <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/crmCustomerId"/>
                    </pfx6:Id>
                    <pfx6:CBiO2BSCSId>
                        <xsl:value-of select="if(string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value)>0)&#xA;then $ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName= 'BSCS-Id']/ns4:value&#xA;else if(string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName='BSCS']/ns4:value)>0)&#xA;then $ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName='BSCS']/ns4:value&#xA;else ''"/>
                    </pfx6:CBiO2BSCSId>
                    <xsl:if test="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value">
                        <pfx6:CBiO2BSCSHierarchyId>
                            <xsl:value-of select="$ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainIndividualList/ZainIndividual[1]/ZainAddress[1]/targetAddressId[ns4:systemName=&quot;BSCSAddressId&quot;]/ns4:value"/>
                        </pfx6:CBiO2BSCSHierarchyId>
                    </xsl:if>
                    <pfx6:Status>
                        <xsl:value-of select="$Variable0/CheckStatus"/>
                    </pfx6:Status>
                    <pfx6:ListOfCutAddress>
                        <xsl:if test="string-length($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:systemName)>0">
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:addressId">
                                <pfx6:CutAddress>
                                    <xsl:if test="ns4:systemName">
                                        <pfx6:Id>
                                            <xsl:value-of select="ns4:systemName"/>
                                        </pfx6:Id>
                                    </xsl:if>
                                    <xsl:if test="current()/ns4:value">
                                        <pfx6:CBiOBSCSId>
                                            <xsl:value-of select="current()/ns4:value"/>
                                        </pfx6:CBiOBSCSId>
                                    </xsl:if>
                                    <pfx6:Status>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx6:Status>
                                </pfx6:CutAddress>
                            </xsl:for-each>
                        </xsl:if>
                        <xsl:if test="string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:addressId[1]/ns4:value)>0">
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$ParseQryCustRes/pfx7:CreateCustomerRes/ns4:addressId">
                                <pfx6:CutAddress>
                                    <xsl:if test="ns4:systemName">
                                        <pfx6:Id>
                                            <xsl:value-of select="ns4:systemName"/>
                                        </pfx6:Id>
                                    </xsl:if>
                                    <xsl:if test="ns4:value">
                                        <pfx6:CBiOBSCSId>
                                            <xsl:value-of select="ns4:value"/>
                                        </pfx6:CBiOBSCSId>
                                    </xsl:if>
                                    <pfx6:Status>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx6:Status>
                                </pfx6:CutAddress>
                            </xsl:for-each>
                        </xsl:if>
                    </pfx6:ListOfCutAddress>
                    <pfx6:ListOfComInvoiceProfile>
                        <xsl:for-each select="$Parse-Billing-Response/pfx5:CreateBillProcessRequest/ns4:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill">
                            <pfx6:ComInvoiceProfile>
                                <pfx6:Id>
                                    <xsl:value-of select="billNo"/>
                                </pfx6:Id>
                                <xsl:if test="ns4:billId/ns4:value">
                                    <pfx6:CBiO2BSCSId>
                                        <xsl:value-of select="ns4:billId/ns4:value"/>
                                    </pfx6:CBiO2BSCSId>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <pfx6:ErrorOccuranceTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                    </pfx6:ErrorOccuranceTime>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <xsl:if test="current()/ns4:Status">
                                        <pfx6:ErrorSourceErrCode>
                                            <xsl:value-of select="current()/ns4:Status"/>
                                        </pfx6:ErrorSourceErrCode>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!=0)">
                                    <xsl:if test="current()/ModIndicator">
                                        <pfx6:ErrorSourceErrDesc>
                                            <xsl:value-of select="current()/ModIndicator"/>
                                        </pfx6:ErrorSourceErrDesc>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!=0)">
                                    <pfx6:ErrorSourceSystem>
                                        <xsl:value-of select="'BSCS'"/>
                                    </pfx6:ErrorSourceSystem>
                                </xsl:if>
                                <pfx6:Status>
                                    <xsl:value-of select="if(current()/ns4:Status='0') then 'Success' else 'Failed'"/>
                                </pfx6:Status>
                            </pfx6:ComInvoiceProfile>
                        </xsl:for-each>
                    </pfx6:ListOfComInvoiceProfile>
                    <pfx6:ListOfOrganizationPaymentProfile>
                        <xsl:for-each select="$Parse-Billing-Response/pfx5:CreateBillProcessRequest/ns4:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                            <pfx6:OrganizationPaymentProfile>
                                <xsl:if test="current()/ID">
                                    <pfx6:Id>
                                        <xsl:value-of select="current()/ID"/>
                                    </pfx6:Id>
                                </xsl:if>
                                <xsl:if test="current()/ID_Public">
                                    <pfx6:CBiO2BSCSId>
                                        <xsl:value-of select="current()/ID_Public"/>
                                    </pfx6:CBiO2BSCSId>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <pfx6:ErrorOccuranceTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                    </pfx6:ErrorOccuranceTime>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <xsl:if test="current()/ns4:Status">
                                        <pfx6:ErrorSourceErrCode>
                                            <xsl:value-of select="current()/ns4:Status"/>
                                        </pfx6:ErrorSourceErrCode>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <pfx6:ErrorSourceSystem>
                                        <xsl:value-of select="'BSCS'"/>
                                    </pfx6:ErrorSourceSystem>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <xsl:if test="if(exists($FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORDESC)) then&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORDESC else&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCEERRORCODE='TIB-ERR-9999']/ns8:USERERRORDESC">
                                        <pfx6:ErrorUserErrDesc>
                                            <xsl:value-of select="if(exists($FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORDESC)) then&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORDESC else&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCEERRORCODE='TIB-ERR-9999']/ns8:USERERRORDESC"/>
                                        </pfx6:ErrorUserErrDesc>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="(current()/ns4:Status!='0')">
                                    <xsl:if test="current()/ns4:Level">
                                        <pfx6:ErrorSourceErrDesc>
                                            <xsl:value-of select="current()/ns4:Level"/>
                                        </pfx6:ErrorSourceErrDesc>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="current()/ns4:Status!='0'">
                                    <xsl:if test="if(exists($FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORCODE)) then&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORCODE else&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCEERRORCODE='TIB-ERR-9999']/ns8:USERERRORCODE">
                                        <pfx6:ErrorUserErrCode>
                                            <xsl:value-of select="if(exists($FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORCODE)) then&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCESYSTEM='BSCS' and ns8:SOURCEERRORCODE=current()/ns4:Status]/ns8:USERERRORCODE else&#xA;$FetchResponseCodes/ns8:ResponseCodeVar/ns8:paramgroup[ns8:SOURCEERRORCODE='TIB-ERR-9999']/ns8:USERERRORCODE"/>
                                        </pfx6:ErrorUserErrCode>
                                    </xsl:if>
                                </xsl:if>
                                <pfx6:Status>
                                    <xsl:value-of select="if(current()/ns4:Status='0') then 'Success' else 'Failed'"/>
                                </pfx6:Status>
                            </pfx6:OrganizationPaymentProfile>
                        </xsl:for-each>
                    </pfx6:ListOfOrganizationPaymentProfile>
                </pfx6:Account>
            </pfx6:ListOfCbio2CustomerCreationResIo>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FetchResponseCodes">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>201</pd:x>
        <pd:y>116</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="CheckStatusForPP">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>1960</pd:x>
        <pd:y>6</pd:y>
        <pd:width>152</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-Billing-Response/pfx5:CreateBillProcessRequest/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/ZainCustomerPayment</pd:over>
            <pd:iterationElementSlot>PPResult</pd:iterationElementSlot>
            <pd:indexSlot>jj</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>FetchStatus-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>FetchStatus-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="FetchStatus-1">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>2025</pd:x>
            <pd:y>70</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <CheckStatus>
                    <xsl:value-of select="if(($PPResult/ZainCustomerPayment/ns4:Status='0') and $Variable0/CheckStatus='Success') then 'Success'&#xA;else 'Failed'"/>
                </CheckStatus>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="QueryCustomerRead">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>399</pd:x>
        <pd:y>441</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($ParseCreateCustomer/pfx4:CreateCustomerReq)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/ESI_QryCustRead_Queue"/>
                </EMS_DestinationQueue>
                <xsl:if test="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Provisioning/CreayeCustomer/JMSTimeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseQryCustRes">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>563</pd:x>
        <pd:y>438</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx7:CreateCustomerRes"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$QueryCustomerRead/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FailedResCode">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>648</pd:x>
        <pd:y>693</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="'TIBCO'"/>
                </SourceSystem>
                <ResponseCode>
                    <xsl:value-of select="$ErrorHandler/pfx2:ExceptionRequest/ExceptionCode"/>
                </ResponseCode>
                <xsl:if test="$ErrorHandler/pfx2:ExceptionRequest/StackTrace">
                    <ResponseDescription>
                        <xsl:value-of select="$ErrorHandler/pfx2:ExceptionRequest/StackTrace"/>
                    </ResponseDescription>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>FetchResponseCodes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCreateCustomer</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>FailedResCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>SendErrorReplyToJMS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorReplyToJMS</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorReplyToJMS</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCreateCustomer</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendBPResponse</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PrepareDataForCRMResponse_Prepaid</pd:from>
        <pd:to>SendBPResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateCustomer</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateCustomer</pd:from>
        <pd:to>GetResponseCodeForFailed</pd:to>
        <pd:xpathDescription>For Failed</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ParseResponsePrimary/root/pfx7:CreateCustomerRes/ns4:Response/ResponseCode)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>PrepareDataForFailed</pd:from>
        <pd:to>SendBPResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>SetDefaultStatus</pd:to>
        <pd:xpathDescription>SecondaryBAExists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/csBillcycle,'Postpaid')
{--count($ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill)&gt;1--}</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>PrepareDataForCRMResponse_Prepaid</pd:to>
        <pd:xpathDescription>No Secondary BA Available</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResponseCodeForFailed</pd:from>
        <pd:to>PrepareDataForFailed</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>QueryCustomerRead</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetDefaultStatus</pd:from>
        <pd:to>Create Secondary BA</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>CreateCustomer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:xpathDescription>AlreadyCreated</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseQryCustRes/pfx7:CreateCustomerRes/ns4:ZainIdentifiers/ns4:customerId[ns4:systemName='BSCS']/ns4:value)&gt;0
{--string-length($ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/ContractID)&gt;0  //and $ParseCreateCustomer/pfx4:CreateCustomerReq/ns4:ZainCustomerAccountList/ZainCustomerAccount[1]/csStatus=0--}</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Create Secondary BA</pd:from>
        <pd:to>Log_BP_Response</pd:to>
        <pd:xpathDescription>Sucess</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_BP_Response</pd:from>
        <pd:to>CheckStatusForBP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Response for CRM</pd:from>
        <pd:to>SendBPResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForBP</pd:from>
        <pd:to>Map-Response for CRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FetchResponseCodes</pd:from>
        <pd:to>ParseCreateCustomer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForBP</pd:from>
        <pd:to>CheckStatusForPP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Variable0/CheckStatus='Success'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForPP</pd:from>
        <pd:to>Map-Response for CRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustomerRead</pd:from>
        <pd:to>ParseQryCustRes</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseQryCustRes</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FailedResCode</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>