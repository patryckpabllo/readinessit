<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/CrossRef.xsd" xmlns:pfx14="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/ChargeRefundReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandRes.xsd" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandReq.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx10="http://soaptopupsuite.eservglobal.com/" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateBalanceRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateBalanceReq.xsd" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns17="http://www.ericsson.com/CDM/telecom/Header" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns14="http://www.lhsgroup.com/ws_v3" xmlns:ns15="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns18="http://www.ericsson.com/CDM/telecom/FAF" xmlns:ns19="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:pfx="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns21="http://www.ericsson.com/CDM/telecom/Voucher" xmlns:ns22="http://www.ericsson.com/CDM/telecom/Resource" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes.xsd" xmlns:zainKW="java://com.ZainKW.CurrentNanoSecconds" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateDedicatedAccountReq.xsd" xmlns:pfx20="http://www.zain.com/ZESB/Services/UnbarRecharge" xmlns:pfx26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:pfx27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateDedicatedAccountRes.xsd" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Provisioning/WSDLs/CustomerCreate.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateBalanceReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/UpdateBalance/UpdateBalanceReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateDedicatedAccountReq.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/UpdateDedicatedAccount/UpdateDedicatedAccountReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateBalanceRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/UpdateBalance/UpdateBalanceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/UpdateDedicatedAccountRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/UpdateDedicatedAccount/UpdateDedicatedAccountRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandReq.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/VoucherOnDemand/VoucherOnDemandReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/VoucherOnDemand/VoucherOnDemandRes.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Provisioning/WSDLs/CustomerCreate.wsdl"/>
    <wsdl:import namespace="http://soaptopupsuite.eservglobal.com/" location="/BusinessWSDLS/Services/Eserve/VoucherStatus/VomsSoapTopupSuiteOutbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/Eserve/VoucherOnDemand/HelperProcess/VoucherOnDemand.process</pd:name>
    <pd:startName>VoucherRechargeReq</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ReqString" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="TrackingId" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>82</pd:startX>
    <pd:startY>294</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($NativeToCDM/pfx13:VoucherOnDemandRes/ns19:Response/ResponseCode)">
                <xsl:copy-of select="$NativeToCDM/pfx13:VoucherOnDemandRes"/>
            </xsl:when>
            <xsl:when test="exists($MapErrorData/pfx13:VoucherOnDemandRes/ns19:Response/ResponseCode)">
                <xsl:copy-of select="$MapErrorData/pfx13:VoucherOnDemandRes"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$ErrorNativeToCDM/pfx13:VoucherOnDemandRes"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx13:VoucherOnDemandRes"/>
    <pd:endX>1824</pd:endX>
    <pd:endY>297</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="pfx4:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="group">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="count" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                        <xsd:element name="BillflagCount" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>689</pd:x>
        <pd:y>130</pd:y>
        <pd:width>444</pd:width>
        <pd:height>321</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16776961</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateRetriableError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407668</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Retriable</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65281</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_SOAPRequestReply/ActivityErrors/ns9:HttpCommunicationException)
or
exists($_error_SOAPRequestReply/ActivityErrors/ns10:ActivityTimedOutException)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="GenerateRetriableError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>875</pd:x>
            <pd:y>391</pd:y>
            <config>
                <faultName>ErrorSchema</faultName>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="$_error/ns8:ErrorReport/Data/*">
                        <message>
                            <xsl:value-of select="$_error/ns8:ErrorReport/Data/*"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                    <data>
                        <pfx4:ExceptionRequest>
                            <ns6:Header>
                                <ns6:ApplicationID>
                                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                                </ns6:ApplicationID>
                                <ns6:ComponentName>
                                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                                </ns6:ComponentName>
                                <ns6:Hostname>
                                    <xsl:value-of select="BW:getHostName()"/>
                                </ns6:Hostname>
                                <ns6:Timestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </ns6:Timestamp>
                                <ns6:TransactionDomain>
                                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                                </ns6:TransactionDomain>
                                <ns6:TransactionType>
                                    <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                                </ns6:TransactionType>
                                <xsl:if test="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/TransactionID">
                                    <ns6:TransactionID>
                                        <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/TransactionID"/>
                                    </ns6:TransactionID>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID">
                                    <ns6:CorrelationID>
                                        <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                                    </ns6:CorrelationID>
                                </xsl:if>
                                <ns6:AltKey>
                                    <ns6:AltKeyName>
                                        <xsl:value-of select="'MSISDN'"/>
                                    </ns6:AltKeyName>
                                    <ns6:AltKeyValue>
                                        <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                                    </ns6:AltKeyValue>
                                </ns6:AltKey>
                            </ns6:Header>
                            <ExceptionCode>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                            </ExceptionCode>
                        </pfx4:ExceptionRequest>
                    </data>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>1058</pd:x>
            <pd:y>388</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>862</pd:x>
            <pd:y>295</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="SOAPRequestReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>884</pd:x>
            <pd:y>201</pd:y>
            <config>
                <timeout>10</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <timeoutType>Seconds</timeoutType>
                <service>pfx10:soaptopupsuite</service>
                <servicePort>EndPointInterfacePort</servicePort>
                <operation>voucherOnDemand</operation>
                <soapAction/>
                <endpointURL>http://10.98.9.42:8080/soaptopupsuite</endpointURL>
                <authScheme>NONE</authScheme>
            </config>
            <pd:inputBindings>
                <voucherOnDemand>
                    <session>
                        <xsl:if test="$GetVoucherRechargeSession/SessionPool/Session/actorId">
                            <actorId>
                                <xsl:value-of select="$GetVoucherRechargeSession/SessionPool/Session/actorId"/>
                            </actorId>
                        </xsl:if>
                        <xsl:if test="$GetVoucherRechargeSession/SessionPool/Session/Language">
                            <language>
                                <xsl:value-of select="$GetVoucherRechargeSession/SessionPool/Session/Language"/>
                            </language>
                        </xsl:if>
                        <xsl:if test="$GetVoucherRechargeSession/SessionPool/Session/sessionId">
                            <sessionId>
                                <xsl:value-of select="$GetVoucherRechargeSession/SessionPool/Session/sessionId"/>
                            </sessionId>
                        </xsl:if>
                    </session>
                    <ns13:_configData>
                        <endpointURL>
                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonResources/Connections/SOAP/External/eServ/eServ_HTTP/SOAPURI"/>
                        </endpointURL>
                        <timeout>
                            <xsl:value-of select="20"/>
                        </timeout>
                    </ns13:_configData>
                    <rechargeCategoryId>
                        <xsl:value-of select="if($Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value!='') then&#xA;$GetVariable/pfx15:CrossRefVar/pfx15:paramGroup[COMMON= $Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value and ENTITY_TYPE='RECHARGE_CATEGORY_ID']/ESERV&#xA;else&#xA;$Parse-XML/pfx12:VoucherOnDemandReq/pfx12:RechargeCategoryId"/>
                    </rechargeCategoryId>
                    <xsl:variable name="exp_date" select="$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/ExpiryDate"/>
                    <voucherExpiryDate>
                        <xsl:choose>
                            <xsl:when test="exists(if($exp_date!='') then substring-before(substring-after($exp_date - current-dateTime(),'P'),'D')*24*60*60*1000+tib:timestamp()&#xA;else substring-after(substring-before(tib:add-to-dateTime(current-dateTime(), 3,0,0,0,0,0) - current-dateTime(),'D'),'P')*24*60*60*1000+tib:timestamp())">
                                <xsl:value-of select="if($exp_date!='') then substring-before(substring-after($exp_date - current-dateTime(),'P'),'D')*24*60*60*1000+tib:timestamp()&#xA;else substring-after(substring-before(tib:add-to-dateTime(current-dateTime(), 3,0,0,0,0,0) - current-dateTime(),'D'),'P')*24*60*60*1000+tib:timestamp()"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </voucherExpiryDate>
                    <subscriberNotif>
                        <xsl:choose>
                            <xsl:when test="exists(if($Parse-XML/pfx12:VoucherOnDemandReq/pfx12:SendSMS='true')&#xA;then 'true' else 'false')">
                                <xsl:value-of select="if($Parse-XML/pfx12:VoucherOnDemandReq/pfx12:SendSMS='true')&#xA;then 'true' else 'false'"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </subscriberNotif>
                    <subscriberMsisdn>
                        <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                    </subscriberMsisdn>
                    <subscriberLanguage>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/pfx12:VoucherOnDemandReq/pfx12:Language)">
                                <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/pfx12:Language"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </subscriberLanguage>
                    <thirdPartyNotif xsi:nil="true"/>
                    <thirdPartyMsisdn xsi:nil="true"/>
                    <thirdPartyLanguage xsi:nil="true"/>
                    <thirdPartyActorId xsi:nil="true"/>
                </voucherOnDemand>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="AuditLogERROR">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1825</pd:x>
        <pd:y>430</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <xsl:if test="$VoucherRechargeReq/group/TrackingId">
                        <ns6:TransactionID>
                            <xsl:value-of select="$VoucherRechargeReq/group/TrackingId"/>
                        </ns6:TransactionID>
                    </xsl:if>
                    <ns6:CorrelationID>
                        <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                    </ns6:CorrelationID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Catch/exceptiondata)"/>
                    </ns6:Message>
                    <ns6:DataEncoding>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/DataEncoding/STRING"/>
                    </ns6:DataEncoding>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="'MSISDN'"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <xsl:if test="$VoucherRechargeReq/group/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$VoucherRechargeReq/group/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogIN">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>531</pd:x>
        <pd:y>303</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <xsl:if test="$VoucherRechargeReq/group/TrackingId">
                        <ns6:TransactionID>
                            <xsl:value-of select="$VoucherRechargeReq/group/TrackingId"/>
                        </ns6:TransactionID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID">
                        <ns6:CorrelationID>
                            <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                        </ns6:CorrelationID>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx12:VoucherOnDemandReq)"/>
                    </ns6:Message>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="'MSISDN'"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <xsl:if test="$VoucherRechargeReq/group/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$VoucherRechargeReq/group/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogOUT">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1625</pd:x>
        <pd:y>297</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <xsl:if test="$VoucherRechargeReq/group/TrackingId">
                        <ns6:TransactionID>
                            <xsl:value-of select="$VoucherRechargeReq/group/TrackingId"/>
                        </ns6:TransactionID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID">
                        <ns6:CorrelationID>
                            <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                        </ns6:CorrelationID>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$NativeToCDM/pfx13:VoucherOnDemandRes/ns19:Response/ResponseCode!=''">
                            <ns6:Message>
                                <xsl:value-of select="concat(tib:render-xml($SOAPRequestReply/voucherOnDemandResponse), '&#xD;&#xA;------------------------------------------------------------&#xD;&#xA;',&#xA;tib:render-xml($NativeToCDM/pfx13:VoucherOnDemandRes))"/>
                            </ns6:Message>
                        </xsl:when>
                        <xsl:when test="$MapErrorData/pfx13:VoucherOnDemandRes/ns19:Response/ResponseCode!=''">
                            <ns6:Message>
                                <xsl:value-of select="tib:render-xml($MapErrorData/pfx13:VoucherOnDemandRes)"/>
                            </ns6:Message>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns6:Message>
                                <xsl:value-of select="'No log generated'"/>
                            </ns6:Message>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns6:DataEncoding>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/DataEncoding/STRING"/>
                    </ns6:DataEncoding>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="'MSISDN'"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <xsl:if test="$VoucherRechargeReq/group/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$VoucherRechargeReq/group/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1484</pd:x>
        <pd:y>434</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorNativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1655</pd:x>
        <pd:y>432</pd:y>
        <config>
            <element ref="pfx13:VoucherOnDemandRes"/>
        </config>
        <pd:inputBindings>
            <xsl:variable name="errcode" select="concat($_error_GenerateCommunicationException/pfx4:ExceptionRequest/ExceptionCode,$_error_GenerateTimeOutError/pfx4:ExceptionRequest/ExceptionCode,$_error_GenerateESERVException/pfx4:ExceptionRequest/ExceptionCode)"/>
            <pfx13:VoucherOnDemandRes>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader">
                    <ns17:BusinessMessageHeader>
                        <xsl:if test="ExternalTransactionID">
                            <ExternalTransactionID>
                                <xsl:value-of select="ExternalTransactionID"/>
                            </ExternalTransactionID>
                        </xsl:if>
                        <xsl:if test="COName">
                            <COName>
                                <xsl:value-of select="COName"/>
                            </COName>
                        </xsl:if>
                        <xsl:if test="Consumer">
                            <Consumer>
                                <xsl:value-of select="Consumer"/>
                            </Consumer>
                        </xsl:if>
                        <xsl:if test="Provider">
                            <Provider>
                                <xsl:value-of select="Provider"/>
                            </Provider>
                        </xsl:if>
                        <xsl:if test="Timestamp">
                            <Timestamp>
                                <xsl:value-of select="Timestamp"/>
                            </Timestamp>
                        </xsl:if>
                        <xsl:if test="Action">
                            <Action>
                                <xsl:value-of select="Action"/>
                            </Action>
                        </xsl:if>
                        <xsl:if test="ApplicationID">
                            <ApplicationID>
                                <xsl:value-of select="ApplicationID"/>
                            </ApplicationID>
                        </xsl:if>
                        <xsl:if test="ComponentName">
                            <ComponentName>
                                <xsl:value-of select="ComponentName"/>
                            </ComponentName>
                        </xsl:if>
                        <xsl:if test="Hostname">
                            <Hostname>
                                <xsl:value-of select="Hostname"/>
                            </Hostname>
                        </xsl:if>
                        <xsl:if test="TransactionDomain">
                            <TransactionDomain>
                                <xsl:value-of select="TransactionDomain"/>
                            </TransactionDomain>
                        </xsl:if>
                        <xsl:if test="TransactionType">
                            <TransactionType>
                                <xsl:value-of select="TransactionType"/>
                            </TransactionType>
                        </xsl:if>
                        <xsl:if test="TransactionID">
                            <TransactionID>
                                <xsl:value-of select="TransactionID"/>
                            </TransactionID>
                        </xsl:if>
                        <xsl:if test="Version">
                            <Version>
                                <xsl:value-of select="Version"/>
                            </Version>
                        </xsl:if>
                        <xsl:for-each select="SourceSystemInfo">
                            <SourceSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </SourceSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TargetSystemInfo">
                            <TargetSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </TargetSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TrackingInfo">
                            <TrackingInfo>
                                <xsl:if test="SourceMessageId">
                                    <SourceMessageId>
                                        <xsl:value-of select="SourceMessageId"/>
                                    </SourceMessageId>
                                </xsl:if>
                                <xsl:for-each select="ExternalReferences">
                                    <ExternalReferences>
                                        <xsl:for-each select="Reference">
                                            <Reference>
                                                <xsl:if test="Name">
                                                    <Name>
                                                        <xsl:value-of select="Name"/>
                                                    </Name>
                                                </xsl:if>
                                                <xsl:if test="Value">
                                                    <Value>
                                                        <xsl:value-of select="Value"/>
                                                    </Value>
                                                </xsl:if>
                                            </Reference>
                                        </xsl:for-each>
                                    </ExternalReferences>
                                </xsl:for-each>
                                <xsl:if test="PointOfFailure">
                                    <PointOfFailure>
                                        <xsl:value-of select="PointOfFailure"/>
                                    </PointOfFailure>
                                </xsl:if>
                                <xsl:if test="RetryCount">
                                    <RetryCount>
                                        <xsl:value-of select="RetryCount"/>
                                    </RetryCount>
                                </xsl:if>
                            </TrackingInfo>
                        </xsl:for-each>
                    </ns17:BusinessMessageHeader>
                </xsl:for-each>
                <xsl:choose>
                    <xsl:when test="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[ESERV_CODE=$errcode]/COMMON_CODE!=''">
                        <ns19:Response>
                            <ResponseCode>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[ESERV_CODE=$errcode]/COMMON_CODE"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[ESERV_CODE=$errcode]/COMMON_DESC"/>
                            </ResponseDescription>
                        </ns19:Response>
                    </xsl:when>
                    <xsl:when test="exists($_error_GenerateCommunicationException/pfx4:ExceptionRequest/ns6:Header/ns6:AltKey/ns6:AltKeyName)&#xA;and 1=2">
                        <ns19:Response>
                            <xsl:if test="$_error_GenerateCommunicationException/pfx4:ExceptionRequest/ExceptionCode">
                                <ResponseCode>
                                    <xsl:value-of select="$_error_GenerateCommunicationException/pfx4:ExceptionRequest/ExceptionCode"/>
                                </ResponseCode>
                            </xsl:if>
                            <ResponseDescription>
                                <xsl:value-of select="$_error_GenerateCommunicationException/pfx4:ExceptionRequest/ns6:Header/ns6:AltKey[1]/ns6:AltKeyValue"/>
                            </ResponseDescription>
                        </ns19:Response>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns19:Response>
                            <xsl:variable name="var" select="'problem with the service'"/>
                            <ResponseCode>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(CS_DESC,$var)]/COMMON_CODE"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(CS_DESC,$var)]/COMMON_DESC"/>
                            </ResponseDescription>
                        </ns19:Response>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber">
                    <ns16:Subscriber>
                        <xsl:if test="ns18:FAFNumber">
                            <ns18:FAFNumber>
                                <xsl:value-of select="ns18:FAFNumber"/>
                            </ns18:FAFNumber>
                        </xsl:if>
                        <xsl:if test="ns18:FAFCategory">
                            <ns18:FAFCategory>
                                <xsl:value-of select="ns18:FAFCategory"/>
                            </ns18:FAFCategory>
                        </xsl:if>
                        <xsl:for-each select="ns18:FAFChargeInformation">
                            <ns18:FAFChargeInformation>
                                <xsl:for-each select="ns18:FAFCharges">
                                    <ns18:FAFCharges>
                                        <xsl:if test="ns18:Amount">
                                            <ns18:Amount>
                                                <xsl:value-of select="ns18:Amount"/>
                                            </ns18:Amount>
                                        </xsl:if>
                                        <xsl:if test="ns18:Currency">
                                            <ns18:Currency>
                                                <xsl:value-of select="ns18:Currency"/>
                                            </ns18:Currency>
                                        </xsl:if>
                                    </ns18:FAFCharges>
                                </xsl:for-each>
                            </ns18:FAFChargeInformation>
                        </xsl:for-each>
                        <xsl:if test="ns18:FreeUpdateCount">
                            <ns18:FreeUpdateCount>
                                <xsl:value-of select="ns18:FreeUpdateCount"/>
                            </ns18:FreeUpdateCount>
                        </xsl:if>
                        <xsl:if test="ns18:MaxFreeAllowed">
                            <ns18:MaxFreeAllowed>
                                <xsl:value-of select="ns18:MaxFreeAllowed"/>
                            </ns18:MaxFreeAllowed>
                        </xsl:if>
                        <xsl:if test="Name">
                            <Name>
                                <xsl:value-of select="Name"/>
                            </Name>
                        </xsl:if>
                        <xsl:if test="Nationality">
                            <Nationality>
                                <xsl:value-of select="Nationality"/>
                            </Nationality>
                        </xsl:if>
                        <xsl:if test="NationalID">
                            <NationalID>
                                <xsl:value-of select="NationalID"/>
                            </NationalID>
                        </xsl:if>
                        <ServiceNo>
                            <xsl:value-of select="ServiceNo"/>
                        </ServiceNo>
                        <xsl:if test="AccountLocked">
                            <AccountLocked>
                                <xsl:value-of select="AccountLocked"/>
                            </AccountLocked>
                        </xsl:if>
                        <xsl:if test="SubscriberStatus">
                            <SubscriberStatus>
                                <xsl:value-of select="SubscriberStatus"/>
                            </SubscriberStatus>
                        </xsl:if>
                        <xsl:for-each select="AccountBalance">
                            <AccountBalance>
                                <Amount>
                                    <xsl:value-of select="Amount"/>
                                </Amount>
                                <xsl:if test="Unit">
                                    <Unit>
                                        <xsl:value-of select="Unit"/>
                                    </Unit>
                                </xsl:if>
                            </AccountBalance>
                        </xsl:for-each>
                        <xsl:if test="ExpiryDate">
                            <ExpiryDate>
                                <xsl:value-of select="ExpiryDate"/>
                            </ExpiryDate>
                        </xsl:if>
                        <xsl:for-each select="LanguageDetails">
                            <LanguageDetails>
                                <LanguageID>
                                    <xsl:value-of select="LanguageID"/>
                                </LanguageID>
                                <xsl:if test="Language">
                                    <Language>
                                        <xsl:value-of select="Language"/>
                                    </Language>
                                </xsl:if>
                            </LanguageDetails>
                        </xsl:for-each>
                    </ns16:Subscriber>
                </xsl:for-each>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher">
                    <ns21:Voucher>
                        <ResourceID>
                            <xsl:value-of select="ResourceID"/>
                        </ResourceID>
                        <xsl:if test="ResourceCategory">
                            <ResourceCategory>
                                <xsl:value-of select="ResourceCategory"/>
                            </ResourceCategory>
                        </xsl:if>
                        <xsl:if test="ResourceType">
                            <ResourceType>
                                <xsl:value-of select="ResourceType"/>
                            </ResourceType>
                        </xsl:if>
                        <xsl:if test="ResourceGroupID">
                            <ResourceGroupID>
                                <xsl:value-of select="ResourceGroupID"/>
                            </ResourceGroupID>
                        </xsl:if>
                        <xsl:if test="ResourceGroupName">
                            <ResourceGroupName>
                                <xsl:value-of select="ResourceGroupName"/>
                            </ResourceGroupName>
                        </xsl:if>
                        <xsl:if test="CreationDateTime">
                            <CreationDateTime>
                                <xsl:value-of select="CreationDateTime"/>
                            </CreationDateTime>
                        </xsl:if>
                        <xsl:if test="ResourceStatus">
                            <ResourceStatus>
                                <xsl:value-of select="ResourceStatus"/>
                            </ResourceStatus>
                        </xsl:if>
                        <xsl:for-each select="ns22:ResourceSpecification">
                            <ns22:ResourceSpecification>
                                <SerialNumber>
                                    <xsl:value-of select="SerialNumber"/>
                                </SerialNumber>
                                <Code>
                                    <xsl:value-of select="Code"/>
                                </Code>
                                <Value>
                                    <xsl:value-of select="Value"/>
                                </Value>
                                <xsl:if test="ExpiryDate">
                                    <ExpiryDate>
                                        <xsl:value-of select="ExpiryDate"/>
                                    </ExpiryDate>
                                </xsl:if>
                                <xsl:if test="Status">
                                    <Status>
                                        <xsl:value-of select="Status"/>
                                    </Status>
                                </xsl:if>
                                <xsl:if test="BatchId">
                                    <BatchId>
                                        <xsl:value-of select="BatchId"/>
                                    </BatchId>
                                </xsl:if>
                            </ns22:ResourceSpecification>
                        </xsl:for-each>
                    </ns21:Voucher>
                </xsl:for-each>
            </pfx13:VoucherOnDemandRes>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateCommunicationException">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1035</pd:x>
        <pd:y>540</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <pfx4:ExceptionRequest>
                        <ns6:Header>
                            <ns6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns6:ApplicationID>
                            <ns6:ComponentName>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                            </ns6:ComponentName>
                            <ns6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns6:Hostname>
                            <ns6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns6:Timestamp>
                            <ns6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                            </ns6:TransactionDomain>
                            <ns6:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                            </ns6:TransactionType>
                            <ns6:TransactionID>
                                <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/TransactionID"/>
                            </ns6:TransactionID>
                            <ns6:CorrelationID>
                                <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                            </ns6:CorrelationID>
                            <xsl:if test="$_error/ns8:ErrorReport/StackTrace">
                                <ns6:Message>
                                    <xsl:value-of select="$_error/ns8:ErrorReport/StackTrace"/>
                                </ns6:Message>
                            </xsl:if>
                            <ns6:DataEncoding>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/DataEncoding/STRING"/>
                            </ns6:DataEncoding>
                        </ns6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/MiscErrorCode"/>
                        </ExceptionCode>
                    </pfx4:ExceptionRequest>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateESERVException">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>769</pd:x>
        <pd:y>533</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/message">
                    <message>
                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/message"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/errorCode">
                    <messageCode>
                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/errorCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <pfx4:ExceptionRequest>
                        <ns6:Header>
                            <ns6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns6:ApplicationID>
                            <ns6:ComponentName>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                            </ns6:ComponentName>
                            <ns6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns6:Hostname>
                            <ns6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns6:Timestamp>
                            <ns6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                            </ns6:TransactionDomain>
                            <ns6:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                            </ns6:TransactionType>
                            <ns6:TransactionID>
                                <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/TransactionID"/>
                            </ns6:TransactionID>
                            <ns6:CorrelationID>
                                <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader/ExternalTransactionID"/>
                            </ns6:CorrelationID>
                            <ns6:Message>
                                <xsl:value-of select="tib:render-xml($_error_SOAPRequestReply/ActivityErrors/WebServiceException)"/>
                            </ns6:Message>
                            <ns6:DataEncoding>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/DataEncoding/STRING"/>
                            </ns6:DataEncoding>
                            <ns6:AltKey>
                                <ns6:AltKeyName>
                                    <xsl:value-of select="'MSISDN'"/>
                                </ns6:AltKeyName>
                                <ns6:AltKeyValue>
                                    <xsl:value-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber/ServiceNo"/>
                                </ns6:AltKeyValue>
                            </ns6:AltKey>
                            <ns6:AltKey>
                                <ns6:AltKeyName>
                                    <xsl:value-of select="'Error Message'"/>
                                </ns6:AltKeyName>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/message">
                                    <ns6:AltKeyValue>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/message"/>
                                    </ns6:AltKeyValue>
                                </xsl:if>
                            </ns6:AltKey>
                        </ns6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/WebServiceException/detail/pfx10:WebServiceException/errorCode"/>
                        </ExceptionCode>
                    </pfx4:ExceptionRequest>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>921</pd:x>
        <pd:y>545</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:copy-of select="$_error_GenerateRetriableError/pfx4:ExceptionRequest"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetResCodesVar">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>451</pd:x>
        <pd:y>198</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetVoucherRechargeSession">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>198</pd:x>
        <pd:y>198</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/VoucherRechargeSession.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1356</pd:x>
        <pd:y>246</pd:y>
        <config>
            <element ref="pfx13:VoucherOnDemandRes"/>
        </config>
        <pd:inputBindings>
            <pfx13:VoucherOnDemandRes>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader">
                    <ns17:BusinessMessageHeader>
                        <xsl:if test="ExternalTransactionID">
                            <ExternalTransactionID>
                                <xsl:value-of select="ExternalTransactionID"/>
                            </ExternalTransactionID>
                        </xsl:if>
                        <xsl:if test="COName">
                            <COName>
                                <xsl:value-of select="COName"/>
                            </COName>
                        </xsl:if>
                        <xsl:if test="Consumer">
                            <Consumer>
                                <xsl:value-of select="Consumer"/>
                            </Consumer>
                        </xsl:if>
                        <xsl:if test="Provider">
                            <Provider>
                                <xsl:value-of select="Provider"/>
                            </Provider>
                        </xsl:if>
                        <xsl:if test="Timestamp">
                            <Timestamp>
                                <xsl:value-of select="Timestamp"/>
                            </Timestamp>
                        </xsl:if>
                        <xsl:if test="Action">
                            <Action>
                                <xsl:value-of select="Action"/>
                            </Action>
                        </xsl:if>
                        <xsl:if test="ApplicationID">
                            <ApplicationID>
                                <xsl:value-of select="ApplicationID"/>
                            </ApplicationID>
                        </xsl:if>
                        <xsl:if test="ComponentName">
                            <ComponentName>
                                <xsl:value-of select="ComponentName"/>
                            </ComponentName>
                        </xsl:if>
                        <xsl:if test="Hostname">
                            <Hostname>
                                <xsl:value-of select="Hostname"/>
                            </Hostname>
                        </xsl:if>
                        <xsl:if test="TransactionDomain">
                            <TransactionDomain>
                                <xsl:value-of select="TransactionDomain"/>
                            </TransactionDomain>
                        </xsl:if>
                        <xsl:if test="TransactionType">
                            <TransactionType>
                                <xsl:value-of select="TransactionType"/>
                            </TransactionType>
                        </xsl:if>
                        <xsl:if test="TransactionID">
                            <TransactionID>
                                <xsl:value-of select="TransactionID"/>
                            </TransactionID>
                        </xsl:if>
                        <xsl:if test="Version">
                            <Version>
                                <xsl:value-of select="Version"/>
                            </Version>
                        </xsl:if>
                        <xsl:for-each select="SourceSystemInfo">
                            <SourceSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </SourceSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TargetSystemInfo">
                            <TargetSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </TargetSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TrackingInfo">
                            <TrackingInfo>
                                <xsl:if test="SourceMessageId">
                                    <SourceMessageId>
                                        <xsl:value-of select="SourceMessageId"/>
                                    </SourceMessageId>
                                </xsl:if>
                                <xsl:for-each select="ExternalReferences">
                                    <ExternalReferences>
                                        <xsl:for-each select="Reference">
                                            <Reference>
                                                <xsl:if test="Name">
                                                    <Name>
                                                        <xsl:value-of select="Name"/>
                                                    </Name>
                                                </xsl:if>
                                                <xsl:if test="Value">
                                                    <Value>
                                                        <xsl:value-of select="Value"/>
                                                    </Value>
                                                </xsl:if>
                                            </Reference>
                                        </xsl:for-each>
                                    </ExternalReferences>
                                </xsl:for-each>
                                <xsl:if test="PointOfFailure">
                                    <PointOfFailure>
                                        <xsl:value-of select="PointOfFailure"/>
                                    </PointOfFailure>
                                </xsl:if>
                                <xsl:if test="RetryCount">
                                    <RetryCount>
                                        <xsl:value-of select="RetryCount"/>
                                    </RetryCount>
                                </xsl:if>
                            </TrackingInfo>
                        </xsl:for-each>
                    </ns17:BusinessMessageHeader>
                </xsl:for-each>
                <ns19:Response>
                    <ResponseCode>
                        <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(upper-case(COMMON_DESC),'SUCCESSFUL')]/COMMON_CODE"/>
                    </ResponseCode>
                    <ResponseDescription>
                        <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(upper-case(COMMON_DESC),'SUCCESSFUL')]/COMMON_DESC"/>
                    </ResponseDescription>
                </ns19:Response>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber">
                    <ns16:Subscriber>
                        <xsl:if test="ns18:FAFNumber">
                            <ns18:FAFNumber>
                                <xsl:value-of select="ns18:FAFNumber"/>
                            </ns18:FAFNumber>
                        </xsl:if>
                        <xsl:if test="ns18:FAFCategory">
                            <ns18:FAFCategory>
                                <xsl:value-of select="ns18:FAFCategory"/>
                            </ns18:FAFCategory>
                        </xsl:if>
                        <xsl:for-each select="ns18:FAFChargeInformation">
                            <ns18:FAFChargeInformation>
                                <xsl:for-each select="ns18:FAFCharges">
                                    <ns18:FAFCharges>
                                        <xsl:if test="ns18:Amount">
                                            <ns18:Amount>
                                                <xsl:value-of select="ns18:Amount"/>
                                            </ns18:Amount>
                                        </xsl:if>
                                        <xsl:if test="ns18:Currency">
                                            <ns18:Currency>
                                                <xsl:value-of select="ns18:Currency"/>
                                            </ns18:Currency>
                                        </xsl:if>
                                    </ns18:FAFCharges>
                                </xsl:for-each>
                            </ns18:FAFChargeInformation>
                        </xsl:for-each>
                        <xsl:if test="ns18:FreeUpdateCount">
                            <ns18:FreeUpdateCount>
                                <xsl:value-of select="ns18:FreeUpdateCount"/>
                            </ns18:FreeUpdateCount>
                        </xsl:if>
                        <xsl:if test="ns18:MaxFreeAllowed">
                            <ns18:MaxFreeAllowed>
                                <xsl:value-of select="ns18:MaxFreeAllowed"/>
                            </ns18:MaxFreeAllowed>
                        </xsl:if>
                        <xsl:if test="Name">
                            <Name>
                                <xsl:value-of select="Name"/>
                            </Name>
                        </xsl:if>
                        <xsl:if test="Nationality">
                            <Nationality>
                                <xsl:value-of select="Nationality"/>
                            </Nationality>
                        </xsl:if>
                        <xsl:if test="NationalID">
                            <NationalID>
                                <xsl:value-of select="NationalID"/>
                            </NationalID>
                        </xsl:if>
                        <ServiceNo>
                            <xsl:value-of select="ServiceNo"/>
                        </ServiceNo>
                        <xsl:if test="AccountLocked">
                            <AccountLocked>
                                <xsl:value-of select="AccountLocked"/>
                            </AccountLocked>
                        </xsl:if>
                        <xsl:if test="SubscriberStatus">
                            <SubscriberStatus>
                                <xsl:value-of select="SubscriberStatus"/>
                            </SubscriberStatus>
                        </xsl:if>
                        <xsl:for-each select="AccountBalance">
                            <AccountBalance>
                                <Amount>
                                    <xsl:value-of select="Amount"/>
                                </Amount>
                                <xsl:if test="Unit">
                                    <Unit>
                                        <xsl:value-of select="Unit"/>
                                    </Unit>
                                </xsl:if>
                            </AccountBalance>
                        </xsl:for-each>
                        <xsl:if test="ExpiryDate">
                            <ExpiryDate>
                                <xsl:value-of select="tib:parse-dateTime(&quot;yyyyMMdd'T'HH:mm:ssZ&quot;,zainKW:convertMillsecondsToCSDate(ExpiryDate))"/>
                            </ExpiryDate>
                        </xsl:if>
                        <xsl:for-each select="LanguageDetails">
                            <LanguageDetails>
                                <LanguageID>
                                    <xsl:value-of select="LanguageID"/>
                                </LanguageID>
                                <xsl:if test="Language">
                                    <Language>
                                        <xsl:value-of select="Language"/>
                                    </Language>
                                </xsl:if>
                            </LanguageDetails>
                        </xsl:for-each>
                    </ns16:Subscriber>
                </xsl:for-each>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher">
                    <ns21:Voucher>
                        <ResourceID>
                            <xsl:value-of select="ResourceID"/>
                        </ResourceID>
                        <xsl:if test="ResourceCategory">
                            <ResourceCategory>
                                <xsl:value-of select="ResourceCategory"/>
                            </ResourceCategory>
                        </xsl:if>
                        <xsl:if test="ResourceType">
                            <ResourceType>
                                <xsl:value-of select="ResourceType"/>
                            </ResourceType>
                        </xsl:if>
                        <xsl:if test="ResourceGroupID">
                            <ResourceGroupID>
                                <xsl:value-of select="ResourceGroupID"/>
                            </ResourceGroupID>
                        </xsl:if>
                        <xsl:if test="ResourceGroupName">
                            <ResourceGroupName>
                                <xsl:value-of select="ResourceGroupName"/>
                            </ResourceGroupName>
                        </xsl:if>
                        <xsl:if test="CreationDateTime">
                            <CreationDateTime>
                                <xsl:value-of select="CreationDateTime"/>
                            </CreationDateTime>
                        </xsl:if>
                        <xsl:if test="ResourceStatus">
                            <ResourceStatus>
                                <xsl:value-of select="ResourceStatus"/>
                            </ResourceStatus>
                        </xsl:if>
                        <xsl:for-each select="ns22:ResourceSpecification">
                            <ns22:ResourceSpecification>
                                <SerialNumber>
                                    <xsl:value-of select="$SOAPRequestReply/voucherOnDemandResponse/voucherInfo/voucherRechargeInfoList/voucherRechargeInfo[1]/externalSerialNumber"/>
                                </SerialNumber>
                                <Code>
                                    <xsl:value-of select="$SOAPRequestReply/voucherOnDemandResponse/voucherInfo/voucherRechargeInfoList/voucherRechargeInfo[1]/hrn"/>
                                </Code>
                                <Value>
                                    <xsl:value-of select="$SOAPRequestReply/voucherOnDemandResponse/voucherInfo/denominationValue"/>
                                </Value>
                                <ExpiryDate>
                                    <xsl:value-of select="tib:parse-dateTime(&quot;yyyyMMdd'T'HH:mm:ssZ&quot;,zainKW:convertMillsecondsToCSDate($SOAPRequestReply/voucherOnDemandResponse/voucherInfo/expiryDate))"/>
                                </ExpiryDate>
                                <Status>
                                    <xsl:value-of select="$SOAPRequestReply/voucherOnDemandResponse/voucherInfo/state"/>
                                </Status>
                                <xsl:if test="BatchId">
                                    <BatchId>
                                        <xsl:value-of select="BatchId"/>
                                    </BatchId>
                                </xsl:if>
                            </ns22:ResourceSpecification>
                        </xsl:for-each>
                    </ns21:Voucher>
                </xsl:for-each>
            </pfx13:VoucherOnDemandRes>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>591</pd:x>
        <pd:y>200</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>320</pd:x>
        <pd:y>137</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>199</pd:x>
        <pd:y>295</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx12:VoucherOnDemandReq"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$VoucherRechargeReq/group/ReqString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>514</pd:x>
        <pd:y>63</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/CrossRefData.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="MapErrorData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>819</pd:x>
        <pd:y>738</pd:y>
        <config>
            <element ref="pfx13:VoucherOnDemandRes"/>
        </config>
        <pd:inputBindings>
            <pfx13:VoucherOnDemandRes>
                <xsl:copy-of select="$Parse-XML/pfx12:VoucherOnDemandReq/ns17:BusinessMessageHeader"/>
                <xsl:variable name="var2" select="$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value "/>
                <xsl:choose>
                    <xsl:when test="count($GetVariable/pfx15:CrossRefVar/pfx15:paramGroup[COMMON= $var2 and ENTITY_TYPE='RECHARGE_CATEGORY_ID']/COMMON)=0">
                        <ns19:Response>
                            <xsl:variable name="var" select="'Invalid Money'"/>
                            <ResponseCode>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(ESERV_DESC,$var)]/COMMON_CODE"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(ESERV_DESC,$var)]/COMMON_DESC"/>
                            </ResponseDescription>
                        </ns19:Response>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns19:Response>
                            <xsl:variable name="var" select="'Invalid parameter'"/>
                            <ResponseCode>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(ESERV_DESC,$var)]/COMMON_CODE"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$GetResCodesVar/ns20:ResCodeVar/ns20:paramGroup[contains(ESERV_DESC,$var)]/COMMON_DESC"/>
                            </ResponseDescription>
                        </ns19:Response>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns16:Subscriber">
                    <ns16:Subscriber>
                        <xsl:if test="ns18:FAFNumber">
                            <ns18:FAFNumber>
                                <xsl:value-of select="ns18:FAFNumber"/>
                            </ns18:FAFNumber>
                        </xsl:if>
                        <xsl:if test="ns18:FAFCategory">
                            <ns18:FAFCategory>
                                <xsl:value-of select="ns18:FAFCategory"/>
                            </ns18:FAFCategory>
                        </xsl:if>
                        <xsl:for-each select="ns18:FAFChargeInformation">
                            <ns18:FAFChargeInformation>
                                <xsl:for-each select="ns18:FAFCharges">
                                    <ns18:FAFCharges>
                                        <xsl:if test="ns18:Amount">
                                            <ns18:Amount>
                                                <xsl:value-of select="ns18:Amount"/>
                                            </ns18:Amount>
                                        </xsl:if>
                                        <xsl:if test="ns18:Currency">
                                            <ns18:Currency>
                                                <xsl:value-of select="ns18:Currency"/>
                                            </ns18:Currency>
                                        </xsl:if>
                                    </ns18:FAFCharges>
                                </xsl:for-each>
                            </ns18:FAFChargeInformation>
                        </xsl:for-each>
                        <xsl:if test="ns18:FreeUpdateCount">
                            <ns18:FreeUpdateCount>
                                <xsl:value-of select="ns18:FreeUpdateCount"/>
                            </ns18:FreeUpdateCount>
                        </xsl:if>
                        <xsl:if test="ns18:MaxFreeAllowed">
                            <ns18:MaxFreeAllowed>
                                <xsl:value-of select="ns18:MaxFreeAllowed"/>
                            </ns18:MaxFreeAllowed>
                        </xsl:if>
                        <xsl:if test="Name">
                            <Name>
                                <xsl:value-of select="Name"/>
                            </Name>
                        </xsl:if>
                        <xsl:if test="Nationality">
                            <Nationality>
                                <xsl:value-of select="Nationality"/>
                            </Nationality>
                        </xsl:if>
                        <xsl:if test="NationalID">
                            <NationalID>
                                <xsl:value-of select="NationalID"/>
                            </NationalID>
                        </xsl:if>
                        <ServiceNo>
                            <xsl:value-of select="ServiceNo"/>
                        </ServiceNo>
                        <xsl:if test="AccountLocked">
                            <AccountLocked>
                                <xsl:value-of select="AccountLocked"/>
                            </AccountLocked>
                        </xsl:if>
                        <xsl:if test="SubscriberStatus">
                            <SubscriberStatus>
                                <xsl:value-of select="SubscriberStatus"/>
                            </SubscriberStatus>
                        </xsl:if>
                        <xsl:for-each select="AccountBalance">
                            <AccountBalance>
                                <Amount>
                                    <xsl:value-of select="Amount"/>
                                </Amount>
                                <xsl:if test="Unit">
                                    <Unit>
                                        <xsl:value-of select="Unit"/>
                                    </Unit>
                                </xsl:if>
                            </AccountBalance>
                        </xsl:for-each>
                        <xsl:if test="ExpiryDate">
                            <ExpiryDate>
                                <xsl:value-of select="ExpiryDate"/>
                            </ExpiryDate>
                        </xsl:if>
                        <xsl:for-each select="LanguageDetails">
                            <LanguageDetails>
                                <LanguageID>
                                    <xsl:value-of select="LanguageID"/>
                                </LanguageID>
                                <xsl:if test="Language">
                                    <Language>
                                        <xsl:value-of select="Language"/>
                                    </Language>
                                </xsl:if>
                            </LanguageDetails>
                        </xsl:for-each>
                    </ns16:Subscriber>
                </xsl:for-each>
                <xsl:for-each select="$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher">
                    <ns21:Voucher>
                        <ResourceID>
                            <xsl:value-of select="ResourceID"/>
                        </ResourceID>
                        <xsl:if test="ResourceCategory">
                            <ResourceCategory>
                                <xsl:value-of select="ResourceCategory"/>
                            </ResourceCategory>
                        </xsl:if>
                        <xsl:if test="ResourceType">
                            <ResourceType>
                                <xsl:value-of select="ResourceType"/>
                            </ResourceType>
                        </xsl:if>
                        <xsl:if test="ResourceGroupID">
                            <ResourceGroupID>
                                <xsl:value-of select="ResourceGroupID"/>
                            </ResourceGroupID>
                        </xsl:if>
                        <xsl:if test="ResourceGroupName">
                            <ResourceGroupName>
                                <xsl:value-of select="ResourceGroupName"/>
                            </ResourceGroupName>
                        </xsl:if>
                        <xsl:if test="CreationDateTime">
                            <CreationDateTime>
                                <xsl:value-of select="CreationDateTime"/>
                            </CreationDateTime>
                        </xsl:if>
                        <xsl:if test="ResourceStatus">
                            <ResourceStatus>
                                <xsl:value-of select="ResourceStatus"/>
                            </ResourceStatus>
                        </xsl:if>
                        <xsl:for-each select="ns22:ResourceSpecification">
                            <ns22:ResourceSpecification>
                                <SerialNumber>
                                    <xsl:value-of select="SerialNumber"/>
                                </SerialNumber>
                                <Code>
                                    <xsl:value-of select="Code"/>
                                </Code>
                                <Value>
                                    <xsl:value-of select="Value"/>
                                </Value>
                                <xsl:if test="ExpiryDate">
                                    <ExpiryDate>
                                        <xsl:value-of select="ExpiryDate"/>
                                    </ExpiryDate>
                                </xsl:if>
                                <xsl:if test="Status">
                                    <Status>
                                        <xsl:value-of select="Status"/>
                                    </Status>
                                </xsl:if>
                                <xsl:if test="BatchId">
                                    <BatchId>
                                        <xsl:value-of select="BatchId"/>
                                    </BatchId>
                                </xsl:if>
                            </ns22:ResourceSpecification>
                        </xsl:for-each>
                    </ns21:Voucher>
                </xsl:for-each>
            </pfx13:VoucherOnDemandRes>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65332</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>AuditLogOUT</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateCommunicationException</pd:to>
        <pd:xpathDescription>Communication Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_SOAPRequestReply/ActivityErrors/ns9:HttpClientException)
or
exists($_error_SOAPRequestReply/ActivityErrors/ns9:HttpServerException)
or
exists($_error_SOAPRequestReply/ActivityErrors/ns9:HttpCommunicationException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>VoucherRechargeReq</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorNativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorNativeToCDM</pd:from>
        <pd:to>AuditLogERROR</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetVoucherRechargeSession</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogIN</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogOUT</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogERROR</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodesVar</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>AuditLogIN</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodesVar</pd:from>
        <pd:to>AuditLogIN</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVoucherRechargeSession</pd:from>
        <pd:to>GetResCodesVar</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVoucherRechargeSession</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>GetResCodesVar</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateESERVException</pd:to>
        <pd:xpathDescription>ESERVException</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_SOAPRequestReply/ActivityErrors/WebServiceException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodesVar</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogIN</pd:from>
        <pd:to>MapErrorData</pd:to>
        <pd:xpathDescription>CheckValidation</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value!=''
and
$Parse-XML/pfx12:VoucherOnDemandReq/pfx12:RechargeCategoryId!='')
or
(
count($GetVariable/pfx15:CrossRefVar/pfx15:paramGroup[COMMON= $Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value and ENTITY_TYPE='RECHARGE_CATEGORY_ID']/COMMON)=0
and
$Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value!=''
)
or
($Parse-XML/pfx12:VoucherOnDemandReq/ns21:Voucher/ns22:ResourceSpecification/Value=''
and
$Parse-XML/pfx12:VoucherOnDemandReq/pfx12:RechargeCategoryId='')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapErrorData</pd:from>
        <pd:to>AuditLogOUT</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>