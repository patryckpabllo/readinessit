<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns17="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.ericsson.com/CDM/telecom/FAF" xmlns:ns19="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:ns21="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns23="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/CrossRef.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://www.ericsson.com/CDM/telecom/Header" xmlns:zainKW="java://com.ZainKW.CurrentNanoSecconds" xmlns:pfx31="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeReq.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx32="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeRes.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx33="http://soaptopupsuite.eservglobal.com/" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfo.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx35="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfoResponse.xsd" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx36="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFRes.xsd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns211="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes.xsd" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx28="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" xmlns:pfx29="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsReq.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsRes.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd" xmlns:pfx27="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" xmlns:pfx24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Modification/WSDLs/AddressWrite.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" schemaLocation="/BusinessSchemas/Common/CLE/RequestHeader.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetAccountDetails/GetAccountDetailsRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/UnbarRecharge/UnbarRechargeRes.xsd"/>
    <xsd:import namespace="http://soaptopupsuite.eservglobal.com/" schemaLocation="/BusinessWSDLS/Services/Eserve/UnbarRecharge/voms_soaptopupsuite.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfo.xsd" schemaLocation="/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfo.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfoResponse.xsd" schemaLocation="/BusinessSchemas/Services/UnBar_getSubInfo/UnBar_getSubInfoResponse.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Modification/WSDLs/AddressWrite.wsdl"/>
    <wsdl:import namespace="http://soaptopupsuite.eservglobal.com/" location="/BusinessWSDLS/Services/Eserve/UnbarRecharge/voms_soaptopupsuite.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/Unbar_GetSubInfo/HelperProcess/Unbar_GetSubInfo.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx34:getSubInfo"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="CorrelationId" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>54</pd:startX>
    <pd:startY>322</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$MapToCDM/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice minOccurs="0">
                    <xsd:element ref="pfx35:subscriberInfo" minOccurs="0"/>
                    <xsd:element ref="pfx36:ErrorResponse" minOccurs="0"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1285</pd:endX>
    <pd:endY>298</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>481</pd:x>
        <pd:y>145</pd:y>
        <pd:width>424</pd:width>
        <pd:height>318</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CallEServe</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65383</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CallEServe</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CallEServe</pd:from>
            <pd:to>Error_LookUp</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Error_LookUp</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>TimeOut</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_CallEServe/ActivityErrors/ns10:ActivityTimedOutException)
or
exists($_error_CallEServe/ActivityErrors/ns9:HttpCommunicationException)
or $Error_LookUp/root/errorGroup/RETRYFLAG=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="GenerateTechError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>667</pd:x>
            <pd:y>404</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SblSoapErrorDec"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SBLSoapErrorCode"/>
                    </messageCode>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>804</pd:x>
            <pd:y>401</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CallEServe">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>674</pd:x>
            <pd:y>200</pd:y>
            <config>
                <timeout>0</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <timeoutType>Seconds</timeoutType>
                <service>pfx33:soaptopupsuite</service>
                <servicePort>EndPointInterfacePort</servicePort>
                <operation>getSubscriberInfo</operation>
                <soapAction/>
                <endpointURL>%%CommonResources/Connections/SOAP/External/eServ/eServ_HTTP/SOAPURI%%</endpointURL>
                <authScheme>NONE</authScheme>
            </config>
            <pd:inputBindings>
                <getSubscriberInfo>
                    <session>
                        <actorId>
                            <xsl:value-of select="$GetSubInfoStatusSession/SessionPool/Session/actorId"/>
                        </actorId>
                        <language>
                            <xsl:value-of select="$GetSubInfoStatusSession/SessionPool/Session/Language"/>
                        </language>
                        <sessionId>
                            <xsl:value-of select="$GetSubInfoStatusSession/SessionPool/Session/sessionId"/>
                        </sessionId>
                    </session>
                    <msisdn>
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/pfx34:getSubInfo/pfx34:msisdn)">
                                <xsl:value-of select="$Start/group/pfx34:getSubInfo/pfx34:msisdn"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </msisdn>
                </getSubscriberInfo>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Error_LookUp">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>567</pd:x>
            <pd:y>313</pd:y>
            <config>
                <processName>/CommonProcesses/ErrorHandlingProcess/ErrorCode_LookUp.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:if test="if(string-length($_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode)>0)&#xA;then&#xA;$_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode">
                        <MsgCode>
                            <xsl:value-of select="if(string-length($_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode)>0)&#xA;then&#xA;$_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode"/>
                        </MsgCode>
                    </xsl:if>
                    <TargetSystem>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/TargetSystem"/>
                    </TargetSystem>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>708</pd:x>
            <pd:y>302</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="GenerateCommunicationException">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1024</pd:x>
        <pd:y>498</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1005</pd:x>
        <pd:y>308</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice minOccurs="0">
                            <xsd:element ref="pfx35:subscriberInfo" minOccurs="0"/>
                            <xsd:element ref="pfx36:ErrorResponse" minOccurs="0"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="exists($CallEServe/getSubscriberInfoResponse/subscriberInfo)&#xA;and string-length($CallEServe/getSubscriberInfoResponse/subscriberInfo)>0">
                        <xsl:for-each select="$CallEServe/getSubscriberInfoResponse/subscriberInfo">
                            <pfx35:subscriberInfo>
                                <xsl:for-each select="commentList">
                                    <pfx35:commentList>
                                        <xsl:for-each select="comment">
                                            <pfx35:comment>
                                                <xsl:if test="type">
                                                    <pfx35:type>
                                                        <xsl:value-of select="type"/>
                                                    </pfx35:type>
                                                </xsl:if>
                                                <xsl:if test="value">
                                                    <pfx35:value>
                                                        <xsl:value-of select="value"/>
                                                    </pfx35:value>
                                                </xsl:if>
                                            </pfx35:comment>
                                        </xsl:for-each>
                                    </pfx35:commentList>
                                </xsl:for-each>
                                <xsl:if test="firstCall">
                                    <pfx35:firstCall>
                                        <xsl:value-of select="firstCall"/>
                                    </pfx35:firstCall>
                                </xsl:if>
                                <xsl:if test="firstName">
                                    <pfx35:firstName>
                                        <xsl:value-of select="firstName"/>
                                    </pfx35:firstName>
                                </xsl:if>
                                <xsl:if test="globalState">
                                    <pfx35:globalState>
                                        <xsl:value-of select="globalState"/>
                                    </pfx35:globalState>
                                </xsl:if>
                                <xsl:if test="lastCall">
                                    <pfx35:lastCall>
                                        <xsl:value-of select="lastCall"/>
                                    </pfx35:lastCall>
                                </xsl:if>
                                <xsl:if test="lastDateRechargedKO">
                                    <pfx35:lastDateRechargedKO>
                                        <xsl:value-of select="lastDateRechargedKO"/>
                                    </pfx35:lastDateRechargedKO>
                                </xsl:if>
                                <xsl:if test="lastDateRechargedOK">
                                    <pfx35:lastDateRechargedOK>
                                        <xsl:value-of select="lastDateRechargedOK"/>
                                    </pfx35:lastDateRechargedOK>
                                </xsl:if>
                                <xsl:if test="lastHrnKO">
                                    <pfx35:lastHrnKO>
                                        <xsl:value-of select="lastHrnKO"/>
                                    </pfx35:lastHrnKO>
                                </xsl:if>
                                <xsl:if test="lastName">
                                    <pfx35:lastName>
                                        <xsl:value-of select="lastName"/>
                                    </pfx35:lastName>
                                </xsl:if>
                                <xsl:if test="lastRechargeErrorCode">
                                    <pfx35:lastRechargeErrorCode>
                                        <xsl:value-of select="lastRechargeErrorCode"/>
                                    </pfx35:lastRechargeErrorCode>
                                </xsl:if>
                                <xsl:if test="lastRechargeErrorLabel">
                                    <pfx35:lastRechargeErrorLabel>
                                        <xsl:value-of select="lastRechargeErrorLabel"/>
                                    </pfx35:lastRechargeErrorLabel>
                                </xsl:if>
                                <xsl:if test="lastRechargeStatus">
                                    <pfx35:lastRechargeStatus>
                                        <xsl:value-of select="lastRechargeStatus"/>
                                    </pfx35:lastRechargeStatus>
                                </xsl:if>
                                <xsl:if test="lastRechargedBE">
                                    <pfx35:lastRechargedBE>
                                        <xsl:value-of select="lastRechargedBE"/>
                                    </pfx35:lastRechargedBE>
                                </xsl:if>
                                <xsl:if test="lastRechargedVoucherKO">
                                    <pfx35:lastRechargedVoucherKO>
                                        <xsl:value-of select="lastRechargedVoucherKO"/>
                                    </pfx35:lastRechargedVoucherKO>
                                </xsl:if>
                                <xsl:if test="lastRechargedVoucherOK">
                                    <pfx35:lastRechargedVoucherOK>
                                        <xsl:value-of select="lastRechargedVoucherOK"/>
                                    </pfx35:lastRechargedVoucherOK>
                                </xsl:if>
                                <xsl:if test="lastUpdate">
                                    <pfx35:lastUpdate>
                                        <xsl:value-of select="lastUpdate"/>
                                    </pfx35:lastUpdate>
                                </xsl:if>
                                <xsl:if test="msisdn">
                                    <pfx35:msisdn>
                                        <xsl:value-of select="msisdn"/>
                                    </pfx35:msisdn>
                                </xsl:if>
                                <xsl:for-each select="statisticsRecharge">
                                    <pfx35:statisticsRecharge>
                                        <xsl:for-each select="fraudByMASOList">
                                            <pfx35:fraudByMASOList>
                                                <xsl:for-each select="fraudByfraudByMASO">
                                                    <pfx35:fraudByfraudByMASO>
                                                        <xsl:if test="aliasCategory">
                                                            <pfx35:aliasCategory>
                                                                <xsl:value-of select="aliasCategory"/>
                                                            </pfx35:aliasCategory>
                                                        </xsl:if>
                                                        <xsl:if test="dailyFraud">
                                                            <pfx35:dailyFraud>
                                                                <xsl:value-of select="dailyFraud"/>
                                                            </pfx35:dailyFraud>
                                                        </xsl:if>
                                                        <xsl:if test="medium">
                                                            <pfx35:medium>
                                                                <xsl:value-of select="medium"/>
                                                            </pfx35:medium>
                                                        </xsl:if>
                                                        <xsl:if test="monthlyFraud">
                                                            <pfx35:monthlyFraud>
                                                                <xsl:value-of select="monthlyFraud"/>
                                                            </pfx35:monthlyFraud>
                                                        </xsl:if>
                                                        <xsl:if test="monthlyFraudLimit">
                                                            <pfx35:monthlyFraudLimit>
                                                                <xsl:value-of select="monthlyFraudLimit"/>
                                                            </pfx35:monthlyFraudLimit>
                                                        </xsl:if>
                                                        <xsl:if test="operation">
                                                            <pfx35:operation>
                                                                <xsl:value-of select="operation"/>
                                                            </pfx35:operation>
                                                        </xsl:if>
                                                        <xsl:if test="service">
                                                            <pfx35:service>
                                                                <xsl:value-of select="service"/>
                                                            </pfx35:service>
                                                        </xsl:if>
                                                        <xsl:if test="successiveFraud">
                                                            <pfx35:successiveFraud>
                                                                <xsl:value-of select="successiveFraud"/>
                                                            </pfx35:successiveFraud>
                                                        </xsl:if>
                                                        <xsl:if test="successiveFraudLimit">
                                                            <pfx35:successiveFraudLimit>
                                                                <xsl:value-of select="successiveFraudLimit"/>
                                                            </pfx35:successiveFraudLimit>
                                                        </xsl:if>
                                                        <xsl:if test="totalNbSuspension">
                                                            <pfx35:totalNbSuspension>
                                                                <xsl:value-of select="totalNbSuspension"/>
                                                            </pfx35:totalNbSuspension>
                                                        </xsl:if>
                                                    </pfx35:fraudByfraudByMASO>
                                                </xsl:for-each>
                                            </pfx35:fraudByMASOList>
                                        </xsl:for-each>
                                        <xsl:if test="nbRechargeKOsinceLastRecharge">
                                            <pfx35:nbRechargeKOsinceLastRecharge>
                                                <xsl:value-of select="nbRechargeKOsinceLastRecharge"/>
                                            </pfx35:nbRechargeKOsinceLastRecharge>
                                        </xsl:if>
                                        <xsl:if test="totalNbRechargeKO">
                                            <pfx35:totalNbRechargeKO>
                                                <xsl:value-of select="totalNbRechargeKO"/>
                                            </pfx35:totalNbRechargeKO>
                                        </xsl:if>
                                        <xsl:if test="totalNbRechargeOK">
                                            <pfx35:totalNbRechargeOK>
                                                <xsl:value-of select="totalNbRechargeOK"/>
                                            </pfx35:totalNbRechargeOK>
                                        </xsl:if>
                                    </pfx35:statisticsRecharge>
                                </xsl:for-each>
                                <xsl:for-each select="subscriberProductList">
                                    <pfx35:subscriberProductList>
                                        <xsl:for-each select="subscriberProduct">
                                            <pfx35:subscriberProduct>
                                                <xsl:if test="activePeriodEndDate">
                                                    <pfx35:activePeriodEndDate>
                                                        <xsl:value-of select="activePeriodEndDate"/>
                                                    </pfx35:activePeriodEndDate>
                                                </xsl:if>
                                                <xsl:if test="activePeriodEndQuality">
                                                    <pfx35:activePeriodEndQuality>
                                                        <xsl:value-of select="activePeriodEndQuality"/>
                                                    </pfx35:activePeriodEndQuality>
                                                </xsl:if>
                                                <xsl:if test="gracePeriodEndDate">
                                                    <pfx35:gracePeriodEndDate>
                                                        <xsl:value-of select="gracePeriodEndDate"/>
                                                    </pfx35:gracePeriodEndDate>
                                                </xsl:if>
                                                <xsl:if test="gracePeriodEndDateQuality">
                                                    <pfx35:gracePeriodEndDateQuality>
                                                        <xsl:value-of select="gracePeriodEndDateQuality"/>
                                                    </pfx35:gracePeriodEndDateQuality>
                                                </xsl:if>
                                                <xsl:if test="id">
                                                    <pfx35:id>
                                                        <xsl:value-of select="id"/>
                                                    </pfx35:id>
                                                </xsl:if>
                                                <xsl:if test="rechargeablePeriodEndDate">
                                                    <pfx35:rechargeablePeriodEndDate>
                                                        <xsl:value-of select="rechargeablePeriodEndDate"/>
                                                    </pfx35:rechargeablePeriodEndDate>
                                                </xsl:if>
                                                <pfx35:rechargeablePeriodEndDateQuality>
                                                    <xsl:value-of select="rechargeablePeriodEndDateQuality"/>
                                                </pfx35:rechargeablePeriodEndDateQuality>
                                            </pfx35:subscriberProduct>
                                        </xsl:for-each>
                                    </pfx35:subscriberProductList>
                                </xsl:for-each>
                                <xsl:if test="subscriberProfile">
                                    <pfx35:subscriberProfile>
                                        <xsl:value-of select="subscriberProfile"/>
                                    </pfx35:subscriberProfile>
                                </xsl:if>
                                <pfx35:suspended>
                                    <xsl:value-of select="suspended"/>
                                </pfx35:suspended>
                                <xsl:if test="timeZone">
                                    <pfx35:timeZone>
                                        <xsl:value-of select="timeZone"/>
                                    </pfx35:timeZone>
                                </xsl:if>
                            </pfx35:subscriberInfo>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="exists($_error_CallEServe/ActivityErrors/WebServiceException) and string-length($_error_CallEServe/ActivityErrors/WebServiceException)>0">
                                <pfx36:ErrorResponse>
                                    <pfx36:Error_SourceSystem>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/TargetSystem"/>
                                    </pfx36:Error_SourceSystem>
                                    <xsl:if test="$_error_CallEServe/ActivityErrors/WebServiceException/detail/pfx33:WebServiceException/errorCode">
                                        <pfx36:Error_SourceErrCode>
                                            <xsl:value-of select="$_error_CallEServe/ActivityErrors/WebServiceException/detail/pfx33:WebServiceException/errorCode"/>
                                        </pfx36:Error_SourceErrCode>
                                    </xsl:if>
                                    <xsl:if test="$_error_CallEServe/ActivityErrors/WebServiceException/detail/pfx33:WebServiceException/message">
                                        <pfx36:Error_SourceErrDesc>
                                            <xsl:value-of select="$_error_CallEServe/ActivityErrors/WebServiceException/detail/pfx33:WebServiceException/message"/>
                                        </pfx36:Error_SourceErrDesc>
                                    </xsl:if>
                                    <pfx36:Error_Type>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/ErrorType"/>
                                    </pfx36:Error_Type>
                                </pfx36:ErrorResponse>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx36:ErrorResponse>
                                    <pfx36:Error_SourceSystem>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/TargetSystem"/>
                                    </pfx36:Error_SourceSystem>
                                    <xsl:if test="$_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode">
                                        <pfx36:Error_SourceErrCode>
                                            <xsl:value-of select="$_error_CallEServe/ActivityErrors/defaultFaultElement/faultcode"/>
                                        </pfx36:Error_SourceErrCode>
                                    </xsl:if>
                                    <xsl:if test="$_error_CallEServe/ActivityErrors/defaultFaultElement/faultstring">
                                        <pfx36:Error_SourceErrDesc>
                                            <xsl:value-of select="$_error_CallEServe/ActivityErrors/defaultFaultElement/faultstring"/>
                                        </pfx36:Error_SourceErrDesc>
                                    </xsl:if>
                                    <pfx36:Error_Type>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/ErrorType"/>
                                    </pfx36:Error_Type>
                                </pfx36:ErrorResponse>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogOUT">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1143</pd:x>
        <pd:y>302</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:CorrelationID>
                        <xsl:value-of select="$Start/group/CorrelationId"/>
                    </ns6:CorrelationID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($MapToCDM/root)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogIN">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>372</pd:x>
        <pd:y>324</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Query/Unbar_GetSubInfo/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:CorrelationID>
                        <xsl:value-of select="$Start/group/CorrelationId"/>
                    </ns6:CorrelationID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/group/pfx34:getSubInfo)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetSubInfoStatusSession">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>219</pd:x>
        <pd:y>322</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/SubInfoSession.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>278</pd:x>
        <pd:y>227</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>501</pd:x>
        <pd:y>516</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error/ns8:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateCommunicationException</pd:to>
        <pd:xpathDescription>Communication Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_CallEServe/ActivityErrors/ns9:HttpClientException)
or
exists($_error_CallEServe/ActivityErrors/ns9:HttpServerException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>MapToCDM</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogIN</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapToCDM</pd:from>
        <pd:to>AuditLogOUT</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetSubInfoStatusSession</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogOUT</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubInfoStatusSession</pd:from>
        <pd:to>AuditLogIN</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubInfoStatusSession</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>AuditLogIN</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>TimeOutError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>