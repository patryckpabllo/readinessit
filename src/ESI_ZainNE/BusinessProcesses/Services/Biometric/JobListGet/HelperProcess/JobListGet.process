<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx57="http://www.nvssoft.com/" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx53="http://www.zain.com/ZESB/Services/NetworkProfile/Types" xmlns:pfx54="http://www.huawei.com/HSS" xmlns:pfx55="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx56="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/BiometricActivity.xsd" xmlns:pfx52="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.zain.com/ZESB/Services/NumberPortability/Types" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pfx48="urn:INTG-REMEDY-CSA-TICKET-CREATE-SERVICE" xmlns:pfx49="http://www.huawei.com/AXIS/SmartKey" xmlns:pfx46="http://www.mformation.com/ProvisionServices" xmlns:pfx47="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtResponse.xsd" xmlns:pfx44="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eStoreCustRequest.xsd" xmlns:pfx45="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtCmn.xsd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5" xmlns:pfx43="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:ns21="http://www.siebel.com/xml/CBiO2%20External%20Individual%20Customer%20Creation%20IO" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx35="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx36="http://ericsson.com/services/ws_CIL_5/customercreatezain" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx38="http://siebel.com/CustomUI" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customercreatezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateCustomer/CustomerCreatezainService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerAsset/CustomerAssetQueryInbound.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eStoreCustRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/eStoreCustCreation/eStoreCustRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalIndividualCustomerCreationWS.wsdl"/>
    <xsd:import namespace="http://www.mformation.com/ProvisionServices" schemaLocation="/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtCmn.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/DeviceManagement/DeviceMgmtCmn.xsd"/>
    <xsd:import namespace="urn:INTG-REMEDY-CSA-TICKET-CREATE-SERVICE" schemaLocation="/BusinessWSDLS/Services/WSDLS/Remedy/INTG-REMEDY-CSA-TICKET-CREATE-SERVICE_1.wsdl"/>
    <xsd:import namespace="http://www.huawei.com/AXIS/SmartKey" schemaLocation="/BusinessWSDLS/Services/WSDLS/NumberPortability/NumberPortabilityOutbound.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/NumberPortability/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/NumberPortability/NumberPortability.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/NetworkProfile/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/NetworkProfile/NetworkProfile.wsdl"/>
    <xsd:import namespace="http://www.huawei.com/HSS" schemaLocation="/BusinessWSDLS/Services/WSDLS/HuaweiHLR/HSSV900R009C00SPC202.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/BiometricActivity.xsd" schemaLocation="/BusinessSchemas/Services/Modification/Biometric/BiometricActivity.xsd"/>
    <xsd:import namespace="http://www.nvssoft.com/" schemaLocation="/BusinessWSDLS/Services/WSDLS/Biometric/BIDSOAP.wsdl"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/CBiO2ExternalIndividualCustomerCreationWS.wsdl"/>
    <wsdl:import namespace="urn:INTG-REMEDY-CSA-TICKET-CREATE-SERVICE" location="/BusinessWSDLS/Services/WSDLS/Remedy/INTG-REMEDY-CSA-TICKET-CREATE-SERVICE_1.wsdl"/>
    <wsdl:import namespace="http://www.huawei.com/AXIS/SmartKey" location="/BusinessWSDLS/Services/WSDLS/NumberPortability/NumberPortabilityOutbound.wsdl"/>
    <wsdl:import namespace="http://www.huawei.com/HSS" location="/BusinessWSDLS/Services/WSDLS/HuaweiHLR/HSSV900R009C00SPC202.wsdl"/>
    <wsdl:import namespace="http://www.nvssoft.com/" location="/BusinessWSDLS/Services/WSDLS/Biometric/BIDSOAP.wsdl"/>
    <pd:name>BusinessProcesses/Services/Biometric/JobListGet/HelperProcess/JobListGet.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>90</pd:startX>
    <pd:startY>322</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$MapOutput/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx56:QueryJobListsOutput"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1653</pd:endX>
    <pd:endY>191</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="Log_In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>609</pd:x>
        <pd:y>189</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Common/Biometric/JobListGet/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CDMToNative/root/pfx57:JobListGet)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1057</pd:x>
        <pd:y>196</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Common/Biometric/JobListGet/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($SOAP_Call/outputMessage/pfx57:JobListGetResponse)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseCDMRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>220</pd:x>
        <pd:y>320</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx56:QueryJobListsInput"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/group/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>190</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx57:JobListGet"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx57:JobListGet>
                    <xsl:for-each select="$ParseCDMRequest/root/pfx56:QueryJobListsInput">
                        <pfx57:objRequest>
                            <xsl:if test="pfx56:ApplicationId">
                                <pfx57:ApplicationId>
                                    <xsl:value-of select="pfx56:ApplicationId"/>
                                </pfx57:ApplicationId>
                            </xsl:if>
                            <xsl:if test="pfx56:UserName">
                                <pfx57:UserName>
                                    <xsl:value-of select="pfx56:UserName"/>
                                </pfx57:UserName>
                            </xsl:if>
                            <xsl:if test="pfx56:RequestDate">
                                <pfx57:RequestDate>
                                    <xsl:value-of select="pfx56:RequestDate"/>
                                </pfx57:RequestDate>
                            </xsl:if>
                            <pfx57:RequestKey>
                                <xsl:value-of select="$CreateRequestKey/FinalKey"/>
                            </pfx57:RequestKey>
                            <xsl:if test="pfx56:CustomerId">
                                <pfx57:CustomerId>
                                    <xsl:value-of select="pfx56:CustomerId"/>
                                </pfx57:CustomerId>
                            </xsl:if>
                            <pfx57:Language>
                                <xsl:value-of select="pfx56:Language"/>
                            </pfx57:Language>
                            <xsl:if test="pfx56:Token">
                                <pfx57:Token>
                                    <xsl:value-of select="pfx56:Token"/>
                                </pfx57:Token>
                            </xsl:if>
                        </pfx57:objRequest>
                    </xsl:for-each>
                </pfx57:JobListGet>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAP_Call">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>735</pd:x>
        <pd:y>188</pd:y>
        <config>
            <timeout>%%BusinessProcesses/Services/Common/Biometric/JobListGet/SOAP_Timeout%%</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx57:Job</service>
            <servicePort>JobSoap</servicePort>
            <operation>JobListGet</operation>
            <soapAction>http://www.nvssoft.com/JobListGet</soapAction>
            <endpointURL>https://localhost/bid/job.asmx</endpointURL>
            <authScheme>NONE</authScheme>
            <useProxy>false</useProxy>
            <requireBasicAuth>false</requireBasicAuth>
            <basicHttpAuthIdentity/>
            <ns22:ssl xmlns:ns22="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns22:strongCipherSuitesOnly>true</ns22:strongCipherSuitesOnly>
                <ns22:cert isRef="true">/BusinessProcesses/Services/Biometric/JobListGet/HelperProcess/.folder</ns22:cert>
            </ns22:ssl>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <xsl:copy-of select="$CDMToNative/root/pfx57:JobListGet"/>
                <ns13:_configData>
                    <endpointURL>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/Common/Biometric/EndpointURL"/>
                    </endpointURL>
                </ns13:_configData>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>737</pd:x>
        <pd:y>339</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="if(string-length($_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultcode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultstring&#xA;else if(string-length($_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msgCode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msg&#xA;else $_error/ns8:ErrorReport/Msg"/>
                </message>
                <xsl:if test="if(string-length($_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultcode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultcode&#xA;else if(string-length($_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msgCode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msgCode&#xA;else $_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="if(string-length($_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultcode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/defaultFaultElement/faultcode&#xA;else if(string-length($_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msgCode)>0)&#xA;then $_error_SOAP_Call/ActivityErrors/ns10:ActivityTimedOutException/msgCode&#xA;else $_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>220</pd:x>
        <pd:y>445</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapOutput">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1310</pd:x>
        <pd:y>196</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx56:QueryJobListsOutput"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="string-length($SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:ErrorMessage)=0">
                        <pfx56:QueryJobListsOutput>
                            <xsl:for-each select="$SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:JobListGetResult/pfx57:clsJob">
                                <pfx56:JobDetail>
                                    <xsl:if test="pfx57:JobId">
                                        <pfx56:JobId>
                                            <xsl:value-of select="pfx57:JobId"/>
                                        </pfx56:JobId>
                                    </xsl:if>
                                    <xsl:if test="pfx57:CustomerId">
                                        <pfx56:CustomerId>
                                            <xsl:value-of select="pfx57:CustomerId"/>
                                        </pfx56:CustomerId>
                                    </xsl:if>
                                    <xsl:if test="pfx57:ProfileId">
                                        <pfx56:ProfileId>
                                            <xsl:value-of select="pfx57:ProfileId"/>
                                        </pfx56:ProfileId>
                                    </xsl:if>
                                    <xsl:if test="pfx57:ClientName">
                                        <pfx56:ClientName>
                                            <xsl:value-of select="pfx57:ClientName"/>
                                        </pfx56:ClientName>
                                    </xsl:if>
                                    <pfx56:Type>
                                        <xsl:value-of select="pfx57:Type"/>
                                    </pfx56:Type>
                                    <xsl:if test="pfx57:UserName">
                                        <pfx56:UserName>
                                            <xsl:value-of select="pfx57:UserName"/>
                                        </pfx56:UserName>
                                    </xsl:if>
                                    <xsl:if test="pfx57:DeviceId">
                                        <pfx56:DeviceId>
                                            <xsl:value-of select="pfx57:DeviceId"/>
                                        </pfx56:DeviceId>
                                    </xsl:if>
                                    <xsl:if test="pfx57:AssignDate">
                                        <pfx56:AssignDate>
                                            <xsl:value-of select="pfx57:AssignDate"/>
                                        </pfx56:AssignDate>
                                    </xsl:if>
                                    <pfx56:Status>
                                        <xsl:value-of select="pfx57:Status"/>
                                    </pfx56:Status>
                                    <xsl:if test="pfx57:StatuschgDate">
                                        <pfx56:StatuschgDate>
                                            <xsl:value-of select="pfx57:StatuschgDate"/>
                                        </pfx56:StatuschgDate>
                                    </xsl:if>
                                    <pfx56:ValidationResult>
                                        <xsl:value-of select="pfx57:ValidationResult"/>
                                    </pfx56:ValidationResult>
                                    <xsl:if test="pfx57:ValidationMessage">
                                        <pfx56:ValidationMessage>
                                            <xsl:value-of select="pfx57:ValidationMessage"/>
                                        </pfx56:ValidationMessage>
                                    </xsl:if>
                                    <xsl:if test="pfx57:Message">
                                        <pfx56:Message>
                                            <xsl:value-of select="pfx57:Message"/>
                                        </pfx56:Message>
                                    </xsl:if>
                                </pfx56:JobDetail>
                            </xsl:for-each>
                        </pfx56:QueryJobListsOutput>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx56:QueryJobListsOutput>
                            <pfx52:ErrorResponse>
                                <pfx52:Error_SourceSystem>
                                    <xsl:value-of select="&quot;BIOMETRIC&quot;"/>
                                </pfx52:Error_SourceSystem>
                                <xsl:if test="$SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:ErrorMessage">
                                    <pfx52:Error_SourceErrCode>
                                        <xsl:value-of select="$SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:ErrorMessage"/>
                                    </pfx52:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="$SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:ErrorMessage">
                                    <pfx52:Error_SourceErrDesc>
                                        <xsl:value-of select="$SOAP_Call/outputMessage/pfx57:JobListGetResponse/pfx57:ErrorMessage"/>
                                    </pfx52:Error_SourceErrDesc>
                                </xsl:if>
                            </pfx52:ErrorResponse>
                        </pfx56:QueryJobListsOutput>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CreateRequestKey">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>222</pd:x>
        <pd:y>190</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Biometric/JobCreate/HelperProcess/CreateRequestKey.process</processName>
        </config>
        <pd:inputBindings>
            <InputText>
                <xsl:value-of select="concat($ParseCDMRequest/root/pfx56:QueryJobListsInput/pfx56:ApplicationId,&quot;-&quot;,$ParseCDMRequest/root/pfx56:QueryJobListsInput/pfx56:UserName,&quot;-&quot;,$ParseCDMRequest/root/pfx56:QueryJobListsInput/pfx56:Token,&quot;-&quot;,$ParseCDMRequest/root/pfx56:QueryJobListsInput/pfx56:RequestDate)"/>
            </InputText>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SOAP_Call</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseCDMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>Log_In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>CreateRequestKey</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapOutput</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Out</pd:from>
        <pd:to>MapOutput</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_In</pd:from>
        <pd:to>SOAP_Call</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAP_Call</pd:from>
        <pd:to>Log_Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateRequestKey</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>