<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx52="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/QueryCustomerByIDRes.xsd" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/Biometric/QueryCustomerByID/HelperProcess/QueryCustByID.xsd" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pfx48="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/QueryCustomerByIDReq.xsd" xmlns:pfx46="http://www.zain.com/ZESB/Services/QuerySIMDetails/Types" xmlns:pfx47="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/Biometric/QuerySIMDetails/HelperProcess/QuerySIMDetails.xsd" xmlns:pfx44="http://schemas.tibco.com/bw/plugins/jdbc/5.0/jdbcExceptions" xmlns:pfx45="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/GetCustomerAsset/HelperProcess/AssetQueryResponse.xsd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5" xmlns:pfx43="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:ns21="http://www.siebel.com/xml/CBiO2%20Query%20Asset%20IO" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx35="http://lhsgroup.com/lhsws/money" xmlns:pfx36="http://ericsson.com/services/ws_CIL_5/customercreatezain" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx38="http://siebel.com/CustomUI" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customercreatezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateCustomer/CustomerCreatezainService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileResponse.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/http---siebel.com-CustomUI_CBiO2 Query Asset Workflow.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerAsset/CustomerAssetQueryInbound.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/GetCustomerAsset/HelperProcess/AssetQueryResponse.xsd" schemaLocation="/BusinessProcesses/Services/Query/GetCustomerAsset/HelperProcess/AssetQueryResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/Biometric/QuerySIMDetails/HelperProcess/QuerySIMDetails.xsd" schemaLocation="/BusinessProcesses/Services/Query/Biometric/QuerySIMDetails/HelperProcess/QuerySIMDetails.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/QuerySIMDetails/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/QuerySIMDetails/QuerySIMDetails.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/QueryCustomerByIDReq.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Biometric/QueryCustomerByIDReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/Biometric/QueryCustomerByID/HelperProcess/QueryCustByID.xsd" schemaLocation="/BusinessProcesses/Services/Query/Biometric/QueryCustomerByID/HelperProcess/QueryCustByID.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/QueryCustomerByIDRes.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Biometric/QueryCustomerByIDRes.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/http---siebel.com-CustomUI_CBiO2 Query Asset Workflow.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/Biometric/QueryCustomerByID/HelperProcess/QueryCustByID.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>70</pd:startX>
    <pd:startY>190</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$NativeToCDM/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx52:Response"/>
                    <xsd:element ref="pfx48:ErrorResponse"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1363</pd:endX>
    <pd:endY>190</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="QueryCustByID">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>545</pd:x>
        <pd:y>190</pd:y>
        <config>
            <timeout>%%BusinessProcesses/Services/CRM/Query/Biometric/QueryCustByID/JDBCTimeout%%</timeout>
            <maxRows>%%BusinessProcesses/Services/CRM/Query/Biometric/QueryCustByID/MaxRows%%</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/External/SeibelLOVConnection.sharedjdbc</jdbcSharedConfig>
            <ProcedureName>ZAINKW_BIOMETRIC_PROF_QUERY_SP</ProcedureName>
            <schema/>
            <oraObjects/>
            <oraTables/>
            <parameterTypes>
                <parameter>
                    <colName>P_IDNUMBER_IN</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>VARCHAR2</typeName>
                </parameter>
                <parameter>
                    <colName>P_CUSTPROF_OUT</colName>
                    <colType>3</colType>
                    <dataType>-10</dataType>
                    <typeName>REF CURSOR</typeName>
                </parameter>
                <parameter>
                    <colName>P_ADDRESSPROF_OUT</colName>
                    <colType>3</colType>
                    <dataType>-10</dataType>
                    <typeName>REF CURSOR</typeName>
                </parameter>
                <parameter>
                    <colName>P_PMTPROF_OUT</colName>
                    <colType>3</colType>
                    <dataType>-10</dataType>
                    <typeName>REF CURSOR</typeName>
                </parameter>
                <parameter>
                    <colName>P_BILLACCPROF_OUT</colName>
                    <colType>3</colType>
                    <dataType>-10</dataType>
                    <typeName>REF CURSOR</typeName>
                </parameter>
                <parameter>
                    <colName>P_ERRORCODE_OUT</colName>
                    <colType>4</colType>
                    <dataType>12</dataType>
                    <typeName>VARCHAR2</typeName>
                </parameter>
                <parameter>
                    <colName>P_ERRORMSG_OUT</colName>
                    <colType>4</colType>
                    <dataType>12</dataType>
                    <typeName>VARCHAR2</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <P_IDNUMBER_IN>
                        <xsl:value-of select="$ParseCDMRequest/pfx49:Request/pfx49:ID_Number"/>
                    </P_IDNUMBER_IN>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>540</pd:x>
        <pd:y>333</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>381</pd:x>
        <pd:y>190</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Query/Biometric/QueryCustByID/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Start/group/CustomerString"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>738</pd:x>
        <pd:y>190</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Query/Biometric/QueryCustByID/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($QueryCustByID/resultSet)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1154</pd:x>
        <pd:y>189</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx52:Response"/>
                            <xsd:element ref="pfx48:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$QueryCustByID/resultSet/outputSet/P_ERRORCODE_OUT=0">
                        <pfx52:Response>
                            <xsl:for-each select="$ParseResponse/Resultsets">
                                <pfx52:Resultsets>
                                    <xsl:for-each select="ResultSet1">
                                        <pfx52:ResultSet1>
                                            <xsl:for-each select="Record1">
                                                <pfx52:Record1>
                                                    <xsl:if test="ROW_ID">
                                                        <pfx52:ROW_ID>
                                                            <xsl:value-of select="ROW_ID"/>
                                                        </pfx52:ROW_ID>
                                                    </xsl:if>
                                                    <xsl:if test="CUST_STAT_CD">
                                                        <pfx52:CUST_STAT_CD>
                                                            <xsl:value-of select="CUST_STAT_CD"/>
                                                        </pfx52:CUST_STAT_CD>
                                                    </xsl:if>
                                                    <xsl:if test="STAT_REASON_CD">
                                                        <pfx52:STAT_REASON_CD>
                                                            <xsl:value-of select="STAT_REASON_CD"/>
                                                        </pfx52:STAT_REASON_CD>
                                                    </xsl:if>
                                                    <xsl:if test="STAT_CHG_DT">
                                                        <pfx52:STAT_CHG_DT>
                                                            <xsl:value-of select="STAT_CHG_DT"/>
                                                        </pfx52:STAT_CHG_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACC_COLOR_CD/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_COLOR_CD/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_COLOR_CD>
                                                            <xsl:value-of select="X_CBIO2_ACC_COLOR_CD"/>
                                                        </pfx52:ACC_COLOR_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_SEQUENCE_NUM>
                                                            <xsl:value-of select="X_CBIO2_ACC_SEQUENCE_NUM"/>
                                                        </pfx52:ACC_SEQUENCE_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACT_PERF/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACT_PERF/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACT_PERF>
                                                            <xsl:value-of select="X_CBIO2_ACT_PERF"/>
                                                        </pfx52:ACT_PERF>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_AGE_RANGE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_AGE_RANGE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:AGE_RANGE>
                                                            <xsl:value-of select="X_CBIO2_AGE_RANGE"/>
                                                        </pfx52:AGE_RANGE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_FNAME_ARA/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_FNAME_ARA/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:FNAME_ARA>
                                                            <xsl:value-of select="X_CBIO2_FNAME_ARA"/>
                                                        </pfx52:FNAME_ARA>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_LNAME_ARA/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_LNAME_ARA/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:LNAME_ARA>
                                                            <xsl:value-of select="X_CBIO2_LNAME_ARA"/>
                                                        </pfx52:LNAME_ARA>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SNAME_ARA/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SNAME_ARA/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SNAME_ARA>
                                                            <xsl:value-of select="X_CBIO2_SNAME_ARA"/>
                                                        </pfx52:SNAME_ARA>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_TNAME_ARA/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_TNAME_ARA/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:TNAME_ARA>
                                                            <xsl:value-of select="X_CBIO2_TNAME_ARA"/>
                                                        </pfx52:TNAME_ARA>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_TITLE_ARA/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_TITLE_ARA/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:TITLE_ARA>
                                                            <xsl:value-of select="X_CBIO2_TITLE_ARA"/>
                                                        </pfx52:TITLE_ARA>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BEHAVIORS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BEHAVIORS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BEHAVIORS>
                                                            <xsl:value-of select="X_CBIO2_BEHAVIORS"/>
                                                        </pfx52:BEHAVIORS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BILLCYCLE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BILLCYCLE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BILLCYCLE>
                                                            <xsl:value-of select="X_CBIO2_BILLCYCLE"/>
                                                        </pfx52:BILLCYCLE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BLOOD_GRP/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BLOOD_GRP/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BLOOD_GRP>
                                                            <xsl:value-of select="X_CBIO2_BLOOD_GRP"/>
                                                        </pfx52:BLOOD_GRP>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_HIER_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_HIER_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_HIER_ID>
                                                            <xsl:value-of select="X_CBIO2_BSCS_HIER_ID"/>
                                                        </pfx52:BSCS_HIER_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_ID>
                                                            <xsl:value-of select="X_CBIO2_BSCS_ID"/>
                                                        </pfx52:BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_STAT_CD/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_STAT_CD/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_STAT_CD>
                                                            <xsl:value-of select="X_CBIO2_BSCS_STAT_CD"/>
                                                        </pfx52:BSCS_STAT_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_BU/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_BU/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_BU>
                                                            <xsl:value-of select="X_CBIO2_BSCS_BU"/>
                                                        </pfx52:BSCS_BU>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CATEGORY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CATEGORY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CATEGORY>
                                                            <xsl:value-of select="X_CBIO2_CATEGORY"/>
                                                        </pfx52:CATEGORY>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_COMMUNITY_ID1/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_COMMUNITY_ID1/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:COMMUNITY_ID1>
                                                            <xsl:value-of select="X_CBIO2_COMMUNITY_ID1"/>
                                                        </pfx52:COMMUNITY_ID1>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_COMPANY_NAME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_COMPANY_NAME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:COMPANY_NAME>
                                                            <xsl:value-of select="X_CBIO2_COMPANY_NAME"/>
                                                        </pfx52:COMPANY_NAME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CONN_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CONN_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CONN_DT>
                                                            <xsl:value-of select="X_CBIO2_CONN_DT"/>
                                                        </pfx52:CONN_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACC_EXPIRES/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_EXPIRES/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_EXPIRES>
                                                            <xsl:value-of select="X_CBIO2_ACC_EXPIRES"/>
                                                        </pfx52:ACC_EXPIRES>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CREDIT_NOTE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CREDIT_NOTE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CREDIT_NOTE>
                                                            <xsl:value-of select="X_CBIO2_CREDIT_NOTE"/>
                                                        </pfx52:CREDIT_NOTE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CREATED_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CREATED_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CREATED_DT>
                                                            <xsl:value-of select="X_CBIO2_CREATED_DT"/>
                                                        </pfx52:CREATED_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_EDUCATION/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_EDUCATION/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:EDUCATION>
                                                            <xsl:value-of select="X_CBIO2_EDUCATION"/>
                                                        </pfx52:EDUCATION>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_MARITAL_STAT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_MARITAL_STAT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:MARITAL_STAT>
                                                            <xsl:value-of select="X_CBIO2_MARITAL_STAT"/>
                                                        </pfx52:MARITAL_STAT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PROFESSION/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PROFESSION/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PROFESSION>
                                                            <xsl:value-of select="X_CBIO2_PROFESSION"/>
                                                        </pfx52:PROFESSION>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CUST_LVL/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CUST_LVL/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CUST_LVL>
                                                            <xsl:value-of select="X_CBIO2_CUST_LVL"/>
                                                        </pfx52:CUST_LVL>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_DISC_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_DISC_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:DISC_DT>
                                                            <xsl:value-of select="X_CBIO2_DISC_DT"/>
                                                        </pfx52:DISC_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BIRTH_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BIRTH_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BIRTH_DT>
                                                            <xsl:value-of select="X_CBIO2_BIRTH_DT"/>
                                                        </pfx52:BIRTH_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_FNAME_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_FNAME_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:FNAME_ENG>
                                                            <xsl:value-of select="X_CBIO2_FNAME_ENG"/>
                                                        </pfx52:FNAME_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_LNAME_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_LNAME_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:LNAME_ENG>
                                                            <xsl:value-of select="X_CBIO2_LNAME_ENG"/>
                                                        </pfx52:LNAME_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SNAME_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SNAME_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SNAME_ENG>
                                                            <xsl:value-of select="X_CBIO2_SNAME_ENG"/>
                                                        </pfx52:SNAME_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_TNAME_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_TNAME_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:TNAME_ENG>
                                                            <xsl:value-of select="X_CBIO2_TNAME_ENG"/>
                                                        </pfx52:TNAME_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_TITLE_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_TITLE_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:TITLE_ENG>
                                                            <xsl:value-of select="X_CBIO2_TITLE_ENG"/>
                                                        </pfx52:TITLE_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ERROR_STATUS>
                                                            <xsl:value-of select="X_CBIO2_ERROR_STATUS"/>
                                                        </pfx52:ERROR_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_GENDER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_GENDER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:GENDER>
                                                            <xsl:value-of select="X_CBIO2_GENDER"/>
                                                        </pfx52:GENDER>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_HOME_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_HOME_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:HOME_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_HOME_NUMBER"/>
                                                        </pfx52:HOME_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ID_EXPIRY_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ID_EXPIRY_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ID_EXPIRY_DT>
                                                            <xsl:value-of select="X_CBIO2_ID_EXPIRY_DT"/>
                                                        </pfx52:ID_EXPIRY_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ID_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ID_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ID_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_ID_NUMBER"/>
                                                        </pfx52:ID_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ID_TYPE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ID_TYPE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ID_TYPE>
                                                            <xsl:value-of select="X_CBIO2_ID_TYPE"/>
                                                        </pfx52:ID_TYPE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_INDUSTRY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_INDUSTRY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:INDUSTRY>
                                                            <xsl:value-of select="X_CBIO2_INDUSTRY"/>
                                                        </pfx52:INDUSTRY>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_KAM_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_KAM_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:KAM_ID>
                                                            <xsl:value-of select="X_CBIO2_KAM_ID"/>
                                                        </pfx52:KAM_ID>
                                                    </xsl:if>
                                                    <xsl:if test="MARKET_CLASS_CD">
                                                        <pfx52:MARKET_CLASS_CD>
                                                            <xsl:value-of select="MARKET_CLASS_CD"/>
                                                        </pfx52:MARKET_CLASS_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_NATIONALITY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_NATIONALITY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:NATIONALITY>
                                                            <xsl:value-of select="X_CBIO2_NATIONALITY"/>
                                                        </pfx52:NATIONALITY>
                                                    </xsl:if>
                                                    <xsl:if test="BANK_CODE">
                                                        <pfx52:BANK_CODE>
                                                            <xsl:value-of select="BANK_CODE"/>
                                                        </pfx52:BANK_CODE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_NOTIFY_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_NOTIFY_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:NOTIFY_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_NOTIFY_NUMBER"/>
                                                        </pfx52:NOTIFY_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ORG_CAT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ORG_CAT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ORG_CAT>
                                                            <xsl:value-of select="X_CBIO2_ORG_CAT"/>
                                                        </pfx52:ORG_CAT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ORG_SIZE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ORG_SIZE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ORG_SIZE>
                                                            <xsl:value-of select="X_CBIO2_ORG_SIZE"/>
                                                        </pfx52:ORG_SIZE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ORG_TYP/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ORG_TYP/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ORG_TYP>
                                                            <xsl:value-of select="X_CBIO2_ORG_TYP"/>
                                                        </pfx52:ORG_TYP>
                                                    </xsl:if>
                                                    <xsl:if test="EVT_LOC_FLG">
                                                        <pfx52:EVT_LOC_FLG>
                                                            <xsl:value-of select="EVT_LOC_FLG"/>
                                                        </pfx52:EVT_LOC_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PORTOUT_FLG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PORTOUT_FLG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PORTOUT_FLG>
                                                            <xsl:value-of select="X_CBIO2_PORTOUT_FLG"/>
                                                        </pfx52:PORTOUT_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PR_FLG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PR_FLG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PR_FLG>
                                                            <xsl:value-of select="X_CBIO2_PR_FLG"/>
                                                        </pfx52:PR_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PREF_COMM_END_TIME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PREF_COMM_END_TIME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PREF_COMM_END_TIME>
                                                            <xsl:value-of select="X_CBIO2_PREF_COMM_END_TIME"/>
                                                        </pfx52:PREF_COMM_END_TIME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PREF_COMM_START_TIME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PREF_COMM_START_TIME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PREF_COMM_START_TIME>
                                                            <xsl:value-of select="X_CBIO2_PREF_COMM_START_TIME"/>
                                                        </pfx52:PREF_COMM_START_TIME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PREF_COMM_CHANNEL/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PREF_COMM_CHANNEL/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PREF_COMM_CHANNEL>
                                                            <xsl:value-of select="X_CBIO2_PREF_COMM_CHANNEL"/>
                                                        </pfx52:PREF_COMM_CHANNEL>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PREF_COMM_TIME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PREF_COMM_TIME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PREF_COMM_TIME>
                                                            <xsl:value-of select="X_CBIO2_PREF_COMM_TIME"/>
                                                        </pfx52:PREF_COMM_TIME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_RECIPIENT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_RECIPIENT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:RECIPIENT>
                                                            <xsl:value-of select="X_CBIO2_RECIPIENT"/>
                                                        </pfx52:RECIPIENT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_REFERRED_BY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_REFERRED_BY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:REFERRED_BY>
                                                            <xsl:value-of select="X_CBIO2_REFERRED_BY"/>
                                                        </pfx52:REFERRED_BY>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_REG_ZAIN_FLG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_REG_ZAIN_FLG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:REG_ZAIN_FLG>
                                                            <xsl:value-of select="X_CBIO2_REG_ZAIN_FLG"/>
                                                        </pfx52:REG_ZAIN_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_REGD_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_REGD_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:REGD_DT>
                                                            <xsl:value-of select="X_CBIO2_REGD_DT"/>
                                                        </pfx52:REGD_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_RESIDENCY_TYP/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_RESIDENCY_TYP/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:RESIDENCY_TYP>
                                                            <xsl:value-of select="X_CBIO2_RESIDENCY_TYP"/>
                                                        </pfx52:RESIDENCY_TYP>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_RISK_LEVEL/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_RISK_LEVEL/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:RISK_LEVEL>
                                                            <xsl:value-of select="X_CBIO2_RISK_LEVEL"/>
                                                        </pfx52:RISK_LEVEL>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SALES_AGENT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SALES_AGENT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SALES_AGENT>
                                                            <xsl:value-of select="X_CBIO2_SALES_AGENT"/>
                                                        </pfx52:SALES_AGENT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SALESCALLALLOW_FLG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SALESCALLALLOW_FLG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SALESCALLALLOW_FLG>
                                                            <xsl:value-of select="X_CBIO2_SALESCALLALLOW_FLG"/>
                                                        </pfx52:SALESCALLALLOW_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SECTOR/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SECTOR/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SECTOR>
                                                            <xsl:value-of select="X_CBIO2_SECTOR"/>
                                                        </pfx52:SECTOR>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SEGMENT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SEGMENT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SEGMENT>
                                                            <xsl:value-of select="X_CBIO2_SEGMENT"/>
                                                        </pfx52:SEGMENT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SISTER_COMPANY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SISTER_COMPANY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SISTER_COMPANY>
                                                            <xsl:value-of select="X_CBIO2_SISTER_COMPANY"/>
                                                        </pfx52:SISTER_COMPANY>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SOURCE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SOURCE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SOURCE>
                                                            <xsl:value-of select="X_CBIO2_SOURCE"/>
                                                        </pfx52:SOURCE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SUBCORP_SEG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SUBCORP_SEG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SUBCORP_SEG>
                                                            <xsl:value-of select="X_CBIO2_SUBCORP_SEG"/>
                                                        </pfx52:SUBCORP_SEG>
                                                    </xsl:if>
                                                    <xsl:if test="MARKET_TYPE_CD">
                                                        <pfx52:MARKET_TYPE_CD>
                                                            <xsl:value-of select="MARKET_TYPE_CD"/>
                                                        </pfx52:MARKET_TYPE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SUBMARKET_TYP/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SUBMARKET_TYP/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SUBMARKET_TYP>
                                                            <xsl:value-of select="X_CBIO2_SUBMARKET_TYP"/>
                                                        </pfx52:SUBMARKET_TYP>
                                                    </xsl:if>
                                                    <xsl:if test="CLIENT_FLG">
                                                        <pfx52:CLIENT_FLG>
                                                            <xsl:value-of select="CLIENT_FLG"/>
                                                        </pfx52:CLIENT_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="SUPRESS_CALL_FLG">
                                                        <pfx52:SUPRESS_CALL_FLG>
                                                            <xsl:value-of select="SUPRESS_CALL_FLG"/>
                                                        </pfx52:SUPRESS_CALL_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="FACILITY_FLG">
                                                        <pfx52:FACILITY_FLG>
                                                            <xsl:value-of select="FACILITY_FLG"/>
                                                        </pfx52:FACILITY_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="HSHLDHD_OCC_CD">
                                                        <pfx52:HSHLDHD_OCC_CD>
                                                            <xsl:value-of select="HSHLDHD_OCC_CD"/>
                                                        </pfx52:HSHLDHD_OCC_CD>
                                                    </xsl:if>
                                                    <xsl:if test="HSHLD_INC">
                                                        <pfx52:HSHLD_INC>
                                                            <xsl:value-of select="HSHLD_INC"/>
                                                        </pfx52:HSHLD_INC>
                                                    </xsl:if>
                                                    <xsl:if test="LANG_ID">
                                                        <pfx52:LANG_ID>
                                                            <xsl:value-of select="LANG_ID"/>
                                                        </pfx52:LANG_ID>
                                                    </xsl:if>
                                                    <xsl:if test="MAIN_EMAIL_ADDR">
                                                        <pfx52:MAIN_EMAIL_ADDR>
                                                            <xsl:value-of select="MAIN_EMAIL_ADDR"/>
                                                        </pfx52:MAIN_EMAIL_ADDR>
                                                    </xsl:if>
                                                    <xsl:if test="MAIN_FAX_PH_NUM">
                                                        <pfx52:MAIN_FAX_PH_NUM>
                                                            <xsl:value-of select="MAIN_FAX_PH_NUM"/>
                                                        </pfx52:MAIN_FAX_PH_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="MAIN_PH_NUM">
                                                        <pfx52:MAIN_PH_NUM>
                                                            <xsl:value-of select="MAIN_PH_NUM"/>
                                                        </pfx52:MAIN_PH_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="MASTER_OU_ID">
                                                        <pfx52:MASTER_OU_ID>
                                                            <xsl:value-of select="MASTER_OU_ID"/>
                                                        </pfx52:MASTER_OU_ID>
                                                    </xsl:if>
                                                    <xsl:if test="NAME">
                                                        <pfx52:NAME>
                                                            <xsl:value-of select="NAME"/>
                                                        </pfx52:NAME>
                                                    </xsl:if>
                                                    <xsl:if test="PAR_OU_ID">
                                                        <pfx52:PAR_OU_ID>
                                                            <xsl:value-of select="PAR_OU_ID"/>
                                                        </pfx52:PAR_OU_ID>
                                                    </xsl:if>
                                                    <xsl:if test="EVT_HOTEL_STD_RT">
                                                        <pfx52:EVT_HOTEL_STD_RT>
                                                            <xsl:value-of select="EVT_HOTEL_STD_RT"/>
                                                        </pfx52:EVT_HOTEL_STD_RT>
                                                    </xsl:if>
                                                    <xsl:if test="REGION">
                                                        <pfx52:REGION>
                                                            <xsl:value-of select="REGION"/>
                                                        </pfx52:REGION>
                                                    </xsl:if>
                                                    <xsl:if test="REL_ID">
                                                        <pfx52:REL_ID>
                                                            <xsl:value-of select="REL_ID"/>
                                                        </pfx52:REL_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PP_ASSGN_CD/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PP_ASSGN_CD/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PP_ASSGN_CD>
                                                            <xsl:value-of select="X_CBIO2_PP_ASSGN_CD"/>
                                                        </pfx52:PP_ASSGN_CD>
                                                    </xsl:if>
                                                    <xsl:if test="LANG">
                                                        <pfx52:LANG>
                                                            <xsl:value-of select="LANG"/>
                                                        </pfx52:LANG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ZAIN_EMP/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ZAIN_EMP/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ZAIN_EMP>
                                                            <xsl:value-of select="X_CBIO2_ZAIN_EMP"/>
                                                        </pfx52:ZAIN_EMP>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SUB_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SUB_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SUB_STATUS>
                                                            <xsl:value-of select="X_CBIO2_SUB_STATUS"/>
                                                        </pfx52:SUB_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CATEGORY_CODE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CATEGORY_CODE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CATEGORY_CODE>
                                                            <xsl:value-of select="X_CBIO2_CATEGORY_CODE"/>
                                                        </pfx52:CATEGORY_CODE>
                                                    </xsl:if>
                                                    <xsl:if test="BASE_CURCY_CD">
                                                        <pfx52:BASE_CURCY_CD>
                                                            <xsl:value-of select="BASE_CURCY_CD"/>
                                                        </pfx52:BASE_CURCY_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ARB_FULL_NAME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ARB_FULL_NAME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ARB_FULL_NAME>
                                                            <xsl:value-of select="X_CBIO2_ARB_FULL_NAME"/>
                                                        </pfx52:ARB_FULL_NAME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ENG_FULL_NAME/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ENG_FULL_NAME/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ENG_FULL_NAME>
                                                            <xsl:value-of select="X_CBIO2_ENG_FULL_NAME"/>
                                                        </pfx52:ENG_FULL_NAME>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_TOTAL_LINES/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_TOTAL_LINES/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:TOTAL_LINES>
                                                            <xsl:value-of select="X_CBIO2_TOTAL_LINES"/>
                                                        </pfx52:TOTAL_LINES>
                                                    </xsl:if>
                                                </pfx52:Record1>
                                            </xsl:for-each>
                                        </pfx52:ResultSet1>
                                    </xsl:for-each>
                                    <xsl:for-each select="ResultSet2">
                                        <pfx52:ResultSet2>
                                            <xsl:for-each select="Record2">
                                                <pfx52:Record2>
                                                    <xsl:if test="not((X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_SEQUENCE_NUM>
                                                            <xsl:value-of select="X_CBIO2_ACC_SEQUENCE_NUM"/>
                                                        </pfx52:ACC_SEQUENCE_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="ADDR_LINE_3">
                                                        <pfx52:ADDR_LINE_3>
                                                            <xsl:value-of select="ADDR_LINE_3"/>
                                                        </pfx52:ADDR_LINE_3>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_AVENUE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_AVENUE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:AVENUE>
                                                            <xsl:value-of select="X_CBIO2_AVENUE"/>
                                                        </pfx52:AVENUE>
                                                    </xsl:if>
                                                    <xsl:if test="RURAL_ROUTE_NUM">
                                                        <pfx52:RURAL_ROUTE_NUM>
                                                            <xsl:value-of select="RURAL_ROUTE_NUM"/>
                                                        </pfx52:RURAL_ROUTE_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BUILDING/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BUILDING/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BUILDING>
                                                            <xsl:value-of select="X_CBIO2_BUILDING"/>
                                                        </pfx52:BUILDING>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_POSTAL_AREA_ENG/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_POSTAL_AREA_ENG/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:POSTAL_AREA_ENG>
                                                            <xsl:value-of select="X_CBIO2_POSTAL_AREA_ENG"/>
                                                        </pfx52:POSTAL_AREA_ENG>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ERROR_STATUS>
                                                            <xsl:value-of select="X_CBIO2_ERROR_STATUS"/>
                                                        </pfx52:ERROR_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_FLOOR/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_FLOOR/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:FLOOR>
                                                            <xsl:value-of select="X_CBIO2_FLOOR"/>
                                                        </pfx52:FLOOR>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_MAIL/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_MAIL/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:MAIL>
                                                            <xsl:value-of select="X_CBIO2_MAIL"/>
                                                        </pfx52:MAIL>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PO_BOX/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PO_BOX/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PO_BOX>
                                                            <xsl:value-of select="X_CBIO2_PO_BOX"/>
                                                        </pfx52:PO_BOX>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PACCI_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PACCI_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PACCI_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_PACCI_NUMBER"/>
                                                        </pfx52:PACCI_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="X_POSTAL_AREA_CODE">
                                                        <pfx52:X_POSTAL_AREA_CODE>
                                                            <xsl:value-of select="X_POSTAL_AREA_CODE"/>
                                                        </pfx52:X_POSTAL_AREA_CODE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ADDR_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ADDR_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ADDR_STATUS>
                                                            <xsl:value-of select="X_CBIO2_ADDR_STATUS"/>
                                                        </pfx52:ADDR_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_STREET_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_STREET_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:STREET_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_STREET_NUMBER"/>
                                                        </pfx52:STREET_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="CITY">
                                                        <pfx52:CITY>
                                                            <xsl:value-of select="CITY"/>
                                                        </pfx52:CITY>
                                                    </xsl:if>
                                                    <xsl:if test="COUNTRY">
                                                        <pfx52:COUNTRY>
                                                            <xsl:value-of select="COUNTRY"/>
                                                        </pfx52:COUNTRY>
                                                    </xsl:if>
                                                    <xsl:if test="LANDLORD_PH_NUM">
                                                        <pfx52:LANDLORD_PH_NUM>
                                                            <xsl:value-of select="LANDLORD_PH_NUM"/>
                                                        </pfx52:LANDLORD_PH_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="ADDR_ADDR_TYPE_CD">
                                                        <pfx52:ADDR_ADDR_TYPE_CD>
                                                            <xsl:value-of select="ADDR_ADDR_TYPE_CD"/>
                                                        </pfx52:ADDR_ADDR_TYPE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="NEIGHBORHOOD_NAME">
                                                        <pfx52:NEIGHBORHOOD_NAME>
                                                            <xsl:value-of select="NEIGHBORHOOD_NAME"/>
                                                        </pfx52:NEIGHBORHOOD_NAME>
                                                    </xsl:if>
                                                    <xsl:if test="ZIPCODE">
                                                        <pfx52:ZIPCODE>
                                                            <xsl:value-of select="ZIPCODE"/>
                                                        </pfx52:ZIPCODE>
                                                    </xsl:if>
                                                    <xsl:if test="ADDR">
                                                        <pfx52:ADDR>
                                                            <xsl:value-of select="ADDR"/>
                                                        </pfx52:ADDR>
                                                    </xsl:if>
                                                    <xsl:if test="ROW_ID">
                                                        <pfx52:ROW_ID>
                                                            <xsl:value-of select="ROW_ID"/>
                                                        </pfx52:ROW_ID>
                                                    </xsl:if>
                                                    <xsl:if test="CON_ADDR_TYPE_CD">
                                                        <pfx52:CON_ADDR_TYPE_CD>
                                                            <xsl:value-of select="CON_ADDR_TYPE_CD"/>
                                                        </pfx52:CON_ADDR_TYPE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACT_PERF/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACT_PERF/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACT_PERF>
                                                            <xsl:value-of select="X_CBIO2_ACT_PERF"/>
                                                        </pfx52:ACT_PERF>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_ID>
                                                            <xsl:value-of select="X_CBIO2_BSCS_ID"/>
                                                        </pfx52:BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="ADDR_TYPE_CD">
                                                        <pfx52:ADDR_TYPE_CD>
                                                            <xsl:value-of select="ADDR_TYPE_CD"/>
                                                        </pfx52:ADDR_TYPE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ARABIC_ZIP_CODE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ARABIC_ZIP_CODE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ARABIC_ZIP_CODE>
                                                            <xsl:value-of select="X_CBIO2_ARABIC_ZIP_CODE"/>
                                                        </pfx52:ARABIC_ZIP_CODE>
                                                    </xsl:if>
                                                </pfx52:Record2>
                                            </xsl:for-each>
                                        </pfx52:ResultSet2>
                                    </xsl:for-each>
                                    <xsl:for-each select="ResultSet3">
                                        <pfx52:ResultSet3>
                                            <xsl:for-each select="Record3">
                                                <pfx52:Record3>
                                                    <xsl:if test="not((X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_SEQUENCE_NUM>
                                                            <xsl:value-of select="X_CBIO2_ACC_SEQUENCE_NUM"/>
                                                        </pfx52:ACC_SEQUENCE_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PP_ASSGN_CD/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PP_ASSGN_CD/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PP_ASSGN_CD>
                                                            <xsl:value-of select="X_CBIO2_PP_ASSGN_CD"/>
                                                        </pfx52:PP_ASSGN_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PR_BL_PRFL_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PR_BL_PRFL_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PR_BL_PRFL_ID>
                                                            <xsl:value-of select="X_CBIO2_PR_BL_PRFL_ID"/>
                                                        </pfx52:PR_BL_PRFL_ID>
                                                    </xsl:if>
                                                    <xsl:if test="HOLDER_NAME">
                                                        <pfx52:HOLDER_NAME>
                                                            <xsl:value-of select="HOLDER_NAME"/>
                                                        </pfx52:HOLDER_NAME>
                                                    </xsl:if>
                                                    <xsl:if test="PAY_ACCNT_NUM">
                                                        <pfx52:PAY_ACCNT_NUM>
                                                            <xsl:value-of select="PAY_ACCNT_NUM"/>
                                                        </pfx52:PAY_ACCNT_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACT_PERF/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACT_PERF/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACT_PERF>
                                                            <xsl:value-of select="X_CBIO2_ACT_PERF"/>
                                                        </pfx52:ACT_PERF>
                                                    </xsl:if>
                                                    <xsl:if test="not((PP_X_CBIO2_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (PP_X_CBIO2_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PP_BSCS_ID>
                                                            <xsl:value-of select="PP_X_CBIO2_BSCS_ID"/>
                                                        </pfx52:PP_BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BANK_DETAIL_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BANK_DETAIL_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BANK_DETAIL_ID>
                                                            <xsl:value-of select="X_CBIO2_BANK_DETAIL_ID"/>
                                                        </pfx52:BANK_DETAIL_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CARDTYPE_CRDR/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CARDTYPE_CRDR/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CARDTYPE_CRDR>
                                                            <xsl:value-of select="X_CBIO2_CARDTYPE_CRDR"/>
                                                        </pfx52:CARDTYPE_CRDR>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_END_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_END_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:END_DT>
                                                            <xsl:value-of select="X_CBIO2_END_DT"/>
                                                        </pfx52:END_DT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ERROR_STATUS>
                                                            <xsl:value-of select="X_CBIO2_ERROR_STATUS"/>
                                                        </pfx52:ERROR_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PAYMENT_INSTRUMENT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PAYMENT_INSTRUMENT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PAYMENT_INSTRUMENT>
                                                            <xsl:value-of select="X_CBIO2_PAYMENT_INSTRUMENT"/>
                                                        </pfx52:PAYMENT_INSTRUMENT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_START_DT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_START_DT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:START_DT>
                                                            <xsl:value-of select="X_CBIO2_START_DT"/>
                                                        </pfx52:START_DT>
                                                    </xsl:if>
                                                    <xsl:if test="EXPIRATION_MO_CD">
                                                        <pfx52:EXPIRATION_MO_CD>
                                                            <xsl:value-of select="EXPIRATION_MO_CD"/>
                                                        </pfx52:EXPIRATION_MO_CD>
                                                    </xsl:if>
                                                    <xsl:if test="EXPIRATION_YR_CD">
                                                        <pfx52:EXPIRATION_YR_CD>
                                                            <xsl:value-of select="EXPIRATION_YR_CD"/>
                                                        </pfx52:EXPIRATION_YR_CD>
                                                    </xsl:if>
                                                    <xsl:if test="PAY_METH_CD">
                                                        <pfx52:PAY_METH_CD>
                                                            <xsl:value-of select="PAY_METH_CD"/>
                                                        </pfx52:PAY_METH_CD>
                                                    </xsl:if>
                                                    <xsl:if test="PROFILE_STATUS_CD">
                                                        <pfx52:PROFILE_STATUS_CD>
                                                            <xsl:value-of select="PROFILE_STATUS_CD"/>
                                                        </pfx52:PROFILE_STATUS_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((BA_X_CBIO2_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (BA_X_CBIO2_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BA_BSCS_ID>
                                                            <xsl:value-of select="BA_X_CBIO2_BSCS_ID"/>
                                                        </pfx52:BA_BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BANK_BRANCH/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BANK_BRANCH/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BANK_BRANCH>
                                                            <xsl:value-of select="X_CBIO2_BANK_BRANCH"/>
                                                        </pfx52:BANK_BRANCH>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BANK_CITY/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BANK_CITY/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BANK_CITY>
                                                            <xsl:value-of select="X_CBIO2_BANK_CITY"/>
                                                        </pfx52:BANK_CITY>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BANK_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BANK_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BANK_BSCS_ID>
                                                            <xsl:value-of select="X_CBIO2_BANK_BSCS_ID"/>
                                                        </pfx52:BANK_BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BANK_HINT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BANK_HINT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BANK_HINT>
                                                            <xsl:value-of select="X_CBIO2_BANK_HINT"/>
                                                        </pfx52:BANK_HINT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_SWIFT_CODE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_SWIFT_CODE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:SWIFT_CODE>
                                                            <xsl:value-of select="X_CBIO2_SWIFT_CODE"/>
                                                        </pfx52:SWIFT_CODE>
                                                    </xsl:if>
                                                </pfx52:Record3>
                                            </xsl:for-each>
                                        </pfx52:ResultSet3>
                                    </xsl:for-each>
                                    <xsl:for-each select="ResultSet4">
                                        <pfx52:ResultSet4>
                                            <xsl:for-each select="Record4">
                                                <pfx52:Record4>
                                                    <xsl:if test="not((X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACC_SEQUENCE_NUM/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACC_SEQUENCE_NUM>
                                                            <xsl:value-of select="X_CBIO2_ACC_SEQUENCE_NUM"/>
                                                        </pfx52:ACC_SEQUENCE_NUM>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PR_PAY_PRFL_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PR_PAY_PRFL_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PR_PAY_PRFL_ID>
                                                            <xsl:value-of select="X_CBIO2_PR_PAY_PRFL_ID"/>
                                                        </pfx52:PR_PAY_PRFL_ID>
                                                    </xsl:if>
                                                    <xsl:if test="ADDR_ID">
                                                        <pfx52:ADDR_ID>
                                                            <xsl:value-of select="ADDR_ID"/>
                                                        </pfx52:ADDR_ID>
                                                    </xsl:if>
                                                    <xsl:if test="BILL_FREQ_CD">
                                                        <pfx52:BILL_FREQ_CD>
                                                            <xsl:value-of select="BILL_FREQ_CD"/>
                                                        </pfx52:BILL_FREQ_CD>
                                                    </xsl:if>
                                                    <xsl:if test="BILL_SOURCE_CD">
                                                        <pfx52:BILL_SOURCE_CD>
                                                            <xsl:value-of select="BILL_SOURCE_CD"/>
                                                        </pfx52:BILL_SOURCE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ACT_PERF/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ACT_PERF/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ACT_PERF>
                                                            <xsl:value-of select="X_CBIO2_ACT_PERF"/>
                                                        </pfx52:ACT_PERF>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BSCS_ID>
                                                            <xsl:value-of select="X_CBIO2_BSCS_ID"/>
                                                        </pfx52:BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_CREDIT_LIMIT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_CREDIT_LIMIT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:CREDIT_LIMIT>
                                                            <xsl:value-of select="X_CBIO2_CREDIT_LIMIT"/>
                                                        </pfx52:CREDIT_LIMIT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_ERROR_STATUS/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:ERROR_STATUS>
                                                            <xsl:value-of select="X_CBIO2_ERROR_STATUS"/>
                                                        </pfx52:ERROR_STATUS>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_EXCHANGE_RATE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_EXCHANGE_RATE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:EXCHANGE_RATE>
                                                            <xsl:value-of select="X_CBIO2_EXCHANGE_RATE"/>
                                                        </pfx52:EXCHANGE_RATE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_INVOICE_FORMAT/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_INVOICE_FORMAT/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:INVOICE_FORMAT>
                                                            <xsl:value-of select="X_CBIO2_INVOICE_FORMAT"/>
                                                        </pfx52:INVOICE_FORMAT>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_MAIL_TYPE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_MAIL_TYPE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:MAIL_TYPE>
                                                            <xsl:value-of select="X_CBIO2_MAIL_TYPE"/>
                                                        </pfx52:MAIL_TYPE>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_MODE_OF_COMMUNICATION/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_MODE_OF_COMMUNICATION/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:MODE_OF_COMMUNICATION>
                                                            <xsl:value-of select="X_CBIO2_MODE_OF_COMMUNICATION"/>
                                                        </pfx52:MODE_OF_COMMUNICATION>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_NOTIFICATION_NUMBER/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_NOTIFICATION_NUMBER/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:NOTIFICATION_NUMBER>
                                                            <xsl:value-of select="X_CBIO2_NOTIFICATION_NUMBER"/>
                                                        </pfx52:NOTIFICATION_NUMBER>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PR_PAY_PRFL_BSCS_ID/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PR_PAY_PRFL_BSCS_ID/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PR_PAY_PRFL_BSCS_ID>
                                                            <xsl:value-of select="X_CBIO2_PR_PAY_PRFL_BSCS_ID"/>
                                                        </pfx52:PR_PAY_PRFL_BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_PREFF_LANGUAGE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_PREFF_LANGUAGE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:PREFF_LANGUAGE>
                                                            <xsl:value-of select="X_CBIO2_PREFF_LANGUAGE"/>
                                                        </pfx52:PREFF_LANGUAGE>
                                                    </xsl:if>
                                                    <xsl:if test="CURCY_CD">
                                                        <pfx52:CURCY_CD>
                                                            <xsl:value-of select="CURCY_CD"/>
                                                        </pfx52:CURCY_CD>
                                                    </xsl:if>
                                                    <xsl:if test="EMAIL_ADDR">
                                                        <pfx52:EMAIL_ADDR>
                                                            <xsl:value-of select="EMAIL_ADDR"/>
                                                        </pfx52:EMAIL_ADDR>
                                                    </xsl:if>
                                                    <xsl:if test="MEDIA_TYPE_CD">
                                                        <pfx52:MEDIA_TYPE_CD>
                                                            <xsl:value-of select="MEDIA_TYPE_CD"/>
                                                        </pfx52:MEDIA_TYPE_CD>
                                                    </xsl:if>
                                                    <xsl:if test="NAME">
                                                        <pfx52:NAME>
                                                            <xsl:value-of select="NAME"/>
                                                        </pfx52:NAME>
                                                    </xsl:if>
                                                    <xsl:if test="SMS_NOTIFY_FLG">
                                                        <pfx52:SMS_NOTIFY_FLG>
                                                            <xsl:value-of select="SMS_NOTIFY_FLG"/>
                                                        </pfx52:SMS_NOTIFY_FLG>
                                                    </xsl:if>
                                                    <xsl:if test="STATUS_CD">
                                                        <pfx52:STATUS_CD>
                                                            <xsl:value-of select="STATUS_CD"/>
                                                        </pfx52:STATUS_CD>
                                                    </xsl:if>
                                                    <xsl:if test="ROW_ID">
                                                        <pfx52:ROW_ID>
                                                            <xsl:value-of select="ROW_ID"/>
                                                        </pfx52:ROW_ID>
                                                    </xsl:if>
                                                    <xsl:if test="ADDRESS_BSCS_ID">
                                                        <pfx52:ADDRESS_BSCS_ID>
                                                            <xsl:value-of select="ADDRESS_BSCS_ID"/>
                                                        </pfx52:ADDRESS_BSCS_ID>
                                                    </xsl:if>
                                                    <xsl:if test="not((X_CBIO2_BILLCYCLE/@xsi:nil=(&quot;true&quot;)) or (X_CBIO2_BILLCYCLE/@xsi:nil=(&quot;1&quot;)))">
                                                        <pfx52:BILLCYCLE>
                                                            <xsl:value-of select="X_CBIO2_BILLCYCLE"/>
                                                        </pfx52:BILLCYCLE>
                                                    </xsl:if>
                                                </pfx52:Record4>
                                            </xsl:for-each>
                                        </pfx52:ResultSet4>
                                    </xsl:for-each>
                                </pfx52:Resultsets>
                            </xsl:for-each>
                        </pfx52:Response>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx48:ErrorResponse>
                            <pfx48:Error_SourceSystem>
                                <xsl:value-of select="&quot;CRM&quot;"/>
                            </pfx48:Error_SourceSystem>
                            <xsl:if test="not(($QueryCustByID/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;true&quot;)) or ($QueryCustByID/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <pfx48:Error_SourceErrCode>
                                    <xsl:value-of select="$QueryCustByID/resultSet/outputSet/P_ERRORCODE_OUT"/>
                                </pfx48:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="not(($QueryCustByID/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;true&quot;)) or ($QueryCustByID/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <pfx48:Error_SourceErrDesc>
                                    <xsl:value-of select="$QueryCustByID/resultSet/outputSet/P_ERRORMSG_OUT"/>
                                </pfx48:Error_SourceErrDesc>
                            </xsl:if>
                            <pfx48:Error_Type>
                                <xsl:value-of select="&quot;BUSINESS&quot;"/>
                            </pfx48:Error_Type>
                        </pfx48:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseCDMRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>227</pd:x>
        <pd:y>190</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx49:Request"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/group/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>322</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>961</pd:x>
        <pd:y>262</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx50:Resultsets"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$QueryCustByID/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>960</pd:x>
        <pd:y>373</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseCDMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:xpathDescription>AssetExists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$QueryCustByID/resultSet/outputSet/P_ERRORCODE_OUT=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Request</pd:from>
        <pd:to>QueryCustByID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustByID</pd:from>
        <pd:to>Log_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustByID</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>Log_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParseError-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>