<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns51="www.tibco.com/createcustomer" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:pfx43="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:ns19="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" xmlns:pfx38="http://siebel.com/CustomUI" xmlns:pfx35="http://lhsgroup.com/lhsws/money" xmlns:pfx36="http://ericsson.com/services/ws_CIL_5/customercreatezain">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customercreatezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateCustomer/CustomerCreatezainService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/http---siebel.com-CustomUI_CBiO2 Customer Query Workflow.WSDL.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileResponse.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/http-siebel.com-CustomUI_CBiO2CustomerQueryWorkflow.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/GetSubsriberProfile/HelperProcess/GetSubscriberProfile.process</pd:name>
    <pd:startName>GetCustomerProfile</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>89</pd:startX>
    <pd:startY>322</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$NativeToCDM/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx39:GetCustomerProfileResponse"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1420</pd:endX>
    <pd:endY>163</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="Log_CRM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>391</pd:x>
        <pd:y>179</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/CustomerProfile/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$GetCustomerProfile/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$GetCustomerProfile/group/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($CDMToNative)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetCustomerProfile/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CRM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1057</pd:x>
        <pd:y>179</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/CustomerProfile/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$GetCustomerProfile/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CDMToNative)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetCustomerProfile/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseCDMRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>220</pd:x>
        <pd:y>320</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx37:GetCustomerProfileRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetCustomerProfile/group/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>225</pd:x>
        <pd:y>181</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx38:QueryCustomer_Input"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx38:QueryCustomer_Input>
                    <pfx38:CBiO2MSISDN>
                        <xsl:value-of select="$ParseCDMRequest/pfx37:GetCustomerProfileRequest/pfx13:MSISDN"/>
                    </pfx38:CBiO2MSISDN>
                    <pfx38:CBiO2CustomerId>
                        <xsl:value-of select="$ParseCDMRequest/pfx37:GetCustomerProfileRequest/pfx13:ZainIdentifiers/contractID/pfx13:value"/>
                    </pfx38:CBiO2CustomerId>
                </pfx38:QueryCustomer_Input>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1272</pd:x>
        <pd:y>164</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx39:GetCustomerProfileResponse"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx39:GetCustomerProfileResponse>
                    <pfx13:Organization>
                        <OrganizationIdentification>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:Name">
                                <companyName>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:Name"/>
                                </companyName>
                            </xsl:if>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2CompanyNameEng">
                                <CompanyNameEng>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2CompanyNameEng"/>
                                </CompanyNameEng>
                            </xsl:if>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2SisterCompany">
                                <SisterCompany>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2SisterCompany"/>
                                </SisterCompany>
                            </xsl:if>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgType">
                                <OrganizationType>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgType"/>
                                </OrganizationType>
                            </xsl:if>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgSize">
                                <Organizationsize>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgSize"/>
                                </Organizationsize>
                            </xsl:if>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgCategory">
                                <OrganizationCategory>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2OrgCategory"/>
                                </OrganizationCategory>
                            </xsl:if>
                        </OrganizationIdentification>
                    </pfx13:Organization>
                    <pfx13:ZainIndividualList>
                        <xsl:for-each select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account">
                            <ZainIndividual>
                                <gender>
                                    <xsl:value-of select="ns19:CBiO2Gender"/>
                                </gender>
                                <xsl:if test="ns19:CBiO2CustMaritalStatus">
                                    <maritalStatus>
                                        <xsl:value-of select="ns19:CBiO2CustMaritalStatus"/>
                                    </maritalStatus>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2Nationality">
                                    <nationality>
                                        <xsl:value-of select="ns19:CBiO2Nationality"/>
                                    </nationality>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2CustProfession">
                                    <profession>
                                        <xsl:value-of select="ns19:CBiO2CustProfession"/>
                                    </profession>
                                </xsl:if>
                                <xsl:if test="exists(ns19:CBiO2DOB) and string-length(ns19:CBiO2DOB)>0">
                                    <DateofBirth>
                                        <xsl:value-of select="tib:parse-date('MM/dd/yyyy',ns19:CBiO2DOB)"/>
                                    </DateofBirth>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2IDType">
                                    <idType>
                                        <xsl:value-of select="ns19:CBiO2IDType"/>
                                    </idType>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2IDNumber">
                                    <CivilId>
                                        <xsl:value-of select="ns19:CBiO2IDNumber"/>
                                    </CivilId>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2ResidencyType">
                                    <ResidencyType>
                                        <xsl:value-of select="ns19:CBiO2ResidencyType"/>
                                    </ResidencyType>
                                </xsl:if>
                                <xsl:if test="ns19:Region">
                                    <Region>
                                        <xsl:value-of select="ns19:Region"/>
                                    </Region>
                                </xsl:if>
                                <xsl:if test="ns19:Language">
                                    <language>
                                        <xsl:value-of select="ns19:Language"/>
                                    </language>
                                </xsl:if>
                                <IndividualName>
                                    <xsl:if test="ns19:CBiO2EnglishTitle">
                                        <AristocraticTitle>
                                            <xsl:value-of select="ns19:CBiO2EnglishTitle"/>
                                        </AristocraticTitle>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicTitle">
                                        <ArabicAristocraticTitle>
                                            <xsl:value-of select="ns19:CBiO2ArabicTitle"/>
                                        </ArabicAristocraticTitle>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicLastName">
                                        <familyNames>
                                            <xsl:value-of select="ns19:CBiO2ArabicLastName"/>
                                        </familyNames>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2EnglishFullName">
                                        <fullName>
                                            <xsl:value-of select="ns19:CBiO2EnglishFullName"/>
                                        </fullName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicFullName">
                                        <ArabicFullName>
                                            <xsl:value-of select="ns19:CBiO2ArabicFullName"/>
                                        </ArabicFullName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2EnglishLastName">
                                        <legalName>
                                            <xsl:value-of select="ns19:CBiO2EnglishLastName"/>
                                        </legalName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2EnglishFirstName">
                                        <FirstName>
                                            <xsl:value-of select="ns19:CBiO2EnglishFirstName"/>
                                        </FirstName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2EnglishSecondName">
                                        <SecondName>
                                            <xsl:value-of select="ns19:CBiO2EnglishSecondName"/>
                                        </SecondName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2EnglishThirdName">
                                        <ThirdName>
                                            <xsl:value-of select="ns19:CBiO2EnglishThirdName"/>
                                        </ThirdName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicFirstName">
                                        <ArabicFirstName>
                                            <xsl:value-of select="ns19:CBiO2ArabicFirstName"/>
                                        </ArabicFirstName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicSecondName">
                                        <ArabicSecondName>
                                            <xsl:value-of select="ns19:CBiO2ArabicSecondName"/>
                                        </ArabicSecondName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2ArabicThirdName">
                                        <ArabicThirdName>
                                            <xsl:value-of select="ns19:CBiO2ArabicThirdName"/>
                                        </ArabicThirdName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2NickName">
                                        <preferredName>
                                            <xsl:value-of select="ns19:CBiO2NickName"/>
                                        </preferredName>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2Behaviors">
                                        <Behaviors>
                                            <xsl:value-of select="ns19:CBiO2Behaviors"/>
                                        </Behaviors>
                                    </xsl:if>
                                </IndividualName>
                                <xsl:for-each select="ns19:ListOfCutAddress/ns19:CutAddress">
                                    <ZainAddress>
                                        <xsl:if test="ns19:City">
                                            <city>
                                                <xsl:value-of select="ns19:City"/>
                                            </city>
                                        </xsl:if>
                                        <xsl:if test="ns19:Country">
                                            <country>
                                                <xsl:value-of select="ns19:Country"/>
                                            </country>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2Block">
                                            <Block>
                                                <xsl:value-of select="ns19:CBiO2Block"/>
                                            </Block>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2Floor">
                                            <Floor>
                                                <xsl:value-of select="ns19:CBiO2Floor"/>
                                            </Floor>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2Building">
                                            <Building>
                                                <xsl:value-of select="ns19:CBiO2Building"/>
                                            </Building>
                                        </xsl:if>
                                        <xsl:if test="ns19:ApartmentNumber">
                                            <Apartment>
                                                <xsl:value-of select="ns19:ApartmentNumber"/>
                                            </Apartment>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2Avenue">
                                            <Avenue>
                                                <xsl:value-of select="ns19:CBiO2Avenue"/>
                                            </Avenue>
                                        </xsl:if>
                                        <xsl:if test="ns19:LocationType">
                                            <BaseType>
                                                <xsl:value-of select="ns19:LocationType"/>
                                            </BaseType>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2POBox">
                                            <poBoxNumber>
                                                <xsl:value-of select="ns19:CBiO2POBox"/>
                                            </poBoxNumber>
                                        </xsl:if>
                                        <xsl:if test="ns19:Id">
                                            <sourceAddressId>
                                                <xsl:value-of select="ns19:Id"/>
                                            </sourceAddressId>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2PostalAreaCode">
                                            <streetName>
                                                <xsl:value-of select="ns19:CBiO2PostalAreaCode"/>
                                            </streetName>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2StreetNumber">
                                            <streetNumber>
                                                <xsl:value-of select="ns19:CBiO2StreetNumber"/>
                                            </streetNumber>
                                        </xsl:if>
                                        <targetAddressId>
                                            <pfx13:systemName>
                                                <xsl:value-of select="&quot;CRM AddressId&quot;"/>
                                            </pfx13:systemName>
                                            <xsl:if test="../../ns19:CBiO2BSCSId">
                                                <pfx13:value>
                                                    <xsl:value-of select="../../ns19:CBiO2BSCSId"/>
                                                </pfx13:value>
                                            </xsl:if>
                                        </targetAddressId>
                                        <xsl:if test="ns19:PostalCode">
                                            <postalCode>
                                                <xsl:value-of select="ns19:PostalCode"/>
                                            </postalCode>
                                        </xsl:if>
                                        <pfx13:ZainContact>
                                            <xsl:if test="ns19:CBiO2Mail">
                                                <eMailAddress>
                                                    <xsl:value-of select="ns19:CBiO2Mail"/>
                                                </eMailAddress>
                                            </xsl:if>
                                            <xsl:if test="ns19:LandlordPhoneNumber">
                                                <homeContact>
                                                    <xsl:value-of select="ns19:LandlordPhoneNumber"/>
                                                </homeContact>
                                            </xsl:if>
                                        </pfx13:ZainContact>
                                        <xsl:if test="ns19:AddressType">
                                            <AdressType>
                                                <xsl:value-of select="ns19:AddressType"/>
                                            </AdressType>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2PostalAreaCode">
                                            <PostalArea>
                                                <xsl:value-of select="ns19:CBiO2PostalAreaCode"/>
                                            </PostalArea>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2Status">
                                            <ActiveStatus>
                                                <xsl:value-of select="ns19:CBiO2Status"/>
                                            </ActiveStatus>
                                        </xsl:if>
                                        <xsl:if test="ns19:Neighborhood">
                                            <PostalAreaName>
                                                <xsl:value-of select="ns19:Neighborhood"/>
                                            </PostalAreaName>
                                        </xsl:if>
                                        <xsl:if test="ns19:CBiO2PacciNumber">
                                            <PacciNumber>
                                                <xsl:value-of select="ns19:CBiO2PacciNumber"/>
                                            </PacciNumber>
                                        </xsl:if>
                                    </ZainAddress>
                                </xsl:for-each>
                                <ZainContact>
                                    <xsl:if test="ns19:MainEmailAddress">
                                        <eMailAddress>
                                            <xsl:value-of select="ns19:MainEmailAddress"/>
                                        </eMailAddress>
                                    </xsl:if>
                                    <xsl:if test="ns19:MainFaxNumber">
                                        <faxContact>
                                            <xsl:value-of select="ns19:MainFaxNumber"/>
                                        </faxContact>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2HomeNumber">
                                        <homeContact>
                                            <xsl:value-of select="ns19:CBiO2HomeNumber"/>
                                        </homeContact>
                                    </xsl:if>
                                    <xsl:if test="ns19:MainPhoneNumber">
                                        <workContact>
                                            <xsl:value-of select="ns19:MainPhoneNumber"/>
                                        </workContact>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2NotificationNumber">
                                        <Notificationnumber>
                                            <xsl:value-of select="ns19:CBiO2NotificationNumber"/>
                                        </Notificationnumber>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2PrefCommunicationChannel">
                                        <PrefferredCommunication>
                                            <xsl:value-of select="ns19:CBiO2PrefCommunicationChannel"/>
                                        </PrefferredCommunication>
                                    </xsl:if>
                                </ZainContact>
                                <pfx13:CorporateInfo>
                                    <xsl:if test="ns19:CBiO2CalcProsumers">
                                        <ProsumerBase>
                                            <xsl:value-of select="ns19:CBiO2CalcProsumers"/>
                                        </ProsumerBase>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2CalcLines">
                                        <TotalLines>
                                            <xsl:value-of select="ns19:CBiO2CalcLines"/>
                                        </TotalLines>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2CalcVoiceBase">
                                        <VoiceBase>
                                            <xsl:value-of select="ns19:CBiO2CalcVoiceBase"/>
                                        </VoiceBase>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2CalcEntityBase">
                                        <EntityBase>
                                            <xsl:value-of select="ns19:CBiO2CalcEntityBase"/>
                                        </EntityBase>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2CalcM2MBase">
                                        <M2MBase>
                                            <xsl:value-of select="ns19:CBiO2CalcM2MBase"/>
                                        </M2MBase>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2KAMId">
                                        <KeyAccountManagerId>
                                            <xsl:value-of select="ns19:CBiO2KAMId"/>
                                        </KeyAccountManagerId>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2Segment">
                                        <Segment>
                                            <xsl:value-of select="ns19:CBiO2Segment"/>
                                        </Segment>
                                    </xsl:if>
                                    <xsl:if test="ns19:CBiO2SubMarket">
                                        <SubCorporateSegment>
                                            <xsl:value-of select="ns19:CBiO2SubMarket"/>
                                        </SubCorporateSegment>
                                    </xsl:if>
                                </pfx13:CorporateInfo>
                                <xsl:if test="ns19:CBiO2BloodGrp">
                                    <BloodType>
                                        <xsl:value-of select="ns19:CBiO2BloodGrp"/>
                                    </BloodType>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2CustEducation">
                                    <Education>
                                        <xsl:value-of select="ns19:CBiO2CustEducation"/>
                                    </Education>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2Category">
                                    <Category>
                                        <xsl:value-of select="ns19:CBiO2Category"/>
                                    </Category>
                                </xsl:if>
                            </ZainIndividual>
                        </xsl:for-each>
                    </pfx13:ZainIndividualList>
                    <pfx13:ZainCustomerAccountList>
                        <xsl:for-each select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account">
                            <ZainCustomerAccount>
                                <xsl:if test="ns19:AccountStatus">
                                    <accountStatus>
                                        <xsl:value-of select="ns19:AccountStatus"/>
                                    </accountStatus>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2CustCreatedDate">
                                    <creationDateTime>
                                        <xsl:value-of select="ns19:CBiO2CustCreatedDate"/>
                                    </creationDateTime>
                                </xsl:if>
                                <xsl:if test="ns19:ListOfComInvoiceProfile/ns19:ComInvoiceProfile[1]/ns19:CurrencyCode2">
                                    <currencyCode>
                                        <xsl:value-of select="ns19:ListOfComInvoiceProfile/ns19:ComInvoiceProfile[1]/ns19:CurrencyCode2"/>
                                    </currencyCode>
                                </xsl:if>
                                <xsl:if test="ns19:Id">
                                    <ID>
                                        <xsl:value-of select="ns19:Id"/>
                                    </ID>
                                </xsl:if>
                                <xsl:if test="ns19:Name">
                                    <name>
                                        <xsl:value-of select="ns19:Name"/>
                                    </name>
                                </xsl:if>
                                <xsl:if test="ns19:ParentAccountId">
                                    <parentAccountId>
                                        <xsl:value-of select="ns19:ParentAccountId"/>
                                    </parentAccountId>
                                </xsl:if>
                                <pfx13:EmployeeIdentifier>
                                    <EmployeeId>
                                        <pfx13:systemName>
                                            <xsl:value-of select="&quot;employeeId&quot;"/>
                                        </pfx13:systemName>
                                        <xsl:if test="ns19:RelationshipId">
                                            <pfx13:value>
                                                <xsl:value-of select="ns19:RelationshipId"/>
                                            </pfx13:value>
                                        </xsl:if>
                                    </EmployeeId>
                                    <IsEmployee>
                                        <xsl:value-of select="if(ns19:FacilityFlag='N')&#xA;then&#xA;true()&#xA;else&#xA;false()"/>
                                    </IsEmployee>
                                </pfx13:EmployeeIdentifier>
                                <xsl:if test="ns19:CBiO2Source">
                                    <SourceofSignOff>
                                        <xsl:value-of select="ns19:CBiO2Source"/>
                                    </SourceofSignOff>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2SalesAgent">
                                    <Salesagent>
                                        <xsl:value-of select="ns19:CBiO2SalesAgent"/>
                                    </Salesagent>
                                </xsl:if>
                                <xsl:if test="ns19:MasterAccountId">
                                    <crmParentCustomerId>
                                        <xsl:value-of select="ns19:MasterAccountId"/>
                                    </crmParentCustomerId>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2BillCycle">
                                    <csBillcycle>
                                        <xsl:value-of select="ns19:CBiO2BillCycle"/>
                                    </csBillcycle>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2PRFlg">
                                    <csPrepayment>
                                        <xsl:value-of select="ns19:CBiO2PRFlg"/>
                                    </csPrepayment>
                                </xsl:if>
                                <xsl:if test="ns19:AccountStatusChangeReason">
                                    <accountStatusChangeReason>
                                        <xsl:value-of select="ns19:AccountStatusChangeReason"/>
                                    </accountStatusChangeReason>
                                </xsl:if>
                                <xsl:if test="ns19:AccountStatusDate">
                                    <accountStatusChangeDate>
                                        <xsl:value-of select="ns19:AccountStatusDate"/>
                                    </accountStatusChangeDate>
                                </xsl:if>
                                <xsl:for-each select="ns19:ListOfOrganizationPaymentProfile/ns19:OrganizationPaymentProfile">
                                    <ZainCustomerPayment>
                                        <xsl:if test="ns19:Id">
                                            <ID>
                                                <xsl:value-of select="ns19:Id"/>
                                            </ID>
                                        </xsl:if>
                                        <PaymentMethod>
                                            <xsl:if test="ns19:ProfileStatus">
                                                <description>
                                                    <xsl:value-of select="ns19:ProfileStatus"/>
                                                </description>
                                            </xsl:if>
                                            <xsl:if test="ns19:CBiO2CCCompanyName">
                                                <name>
                                                    <xsl:value-of select="ns19:CBiO2CCCompanyName"/>
                                                </name>
                                            </xsl:if>
                                            <xsl:if test="ns19:PaymentProfileType">
                                                <paymentMethodType>
                                                    <xsl:value-of select="ns19:PaymentProfileType"/>
                                                </paymentMethodType>
                                            </xsl:if>
                                            <CreditCardPM>
                                                <xsl:if test="ns19:ExpirationMonth">
                                                    <ExpirationMonth>
                                                        <xsl:value-of select="ns19:ExpirationMonth"/>
                                                    </ExpirationMonth>
                                                </xsl:if>
                                                <xsl:if test="ns19:ExpirationYear">
                                                    <ExpirationYear>
                                                        <xsl:value-of select="ns19:ExpirationYear"/>
                                                    </ExpirationYear>
                                                </xsl:if>
                                            </CreditCardPM>
                                            <ZainBankPM>
                                                <xsl:if test="ns19:AccountNumber2">
                                                    <accountNumber>
                                                        <xsl:value-of select="ns19:AccountNumber2"/>
                                                    </accountNumber>
                                                </xsl:if>
                                                <xsl:if test="ns19:CBiO2BankBSCSId">
                                                    <BankCode>
                                                        <xsl:value-of select="ns19:CBiO2BankBSCSId"/>
                                                    </BankCode>
                                                </xsl:if>
                                                <xsl:if test="ns19:AccountBankName">
                                                    <BankName>
                                                        <xsl:value-of select="ns19:AccountBankName"/>
                                                    </BankName>
                                                </xsl:if>
                                                <xsl:if test="ns19:AccountBankBranch">
                                                    <BankBranchName>
                                                        <xsl:value-of select="ns19:AccountBankBranch"/>
                                                    </BankBranchName>
                                                </xsl:if>
                                            </ZainBankPM>
                                            <xsl:if test="ns19:CBiO2PaymentInstrument">
                                                <PreferredPaymentMode>
                                                    <xsl:value-of select="ns19:CBiO2PaymentInstrument"/>
                                                </PreferredPaymentMode>
                                            </xsl:if>
                                        </PaymentMethod>
                                    </ZainCustomerPayment>
                                </xsl:for-each>
                                <xsl:for-each select="ns19:ListOfComInvoiceProfile/ns19:ComInvoiceProfile">
                                    <CustomerBill>
                                        <xsl:if test="ns19:CBiO2InvoiceFormat">
                                            <Format>
                                                <xsl:value-of select="ns19:CBiO2InvoiceFormat"/>
                                            </Format>
                                        </xsl:if>
                                        <xsl:if test="ns19:Name">
                                            <RequestType>
                                                <xsl:value-of select="ns19:Name"/>
                                            </RequestType>
                                        </xsl:if>
                                    </CustomerBill>
                                </xsl:for-each>
                                <xsl:if test="ns19:AccountNumber">
                                    <AccountNumber>
                                        <xsl:value-of select="ns19:AccountNumber"/>
                                    </AccountNumber>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2PortInFlag">
                                    <PortIn>
                                        <xsl:value-of select="ns19:CBiO2PortInFlag"/>
                                    </PortIn>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2PortOutFlag">
                                    <PortOut>
                                        <xsl:value-of select="ns19:CBiO2PortOutFlag"/>
                                    </PortOut>
                                </xsl:if>
                                <xsl:if test="ns19:CBiO2Sector">
                                    <Sector>
                                        <xsl:value-of select="ns19:CBiO2Sector"/>
                                    </Sector>
                                </xsl:if>
                            </ZainCustomerAccount>
                        </xsl:for-each>
                    </pfx13:ZainCustomerAccountList>
                    <pfx13:ZainIdentifiers>
                        <pfx13:accountId>
                            <pfx13:systemName>
                                <xsl:value-of select="&quot;CRM AccountId&quot;"/>
                            </pfx13:systemName>
                            <xsl:if test="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2BSCSHierarchyId">
                                <pfx13:value>
                                    <xsl:value-of select="$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/ns19:ListOfCbio2CustomerCreationIo/ns19:Account[1]/ns19:CBiO2BSCSHierarchyId"/>
                                </pfx13:value>
                            </xsl:if>
                        </pfx13:accountId>
                    </pfx13:ZainIdentifiers>
                    <pfx13:Response>
                        <xsl:if test="if(exists($CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcCode))&#xA;then&#xA;$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcCode&#xA;else&#xA;$_error_CallGetCustomerProfile/ActivityErrors/defaultFaultElement/faultcode">
                            <ResponseCode>
                                <xsl:value-of select="if(exists($CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcCode))&#xA;then&#xA;$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcCode&#xA;else&#xA;$_error_CallGetCustomerProfile/ActivityErrors/defaultFaultElement/faultcode"/>
                            </ResponseCode>
                        </xsl:if>
                        <xsl:if test="if(exists($CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcMessage))&#xA;then&#xA;$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcMessage&#xA;else&#xA;$_error_CallGetCustomerProfile/ActivityErrors/defaultFaultElement/faultstring">
                            <ResponseDescription>
                                <xsl:value-of select="if(exists($CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcMessage))&#xA;then&#xA;$CallGetCustomerProfile/outputMessage/pfx38:QueryCustomer_Output/pfx38:Error_spcMessage&#xA;else&#xA;$_error_CallGetCustomerProfile/ActivityErrors/defaultFaultElement/faultstring"/>
                            </ResponseDescription>
                        </xsl:if>
                    </pfx13:Response>
                </pfx39:GetCustomerProfileResponse>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>623</pd:x>
        <pd:y>11</pd:y>
        <pd:width>335</pd:width>
        <pd:height>330</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CallGetCustomerProfile</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CallGetCustomerProfile</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Timeout</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_CallGetCustomerProfile/ActivityErrors/ns10:ActivityTimedOutException)
or
exists($_error_CallGetCustomerProfile/ActivityErrors/ns9:HttpCommunicationException)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>CallGetCustomerProfile</pd:from>
            <pd:to>Null</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechnicalError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>885</pd:x>
            <pd:y>266</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>774</pd:x>
            <pd:y>198</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="CallGetCustomerProfile">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>776</pd:x>
            <pd:y>77</pd:y>
            <config>
                <timeout>%%BusinessProcesses/Services/CRM/CustomerProfile/SOAP_Time_OUT%%</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <timeoutType>Seconds</timeoutType>
                <service>pfx38:CBiO2_spcCustomer_spcQuery_spcWorkflow</service>
                <servicePort>CBiO2_spcCustomer_spcQuery_spcWorkflow</servicePort>
                <operation>QueryCustomer</operation>
                <soapAction>document/http://siebel.com/CustomUI:QueryCustomer</soapAction>
                <endpointURL>http://10.103.23.104/eai_anon_enu/start.swe?SWEExtCmd=Execute&amp;SWEExtSource=SecureWebService&amp;WSSOAP=1</endpointURL>
                <authScheme>BASIC</authScheme>
                <requireBasicAuth>true</requireBasicAuth>
                <basicHttpAuthIdentity>/CommonResources/Identities/CRM_Identity.id </basicHttpAuthIdentity>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <ns13:_configData>
                        <endpointURL>
                            <xsl:value-of select="concat($_globalVariables/pfx9:GlobalVariables/CommonResources/Connections/SOAP/External/CRM/CRM_HTTP/SOAPURI,$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/CustomerProfile/End_Point_URL)"/>
                        </endpointURL>
                        <TransportProperties>
                            <Headers>
                                <Accept-Encoding>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </Accept-Encoding>
                            </Headers>
                        </TransportProperties>
                    </ns13:_configData>
                    <pfx38:QueryCustomer_Input>
                        <pfx38:CBiO2MSISDN>
                            <xsl:value-of select="if(exists($ParseCDMRequest/pfx37:GetCustomerProfileRequest/pfx13:MSISDN))&#xA;then&#xA;$ParseCDMRequest/pfx37:GetCustomerProfileRequest/pfx13:MSISDN&#xA;else&#xA;&quot;&quot;"/>
                        </pfx38:CBiO2MSISDN>
                        <pfx38:CBiO2CustomerId>
                            <xsl:value-of select="if(count($CDMToNative/root/pfx38:QueryCustomer_Input/pfx38:CBiO2CustomerId)>0)&#xA;then&#xA;$CDMToNative/root/pfx38:QueryCustomer_Input/pfx38:CBiO2CustomerId&#xA;else&#xA;&quot;&quot;"/>
                        </pfx38:CBiO2CustomerId>
                    </pfx38:QueryCustomer_Input>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GenerateTechnicalError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>740</pd:x>
            <pd:y>268</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SblSoapErrorDec"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SBLSoapErrorCode"/>
                    </messageCode>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>328</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1212</pd:x>
        <pd:y>303</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>220</pd:x>
        <pd:y>444</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetCustomerProfile</pd:from>
        <pd:to>ParseCDMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>Log_CRM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CRM_Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log_CRM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>TimeOutError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>Communication Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_CallGetCustomerProfile/ActivityErrors/ns9:HttpClientException)
or
exists($_error_CallGetCustomerProfile/ActivityErrors/ns9:HttpServerException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CRM_Response</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>