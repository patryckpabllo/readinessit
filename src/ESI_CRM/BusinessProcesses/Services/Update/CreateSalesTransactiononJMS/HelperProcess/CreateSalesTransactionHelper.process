<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx401="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:pfx61="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx57="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayExecutionResponse.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://siebel.com/CustomUI" xmlns:pfx59="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayTransactionResponse.xsd" xmlns:pfx341="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" xmlns:pfx56="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:pfx52="http://www.siebel.com/xml/CBiO2CashSalesIO" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.siebel.com/xml/CBiO2%20Sales%20Tran%20Response%20IO" xmlns:pfx471="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://www.siebel.com/xml/CBiO2%20Balance%20Transfer%20Res%20IO" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:pfx46="http://www.siebel.com/xml/CBiO2%20Line%20Item%20Res%20IO" xmlns:pfx47="http://www.siebel.com/xml/CBiO2%20Order%20Provisioning%20Res%20IO" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/paymentarrangementwritezain" xmlns:pfx45="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/paymentarrangementassignmentwritezain" xmlns:pfx421="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx391="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx35="http://lhsgroup.com/lhsws/money" xmlns:pfx36="http://ericsson.com/services/ws_CIL_5/customercreatezain" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx38="http://ericsson.com/services/ws_CIL_5" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns211="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:pfx491="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx501="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx441="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:ns231="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://ericsson.com/services/ws_CIL_5/customermodifyzain" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns221="http://ericsson.com/services/ws_CIL_5/contractserviceswrite" xmlns:pfx371="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx431="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:ns29="http://www.siebel.com/xml/Order%20Entry%20(Sales)" xmlns:pfx461="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns26="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns27="http://www.siebel.com/xml/CBiO2AutoPayRegistration" xmlns:ns28="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/addresswrite" xmlns:ns22="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns23="http://ericsson.com/services/ws_CIL_5/paymentarrangementwrite" xmlns:ns24="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_5/customerinfowrite" xmlns:pfx361="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx451="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns30="http://www.siebel.com/xml/ListQuery" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns241="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx351="http://www.zain.com/ZESB/Services/eAccountManagement">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customercreatezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateCustomer/CustomerCreatezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customermodifyzain" schemaLocation="/BusinessWSDLS/Services/BSCS/ModifyCustomer/CustomerModifyzainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/paymentarrangementassignmentwritezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementAssignmentWritezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/paymentarrangementwritezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementWritezainService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Order%20Provisioning%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/listOfCbio2LineItemResIo.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Balance%20Transfer%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2BalanceTransferResIo.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Sales%20Tran%20Response%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2SalesTranResponseIo.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2CashSalesIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2cashsalesio.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CIL_5" location="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementWritezainService.wsdl"/>
    <pd:name>BusinessProcesses/Services/Update/CreateSalesTransactiononJMS/HelperProcess/CreateSalesTransactionHelper.process</pd:name>
    <pd:startName>SalesTransactionUpdate</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>67</pd:startX>
    <pd:startY>159</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$CDMToNative/pfx39:ModifyCustomerRes"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>849</pd:endX>
    <pd:endY>159</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>305</pd:x>
        <pd:y>160</pd:y>
        <config>
            <element ref="pfx52:ListOfCbio2cashsalesio"/>
        </config>
        <pd:inputBindings>
            <pfx52:ListOfCbio2cashsalesio>
                <xsl:choose>
                    <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo='Device Return'">
                        <pfx52:OrderEntry-Orders>
                            <pfx52:CBiO2CreatedDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date(&quot;yyyy-MM-dd&quot;,(current-date())))"/>
                            </pfx52:CBiO2CreatedDate>
                            <pfx52:CBiO2CustomerIDNumber>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='ID_NUMBER']/pfx49:Value"/>
                            </pfx52:CBiO2CustomerIDNumber>
                            <pfx52:CBiO2CustomerIDType>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='ID_TYPE']/pfx49:Value"/>
                            </pfx52:CBiO2CustomerIDType>
                            <pfx52:CBiO2EnglishFullName>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='CUST_NAME_ENG']/pfx49:Value"/>
                            </pfx52:CBiO2EnglishFullName>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN">
                                <pfx52:CBiO2MSISDN>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN"/>
                                </pfx52:CBiO2MSISDN>
                            </xsl:if>
                            <pfx52:CBiO2SalesChannel>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                            </pfx52:CBiO2SalesChannel>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo">
                                <pfx52:CBiO2SalesTransactionSubType>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo"/>
                                </pfx52:CBiO2SalesTransactionSubType>
                            </xsl:if>
                            <pfx52:CBiO2SalesTransactionType>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/strSalesTransaction"/>
                            </pfx52:CBiO2SalesTransactionType>
                            <xsl:choose>
                                <xsl:when test="string-length($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value)>0">
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CreateReturnSalesTransaction/ShopID"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                <pfx52:CBiO2TransactionRef>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                </pfx52:CBiO2TransactionRef>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                <pfx52:CBiO2UserName>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                </pfx52:CBiO2UserName>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks">
                                <pfx52:Comments>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks"/>
                                </pfx52:Comments>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus='PartiallySuccessful'">
                                    <pfx52:Status>
                                        <xsl:value-of select="&quot;Open&quot;"/>
                                    </pfx52:Status>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:Status>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus"/>
                                    </pfx52:Status>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber">
                                <pfx52:OldSTReceiptNum>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber"/>
                                </pfx52:OldSTReceiptNum>
                            </xsl:if>
                            <pfx52:CBiO2POSTransactionType>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Type"/>
                            </pfx52:CBiO2POSTransactionType>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                    <pfx52:ErrorCode>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorCode>
                                    <pfx52:ErrorType>
                                        <xsl:value-of select="&quot;2&quot;"/>
                                    </pfx52:ErrorType>
                                    <pfx52:ErrorMessage>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorMessage>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                        <pfx52:Error_SourceSystem>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                        </pfx52:Error_SourceSystem>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrDesc>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrDesc>
                                    </xsl:if>
                                </xsl:when>
                            </xsl:choose>
                            <pfx52:CBiO2OldTransactionAmount>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='NET_PRI']/pfx49:Value"/>
                            </pfx52:CBiO2OldTransactionAmount>
                            <pfx52:CBiO2OldTransactionId>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OrderNumber"/>
                            </pfx52:CBiO2OldTransactionId>
                            <pfx52:ListOfOrderEntry-LineItems>
                                <xsl:for-each select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OrderLines">
                                    <pfx52:OrderEntry-LineItems>
                                        <pfx52:CBiO2ItemCode>
                                            <xsl:value-of select="pfx49:ProductCode"/>
                                        </pfx52:CBiO2ItemCode>
                                        <xsl:if test="pfx49:SerialNumber">
                                            <pfx52:CBiO2ToSerialNumber>
                                                <xsl:value-of select="pfx49:SerialNumber"/>
                                            </pfx52:CBiO2ToSerialNumber>
                                        </xsl:if>
                                        <pfx52:ProductId>
                                            <xsl:value-of select="../pfx49:Params/pfx49:Param[pfx49:Name=&quot;CRMPRODUCTID&quot;]/pfx49:Value"/>
                                        </pfx52:ProductId>
                                        <pfx52:Quantity>
                                            <xsl:value-of select="pfx49:Quantity"/>
                                        </pfx52:Quantity>
                                        <xsl:if test="pfx49:SerialNumber">
                                            <pfx52:CBiO2FromSerialNumber>
                                                <xsl:value-of select="pfx49:SerialNumber"/>
                                            </pfx52:CBiO2FromSerialNumber>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="../pfx49:RequestStatus='PartiallySuccessful'">
                                                <pfx52:Status>
                                                    <xsl:value-of select="'Open'"/>
                                                </pfx52:Status>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="../pfx49:RequestStatus">
                                                    <pfx52:Status>
                                                        <xsl:value-of select="../pfx49:RequestStatus"/>
                                                    </pfx52:Status>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="pfx49:Amount">
                                            <pfx52:ItemAmount>
                                                <xsl:value-of select="pfx49:Amount"/>
                                            </pfx52:ItemAmount>
                                        </xsl:if>
                                        <xsl:if test="pfx49:ProductType">
                                            <pfx52:CBiO2ItemType>
                                                <xsl:value-of select="pfx49:ProductType"/>
                                            </pfx52:CBiO2ItemType>
                                        </xsl:if>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_ExecuteStatus&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2ExecuteStatus>
                                                <xsl:value-of select="(../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_ExecuteStatus&quot;]/pfx49:Value)"/>
                                            </pfx52:CBiO2ExecuteStatus>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                                <pfx52:ErrorCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorCode>
                                                <pfx52:ErrorMessage>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorMessage>
                                                <pfx52:ErrorType>
                                                    <xsl:value-of select="&quot;2&quot;"/>
                                                </pfx52:ErrorType>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                                    <pfx52:Error_SourceSystem>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_SourceSystem>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrCode>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrCode>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrDesc>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrDesc>
                                                </xsl:if>
                                            </xsl:when>
                                        </xsl:choose>
                                    </pfx52:OrderEntry-LineItems>
                                </xsl:for-each>
                            </pfx52:ListOfOrderEntry-LineItems>
                            <pfx52:ListOfPayments>
                                <pfx52:Payments>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber">
                                        <pfx52:CreditCardNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber"/>
                                        </pfx52:CreditCardNo>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                                <pfx52:AuthorizationCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                                </pfx52:AuthorizationCode>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:AuthorizationCode>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:AuthorizationCode"/>
                                            </pfx52:AuthorizationCode>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:AuthorizeCredit='true'">
                                            <pfx52:CBiO2AuthorizeCredit>
                                                <xsl:value-of select="1"/>
                                            </pfx52:CBiO2AuthorizeCredit>
                                        </xsl:when>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel">
                                        <pfx52:CBiO2Channel>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                                        </pfx52:CBiO2Channel>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID">
                                        <pfx52:CBiO2MerchantId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MerchantId>
                                    </xsl:if>
                                    <pfx52:CBiO2PaymentDateTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss',tib:parse-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;,(current-dateTime())))"/>
                                    </pfx52:CBiO2PaymentDateTime>
                                    <pfx52:CBiO2ReceiptNo>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:ReceiptNumber"/>
                                    </pfx52:CBiO2ReceiptNo>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID">
                                        <pfx52:CBiO2TerminalId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID"/>
                                        </pfx52:CBiO2TerminalId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                        <pfx52:CBiO2Username2>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                        </pfx52:CBiO2Username2>
                                    </xsl:if>
                                    <pfx52:CBiO2VoucherNumber>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='Corp_Voucher_Number' or pfx49:Name='CORP_VOUCHER_NUMBER']/pfx49:Value"/>
                                    </pfx52:CBiO2VoucherNumber>
                                    <pfx52:CBiO2WorkArea>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2WorkArea>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName">
                                        <pfx52:CardHolder>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName"/>
                                        </pfx52:CardHolder>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="tib:pad-front(tib:get-month-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)), '2', '0')"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationYear>
                                                <xsl:value-of select="tib:get-year-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))"/>
                                            </pfx52:ExpirationYear>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate">
                                                <pfx52:ExpirationYear>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate"/>
                                                </pfx52:ExpirationYear>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank">
                                        <pfx52:IssuingBankName>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank"/>
                                        </pfx52:IssuingBankName>
                                    </xsl:if>
                                    <pfx52:PaymentMethod>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='PAY_MODE']/pfx49:Value"/>
                                    </pfx52:PaymentMethod>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount">
                                        <pfx52:TransactionAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount"/>
                                        </pfx52:TransactionAmount>
                                    </xsl:if>
                                    <pfx52:CBiO2PayDesk>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='PAYDESK']/pfx49:Value"/>
                                    </pfx52:CBiO2PayDesk>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode">
                                        <pfx52:CBiO2MrchntAcquireResCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode"/>
                                        </pfx52:CBiO2MrchntAcquireResCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount">
                                        <pfx52:CBiO2MrchntAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount"/>
                                        </pfx52:CBiO2MrchntAmount>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                        <pfx52:CBiO2MrchntAuthorizationId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                        </pfx52:CBiO2MrchntAuthorizationId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus">
                                        <pfx52:CBiO2MrchntAuthorizationStatus>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus"/>
                                        </pfx52:CBiO2MrchntAuthorizationStatus>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType">
                                            <pfx52:CBiO2CardType>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType"/>
                                            </pfx52:CBiO2CardType>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value">
                                                <pfx52:CBiO2CardType>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value"/>
                                                </pfx52:CBiO2CardType>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID">
                                        <pfx52:CBiO2MrchntId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MrchntId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo">
                                        <pfx52:CBiO2MrchntOrderInfo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo"/>
                                        </pfx52:CBiO2MrchntOrderInfo>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber">
                                        <pfx52:CBiO2MrchntRecieptNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber"/>
                                        </pfx52:CBiO2MrchntRecieptNo>
                                    </xsl:if>
                                    <xsl:if test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate)&#xA;and&#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate))>0">
                                        <pfx52:CBiO2MrchntSettlementDate>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate"/>
                                        </pfx52:CBiO2MrchntSettlementDate>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference">
                                        <pfx52:CBiO2MrchntShoppingTranRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference"/>
                                        </pfx52:CBiO2MrchntShoppingTranRef>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                        <pfx52:CBiO2MrchntTransactionRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                        </pfx52:CBiO2MrchntTransactionRef>
                                    </xsl:if>
                                </pfx52:Payments>
                            </pfx52:ListOfPayments>
                        </pfx52:OrderEntry-Orders>
                    </xsl:when>
                    <xsl:when test="($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo='Device Sales' or &#xA;$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo ='Service Sales')&#xA;and &#xA;count($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param/pfx49:Name='SalesOrderEXT')>0">
                        <pfx52:OrderEntry-Orders>
                            <pfx52:CBiO2CreatedDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date(&quot;yyyy-MM-dd&quot;,(current-date())))"/>
                            </pfx52:CBiO2CreatedDate>
                            <xsl:if test="string-length($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID)>0">
                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID">
                                    <pfx52:CBiO2CustomerIDNumber>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID"/>
                                    </pfx52:CBiO2CustomerIDNumber>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerName">
                                <pfx52:CBiO2EnglishFullName>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerName"/>
                                </pfx52:CBiO2EnglishFullName>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN">
                                <pfx52:CBiO2MSISDN>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN"/>
                                </pfx52:CBiO2MSISDN>
                            </xsl:if>
                            <pfx52:CBiO2SalesChannel>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                            </pfx52:CBiO2SalesChannel>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo">
                                <pfx52:CBiO2SalesTransactionSubType>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo"/>
                                </pfx52:CBiO2SalesTransactionSubType>
                            </xsl:if>
                            <pfx52:CBiO2SalesTransactionType>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/strSalesTransaction"/>
                            </pfx52:CBiO2SalesTransactionType>
                            <xsl:choose>
                                <xsl:when test="string-length($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value)>0">
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CreateReturnSalesTransaction/ShopID"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                <pfx52:CBiO2TransactionRef>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                </pfx52:CBiO2TransactionRef>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                <pfx52:CBiO2UserName>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                </pfx52:CBiO2UserName>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks">
                                <pfx52:Comments>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks"/>
                                </pfx52:Comments>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus='PartiallySuccessful'">
                                    <pfx52:Status>
                                        <xsl:value-of select="&quot;Open&quot;"/>
                                    </pfx52:Status>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:Status>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus"/>
                                    </pfx52:Status>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber">
                                <pfx52:OldSTReceiptNum>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber"/>
                                </pfx52:OldSTReceiptNum>
                            </xsl:if>
                            <pfx52:CBiO2POSTransactionType>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Type"/>
                            </pfx52:CBiO2POSTransactionType>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                    <pfx52:ErrorCode>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorCode>
                                    <pfx52:ErrorType>
                                        <xsl:value-of select="&quot;2&quot;"/>
                                    </pfx52:ErrorType>
                                    <pfx52:ErrorMessage>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorMessage>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                        <pfx52:Error_SourceSystem>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                        </pfx52:Error_SourceSystem>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrDesc>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrDesc>
                                    </xsl:if>
                                </xsl:when>
                            </xsl:choose>
                            <pfx52:ListOfOrderEntry-LineItems>
                                <xsl:for-each select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OrderLines">
                                    <pfx52:OrderEntry-LineItems>
                                        <xsl:choose>
                                            <xsl:when test="string-length(current()/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ERPPRODUCTID&quot;]/pfx49:Value)>0">
                                                <pfx52:CBiO2ItemCode>
                                                    <xsl:value-of select="current()/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ERPPRODUCTID&quot;]/pfx49:Value"/>
                                                </pfx52:CBiO2ItemCode>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx52:CBiO2ItemCode>
                                                    <xsl:value-of select="pfx49:ProductCode"/>
                                                </pfx52:CBiO2ItemCode>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:choose>
                                            <xsl:when test="exists(current()/pfx49:SerialNumber)and string-length(tib:trim(current()/pfx49:SerialNumber))>0">
                                                <xsl:if test="current()/pfx49:SerialNumber">
                                                    <pfx52:CBiO2ToSerialNumber>
                                                        <xsl:value-of select="current()/pfx49:SerialNumber"/>
                                                    </pfx52:CBiO2ToSerialNumber>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="current()/pfx49:LineItemId">
                                                    <pfx52:CBiO2ToSerialNumber>
                                                        <xsl:value-of select="current()/pfx49:LineItemId"/>
                                                    </pfx52:CBiO2ToSerialNumber>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:choose>
                                            <xsl:when test="string-length(current()/pfx49:Params/pfx49:Param[pfx49:Name=&quot;CRMPRODUCTID&quot;]/pfx49:Value)>0">
                                                <pfx52:ProductId>
                                                    <xsl:value-of select="(current()/pfx49:Params/pfx49:Param[pfx49:Name=&quot;CRMPRODUCTID&quot;]/pfx49:Value)"/>
                                                </pfx52:ProductId>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx52:ProductId>
                                                    <xsl:value-of select="(current()/pfx49:Params/pfx49:Param[pfx49:Name=&quot;CRMPRODUCTID&quot;]/pfx49:Value)"/>
                                                </pfx52:ProductId>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <pfx52:Quantity>
                                            <xsl:value-of select="pfx49:Quantity"/>
                                        </pfx52:Quantity>
                                        <xsl:choose>
                                            <xsl:when test="exists(current()/pfx49:SerialNumber)and string-length(tib:trim(current()/pfx49:SerialNumber))>0">
                                                <xsl:if test="(current()/pfx49:SerialNumber)">
                                                    <pfx52:CBiO2FromSerialNumber>
                                                        <xsl:value-of select="(current()/pfx49:SerialNumber)"/>
                                                    </pfx52:CBiO2FromSerialNumber>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="current()/pfx49:LineItemId">
                                                    <pfx52:CBiO2FromSerialNumber>
                                                        <xsl:value-of select="current()/pfx49:LineItemId"/>
                                                    </pfx52:CBiO2FromSerialNumber>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:choose>
                                            <xsl:when test="../pfx49:RequestStatus='PartiallySuccessful'">
                                                <pfx52:Status>
                                                    <xsl:value-of select="'Open'"/>
                                                </pfx52:Status>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="../pfx49:RequestStatus">
                                                    <pfx52:Status>
                                                        <xsl:value-of select="../pfx49:RequestStatus"/>
                                                    </pfx52:Status>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="pfx49:Amount">
                                            <pfx52:ItemAmount>
                                                <xsl:value-of select="pfx49:Amount"/>
                                            </pfx52:ItemAmount>
                                        </xsl:if>
                                        <xsl:if test="pfx49:ProductType">
                                            <pfx52:CBiO2ItemType>
                                                <xsl:value-of select="pfx49:ProductType"/>
                                            </pfx52:CBiO2ItemType>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                                <pfx52:ErrorCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorCode>
                                                <pfx52:ErrorMessage>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorMessage>
                                                <pfx52:ErrorType>
                                                    <xsl:value-of select="&quot;2&quot;"/>
                                                </pfx52:ErrorType>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                                    <pfx52:Error_SourceSystem>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_SourceSystem>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrCode>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrCode>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrDesc>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrDesc>
                                                </xsl:if>
                                            </xsl:when>
                                        </xsl:choose>
                                    </pfx52:OrderEntry-LineItems>
                                </xsl:for-each>
                            </pfx52:ListOfOrderEntry-LineItems>
                            <pfx52:ListOfPayments>
                                <pfx52:Payments>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber">
                                        <pfx52:CreditCardNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber"/>
                                        </pfx52:CreditCardNo>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                                <pfx52:AuthorizationCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                                </pfx52:AuthorizationCode>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:AuthorizationCode>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:AuthorizationCode"/>
                                            </pfx52:AuthorizationCode>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:AuthorizeCredit='true'">
                                            <pfx52:CBiO2AuthorizeCredit>
                                                <xsl:value-of select="1"/>
                                            </pfx52:CBiO2AuthorizeCredit>
                                        </xsl:when>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel">
                                        <pfx52:CBiO2Channel>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                                        </pfx52:CBiO2Channel>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID">
                                        <pfx52:CBiO2MerchantId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MerchantId>
                                    </xsl:if>
                                    <pfx52:CBiO2PaymentDateTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss',tib:parse-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;,(current-dateTime())))"/>
                                    </pfx52:CBiO2PaymentDateTime>
                                    <pfx52:CBiO2ReceiptNo>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:ReceiptNumber"/>
                                    </pfx52:CBiO2ReceiptNo>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID">
                                        <pfx52:CBiO2TerminalId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID"/>
                                        </pfx52:CBiO2TerminalId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                        <pfx52:CBiO2Username2>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                        </pfx52:CBiO2Username2>
                                    </xsl:if>
                                    <pfx52:CBiO2VoucherNumber>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='VoucherNumber']/pfx49:Value"/>
                                    </pfx52:CBiO2VoucherNumber>
                                    <pfx52:CBiO2WorkArea>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2WorkArea>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName">
                                        <pfx52:CardHolder>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName"/>
                                        </pfx52:CardHolder>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="tib:pad-front(tib:get-month-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)), '2', '0')"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationYear>
                                                <xsl:value-of select="tib:get-year-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))"/>
                                            </pfx52:ExpirationYear>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate">
                                                <pfx52:ExpirationYear>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate"/>
                                                </pfx52:ExpirationYear>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank">
                                        <pfx52:IssuingBankName>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank"/>
                                        </pfx52:IssuingBankName>
                                    </xsl:if>
                                    <pfx52:PaymentDate>
                                        <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date(&quot;yyyy-MM-dd&quot;,(current-date())))"/>
                                    </pfx52:PaymentDate>
                                    <pfx52:PaymentMethod>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaymentMethod"/>
                                    </pfx52:PaymentMethod>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount">
                                        <pfx52:TransactionAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount"/>
                                        </pfx52:TransactionAmount>
                                    </xsl:if>
                                    <pfx52:CBiO2PayDesk>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='PAYDESK']/pfx49:Value"/>
                                    </pfx52:CBiO2PayDesk>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode">
                                        <pfx52:CBiO2MrchntAcquireResCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode"/>
                                        </pfx52:CBiO2MrchntAcquireResCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount">
                                        <pfx52:CBiO2MrchntAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount"/>
                                        </pfx52:CBiO2MrchntAmount>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                        <pfx52:CBiO2MrchntAuthorizationId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                        </pfx52:CBiO2MrchntAuthorizationId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus">
                                        <pfx52:CBiO2MrchntAuthorizationStatus>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus"/>
                                        </pfx52:CBiO2MrchntAuthorizationStatus>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType">
                                            <pfx52:CBiO2CardType>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType"/>
                                            </pfx52:CBiO2CardType>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value">
                                                <pfx52:CBiO2CardType>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value"/>
                                                </pfx52:CBiO2CardType>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID">
                                        <pfx52:CBiO2MrchntId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MrchntId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo">
                                        <pfx52:CBiO2MrchntOrderInfo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo"/>
                                        </pfx52:CBiO2MrchntOrderInfo>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber">
                                        <pfx52:CBiO2MrchntRecieptNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber"/>
                                        </pfx52:CBiO2MrchntRecieptNo>
                                    </xsl:if>
                                    <xsl:if test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate)&#xA;and&#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate))>0">
                                        <pfx52:CBiO2MrchntSettlementDate>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate"/>
                                        </pfx52:CBiO2MrchntSettlementDate>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference">
                                        <pfx52:CBiO2MrchntShoppingTranRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference"/>
                                        </pfx52:CBiO2MrchntShoppingTranRef>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                        <pfx52:CBiO2MrchntTransactionRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                        </pfx52:CBiO2MrchntTransactionRef>
                                    </xsl:if>
                                </pfx52:Payments>
                            </pfx52:ListOfPayments>
                        </pfx52:OrderEntry-Orders>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx52:OrderEntry-Orders>
                            <pfx52:CBiO2CreatedDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date(&quot;yyyy-MM-dd&quot;,(current-date())))"/>
                            </pfx52:CBiO2CreatedDate>
                            <xsl:if test="string-length($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID)>0">
                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID">
                                    <pfx52:CBiO2CustomerIDNumber>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID"/>
                                    </pfx52:CBiO2CustomerIDNumber>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerName">
                                <pfx52:CBiO2EnglishFullName>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerName"/>
                                </pfx52:CBiO2EnglishFullName>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN">
                                <pfx52:CBiO2MSISDN>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:MSISDN"/>
                                </pfx52:CBiO2MSISDN>
                            </xsl:if>
                            <pfx52:CBiO2SalesChannel>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                            </pfx52:CBiO2SalesChannel>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo">
                                <pfx52:CBiO2SalesTransactionSubType>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OperationToDo"/>
                                </pfx52:CBiO2SalesTransactionSubType>
                            </xsl:if>
                            <pfx52:CBiO2SalesTransactionType>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/strSalesTransaction"/>
                            </pfx52:CBiO2SalesTransactionType>
                            <xsl:choose>
                                <xsl:when test="string-length($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value)>0">
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = 'WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CreateReturnSalesTransaction/ShopID"/>
                                    </pfx52:CBiO2ShopId>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                <pfx52:CBiO2TransactionRef>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                </pfx52:CBiO2TransactionRef>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                <pfx52:CBiO2UserName>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                </pfx52:CBiO2UserName>
                            </xsl:if>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks">
                                <pfx52:Comments>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Remarks"/>
                                </pfx52:Comments>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus='PartiallySuccessful'">
                                    <pfx52:Status>
                                        <xsl:value-of select="&quot;Open&quot;"/>
                                    </pfx52:Status>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx52:Status>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus"/>
                                    </pfx52:Status>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber">
                                <pfx52:OldSTReceiptNum>
                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OldSTReceiptNumber"/>
                                </pfx52:OldSTReceiptNum>
                            </xsl:if>
                            <pfx52:CBiO2POSTransactionType>
                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Type"/>
                            </pfx52:CBiO2POSTransactionType>
                            <xsl:choose>
                                <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                    <pfx52:ErrorCode>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorCode>
                                    <pfx52:ErrorType>
                                        <xsl:value-of select="&quot;2&quot;"/>
                                    </pfx52:ErrorType>
                                    <pfx52:ErrorMessage>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                    </pfx52:ErrorMessage>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                        <pfx52:Error_SourceSystem>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                        </pfx52:Error_SourceSystem>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                        <pfx52:Error_UserErrDesc>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                        </pfx52:Error_UserErrDesc>
                                    </xsl:if>
                                </xsl:when>
                            </xsl:choose>
                            <pfx52:ListOfOrderEntry-LineItems>
                                <xsl:for-each select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:OrderLines">
                                    <pfx52:OrderEntry-LineItems>
                                        <pfx52:CBiO2ItemCode>
                                            <xsl:value-of select="pfx49:ProductCode"/>
                                        </pfx52:CBiO2ItemCode>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_PIN&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2PinNo>
                                                <xsl:value-of select="(../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_PIN&quot;]/pfx49:Value)"/>
                                            </pfx52:CBiO2PinNo>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="../pfx49:OperationToDo='Device Sales'">
                                                <xsl:if test="pfx49:SerialNumber">
                                                    <pfx52:CBiO2ToSerialNumber>
                                                        <xsl:value-of select="pfx49:SerialNumber"/>
                                                    </pfx52:CBiO2ToSerialNumber>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:when test="../pfx49:OperationToDo='On Demand Voucher Sales' and string-length(((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_SerialNumber&quot;]/pfx49:Value)))>0">
                                                <pfx52:CBiO2ToSerialNumber>
                                                    <xsl:value-of select="&quot;&quot;&#xA;{--((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_SerialNumber&quot;]/pfx49:Value))--}"/>
                                                </pfx52:CBiO2ToSerialNumber>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx52:CBiO2ToSerialNumber>
                                                    <xsl:value-of select="&quot;&quot;"/>
                                                </pfx52:CBiO2ToSerialNumber>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_ExpiryDate&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2VoucherExpiryDate2>
                                                <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss',tib:parse-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;,((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_ExpiryDate&quot;]/pfx49:Value))))"/>
                                            </pfx52:CBiO2VoucherExpiryDate2>
                                        </xsl:if>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_State&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2VoucherStatus>
                                                <xsl:value-of select="../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_State&quot;]/pfx49:Value"/>
                                            </pfx52:CBiO2VoucherStatus>
                                        </xsl:if>
                                        <pfx52:ProductId>
                                            <xsl:value-of select="../pfx49:Params/pfx49:Param[pfx49:Name=&quot;CRMPRODUCTID&quot;]/pfx49:Value"/>
                                        </pfx52:ProductId>
                                        <pfx52:Quantity>
                                            <xsl:value-of select="pfx49:Quantity"/>
                                        </pfx52:Quantity>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_NewBalance&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2TopupNewBalanceAmount>
                                                <xsl:value-of select="../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_NewBalance&quot;]/pfx49:Value"/>
                                            </pfx52:CBiO2TopupNewBalanceAmount>
                                        </xsl:if>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_NewExpiryDate&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2TopupNewExpiryDate>
                                                <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss',tib:parse-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;,(../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_NewExpiryDate&quot;]/pfx49:Value)))"/>
                                            </pfx52:CBiO2TopupNewExpiryDate>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="../pfx49:OperationToDo='Device Sales'">
                                                <xsl:if test="pfx49:SerialNumber">
                                                    <pfx52:CBiO2FromSerialNumber>
                                                        <xsl:value-of select="pfx49:SerialNumber"/>
                                                    </pfx52:CBiO2FromSerialNumber>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:when test="../pfx49:OperationToDo='On Demand Voucher Sales' and string-length(((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_SerialNumber&quot;]/pfx49:Value)))>0">
                                                <pfx52:CBiO2FromSerialNumber>
                                                    <xsl:value-of select="((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;VOMS_SerialNumber&quot;]/pfx49:Value))"/>
                                                </pfx52:CBiO2FromSerialNumber>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <pfx52:CBiO2FromSerialNumber>
                                                    <xsl:value-of select="../pfx49:TransactionReference"/>
                                                </pfx52:CBiO2FromSerialNumber>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:choose>
                                            <xsl:when test="../pfx49:RequestStatus='PartiallySuccessful'">
                                                <pfx52:Status>
                                                    <xsl:value-of select="'Open'"/>
                                                </pfx52:Status>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="../pfx49:RequestStatus">
                                                    <pfx52:Status>
                                                        <xsl:value-of select="../pfx49:RequestStatus"/>
                                                    </pfx52:Status>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="pfx49:Amount">
                                            <pfx52:ItemAmount>
                                                <xsl:value-of select="pfx49:Amount"/>
                                            </pfx52:ItemAmount>
                                        </xsl:if>
                                        <xsl:if test="pfx49:ProductType">
                                            <pfx52:CBiO2ItemType>
                                                <xsl:value-of select="pfx49:ProductType"/>
                                            </pfx52:CBiO2ItemType>
                                        </xsl:if>
                                        <xsl:if test="string-length((../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_ExecutionStatus&quot;]/pfx49:Value))>0">
                                            <pfx52:CBiO2ExecuteStatus>
                                                <xsl:value-of select="(../pfx49:Params/pfx49:Param[pfx49:Name=&quot;Recharge_ExecutionStatus&quot;]/pfx49:Value)"/>
                                            </pfx52:CBiO2ExecuteStatus>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:RequestStatus =(&quot;Failed&quot;,&quot;Pending&quot;,&quot;PartiallySuccessful&quot;)">
                                                <pfx52:ErrorCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorCode>
                                                <pfx52:ErrorMessage>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                </pfx52:ErrorMessage>
                                                <pfx52:ErrorType>
                                                    <xsl:value-of select="&quot;2&quot;"/>
                                                </pfx52:ErrorType>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value">
                                                    <pfx52:Error_SourceSystem>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorSource&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_SourceSystem>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrCode>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorCode&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrCode>
                                                </xsl:if>
                                                <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value">
                                                    <pfx52:Error_UserErrDesc>
                                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name=&quot;ErrorDesc&quot;]/pfx49:Value"/>
                                                    </pfx52:Error_UserErrDesc>
                                                </xsl:if>
                                            </xsl:when>
                                        </xsl:choose>
                                    </pfx52:OrderEntry-LineItems>
                                </xsl:for-each>
                            </pfx52:ListOfOrderEntry-LineItems>
                            <pfx52:ListOfPayments>
                                <pfx52:Payments>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber">
                                        <pfx52:CreditCardNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber"/>
                                        </pfx52:CreditCardNo>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                                <pfx52:AuthorizationCode>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                                </pfx52:AuthorizationCode>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:AuthorizationCode>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:AuthorizationCode"/>
                                            </pfx52:AuthorizationCode>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:AuthorizeCredit='true'">
                                            <pfx52:CBiO2AuthorizeCredit>
                                                <xsl:value-of select="1"/>
                                            </pfx52:CBiO2AuthorizeCredit>
                                        </xsl:when>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel">
                                        <pfx52:CBiO2Channel>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaySalesChannel"/>
                                        </pfx52:CBiO2Channel>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference))>0">
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference">
                                                <pfx52:CBiO2ExtTransactionRef>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TransactionReference"/>
                                                </pfx52:CBiO2ExtTransactionRef>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID">
                                        <pfx52:CBiO2MerchantId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MerchantId>
                                    </xsl:if>
                                    <pfx52:CBiO2PaymentDateTime>
                                        <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss',tib:parse-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;,(current-dateTime())))"/>
                                    </pfx52:CBiO2PaymentDateTime>
                                    <pfx52:CBiO2ReceiptNo>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:ReceiptNumber"/>
                                    </pfx52:CBiO2ReceiptNo>
                                    <pfx52:CBiO2ShopId>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2ShopId>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID">
                                        <pfx52:CBiO2TerminalId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:TerminalID"/>
                                        </pfx52:CBiO2TerminalId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName">
                                        <pfx52:CBiO2Username2>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:UserName"/>
                                        </pfx52:CBiO2Username2>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='Corp_Voucher_Number' or pfx49:Name='CORP_VOUCHER_NUMBER']/pfx49:Value">
                                        <pfx52:CBiO2VoucherNumber>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='Corp_Voucher_Number' or pfx49:Name='CORP_VOUCHER_NUMBER']/pfx49:Value"/>
                                        </pfx52:CBiO2VoucherNumber>
                                    </xsl:if>
                                    <pfx52:CBiO2WorkArea>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='WORKAREA']/pfx49:Value"/>
                                    </pfx52:CBiO2WorkArea>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName">
                                        <pfx52:CardHolder>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:HolderName"/>
                                        </pfx52:CardHolder>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="tib:pad-front(tib:get-month-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)), '2', '0')"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx52:ExpirationMonth>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx52:ExpirationMonth>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate)and &#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))>0">
                                            <pfx52:ExpirationYear>
                                                <xsl:value-of select="tib:get-year-from-date(tib:parse-date(&quot;MMyyyy&quot;,$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate))"/>
                                            </pfx52:ExpirationYear>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate">
                                                <pfx52:ExpirationYear>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:ExpiryDate"/>
                                                </pfx52:ExpirationYear>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank">
                                        <pfx52:IssuingBankName>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:IssuingBank"/>
                                        </pfx52:IssuingBankName>
                                    </xsl:if>
                                    <pfx52:PaymentDate>
                                        <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date(&quot;yyyy-MM-dd&quot;,(current-date())))"/>
                                    </pfx52:PaymentDate>
                                    <pfx52:PaymentMethod>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:PaymentMethod"/>
                                    </pfx52:PaymentMethod>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount">
                                        <pfx52:TransactionAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:TotalAmount"/>
                                        </pfx52:TransactionAmount>
                                    </xsl:if>
                                    <pfx52:CBiO2PayDesk>
                                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name='PAYDESK']/pfx49:Value"/>
                                    </pfx52:CBiO2PayDesk>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode">
                                        <pfx52:CBiO2MrchntAcquireResCode>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AcquirerResponseCode"/>
                                        </pfx52:CBiO2MrchntAcquireResCode>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount">
                                        <pfx52:CBiO2MrchntAmount>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TotalAmount"/>
                                        </pfx52:CBiO2MrchntAmount>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID">
                                        <pfx52:CBiO2MrchntAuthorizationId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationID"/>
                                        </pfx52:CBiO2MrchntAuthorizationId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus">
                                        <pfx52:CBiO2MrchntAuthorizationStatus>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:AuthorizationStatus"/>
                                        </pfx52:CBiO2MrchntAuthorizationStatus>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType">
                                            <pfx52:CBiO2CardType>
                                                <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardType"/>
                                            </pfx52:CBiO2CardType>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value">
                                                <pfx52:CBiO2CardType>
                                                    <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Params/pfx49:Param[pfx49:Name = &quot;LOW&quot;]/pfx49:Value"/>
                                                </pfx52:CBiO2CardType>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID">
                                        <pfx52:CBiO2MrchntId>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:MerchantID"/>
                                        </pfx52:CBiO2MrchntId>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo">
                                        <pfx52:CBiO2MrchntOrderInfo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:OrderInfo"/>
                                        </pfx52:CBiO2MrchntOrderInfo>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber">
                                        <pfx52:CBiO2MrchntRecieptNo>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ReceiptNumber"/>
                                        </pfx52:CBiO2MrchntRecieptNo>
                                    </xsl:if>
                                    <xsl:if test="exists($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate)&#xA;and&#xA;string-length(tib:trim($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate))>0">
                                        <pfx52:CBiO2MrchntSettlementDate>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:SettlementDate"/>
                                        </pfx52:CBiO2MrchntSettlementDate>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference">
                                        <pfx52:CBiO2MrchntShoppingTranRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:ShoppingTransactionReference"/>
                                        </pfx52:CBiO2MrchntShoppingTranRef>
                                    </xsl:if>
                                    <xsl:if test="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference">
                                        <pfx52:CBiO2MrchntTransactionRef>
                                            <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:Authorization/pfx49:TransactionReference"/>
                                        </pfx52:CBiO2MrchntTransactionRef>
                                    </xsl:if>
                                </pfx52:Payments>
                            </pfx52:ListOfPayments>
                        </pfx52:OrderEntry-Orders>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx52:ListOfCbio2cashsalesio>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>536</pd:x>
        <pd:y>159</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/CRM_Target_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/External/CRMtoGW_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/External/CRMtoGW_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
            <InDataxsdString ref="pfx52:ListOfCbio2cashsalesio"/>
        </config>
        <pd:inputBindings>
            <ns7:ActivityInput>
                <destinationQueue>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/CRM_Target_Queue"/>
                </destinationQueue>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$SalesTransactionUpdate/group/TrackingId"/>
                    </TransactionID>
                </OtherProperties>
                <Body>
                    <pfx52:ListOfCbio2cashsalesio>
                        <xsl:copy-of select="$CDMToNative/pfx52:ListOfCbio2cashsalesio/pfx52:OrderEntry-Orders"/>
                    </pfx52:ListOfCbio2cashsalesio>
                </Body>
            </ns7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CRM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>417</pd:x>
        <pd:y>159</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$SalesTransactionUpdate/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$SalesTransactionUpdate/group/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($CDMToNative/pfx52:ListOfCbio2cashsalesio)"/>
                    </ns6:Transaction>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns6:AltKeyName>
                        <xsl:if test="$CDMToNative/pfx52:ListOfCbio2cashsalesio/pfx52:OrderEntry-Orders/pfx52:ListOfPayments/pfx52:Payments/pfx52:CreditCardNo">
                            <ns6:AltKeyValue>
                                <xsl:value-of select="$CDMToNative/pfx52:ListOfCbio2cashsalesio/pfx52:OrderEntry-Orders/pfx52:ListOfPayments/pfx52:Payments/pfx52:CreditCardNo"/>
                            </ns6:AltKeyValue>
                        </xsl:if>
                    </ns6:AltKey>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber,6),'XXXXXX',tib:right($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber,4))"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$SalesTransactionUpdate/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CRM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>700</pd:x>
        <pd:y>159</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Update/CreateSalesTransactiononJMS/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$SalesTransactionUpdate/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CustomerID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$SalesTransactionUpdate/group/CustomerString"/>
                    </ns6:Message>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns6:AltKeyName>
                        <xsl:if test="$CDMToNative/pfx52:ListOfCbio2cashsalesio/pfx52:OrderEntry-Orders/pfx52:ListOfPayments/pfx52:Payments/pfx52:CreditCardNo">
                            <ns6:AltKeyValue>
                                <xsl:value-of select="$CDMToNative/pfx52:ListOfCbio2cashsalesio/pfx52:OrderEntry-Orders/pfx52:ListOfPayments/pfx52:Payments/pfx52:CreditCardNo"/>
                            </ns6:AltKeyValue>
                        </xsl:if>
                    </ns6:AltKey>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber,6),'XXXXXX',tib:right($ParseCDMRequest/pfx49:CreateSalesTransaction/pfx49:CardDetails/pfx49:CardNumber,4))"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$SalesTransactionUpdate/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseCDMRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>183</pd:x>
        <pd:y>159</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx49:CreateSalesTransaction"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$SalesTransactionUpdate/group/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>184</pd:x>
        <pd:y>287</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SalesTransactionUpdate</pd:from>
        <pd:to>ParseCDMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CRM_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CRM_Request</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>Log_CRM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCDMRequest</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>Log_CRM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>