<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx50="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns51="www.tibco.com/createcustomer" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:pfx44="http://CreditTransfer.Services/" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:pfx45="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:pfx42="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:pfx43="http://www.zain.com/ZESB/Services/SalesOrder/Types" xmlns:pfx48="http://siebel.com/ExternalOrderCreate" xmlns:pfx49="http://www.tibco.com/ns/no_namespace_schema_location/testing/http---siebel.com-CustomUI_CBiO2ExternalMultiOrderProvisoningWS (2).WSDL.wsdl" xmlns:ns19="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/MultipleServiceOrder.xsd" xmlns:pfx46="http://siebel.com/CustomUI" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:pfx47="http://orm.zain.com/types/" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx40="http://www.zain.com/ZESB/Services/AuthorizeCredit" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:ns20="http://www.siebel.com/xml/RAFActionList" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns21="http://www.zain.com/ZESB/QUERY/ProductDetalis.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/SalesOrder/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/SalesOrder/SalesOrder.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <xsd:import namespace="http://CreditTransfer.Services/" schemaLocation="/BusinessWSDLS/Services/WSDLS/CreditTransfer/CreditTransferProvider.wsdl"/>
    <xsd:import namespace="http://orm.zain.com/types/" schemaLocation="/BusinessWSDLS/Services/WSDLS/ServiceOrder/ServiceOrderSoapHttpPort_multiple.wsdl"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalMultiOrderProvisoningWS.wsdl"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit" location="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <wsdl:import namespace="http://CreditTransfer.Services/" location="/BusinessWSDLS/Services/WSDLS/CreditTransfer/CreditTransferProvider.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/CBiO2ExternalMultiOrderProvisoningWS.wsdl"/>
    <pd:name>BusinessProcesses/Services/Provisioning/MultipleServiceOrder/HelperProcess/Call_MultipleOrder_BundleOrder.process</pd:name>
    <pd:startName>Call_MultipleOrder</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx47:processOrderListElement"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>60</pd:startX>
    <pd:startY>140</pd:startY>
    <pd:returnBindings>
        <pfx47:processOrderResponseListElement>
            <pfx47:result>
                <pfx47:resultCode>
                    <xsl:value-of select="if($SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:ErrorSourceErrCode=0) then&#xA;1&#xA; else if (string-length($SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:OrderNumber)>0) then&#xA;1 else 100"/>
                </pfx47:resultCode>
                <pfx47:paramList>
                    <pfx47:param>
                        <pfx47:name>
                            <xsl:value-of select="'ResultText'"/>
                        </pfx47:name>
                        <pfx47:value>
                            <xsl:value-of select="if(string-length($_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring)>0) then&#xA;$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring&#xA;else if($SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:ErrorSourceErrCode !=0) then&#xA;$SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:ErrorSourceErrDesc else &#xA;if (string-length($SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:OrderNumber)>0) then&#xA;&quot;Pending&quot; else&#xA;$_globalVariables/pfx9:GlobalVariables/CommonErrors/MiscErrorDesc"/>
                        </pfx47:value>
                    </pfx47:param>
                    <xsl:if test="string-length($SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:OrderNumber)>0">
                        <pfx47:param>
                            <pfx47:name>
                                <xsl:value-of select="'OrderId'"/>
                            </pfx47:name>
                            <pfx47:value>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx46:CreateMultipleOrder_Output/pfx46:OrderNumber"/>
                            </pfx47:value>
                        </pfx47:param>
                    </xsl:if>
                </pfx47:paramList>
            </pfx47:result>
        </pfx47:processOrderResponseListElement>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx47:processOrderResponseListElement"/>
    <pd:endX>1847</pd:endX>
    <pd:endY>178</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>1209</pd:x>
        <pd:y>1</pd:y>
        <pd:width>335</pd:width>
        <pd:height>330</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Timeout</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>contains($_error/ns8:ErrorReport/Class,'ActivityTimedOutException')
or
contains($_error/ns8:ErrorReport/Class,'HttpCommunicationException')</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechnicalError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>1464</pd:x>
            <pd:y>256</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/CommonSettings/JMSTimeOuts/Timeout_Regular_Wait"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1353</pd:x>
            <pd:y>188</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="GenerateTechnicalError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>1319</pd:x>
            <pd:y>258</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SblSoapErrorDec"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SBLSoapErrorCode"/>
                    </messageCode>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPRequestReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>1359</pd:x>
            <pd:y>82</pd:y>
            <config>
                <timeout>0</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <timeoutType>Seconds</timeoutType>
                <service>pfx46:CBiO2ExternalMultiOrderProvisoningWS</service>
                <servicePort>CBiO2_spcExternal_spcMultiOrder_spcProvisoning_spcWF</servicePort>
                <operation>CreateMultipleOrder</operation>
                <soapAction>document/http://siebel.com/CustomUI:CreateMultipleOrder</soapAction>
                <endpointURL>http://10.96.108.10:7777/</endpointURL>
                <authScheme>BASIC</authScheme>
                <requireBasicAuth>true</requireBasicAuth>
                <basicHttpAuthIdentity>/CommonResources/Identities/CRM_Identity.id</basicHttpAuthIdentity>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <xsl:copy-of select="$CRMReqMapping/pfx46:CreateMultipleOrder_Input"/>
                    <ns13:_configData>
                        <endpointURL>
                            <xsl:value-of select="concat($_globalVariables/pfx9:GlobalVariables/CommonResources/Connections/SOAP/External/CRM/CRM_HTTP/SOAPURI,$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/CRM_URL)"/>
                        </endpointURL>
                        <TransportProperties>
                            <Headers>
                                <Accept-Encoding>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </Accept-Encoding>
                            </Headers>
                        </TransportProperties>
                    </ns13:_configData>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Device-Map-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>486</pd:x>
        <pd:y>280</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <xsl:variable name="CurrServtype" select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:SERVICE_TYPE"/>
                <xsl:variable name="PromotionId" select="$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset/row/column[name='PROMOTION_ID']/value"/>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="&quot;Main Service&quot;"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="&quot;&quot;"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="if(string-length($Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ProductId)>0)&#xA;then&#xA;$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ProductId&#xA;else&#xA;$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset/row/column[name='PROD_ID']/value"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="&quot;WEB&quot;"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="if(string-length($Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId)>0)&#xA;then&#xA;$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId&#xA;else&#xA;$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset/row/column[name='PROMOTION_ID']/value"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:session/pfx47:username"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:msisdn"/>
                </pfx46:SubscriberNumber>
                <pfx46:SkipCommitmentCarryover>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                </pfx46:SkipCommitmentCarryover>
                <ns20:ListOfServiceDetails>
                    <xsl:for-each select="$Map-Data/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions">
                        <ns20:RAFActions>
                            <xsl:variable name="CurrServiceCode" select="current()/ns20:ProductId"/>
                            <xsl:variable name="position" select="position()"/>
                            <xsl:variable name="positionafter" select="$position +1"/>
                            <ns20:ProductId>
                                <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$PromotionId=ns19:CRM_PROMO_ID and ns19:TABS_EQUIP_ID=$CurrServiceCode]/ns19:CRM_PRODUCT_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$PromotionId=ns19:CRM_PROMO_ID and ns19:TABS_EQUIP_ID=$CurrServiceCode]/ns19:CRM_PRODUCT_ID&#xA;else&#xA;current()/ns20:ProductId"/>
                            </ns20:ProductId>
                            <xsl:if test="current()/ns20:ServiceId&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}">
                                <ns20:ServiceId>
                                    <xsl:value-of select="current()/ns20:ServiceId&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}"/>
                                </ns20:ServiceId>
                            </xsl:if>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE">
                                <ns20:LineType>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE"/>
                                </ns20:LineType>
                            </xsl:if>
                            <ns20:Operation>
                                <xsl:value-of select="current()/ns20:Operation"/>
                            </ns20:Operation>
                            <ns20:PrimaryDevice>
                                <xsl:value-of select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE = 'Primary Device')&#xA;then&#xA;'Y'&#xA;else&#xA;'N'"/>
                            </ns20:PrimaryDevice>
                            <ns20:ParentProduct>
                                <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PRODUCT_ID"/>
                            </ns20:ParentProduct>
                            <ns20:AttributeName>
                                <xsl:value-of select="concat($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_NAME,current()/ns20:AttributeName)"/>
                            </ns20:AttributeName>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE">
                                <ns20:AttributeValue>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE"/>
                                </ns20:AttributeValue>
                            </xsl:if>
                        </ns20:RAFActions>
                    </xsl:for-each>
                </ns20:ListOfServiceDetails>
                <pfx46:TransactionId>
                    <xsl:value-of select="$Call_MultipleOrder/group/TrackingId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Device-Map-2">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>580</pd:x>
        <pd:y>279</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Device-Map-1/pfx46:CreateMultipleOrder_Input">
                <pfx46:CreateMultipleOrder_Input>
                    <pfx46:ServiceLineType>
                        <xsl:value-of select="pfx46:ServiceLineType"/>
                    </pfx46:ServiceLineType>
                    <pfx46:ServiceCommitment>
                        <xsl:value-of select="pfx46:ServiceCommitment"/>
                    </pfx46:ServiceCommitment>
                    <pfx46:ProductId>
                        <xsl:value-of select="pfx46:ProductId"/>
                    </pfx46:ProductId>
                    <pfx46:Channel>
                        <xsl:value-of select="pfx46:Channel"/>
                    </pfx46:Channel>
                    <pfx46:PromotionId>
                        <xsl:value-of select="pfx46:PromotionId"/>
                    </pfx46:PromotionId>
                    <pfx46:UserName>
                        <xsl:value-of select="pfx46:UserName"/>
                    </pfx46:UserName>
                    <pfx46:SubscriberNumber>
                        <xsl:value-of select="pfx46:SubscriberNumber"/>
                    </pfx46:SubscriberNumber>
                    <pfx46:SkipCommitmentCarryover>
                        <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                    </pfx46:SkipCommitmentCarryover>
                    <xsl:for-each select="ns20:ListOfServiceDetails">
                        <ns20:ListOfServiceDetails>
                            <xsl:for-each select="ns20:RAFActions">
                                <ns20:RAFActions>
                                    <xsl:if test="ns20:ProductId">
                                        <ns20:ProductId>
                                            <xsl:value-of select="ns20:ProductId"/>
                                        </ns20:ProductId>
                                    </xsl:if>
                                    <xsl:if test="ns20:ServiceId">
                                        <ns20:ServiceId>
                                            <xsl:value-of select="ns20:ServiceId"/>
                                        </ns20:ServiceId>
                                    </xsl:if>
                                    <xsl:if test="ns20:LineType">
                                        <ns20:LineType>
                                            <xsl:value-of select="ns20:LineType"/>
                                        </ns20:LineType>
                                    </xsl:if>
                                    <xsl:if test="ns20:Operation">
                                        <ns20:Operation>
                                            <xsl:value-of select="ns20:Operation"/>
                                        </ns20:Operation>
                                    </xsl:if>
                                    <xsl:if test="ns20:PrimaryDevice">
                                        <ns20:PrimaryDevice>
                                            <xsl:value-of select="ns20:PrimaryDevice"/>
                                        </ns20:PrimaryDevice>
                                    </xsl:if>
                                    <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_PCKG_ID=current()/ns20:ProductId and ns19:CRM_PROMO_ID=$Device-Map-1/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId]/ns19:CRM_PCKG_ID">
                                        <ns20:ParentProduct>
                                            <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_PCKG_ID=current()/ns20:ProductId and ns19:CRM_PROMO_ID=$Device-Map-1/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId]/ns19:CRM_PCKG_ID"/>
                                        </ns20:ParentProduct>
                                    </xsl:if>
                                    <xsl:if test="ns20:AttributeName">
                                        <ns20:AttributeName>
                                            <xsl:value-of select="ns20:AttributeName"/>
                                        </ns20:AttributeName>
                                    </xsl:if>
                                    <xsl:if test="ns20:AttributeValue">
                                        <ns20:AttributeValue>
                                            <xsl:value-of select="ns20:AttributeValue"/>
                                        </ns20:AttributeValue>
                                    </xsl:if>
                                </ns20:RAFActions>
                            </xsl:for-each>
                        </ns20:ListOfServiceDetails>
                    </xsl:for-each>
                    <pfx46:TransactionId>
                        <xsl:value-of select="pfx46:TransactionId"/>
                    </pfx46:TransactionId>
                </pfx46:CreateMultipleOrder_Input>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Final-Device-Map">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>683</pd:x>
        <pd:y>277</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Device-Map-1/pfx46:CreateMultipleOrder_Input">
                <pfx46:CreateMultipleOrder_Input>
                    <xsl:variable name="currPromoId" select="pfx46:PromotionId"/>
                    <pfx46:ServiceLineType>
                        <xsl:value-of select="pfx46:ServiceLineType"/>
                    </pfx46:ServiceLineType>
                    <pfx46:ServiceCommitment>
                        <xsl:value-of select="pfx46:ServiceCommitment"/>
                    </pfx46:ServiceCommitment>
                    <pfx46:ProductId>
                        <xsl:value-of select="pfx46:ProductId"/>
                    </pfx46:ProductId>
                    <pfx46:Channel>
                        <xsl:value-of select="pfx46:Channel"/>
                    </pfx46:Channel>
                    <pfx46:PromotionId>
                        <xsl:value-of select="pfx46:PromotionId"/>
                    </pfx46:PromotionId>
                    <pfx46:UserName>
                        <xsl:value-of select="pfx46:UserName"/>
                    </pfx46:UserName>
                    <pfx46:SubscriberNumber>
                        <xsl:value-of select="pfx46:SubscriberNumber"/>
                    </pfx46:SubscriberNumber>
                    <pfx46:SkipCommitmentCarryover>
                        <xsl:value-of select="$Device-Map-2/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                    </pfx46:SkipCommitmentCarryover>
                    <ns20:ListOfServiceDetails>
                        <xsl:for-each select="$Device-Map-1/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions">
                            <xsl:variable name="position" select="position()"/>
                            <xsl:variable name="item" select="$Device-Map-2/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions[$position+1]"/>
                            <ns20:RAFActions>
                                <xsl:variable name="CurrentServiceId" select="current()/ns20:ServiceId"/>
                                <xsl:variable name="CurrLineType" select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE) >0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE&#xA;else&#xA;current()/ns20:LineType"/>
                                <xsl:variable name="tabsEquip" select="substring-after(current()/ns20:AttributeName,'XX')"/>
                                <xsl:if test="ns20:ProductId">
                                    <ns20:ProductId>
                                        <xsl:value-of select="ns20:ProductId"/>
                                    </ns20:ProductId>
                                </xsl:if>
                                <ns20:ServiceId>
                                    <xsl:value-of select="ns20:ServiceId"/>
                                </ns20:ServiceId>
                                <ns20:LineType>
                                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE) >0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE&#xA;else&#xA;current()/ns20:LineType"/>
                                </ns20:LineType>
                                <xsl:if test="ns20:Operation">
                                    <ns20:Operation>
                                        <xsl:value-of select="ns20:Operation"/>
                                    </ns20:Operation>
                                </xsl:if>
                                <ns20:PrimaryDevice>
                                    <xsl:value-of select="if($CurrLineType = 'Primary Device')&#xA;then&#xA;&quot;Y&quot;&#xA;else  if($CurrLineType = 'Secondary Device')&#xA;then&#xA;&quot;N&quot;&#xA;else&#xA;&quot;N&quot;"/>
                                </ns20:PrimaryDevice>
                                <ns20:ParentProduct>
                                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX') and ns19:TABS_PCKG_ID= $item/ns20:ProductId]/ns19:CRM_PCKG_ID)>0)&#xA;&#x9;&#x9;&#x9;then  $GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX') and ns19:TABS_PCKG_ID= $item/ns20:ProductId and ns19:CRM_PROMO_ID=$currPromoId]/ns19:CRM_PCKG_ID&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ns20:ParentProduct"/>
                                </ns20:ParentProduct>
                                <ns20:AttributeName>
                                    <xsl:value-of select="substring-before(ns20:AttributeName,'XX')"/>
                                </ns20:AttributeName>
                                <xsl:if test="ns20:AttributeValue">
                                    <ns20:AttributeValue>
                                        <xsl:value-of select="ns20:AttributeValue"/>
                                    </ns20:AttributeValue>
                                </xsl:if>
                            </ns20:RAFActions>
                        </xsl:for-each>
                    </ns20:ListOfServiceDetails>
                    <pfx46:TransactionId>
                        <xsl:value-of select="pfx46:TransactionId"/>
                    </pfx46:TransactionId>
                </pfx46:CreateMultipleOrder_Input>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Final-Map">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>584</pd:x>
        <pd:y>55</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Map-Data-1/pfx46:CreateMultipleOrder_Input">
                <pfx46:CreateMultipleOrder_Input>
                    <xsl:variable name="currPromoId" select="pfx46:PromotionId"/>
                    <pfx46:ServiceLineType>
                        <xsl:value-of select="pfx46:ServiceLineType"/>
                    </pfx46:ServiceLineType>
                    <pfx46:ServiceCommitment>
                        <xsl:value-of select="pfx46:ServiceCommitment"/>
                    </pfx46:ServiceCommitment>
                    <pfx46:ProductId>
                        <xsl:value-of select="pfx46:ProductId"/>
                    </pfx46:ProductId>
                    <pfx46:Channel>
                        <xsl:value-of select="pfx46:Channel"/>
                    </pfx46:Channel>
                    <pfx46:PromotionId>
                        <xsl:value-of select="pfx46:PromotionId"/>
                    </pfx46:PromotionId>
                    <pfx46:UserName>
                        <xsl:value-of select="pfx46:UserName"/>
                    </pfx46:UserName>
                    <pfx46:SubscriberNumber>
                        <xsl:value-of select="pfx46:SubscriberNumber"/>
                    </pfx46:SubscriberNumber>
                    <pfx46:SkipCommitmentCarryover>
                        <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                    </pfx46:SkipCommitmentCarryover>
                    <ns20:ListOfServiceDetails>
                        <xsl:for-each select="$Map-Data/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions">
                            <xsl:variable name="position" select="position()"/>
                            <xsl:variable name="item" select="$Map-Data-1/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions[$position+1]"/>
                            <ns20:RAFActions>
                                <xsl:variable name="CurrentServiceId" select="current()/ns20:ServiceId"/>
                                <xsl:variable name="CurrLineType" select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE) >0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE&#xA;else&#xA;current()/ns20:LineType"/>
                                <xsl:if test="ns20:ProductId">
                                    <ns20:ProductId>
                                        <xsl:value-of select="ns20:ProductId"/>
                                    </ns20:ProductId>
                                </xsl:if>
                                <ns20:ServiceId>
                                    <xsl:value-of select="ns20:ServiceId"/>
                                </ns20:ServiceId>
                                <ns20:LineType>
                                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE) >0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$item/ns20:ProductId=ns19:TABS_PCKG_ID and ns19:CRM_PROMO_ID=$currPromoId]/ns19:SERVICE_TYPE&#xA;else&#xA;current()/ns20:LineType"/>
                                </ns20:LineType>
                                <xsl:if test="ns20:Operation">
                                    <ns20:Operation>
                                        <xsl:value-of select="ns20:Operation"/>
                                    </ns20:Operation>
                                </xsl:if>
                                <ns20:PrimaryDevice>
                                    <xsl:value-of select="if($CurrLineType = 'Primary Device')&#xA;then&#xA;&quot;Y&quot;&#xA;else  if($CurrLineType = 'Secondary Device')&#xA;then&#xA;&quot;N&quot;&#xA;else&#xA;&quot;N&quot;"/>
                                </ns20:PrimaryDevice>
                                <ns20:ParentProduct>
                                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX') and ns19:TABS_PCKG_ID= $item/ns20:ProductId]/ns19:CRM_PCKG_ID)>0)&#xA;&#x9;&#x9;&#x9;then  $GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX') and ns19:TABS_PCKG_ID= $item/ns20:ProductId and ns19:CRM_PROMO_ID=$currPromoId]/ns19:CRM_PCKG_ID&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ns20:ParentProduct"/>
                                </ns20:ParentProduct>
                                <ns20:AttributeName>
                                    <xsl:value-of select="ns20:AttributeName"/>
                                </ns20:AttributeName>
                                <xsl:if test="ns20:AttributeValue">
                                    <ns20:AttributeValue>
                                        <xsl:value-of select="ns20:AttributeValue"/>
                                    </ns20:AttributeValue>
                                </xsl:if>
                            </ns20:RAFActions>
                        </xsl:for-each>
                    </ns20:ListOfServiceDetails>
                    <pfx46:TransactionId>
                        <xsl:value-of select="pfx46:TransactionId"/>
                    </pfx46:TransactionId>
                </pfx46:CreateMultipleOrder_Input>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1695</pd:x>
        <pd:y>405</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SOAPErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/SOAPErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1529</pd:x>
        <pd:y>447</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetMultipleOrder">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>165</pd:x>
        <pd:y>50</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/MultipleServiceOrder.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1112</pd:x>
        <pd:y>171</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Call_MultipleOrder/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="concat(&quot;ParseRequest-->&quot;,$ParseRequest/pfx47:processOrderListElement,&quot;&lt;--&quot;,&quot;Map-Data-->&quot;,$Map-Data/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;,&quot;Map-data-1--->&quot;,$Map-Data-1/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;,&quot;Final-Map-->&quot;,$Final-Map/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;,&#xA;       &quot;SQL-Direct-->&quot;,$SQL-Direct/jdbcGeneralActivityOutput,&quot;&lt;--&quot;,&quot;Device-Map-1-->&quot;,$Device-Map-1/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;,&quot;Device-Map-2-->&quot;,$Device-Map-2/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;,&quot;Final-Device-Map-->&quot;,$Final-Device-Map/pfx46:CreateMultipleOrder_Input,&quot;&lt;--&quot;)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="concat(tib:render-xml($Map-final-Request/pfx46:CreateMultipleOrder_Input),tib:render-xml($Map-Device-Final-Request/pfx46:CreateMultipleOrder_Input),tib:render-xml($OnlyOffers/pfx46:CreateMultipleOrder_Input),&#xA;&quot;BundleOrderMapping-->&quot;,tib:render-xml($CRMReqMapping/pfx46:CreateMultipleOrder_Input))"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$Call_MultipleOrder/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1678</pd:x>
        <pd:y>175</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Call_MultipleOrder/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$Call_MultipleOrder/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>359</pd:x>
        <pd:y>53</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <xsl:variable name="CurrServtype" select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:SERVICE_TYPE"/>
                <xsl:variable name="PromotionId" select="if(string-length($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[contains(pfx47:serviceCode,'PRM_')]/pfx47:serviceCode)>0)&#xA;then&#xA;substring-after($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[contains(pfx47:serviceCode,'PRM_')]/pfx47:serviceCode,'PRM_')&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PROMO_ID"/>
                <xsl:variable name="ProductId" select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID]/ns19:TABS_PCKG_ID='MY')&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PRODUCT_ID&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='Y']/ns19:CRM_PRODUCT_ID"/>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='Y']/ns19:CRM_PRODUCT_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='Y']/ns19:SERVICE_TYPE&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:SERVICE_TYPE"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:ATTRIBUTE_NAME = 'Commitment')&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:ATTRIBUTE_VALUE&#xA;else&#xA;&quot;&quot;"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="$ProductId"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/ChannelName"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="$PromotionId"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:session/pfx47:username"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:msisdn"/>
                </pfx46:SubscriberNumber>
                <xsl:choose>
                    <xsl:when test="{-- CR-22-001 Skip Commitment Carryover --}&#xA;string-length($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:paramList/pfx47:param[upper-case(pfx47:name)=&quot;SKIPCOMMITMENTCARRYOVER&quot;]/pfx47:name)>0">
                        <pfx46:SkipCommitmentCarryover>
                            <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:paramList/pfx47:param[upper-case(pfx47:name)=&quot;SKIPCOMMITMENTCARRYOVER&quot;]/pfx47:value"/>
                        </pfx46:SkipCommitmentCarryover>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx46:SkipCommitmentCarryover>
                            <xsl:value-of select="&quot;&quot;"/>
                        </pfx46:SkipCommitmentCarryover>
                    </xsl:otherwise>
                </xsl:choose>
                <ns20:ListOfServiceDetails>
                    <xsl:for-each select="{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[pfx47:serviceCode!='PRM']--}&#xA;$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[not(contains(pfx47:serviceCode,'PRM')) and count(pfx47:paramList/pfx47:param[pfx47:name='BundleId'])=0 ]">
                        <ns20:RAFActions>
                            <xsl:variable name="CurrServiceCode" select="current()/pfx47:serviceCode"/>
                            <ns20:ProductId>
                                <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode  and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PRODUCT_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode  and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PRODUCT_ID&#xA;else&#xA;current()/pfx47:serviceCode"/>
                            </ns20:ProductId>
                            <xsl:if test="current()/pfx47:serialNumber&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}">
                                <ns20:ServiceId>
                                    <xsl:value-of select="current()/pfx47:serialNumber&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}"/>
                                </ns20:ServiceId>
                            </xsl:if>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE">
                                <ns20:LineType>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE"/>
                                </ns20:LineType>
                            </xsl:if>
                            <ns20:Operation>
                                <xsl:value-of select="if((current()/pfx47:orderType='Subscribe')  or (current()/pfx47:orderType='SUBSCRIBE'))&#xA;then&#xA;&quot;Add&quot;&#xA;else&#xA;&quot;Remove&quot;"/>
                            </ns20:Operation>
                            <ns20:PrimaryDevice>
                                <xsl:value-of select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE = 'Primary Device')&#xA;then&#xA;'Y'&#xA;else&#xA;'N'"/>
                            </ns20:PrimaryDevice>
                            <xsl:if test="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PRODUCT_ID">
                                <ns20:ParentProduct>
                                    <xsl:value-of select="if(string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID)>0)&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PRODUCT_ID"/>
                                </ns20:ParentProduct>
                            </xsl:if>
                            <ns20:AttributeName>
                                <xsl:value-of select="concat($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_NAME,'XX',current()/pfx47:serviceCode)"/>
                            </ns20:AttributeName>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE">
                                <ns20:AttributeValue>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE"/>
                                </ns20:AttributeValue>
                            </xsl:if>
                        </ns20:RAFActions>
                    </xsl:for-each>
                </ns20:ListOfServiceDetails>
                <pfx46:TransactionId>
                    <xsl:value-of select="$Call_MultipleOrder/group/TrackingId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>477</pd:x>
        <pd:y>53</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <xsl:variable name="CurrServtype" select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:SERVICE_TYPE"/>
                <xsl:variable name="PromotionId" select="if(string-length($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[contains(pfx47:serviceCode,'PRM_')]/pfx47:serviceCode)>0)&#xA;then&#xA;substring-after($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[contains(pfx47:serviceCode,'PRM_')]/pfx47:serviceCode,'PRM_')&#xA;else&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:serviceCode=ns19:TABS_EQUIP_ID and ns19:TABS_PCKG_ID='MY']/ns19:CRM_PROMO_ID"/>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ServiceLineType"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:ATTRIBUTE_NAME = 'Commitment')&#xA;then&#xA;$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$Call_MultipleOrder/group/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[1]/pfx47:serviceCode]/ns19:ATTRIBUTE_VALUE&#xA;else&#xA;&quot;&quot;"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ProductId"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="&quot;WEB&quot;"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:session/pfx47:username"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$ParseRequest/pfx47:processOrderListElement/pfx47:msisdn"/>
                </pfx46:SubscriberNumber>
                <pfx46:SkipCommitmentCarryover>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                </pfx46:SkipCommitmentCarryover>
                <ns20:ListOfServiceDetails>
                    <xsl:for-each select="$Map-Data/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions">
                        <ns20:RAFActions>
                            <xsl:variable name="CurrServiceCode" select="substring-after(current()/ns20:AttributeName,'XX')"/>
                            <xsl:variable name="position" select="position()"/>
                            <xsl:variable name="positionafter" select="$position +1"/>
                            <ns20:ProductId>
                                <xsl:value-of select="current()/ns20:ProductId"/>
                            </ns20:ProductId>
                            <xsl:if test="current()/ns20:ServiceId&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}">
                                <ns20:ServiceId>
                                    <xsl:value-of select="current()/ns20:ServiceId&#xA;{--$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[current()]/pfx47:serialNumber--}"/>
                                </ns20:ServiceId>
                            </xsl:if>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE">
                                <ns20:LineType>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE"/>
                                </ns20:LineType>
                            </xsl:if>
                            <ns20:Operation>
                                <xsl:value-of select="current()/ns20:Operation"/>
                            </ns20:Operation>
                            <ns20:PrimaryDevice>
                                <xsl:value-of select="if($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:SERVICE_TYPE = 'Primary Device')&#xA;then&#xA;'Y'&#xA;else&#xA;'N'"/>
                            </ns20:PrimaryDevice>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID">
                                <ns20:ParentProduct>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:CRM_PCKG_ID"/>
                                </ns20:ParentProduct>
                            </xsl:if>
                            <ns20:AttributeName>
                                <xsl:value-of select="concat($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_NAME,'XX',$CurrServiceCode)"/>
                            </ns20:AttributeName>
                            <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE">
                                <ns20:AttributeValue>
                                    <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:TABS_EQUIP_ID=$CurrServiceCode and ns19:CRM_PROMO_ID=$PromotionId]/ns19:ATTRIBUTE_VALUE"/>
                                </ns20:AttributeValue>
                            </xsl:if>
                        </ns20:RAFActions>
                    </xsl:for-each>
                </ns20:ListOfServiceDetails>
                <pfx46:TransactionId>
                    <xsl:value-of select="$Call_MultipleOrder/group/TrackingId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Device-Final-Request">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>791</pd:x>
        <pd:y>279</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Final-Device-Map/pfx46:CreateMultipleOrder_Input">
                <pfx46:CreateMultipleOrder_Input>
                    <pfx46:ServiceLineType>
                        <xsl:value-of select="pfx46:ServiceLineType"/>
                    </pfx46:ServiceLineType>
                    <pfx46:ServiceCommitment>
                        <xsl:value-of select="pfx46:ServiceCommitment"/>
                    </pfx46:ServiceCommitment>
                    <pfx46:ProductId>
                        <xsl:value-of select="pfx46:ProductId"/>
                    </pfx46:ProductId>
                    <pfx46:Channel>
                        <xsl:value-of select="pfx46:Channel"/>
                    </pfx46:Channel>
                    <pfx46:PromotionId>
                        <xsl:value-of select="pfx46:PromotionId"/>
                    </pfx46:PromotionId>
                    <pfx46:UserName>
                        <xsl:value-of select="pfx46:UserName"/>
                    </pfx46:UserName>
                    <pfx46:SubscriberNumber>
                        <xsl:value-of select="pfx46:SubscriberNumber"/>
                    </pfx46:SubscriberNumber>
                    <pfx46:SkipCommitmentCarryover>
                        <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                    </pfx46:SkipCommitmentCarryover>
                    <xsl:for-each select="ns20:ListOfServiceDetails">
                        <ns20:ListOfServiceDetails>
                            <xsl:for-each select="ns20:RAFActions">
                                <xsl:if test="string-length(current()/ns20:ServiceId)!=0">
                                    <ns20:RAFActions>
                                        <xsl:if test="ns20:ProductId">
                                            <ns20:ProductId>
                                                <xsl:value-of select="ns20:ProductId"/>
                                            </ns20:ProductId>
                                        </xsl:if>
                                        <xsl:if test="ns20:ServiceId">
                                            <ns20:ServiceId>
                                                <xsl:value-of select="ns20:ServiceId"/>
                                            </ns20:ServiceId>
                                        </xsl:if>
                                        <xsl:if test="ns20:LineType">
                                            <ns20:LineType>
                                                <xsl:value-of select="ns20:LineType"/>
                                            </ns20:LineType>
                                        </xsl:if>
                                        <xsl:if test="ns20:Operation">
                                            <ns20:Operation>
                                                <xsl:value-of select="ns20:Operation"/>
                                            </ns20:Operation>
                                        </xsl:if>
                                        <xsl:if test="ns20:PrimaryDevice">
                                            <ns20:PrimaryDevice>
                                                <xsl:value-of select="ns20:PrimaryDevice"/>
                                            </ns20:PrimaryDevice>
                                        </xsl:if>
                                        <xsl:if test="ns20:ParentProduct">
                                            <ns20:ParentProduct>
                                                <xsl:value-of select="ns20:ParentProduct"/>
                                            </ns20:ParentProduct>
                                        </xsl:if>
                                        <xsl:if test="ns20:AttributeName">
                                            <ns20:AttributeName>
                                                <xsl:value-of select="ns20:AttributeName"/>
                                            </ns20:AttributeName>
                                        </xsl:if>
                                        <xsl:if test="ns20:AttributeValue">
                                            <ns20:AttributeValue>
                                                <xsl:value-of select="ns20:AttributeValue"/>
                                            </ns20:AttributeValue>
                                        </xsl:if>
                                    </ns20:RAFActions>
                                </xsl:if>
                            </xsl:for-each>
                        </ns20:ListOfServiceDetails>
                    </xsl:for-each>
                    <pfx46:TransactionId>
                        <xsl:value-of select="pfx46:TransactionId"/>
                    </pfx46:TransactionId>
                </pfx46:CreateMultipleOrder_Input>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-final-Request">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>713</pd:x>
        <pd:y>56</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ServiceLineType"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ServiceCommitment"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ProductId"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:Channel"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:UserName"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:SubscriberNumber"/>
                </pfx46:SubscriberNumber>
                <pfx46:SkipCommitmentCarryover>
                    <xsl:value-of select="$Final-Map/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                </pfx46:SkipCommitmentCarryover>
                <ns20:ListOfServiceDetails>
                    <xsl:for-each select="$Final-Map/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions[ns20:LineType!='Main Service' and ../../pfx46:ProductId !=ns20:ProductId]">
                        <xsl:if test="1=1">
                            <xsl:if test="2=2">
                                <xsl:if test="string-length($GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PRODUCT_ID=current()/ns20:ProductId]/ns19:CRM_PRODUCT_ID)>0">
                                    <ns20:RAFActions>
                                        <xsl:if test="ns20:ProductId">
                                            <ns20:ProductId>
                                                <xsl:value-of select="ns20:ProductId"/>
                                            </ns20:ProductId>
                                        </xsl:if>
                                        <xsl:if test="ns20:ServiceId">
                                            <ns20:ServiceId>
                                                <xsl:value-of select="ns20:ServiceId"/>
                                            </ns20:ServiceId>
                                        </xsl:if>
                                        <xsl:if test="ns20:LineType">
                                            <ns20:LineType>
                                                <xsl:value-of select="ns20:LineType"/>
                                            </ns20:LineType>
                                        </xsl:if>
                                        <xsl:if test="ns20:Operation">
                                            <ns20:Operation>
                                                <xsl:value-of select="ns20:Operation"/>
                                            </ns20:Operation>
                                        </xsl:if>
                                        <xsl:if test="ns20:PrimaryDevice">
                                            <ns20:PrimaryDevice>
                                                <xsl:value-of select="ns20:PrimaryDevice"/>
                                            </ns20:PrimaryDevice>
                                        </xsl:if>
                                        <xsl:if test="ns20:ParentProduct">
                                            <ns20:ParentProduct>
                                                <xsl:value-of select="ns20:ParentProduct"/>
                                            </ns20:ParentProduct>
                                        </xsl:if>
                                        <ns20:AttributeName>
                                            <xsl:value-of select="substring-before(ns20:AttributeName,'XX')"/>
                                        </ns20:AttributeName>
                                        <xsl:if test="ns20:AttributeValue">
                                            <ns20:AttributeValue>
                                                <xsl:value-of select="ns20:AttributeValue"/>
                                            </ns20:AttributeValue>
                                        </xsl:if>
                                    </ns20:RAFActions>
                                </xsl:if>
                            </xsl:if>
                        </xsl:if>
                    </xsl:for-each>
                </ns20:ListOfServiceDetails>
                <pfx46:TransactionId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:TransactionId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="No-Promo-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>235</pd:x>
        <pd:y>404</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/ErrordescPromoId"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/MultipleServiceOrder/ErrorCodeDefualt"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>257</pd:x>
        <pd:y>97</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>364</pd:x>
        <pd:y>410</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>282</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>166</pd:x>
        <pd:y>141</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx47:processOrderListElement"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($Call_MultipleOrder/group/pfx47:processOrderListElement)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SQL Direct">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>361</pd:x>
        <pd:y>279</pd:y>
        <config>
            <timeout>20</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/External/SeibelLOVConnection.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <statement>
                    <xsl:value-of select="concat(&quot;SELECT T1.PROMOTION_ID,T3.PROD_ID FROM SIEBEL.S_ASSET T1,SIEBEL.S_ASSET T3,SIEBEL.S_PROD_INT T2 WHERE T1.SERIAL_NUM =  &quot;,&quot;'&quot;,$ParseRequest/pfx47:processOrderListElement/pfx47:msisdn,&quot;'&quot;,&quot; AND T1.STATUS_CD = 'Active' AND T1.X_CBIO2_SUBSCRIBER_FLG = 'Y' AND T3.PROD_ID =T2.ROW_ID (+) AND T2.X_CBIO2_MAINSERVICE = 'Y'  AND T3.X_CBIO2_SUBC_NUM = T1.X_CBIO2_SUBC_NUM (+) AND T3.status_cd = 'Active'&quot;)"/>
                </statement>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OnlyOffers">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>481</pd:x>
        <pd:y>158</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <xsl:variable name="PromoId" select="$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset[1]/row[1]/column[name='PROMOTION_ID']/value"/>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="&quot;Main Service&quot;"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ServiceCommitment"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset[1]/row[1]/column[name='PROD_ID']/value"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:Channel"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset[1]/row[1]/column[name='PROMOTION_ID']/value"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:UserName"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:SubscriberNumber"/>
                </pfx46:SubscriberNumber>
                <pfx46:SkipCommitmentCarryover>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                </pfx46:SkipCommitmentCarryover>
                <xsl:for-each select="$Map-Data/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails">
                    <ns20:ListOfServiceDetails>
                        <xsl:for-each select="ns20:RAFActions">
                            <ns20:RAFActions>
                                <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:CRM_PRODUCT_ID">
                                    <ns20:ProductId>
                                        <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:CRM_PRODUCT_ID"/>
                                    </ns20:ProductId>
                                </xsl:if>
                                <xsl:if test="ns20:ServiceId">
                                    <ns20:ServiceId>
                                        <xsl:value-of select="ns20:ServiceId"/>
                                    </ns20:ServiceId>
                                </xsl:if>
                                <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:SERVICE_TYPE">
                                    <ns20:LineType>
                                        <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:SERVICE_TYPE"/>
                                    </ns20:LineType>
                                </xsl:if>
                                <xsl:if test="ns20:Operation">
                                    <ns20:Operation>
                                        <xsl:value-of select="ns20:Operation"/>
                                    </ns20:Operation>
                                </xsl:if>
                                <xsl:if test="ns20:PrimaryDevice">
                                    <ns20:PrimaryDevice>
                                        <xsl:value-of select="ns20:PrimaryDevice"/>
                                    </ns20:PrimaryDevice>
                                </xsl:if>
                                <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:CRM_PCKG_ID">
                                    <ns20:ParentProduct>
                                        <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:CRM_PCKG_ID"/>
                                    </ns20:ParentProduct>
                                </xsl:if>
                                <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:ATTRIBUTE_NAME">
                                    <ns20:AttributeName>
                                        <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:ATTRIBUTE_NAME"/>
                                    </ns20:AttributeName>
                                </xsl:if>
                                <xsl:if test="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:ATTRIBUTE_VALUE">
                                    <ns20:AttributeValue>
                                        <xsl:value-of select="$GetMultipleOrder/ns19:MultipleServiceOrder/ns19:MultipleOrder[ns19:CRM_PROMO_ID=$PromoId and ns19:TABS_EQUIP_ID=substring-after(current()/ns20:AttributeName,'XX')]/ns19:ATTRIBUTE_VALUE"/>
                                    </ns20:AttributeValue>
                                </xsl:if>
                            </ns20:RAFActions>
                        </xsl:for-each>
                    </ns20:ListOfServiceDetails>
                </xsl:for-each>
                <pfx46:TransactionId>
                    <xsl:value-of select="$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:TransactionId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="BundleOrderMapIfAny">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:description>from the reqeuest map bundle order if there is any present in the payload.
this will include any payload created with the logic already existing.</pd:description>
        <pd:x>1072</pd:x>
        <pd:y>71</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($Map-Device-Final-Request/pfx46:CreateMultipleOrder_Input) and string-length($Map-Device-Final-Request/pfx46:CreateMultipleOrder_Input)>0">
                    <xsl:for-each select="$Map-Device-Final-Request/pfx46:CreateMultipleOrder_Input">
                        <pfx46:CreateMultipleOrder_Input>
                            <pfx46:ServiceLineType>
                                <xsl:value-of select="pfx46:ServiceLineType"/>
                            </pfx46:ServiceLineType>
                            <pfx46:ServiceCommitment>
                                <xsl:value-of select="pfx46:ServiceCommitment"/>
                            </pfx46:ServiceCommitment>
                            <pfx46:ProductId>
                                <xsl:value-of select="pfx46:ProductId"/>
                            </pfx46:ProductId>
                            <pfx46:Channel>
                                <xsl:value-of select="pfx46:Channel"/>
                            </pfx46:Channel>
                            <pfx46:PromotionId>
                                <xsl:value-of select="pfx46:PromotionId"/>
                            </pfx46:PromotionId>
                            <pfx46:UserName>
                                <xsl:value-of select="pfx46:UserName"/>
                            </pfx46:UserName>
                            <pfx46:SubscriberNumber>
                                <xsl:value-of select="pfx46:SubscriberNumber"/>
                            </pfx46:SubscriberNumber>
                            <pfx46:SkipCommitmentCarryover>
                                <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                            </pfx46:SkipCommitmentCarryover>
                            <xsl:for-each select="ns20:ListOfServiceDetails">
                                <ns20:ListOfServiceDetails>
                                    <xsl:for-each select="ns20:RAFActions">
                                        <ns20:RAFActions>
                                            <xsl:if test="ns20:ProductId">
                                                <ns20:ProductId>
                                                    <xsl:value-of select="ns20:ProductId"/>
                                                </ns20:ProductId>
                                            </xsl:if>
                                            <xsl:if test="ns20:ServiceId">
                                                <ns20:ServiceId>
                                                    <xsl:value-of select="ns20:ServiceId"/>
                                                </ns20:ServiceId>
                                            </xsl:if>
                                            <xsl:if test="ns20:LineType">
                                                <ns20:LineType>
                                                    <xsl:value-of select="ns20:LineType"/>
                                                </ns20:LineType>
                                            </xsl:if>
                                            <xsl:if test="ns20:Operation">
                                                <ns20:Operation>
                                                    <xsl:value-of select="ns20:Operation"/>
                                                </ns20:Operation>
                                            </xsl:if>
                                            <xsl:if test="ns20:PrimaryDevice">
                                                <ns20:PrimaryDevice>
                                                    <xsl:value-of select="ns20:PrimaryDevice"/>
                                                </ns20:PrimaryDevice>
                                            </xsl:if>
                                            <xsl:if test="ns20:ParentProduct">
                                                <ns20:ParentProduct>
                                                    <xsl:value-of select="ns20:ParentProduct"/>
                                                </ns20:ParentProduct>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeName">
                                                <ns20:AttributeName>
                                                    <xsl:value-of select="ns20:AttributeName"/>
                                                </ns20:AttributeName>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeValue">
                                                <ns20:AttributeValue>
                                                    <xsl:value-of select="ns20:AttributeValue"/>
                                                </ns20:AttributeValue>
                                            </xsl:if>
                                        </ns20:RAFActions>
                                    </xsl:for-each>
                                </ns20:ListOfServiceDetails>
                            </xsl:for-each>
                            <pfx46:TransactionId>
                                <xsl:value-of select="pfx46:TransactionId"/>
                            </pfx46:TransactionId>
                        </pfx46:CreateMultipleOrder_Input>
                    </xsl:for-each>
                </xsl:when>
                <xsl:when test="exists($OnlyOffers/pfx46:CreateMultipleOrder_Input) and string-length($OnlyOffers/pfx46:CreateMultipleOrder_Input)>0">
                    <xsl:for-each select="$OnlyOffers/pfx46:CreateMultipleOrder_Input">
                        <pfx46:CreateMultipleOrder_Input>
                            <pfx46:ServiceLineType>
                                <xsl:value-of select="pfx46:ServiceLineType"/>
                            </pfx46:ServiceLineType>
                            <pfx46:ServiceCommitment>
                                <xsl:value-of select="pfx46:ServiceCommitment"/>
                            </pfx46:ServiceCommitment>
                            <pfx46:ProductId>
                                <xsl:value-of select="pfx46:ProductId"/>
                            </pfx46:ProductId>
                            <pfx46:Channel>
                                <xsl:value-of select="pfx46:Channel"/>
                            </pfx46:Channel>
                            <pfx46:PromotionId>
                                <xsl:value-of select="pfx46:PromotionId"/>
                            </pfx46:PromotionId>
                            <pfx46:UserName>
                                <xsl:value-of select="pfx46:UserName"/>
                            </pfx46:UserName>
                            <pfx46:SubscriberNumber>
                                <xsl:value-of select="pfx46:SubscriberNumber"/>
                            </pfx46:SubscriberNumber>
                            <pfx46:SkipCommitmentCarryover>
                                <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                            </pfx46:SkipCommitmentCarryover>
                            <xsl:for-each select="ns20:ListOfServiceDetails">
                                <ns20:ListOfServiceDetails>
                                    <xsl:for-each select="ns20:RAFActions">
                                        <ns20:RAFActions>
                                            <xsl:if test="ns20:ProductId">
                                                <ns20:ProductId>
                                                    <xsl:value-of select="ns20:ProductId"/>
                                                </ns20:ProductId>
                                            </xsl:if>
                                            <xsl:if test="ns20:ServiceId">
                                                <ns20:ServiceId>
                                                    <xsl:value-of select="ns20:ServiceId"/>
                                                </ns20:ServiceId>
                                            </xsl:if>
                                            <xsl:if test="ns20:LineType">
                                                <ns20:LineType>
                                                    <xsl:value-of select="ns20:LineType"/>
                                                </ns20:LineType>
                                            </xsl:if>
                                            <xsl:if test="ns20:Operation">
                                                <ns20:Operation>
                                                    <xsl:value-of select="ns20:Operation"/>
                                                </ns20:Operation>
                                            </xsl:if>
                                            <xsl:if test="ns20:PrimaryDevice">
                                                <ns20:PrimaryDevice>
                                                    <xsl:value-of select="ns20:PrimaryDevice"/>
                                                </ns20:PrimaryDevice>
                                            </xsl:if>
                                            <xsl:if test="ns20:ParentProduct">
                                                <ns20:ParentProduct>
                                                    <xsl:value-of select="ns20:ParentProduct"/>
                                                </ns20:ParentProduct>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeName">
                                                <ns20:AttributeName>
                                                    <xsl:value-of select="ns20:AttributeName"/>
                                                </ns20:AttributeName>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeValue">
                                                <ns20:AttributeValue>
                                                    <xsl:value-of select="ns20:AttributeValue"/>
                                                </ns20:AttributeValue>
                                            </xsl:if>
                                        </ns20:RAFActions>
                                    </xsl:for-each>
                                </ns20:ListOfServiceDetails>
                            </xsl:for-each>
                            <pfx46:TransactionId>
                                <xsl:value-of select="pfx46:TransactionId"/>
                            </pfx46:TransactionId>
                        </pfx46:CreateMultipleOrder_Input>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:for-each select="$Map-final-Request/pfx46:CreateMultipleOrder_Input">
                        <pfx46:CreateMultipleOrder_Input>
                            <pfx46:ServiceLineType>
                                <xsl:value-of select="pfx46:ServiceLineType"/>
                            </pfx46:ServiceLineType>
                            <pfx46:ServiceCommitment>
                                <xsl:value-of select="pfx46:ServiceCommitment"/>
                            </pfx46:ServiceCommitment>
                            <pfx46:ProductId>
                                <xsl:value-of select="pfx46:ProductId"/>
                            </pfx46:ProductId>
                            <pfx46:Channel>
                                <xsl:value-of select="pfx46:Channel"/>
                            </pfx46:Channel>
                            <pfx46:PromotionId>
                                <xsl:value-of select="pfx46:PromotionId"/>
                            </pfx46:PromotionId>
                            <pfx46:UserName>
                                <xsl:value-of select="pfx46:UserName"/>
                            </pfx46:UserName>
                            <pfx46:SubscriberNumber>
                                <xsl:value-of select="pfx46:SubscriberNumber"/>
                            </pfx46:SubscriberNumber>
                            <pfx46:SkipCommitmentCarryover>
                                <xsl:value-of select="pfx46:SkipCommitmentCarryover"/>
                            </pfx46:SkipCommitmentCarryover>
                            <xsl:for-each select="ns20:ListOfServiceDetails">
                                <ns20:ListOfServiceDetails>
                                    <xsl:for-each select="ns20:RAFActions">
                                        <ns20:RAFActions>
                                            <xsl:if test="ns20:ProductId">
                                                <ns20:ProductId>
                                                    <xsl:value-of select="ns20:ProductId"/>
                                                </ns20:ProductId>
                                            </xsl:if>
                                            <xsl:if test="ns20:ServiceId">
                                                <ns20:ServiceId>
                                                    <xsl:value-of select="ns20:ServiceId"/>
                                                </ns20:ServiceId>
                                            </xsl:if>
                                            <xsl:if test="ns20:LineType">
                                                <ns20:LineType>
                                                    <xsl:value-of select="ns20:LineType"/>
                                                </ns20:LineType>
                                            </xsl:if>
                                            <xsl:if test="ns20:Operation">
                                                <ns20:Operation>
                                                    <xsl:value-of select="ns20:Operation"/>
                                                </ns20:Operation>
                                            </xsl:if>
                                            <xsl:if test="ns20:PrimaryDevice">
                                                <ns20:PrimaryDevice>
                                                    <xsl:value-of select="ns20:PrimaryDevice"/>
                                                </ns20:PrimaryDevice>
                                            </xsl:if>
                                            <xsl:if test="ns20:ParentProduct">
                                                <ns20:ParentProduct>
                                                    <xsl:value-of select="ns20:ParentProduct"/>
                                                </ns20:ParentProduct>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeName">
                                                <ns20:AttributeName>
                                                    <xsl:value-of select="ns20:AttributeName"/>
                                                </ns20:AttributeName>
                                            </xsl:if>
                                            <xsl:if test="ns20:AttributeValue">
                                                <ns20:AttributeValue>
                                                    <xsl:value-of select="ns20:AttributeValue"/>
                                                </ns20:AttributeValue>
                                            </xsl:if>
                                        </ns20:RAFActions>
                                    </xsl:for-each>
                                </ns20:ListOfServiceDetails>
                            </xsl:for-each>
                            <pfx46:TransactionId>
                                <xsl:value-of select="pfx46:TransactionId"/>
                            </pfx46:TransactionId>
                        </pfx46:CreateMultipleOrder_Input>
                    </xsl:for-each>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>799</pd:x>
        <pd:y>3</pd:y>
        <pd:width>169</pd:width>
        <pd:height>121</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>FetchProductDetails</pd:to>
            <pd:xpathDescription>BundleProduct</pd:xpathDescription>
            <pd:lineType>Straight</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>count($ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order/pfx47:paramList/pfx47:param[pfx47:name='BundleId'])&gt;0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>FetchProductDetails</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="FetchProductDetails">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>880</pd:x>
            <pd:y>72</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/External/ProductDetails.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="Join">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>715</pd:x>
        <pd:y>161</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CRMReqMapping">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1021</pd:x>
        <pd:y>172</pd:y>
        <config>
            <element ref="pfx46:CreateMultipleOrder_Input"/>
        </config>
        <pd:inputBindings>
            <pfx46:CreateMultipleOrder_Input>
                <pfx46:ServiceLineType>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:ServiceLineType"/>
                </pfx46:ServiceLineType>
                <pfx46:ServiceCommitment>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:ServiceCommitment"/>
                </pfx46:ServiceCommitment>
                <pfx46:ProductId>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:ProductId"/>
                </pfx46:ProductId>
                <pfx46:Channel>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:Channel"/>
                </pfx46:Channel>
                <pfx46:PromotionId>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:PromotionId"/>
                </pfx46:PromotionId>
                <pfx46:UserName>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:UserName"/>
                </pfx46:UserName>
                <pfx46:SubscriberNumber>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:SubscriberNumber"/>
                </pfx46:SubscriberNumber>
                <pfx46:SkipCommitmentCarryover>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:SkipCommitmentCarryover"/>
                </pfx46:SkipCommitmentCarryover>
                <ns20:ListOfServiceDetails>
                    <xsl:for-each select="$ParseRequest/pfx47:processOrderListElement/pfx47:orderList/pfx47:order[string-length(pfx47:paramList/pfx47:param[pfx47:name='BundleId']/pfx47:value)>0]">
                        <xsl:variable name="varEquipId" select="if(current()/pfx47:serviceCode='N_PK35KD')  then 'N_VC35'&#xA;&#xA;else if(current()/pfx47:serviceCode='N_PK40KD') then 'N_VC40'&#xA;&#xA;else if (current()/pfx47:serviceCode='N_PK25KD')  then  'N_VC25'&#xA;&#xA;else if (current()/pfx47:serviceCode='N_PK15KD')  then  'N_VC15'&#xA;&#xA;else if (current()/pfx47:serviceCode='N_PK15KD')  then  'N_VC15'&#xA;&#xA;else&#xA;current()/pfx47:serviceCode"/>
                        <ns20:RAFActions>
                            <ns20:ProductId>
                                <xsl:value-of select="$FetchProductDetails/ns21:ProductDetalis/ns21:Products/ns21:Product[ns21:ServiceCode=$varEquipId]/ns21:ProductID"/>
                            </ns20:ProductId>
                            <xsl:if test="current()/pfx47:serialNumber">
                                <ns20:ServiceId>
                                    <xsl:value-of select="current()/pfx47:serialNumber"/>
                                </ns20:ServiceId>
                            </xsl:if>
                            <xsl:if test="current()/pfx47:paramList/pfx47:param[pfx47:name='ProductType']/pfx47:value">
                                <ns20:LineType>
                                    <xsl:value-of select="current()/pfx47:paramList/pfx47:param[pfx47:name='ProductType']/pfx47:value"/>
                                </ns20:LineType>
                            </xsl:if>
                            <ns20:Operation>
                                <xsl:value-of select="if((current()/pfx47:orderType='Subscribe')  or (current()/pfx47:orderType='SUBSCRIBE'))&#xA;then&#xA;&quot;Add&quot;&#xA;else&#xA;&quot;Remove&quot;"/>
                            </ns20:Operation>
                            <ns20:AttributeName>
                                <xsl:value-of select="&quot;PackageType&quot;"/>
                            </ns20:AttributeName>
                            <ns20:AttributeValue>
                                <xsl:value-of select="pfx47:paramList/pfx47:param[pfx47:name='PackageType']/pfx47:value"/>
                            </ns20:AttributeValue>
                            <xsl:if test="current()/pfx47:paramList/pfx47:param[pfx47:name='BundleId']/pfx47:value">
                                <ns20:BundleId>
                                    <xsl:value-of select="current()/pfx47:paramList/pfx47:param[pfx47:name='BundleId']/pfx47:value"/>
                                </ns20:BundleId>
                            </xsl:if>
                            <xsl:if test="{-- CR-21-037 --}&#xA;string-length(pfx47:paramList/pfx47:param[upper-case(pfx47:name)='INSTALLMENTPERIOD']/pfx47:value)>0">
                                <ns20:InstallmentPeriod>
                                    <xsl:value-of select="pfx47:paramList/pfx47:param[upper-case(pfx47:name)='INSTALLMENTPERIOD']/pfx47:value"/>
                                </ns20:InstallmentPeriod>
                            </xsl:if>
                        </ns20:RAFActions>
                    </xsl:for-each>
                    <xsl:copy-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions"/>
                </ns20:ListOfServiceDetails>
                <pfx46:TransactionId>
                    <xsl:value-of select="$BundleOrderMapIfAny/pfx46:CreateMultipleOrder_Input/pfx46:TransactionId"/>
                </pfx46:TransactionId>
            </pfx46:CreateMultipleOrder_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Call_MultipleOrder</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>TimeOutError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>Communication Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($_error/ns8:ErrorReport/Msg,'HttpClientException')
or
contains($_error/ns8:ErrorReport/Msg,'HttpServerException')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>GetMultipleOrder</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetMultipleOrder</pd:from>
        <pd:to>Map-Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetMultipleOrder</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Map-Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data</pd:from>
        <pd:to>Map-Data-1</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-1</pd:from>
        <pd:to>Final-Map</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Final-Map</pd:from>
        <pd:to>Map-final-Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data</pd:from>
        <pd:to>SQL Direct</pd:to>
        <pd:xpathDescription>For Device Only</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16776961</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Map-Data/pfx46:CreateMultipleOrder_Input/pfx46:ServiceLineType!='Main Service'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Device-Map-1</pd:from>
        <pd:to>Device-Map-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Final-Device-Map</pd:from>
        <pd:to>Map-Device-Final-Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Device-Map-2</pd:from>
        <pd:to>Final-Device-Map</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Device-Map-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetMultipleOrder</pd:from>
        <pd:to>SQL Direct</pd:to>
        <pd:xpathDescription>This is Stopped</pd:xpathDescription>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>1=2</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>Device-Map-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Map-Data/pfx46:CreateMultipleOrder_Input/ns20:ListOfServiceDetails/ns20:RAFActions[*]/ns20:ServiceId)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>No-Promo-Error</pd:to>
        <pd:xpathDescription>No Promo Id</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($SQL-Direct/jdbcGeneralActivityOutput/unknownResultset/row/column[name='PROMOTION_ID']/value)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>OnlyOffers</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>BundleOrderMapIfAny</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-final-Request</pd:from>
        <pd:to>Join</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OnlyOffers</pd:from>
        <pd:to>Join</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Device-Final-Request</pd:from>
        <pd:to>Join</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>BundleOrderMapIfAny</pd:from>
        <pd:to>CRMReqMapping</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Join</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CRMReqMapping</pd:from>
        <pd:to>Log_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Bundled Order changes in CR-20-058,BundleOrderMapping in SOAP </pd:description>
        <pd:x>1022</pd:x>
        <pd:y>217</pd:y>
        <pd:width>193</pd:width>
        <pd:height>44</pd:height>
        <pd:fontName>Dialog.bold-plain-9</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-205</pd:color>
        <pd:type>dash</pd:type>
        <pd:thickness>1</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>