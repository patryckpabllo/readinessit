<?xml version="1.0" encoding="UTF-8"?>
<!--Created by TIBCO WSDL-->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:jms="http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS" xmlns:soap1="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns5="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesReq" xmlns:ns6="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesRes" xmlns:ns2="http://www.zain.com/ZESB/Services/BundleOrderFault" xmlns:ns1="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesRes" xmlns:ns4="http://www.zain.com/ZESB/Services/GetBundleAssetsRes" xmlns:ns3="http://www.zain.com/ZESB/Services/GetBundleAssetsReq" xmlns:tns="http://xmlns.example.com/1610528291258" xmlns:ns0="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesReq" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:jndi="http://www.tibco.com/namespaces/ws/2004/soap/apis/jndi" name="Untitled" targetNamespace="http://xmlns.example.com/1610528291258">
    <wsdl:types>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesRes" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesRes" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:annotation>
                <xs:documentation>Dates are in dd-MM-yyyy format
</xs:documentation>
            </xs:annotation>
            <xs:element name="GetUserEligibleBundlesRes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ResCode" type="xs:string" minOccurs="0"/>
                        <xs:element name="ResDesc" type="xs:string" minOccurs="0"/>
                        <xs:element name="BundleInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="BundleId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleName" type="xs:string" minOccurs="0">
                                        <xs:annotation>
                                            <xs:documentation>From this Response Following fields to be sent in MultiOrder API for Provisioning. Bundles should come in Sequence in MultiOrder.
1) OrderList/Order/ParamList/Param/name ="BundleId" AND Value = BundleId from SP O/P
2)OrderList/Order/ParamList/Param/name ="ProductType" AND if BundleProdName="Zain Bundle Group Product"(FromSP O/p) then Value="Bundle" else Value="BundleComponent"
3)OrderList/Order/ParamList/Param/name ="PackageType" AND Value=PricePackageType from SP O/P</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="OccProductId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleActiveFlg" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleStartDate" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleEndDate" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PriceNumber" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PromotionId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PromotionName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PricePackageType" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CommitmentType" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CommitmentAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element name="InstallmentPeriod" type="xs:string" minOccurs="0"/>
                                    <xs:element name="InstallmentAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BasePlan" type="xs:string" minOccurs="0"/>
                                    <xs:element name="TotalCost" type="xs:string" minOccurs="0"/>
                                    <xs:element name="UpfrontAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element ref="ns1:Params" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element ref="ns1:Params" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="Params">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetBundleAssetsRes" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetBundleAssetsRes" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:annotation>
                <xs:documentation>Dates are in dd-MM-yyyy format
</xs:documentation>
            </xs:annotation>
            <xs:element name="GetBundleAssetsRes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ResCode" type="xs:string" minOccurs="0"/>
                        <xs:element name="ResDesc" type="xs:string" minOccurs="0"/>
                        <xs:element name="BundleAssetInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="AssetIntegrationId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleName" type="xs:string" minOccurs="0"/>
                                    <xs:element ref="ns4:Params" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element ref="ns4:Params" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="Params">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/BundleOrderFault" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/BundleOrderFault" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:element name="Fault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="type" type="xs:string"/>
                        <xs:element name="code" type="xs:string"/>
                        <xs:element name="description" type="xs:string"/>
                        <xs:element name="sourceSystem" type="xs:string"/>
                        <xs:element name="extErrorCode" type="xs:string" minOccurs="0"/>
                        <xs:element name="detail" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesReq" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesReq" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:element name="GetSubscriberEligibleBundlesReq">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Mandatory</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="SubscriberNo" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Mandatory</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Params" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                                <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesRes" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesRes" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:annotation>
                <xs:documentation>Dates are in dd-MM-yyyy format
</xs:documentation>
            </xs:annotation>
            <xs:element name="GetSubscriberEligibleBundlesRes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="ResCode" type="xs:string" minOccurs="0"/>
                        <xs:element name="ResDesc" type="xs:string" minOccurs="0"/>
                        <xs:element name="BundleInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>From this Response Following fields to be sent in MultiOrder API for Provisioning.
1) OrderList/Order/ParamList/Param/name ="BundleId" AND Value = BundleId from SP O/P
2)OrderList/Order/ParamList/Param/name ="ProductType" AND if BundleProdName="Zain Bundle Group Product"(FromSP O/p) then Value="Bundle" else Value="BundleComponent"
3)OrderList/Order/ParamList/Param/name ="PackageType" AND Value=PricePackageType from SP O/P</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="BundleId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="OccProductId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp1ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp2ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp3ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp4ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp5ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp6ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Comp7ProdItemCd" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleActiveFlg" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleStartDate" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BundleEndDate" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PriceNumber" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PromotionId" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PromotionName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PricePackageType" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CommitmentType" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CommitmentAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element name="InstallmentPeriod" type="xs:string" minOccurs="0"/>
                                    <xs:element name="InstallmentAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element name="BasePlan" type="xs:string" minOccurs="0"/>
                                    <xs:element name="TotalCost" type="xs:string" minOccurs="0"/>
                                    <xs:element name="UpfrontAmount" type="xs:string" minOccurs="0"/>
                                    <xs:element ref="ns6:Params" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element ref="ns6:Params" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="Params">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                    <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesReq" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetUserEligibleBundlesReq" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:element name="GetUserEligibleBundlesReq">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="UserId" type="xs:string"/>
                        <xs:element name="Params" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                                <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://www.zain.com/ZESB/Services/GetBundleAssetsReq" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.zain.com/ZESB/Services/GetBundleAssetsReq" elementFormDefault="qualified" attributeFormDefault="unqualified">
            <xs:element name="GetBundleAssetsReq">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubscriberNo" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Mandatory</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="Params" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:element name="Name" type="xs:string" minOccurs="0"/>
                                                <xs:element name="Value" type="xs:string" minOccurs="0"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    </wsdl:types>
    <wsdl:service name="BundleOrderInboundService">
        <wsdl:port name="BundleOrderPortTypeEndpointHTTP" binding="tns:BundleOrderPortTypeEndpointHTTPBinding">
            <soap:address location="http://localhost:7073/ZESB/Services/BundleOrderInbound"/>
        </wsdl:port>
        <wsdl:port name="BundleOrderPortTypeEndpointJMS" binding="tns:BundleOrderPortTypeEndpointJMSBinding">
            <soap:address location=""/>
            <jms:connectionFactory>QueueConnectionFactory</jms:connectionFactory>
            <jms:targetAddress destination="queue">CBIO.BSS.DOM_ESB.GW.ORDMGMNT.BUNDLEORDERINBOUND.SVC.Q.EXT.REQ</jms:targetAddress>
        </wsdl:port>
    </wsdl:service>
    <wsdl:portType name="BundleOrderPortType">
        <wsdl:operation name="GetUserEligibleBundles">
            <wsdl:input message="tns:BundleOrderInboundReq"/>
            <wsdl:output message="tns:BundleOrderInboundRes"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="GetBundleAssets">
            <wsdl:input message="tns:GetBundleAssetsReq"/>
            <wsdl:output message="tns:GetBundleAssetsRes"/>
            <wsdl:fault name="fault" message="tns:Fault"/>
        </wsdl:operation>
        <wsdl:operation name="GetSubscriberEligibleBundles">
            <wsdl:input message="tns:GetSubscriberEligibleBundlesReq"/>
            <wsdl:output message="tns:GetSubscriberEligibleBundlesRes"/>
            <wsdl:fault name="fault1" message="tns:Fault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="BundleOrderPortTypeEndpointHTTPBinding" type="tns:BundleOrderPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="GetUserEligibleBundles">
            <soap:operation style="document" soapAction="GetUserEligibleBundles"/>
            <wsdl:input>
                <soap:body use="literal" parts="BundleOrderReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="BundleOrderInboundRes"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="GetBundleAssets">
            <soap:operation style="document" soapAction="GetBundleAssets"/>
            <wsdl:input>
                <soap:body use="literal" parts="GetBundleAssetsReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="GetBundleAssetsRes"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="GetSubscriberEligibleBundles">
            <soap:operation style="document" soapAction="GetSubscriberEligibleBundles"/>
            <wsdl:input>
                <soap:body use="literal" parts="GetSubscriberEligibleBundlesReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="GetSubscriberEligibleBundlesRes"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="BundleOrderPortTypeEndpointJMSBinding" type="tns:BundleOrderPortType">
        <soap:binding style="document" transport="http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS"/>
        <jms:binding messageFormat="Text"/>
        <wsdl:operation name="GetUserEligibleBundles">
            <soap:operation style="document" soapAction="GetUserEligibleBundles"/>
            <wsdl:input>
                <soap:body use="literal" parts="BundleOrderReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="BundleOrderInboundRes"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="GetBundleAssets">
            <soap:operation style="document" soapAction="GetBundleAssets"/>
            <wsdl:input>
                <soap:body use="literal" parts="GetBundleAssetsReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="GetBundleAssetsRes"/>
            </wsdl:output>
            <wsdl:fault name="fault">
                <soap:fault use="literal" name="fault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="GetSubscriberEligibleBundles">
            <soap:operation style="document" soapAction="GetSubscriberEligibleBundles"/>
            <wsdl:input>
                <soap:body use="literal" parts="GetSubscriberEligibleBundlesReq"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="GetSubscriberEligibleBundlesRes"/>
            </wsdl:output>
            <wsdl:fault name="fault1">
                <soap:fault use="literal" name="fault1"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:message name="BundleOrderInboundReq">
        <wsdl:part name="BundleOrderReq" element="ns0:GetUserEligibleBundlesReq"/>
    </wsdl:message>
    <wsdl:message name="BundleOrderInboundRes">
        <wsdl:part name="BundleOrderInboundRes" element="ns1:GetUserEligibleBundlesRes"/>
    </wsdl:message>
    <wsdl:message name="Fault">
        <wsdl:part name="Fault" element="ns2:Fault"/>
    </wsdl:message>
    <wsdl:message name="GetBundleAssetsReq">
        <wsdl:documentation>Query Bundle Assets from CRM.</wsdl:documentation>
        <wsdl:part name="GetBundleAssetsReq" element="ns3:GetBundleAssetsReq"/>
    </wsdl:message>
    <wsdl:message name="GetBundleAssetsRes">
        <wsdl:part name="GetBundleAssetsRes" element="ns4:GetBundleAssetsRes"/>
    </wsdl:message>
    <wsdl:message name="GetSubscriberEligibleBundlesReq">
        <wsdl:part name="GetSubscriberEligibleBundlesReq" element="ns5:GetSubscriberEligibleBundlesReq"/>
    </wsdl:message>
    <wsdl:message name="GetSubscriberEligibleBundlesRes">
        <wsdl:part name="GetSubscriberEligibleBundlesRes" element="ns6:GetSubscriberEligibleBundlesRes"/>
    </wsdl:message>
</wsdl:definitions>