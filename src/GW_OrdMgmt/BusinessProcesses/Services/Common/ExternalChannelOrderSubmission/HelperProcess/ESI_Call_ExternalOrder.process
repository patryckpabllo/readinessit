<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.ericsson.com/Mozaic/BusinessSchemas/SOAP/XSDs/Fault.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx57="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/PreOrderValidationSPResponse.xsd" xmlns:pfx58="http://schemas.tibco.com/bw/plugins/jdbc/5.0/jdbcExceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx59="http://www.siebel.com/xml/CBiO2AsyncPostpaidOrderDetails" xmlns:pfx53="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderRequest" xmlns:pfx54="http://www.siebel.com/xml/CBiO2AsyncOrderCreationIO" xmlns:pfx55="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx56="http://siebel.com/ExternalOrder" xmlns:pfx52="http://www.zain.kw.com/BSS/OrderManagement/managedServices" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/CRMSyncServiceResponse.xsd" xmlns:pfx50="http://www.tibco.com/schemas/ESI_CRM/BusinessProcesses/Services/Query/QuerySyncService/HelperProcess/Schema.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderResponse" xmlns:pfx49="http://siebel.com/CustomUI" xmlns:pfx46="http://www.tibco.com/schemas/ESI/BusinessProcesses/Services/CRM/Provisioning/ExternalOrderSubmission/Implementation/Schema.xsd3" xmlns:pfx47="http://siebel.com/ExternalOrderCreate" xmlns:pfx44="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd2" xmlns:pfx45="http://orm.zain.com/types/" xmlns:pfx42="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferResponse.xsd" xmlns:pfx43="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd" xmlns:pfx41="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferRequest.xsd" xmlns:pfx40="http://www.zain.com/ZESB/Services/ManageOffer/Types" xmlns:pfx39="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx310="http://orm.zain.com/" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:pfx210="http://www.zain.com/ZESB/Services/AccountManager" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns16="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns17="http://www.siebel.com/xml/ListQuery" xmlns:ns14="http://www.ericsson.com/CDM/telecom/Resource" xmlns:ns15="http://www.siebel.com/xml/CBiO2%20Order%20Provisioning%20Req%20IO" xmlns:ns18="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns19="http://schemas.ericsson.com/cai3g1.2/" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns21="http://www.siebel.com/xml/CBiO2PrepaidOrderHistory" xmlns:ns22="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns20="http://schemas.ericsson.com/ema/UserProvisioning/CSSV/" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns31="http://www.zain.com/ZESB/Services/AccountManager/Types" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2CustomerModificationReqIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2BillingProfileModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/AddDeleteOffer/AddDeleteOfferResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/Schema.xsd2" schemaLocation="/BusinessSchemas/Services/Modification/AutoRenewalFlagUpdate/AutoRenewalFlagUpdateRes.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageOffer/Types" schemaLocation="/BusinessWSDLS/Services/CRM/AcceptOffer.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/Resource" schemaLocation="/CDM/Resource.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/ESI/BusinessProcesses/Services/CRM/Provisioning/ExternalOrderSubmission/Implementation/Schema.xsd3" schemaLocation="/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/processOrderElementInput.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderResponse" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/XSD/EOM.COM.orderResponse.xsd"/>
    <xsd:import namespace="http://siebel.com/ExternalOrderCreate" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2CreateOrderWS.wsdl"/>
    <xsd:import namespace="http://orm.zain.com/types/" schemaLocation="/BusinessWSDLS/Services/WSDLS/ServiceOrder/ServiceOrderSoapHttpPort_multiple.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/ESI_CRM/BusinessProcesses/Services/Query/QuerySyncService/HelperProcess/Schema.xsd" schemaLocation="/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/CRMSyncServiceRequest.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderRequest" schemaLocation="/BusinessWSDLS/Services/OM/syncCreateService.wsdl"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2AsyncOrderCreationIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Update/CBiO2AsyncOrderCreationIO.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/CRMSyncServiceResponse.xsd" schemaLocation="/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/CRMSyncServiceResponse.xsd"/>
    <xsd:import namespace="http://siebel.com/ExternalOrder" schemaLocation="/BusinessWSDLS/Services/CRM/http___siebel.com_ExternalOrder_CBiO2ProductValidationWS.wsdl"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/http---siebel.com-CustomUI_CBiO2PostpaidPreOrderValidationWS.wsdl"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2AsyncPostpaidOrderDetails" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2asyncpostpaidorderdetails.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/PreOrderValidationSPResponse.xsd" schemaLocation="/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/PreOrderValidationSPResponse.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <wsdl:import namespace="http://www.zain.kw.com/BSS/OrderManagement/managedServices" location="/BusinessWSDLS/Services/OM/syncCreateService.wsdl"/>
    <wsdl:import namespace="http://schemas.ericsson.com/cai3g1.2/" location="/BusinessWSDLS/Services/EMA/CSSV/ema_UserProvisioning_CSSV_Subscription_Subscription_http_.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/HelperProcess/ESI_Call_ExternalOrder.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx45:processOrderElement"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                    <xsd:element name="FlexOfferFolioName" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>55</pd:startX>
    <pd:startY>69</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($SOAPRequestReply/outputMessage/pfx48:orderResponse)">
                <ns16:CreateOrderRes>
                    <ns11:ZainIdentifiers>
                        <ns11:orderId>
                            <ns11:systemName>
                                <xsl:value-of select="'cwOrderId'"/>
                            </ns11:systemName>
                            <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId">
                                <ns11:value>
                                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId"/>
                                </ns11:value>
                            </xsl:if>
                        </ns11:orderId>
                    </ns11:ZainIdentifiers>
                    <ns11:Response>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:error/pfx48:Error_SourceErrCode">
                            <ResponseCode>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:error/pfx48:Error_SourceErrCode"/>
                            </ResponseCode>
                        </xsl:if>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status">
                            <ResponseDescription>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status"/>
                            </ResponseDescription>
                        </xsl:if>
                    </ns11:Response>
                    <ns16:errorCode>
                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:error/pfx48:Error_SourceErrCode"/>
                    </ns16:errorCode>
                    <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:error/pfx48:Error_SourceErrDesc">
                        <ns16:errorDescription>
                            <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:error/pfx48:Error_SourceErrDesc"/>
                        </ns16:errorDescription>
                    </xsl:if>
                </ns16:CreateOrderRes>
            </xsl:when>
            <xsl:when test="exists($Map-Data-for-CRMError/ns16:CreateOrderRes)">
                <xsl:copy-of select="$Map-Data-for-CRMError/ns16:CreateOrderRes"/>
            </xsl:when>
            <xsl:when test="exists($PrepareFinalResponse/ns16:CreateOrderRes)">
                <ns16:CreateOrderRes>
                    <ns11:Response>
                        <ResponseCode>
                            <xsl:value-of select="$PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorCode"/>
                        </ResponseCode>
                        <ResponseDescription>
                            <xsl:value-of select="if($PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorCode='0') then 'Complete' else&#xA;$PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorUsrErrorCode"/>
                        </ResponseDescription>
                    </ns11:Response>
                    <ns16:errorCode>
                        <xsl:value-of select="$PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorCode"/>
                    </ns16:errorCode>
                    <ns16:errorDescription>
                        <xsl:value-of select="if($PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorCode='0') then 'Complete' else&#xA;$PrepareFinalResponse/ns16:CreateOrderRes/ns16:errorUsrErrorCode"/>
                    </ns16:errorDescription>
                    <ns16:errorAddDesc1>
                        <xsl:value-of select="'Multiple'"/>
                    </ns16:errorAddDesc1>
                </ns16:CreateOrderRes>
            </xsl:when>
            <xsl:when test="exists($CallNPRoaming/pfx45:processOrderResponseElement)">
                <ns16:CreateOrderRes>
                    <ns11:Response>
                        <ResponseCode>
                            <xsl:value-of select="$CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:resultCode"/>
                        </ResponseCode>
                        <ResponseDescription>
                            <xsl:value-of select="if($CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:resultCode='0') then 'Complete' else $CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:paramList/pfx45:param[pfx45:name='RespDesc']/pfx45:value"/>
                        </ResponseDescription>
                    </ns11:Response>
                    <ns16:errorCode>
                        <xsl:value-of select="$CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:resultCode"/>
                    </ns16:errorCode>
                    <ns16:errorDescription>
                        <xsl:value-of select="if($CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:resultCode='0') then 'Complete' else $CallNPRoaming/pfx45:processOrderResponseElement/pfx45:result/pfx45:paramList/pfx45:param[pfx45:name='RespDesc']/pfx45:value"/>
                    </ns16:errorDescription>
                </ns16:CreateOrderRes>
            </xsl:when>
            <xsl:when test="exists($AddOfferToCS/ns19:SetResponse)">
                <ns16:CreateOrderRes>
                    <ns11:Response>
                        <ResponseCode>
                            <xsl:value-of select="if($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode=0) then 0 else 100"/>
                        </ResponseCode>
                        <ResponseDescription>
                            <xsl:value-of select="if($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode=0) then 'Complete' else $AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respDesc"/>
                        </ResponseDescription>
                    </ns11:Response>
                    <ns16:errorCode>
                        <xsl:value-of select="if($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode=0) then 0 else 100"/>
                    </ns16:errorCode>
                    <ns16:errorDescription>
                        <xsl:value-of select="if($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode=0) then 'Complete' else $AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respDesc"/>
                    </ns16:errorDescription>
                </ns16:CreateOrderRes>
            </xsl:when>
            <xsl:otherwise>
                <ns16:CreateOrderRes>
                    <ns11:Response>
                        <ResponseCode>
                            <xsl:value-of select="'0'"/>
                        </ResponseCode>
                        <ResponseDescription>
                            <xsl:value-of select="'Complete'"/>
                        </ResponseDescription>
                    </ns11:Response>
                    <ns16:errorCode>
                        <xsl:value-of select="'0'"/>
                    </ns16:errorCode>
                    <ns16:errorType>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/Status/EnglishSuccessDesc"/>
                    </ns16:errorType>
                    <ns16:errorAddDesc1>
                        <xsl:value-of select="'Async'"/>
                    </ns16:errorAddDesc1>
                </ns16:CreateOrderRes>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="ns16:CreateOrderRes"/>
    <pd:endX>1808</pd:endX>
    <pd:endY>111</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="ns16:CreateOrderRes"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_OM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1225</pd:x>
        <pd:y>204</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage/pfx48:orderResponse)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>195</pd:x>
        <pd:y>69</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_ORDER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx45:processOrderElement)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_Call_SyncServiceQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>723</pd:x>
        <pd:y>324</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Map-Data-For-SyncService/pfx50:root)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ESI_RequestQueue"/>
                </EMS_DestinationQueue>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/TimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-Order">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>723</pd:x>
        <pd:y>200</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:choice>
                    <xsd:element ref="pfx51:Resultsets"/>
                    <xsd:element ref="pfx55:ErrorResponse"/>
                </xsd:choice>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="substring-before($ESI_Call_SyncServiceQuery/ResponseData, '|')"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendUpdateToCRM">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1592</pd:x>
        <pd:y>102</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/ExternalChannel/OrderUpdateRequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/External/CRMtoGW_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($PrepareDataForCRMUpdate/pfx54:CBiO2AsyncOrderCreationIO)"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PrepareDataForCRMUpdate">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1356</pd:x>
        <pd:y>204</pd:y>
        <config>
            <element ref="pfx54:CBiO2AsyncOrderCreationIO"/>
        </config>
        <pd:inputBindings>
            <pfx54:CBiO2AsyncOrderCreationIO>
                <pfx54:CBiO2AsyncOrderInputs>
                    <xsl:for-each select="$Parse-Order/Resultsets/ResultSet1/Record1">
                        <pfx54:ProductDetails>
                            <xsl:if test="not((PRODUCT_ID/@xsi:nil=(&quot;true&quot;)) or (PRODUCT_ID/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:ProductId>
                                    <xsl:value-of select="PRODUCT_ID"/>
                                </pfx54:ProductId>
                            </xsl:if>
                            <xsl:if test="not((ACTION/@xsi:nil=(&quot;true&quot;)) or (ACTION/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:Operation>
                                    <xsl:value-of select="if(current()/ACTION='Delete') then $_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Delete else $_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add"/>
                                </pfx54:Operation>
                            </xsl:if>
                            <pfx54:ServiceStartDate>
                                <xsl:value-of select="if(string-length($SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerStartDate)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerStartDate)&#xA;else ''"/>
                            </pfx54:ServiceStartDate>
                            <pfx54:ServiceEndDate>
                                <xsl:value-of select="if(string-length($SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerEndDate)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerEndDate)&#xA;else ''"/>
                            </pfx54:ServiceEndDate>
                        </pfx54:ProductDetails>
                    </xsl:for-each>
                    <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId">
                        <pfx54:CWOrderNumber>
                            <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId"/>
                        </pfx54:CWOrderNumber>
                    </xsl:if>
                    <pfx54:CWOrderStatus>
                        <xsl:value-of select="if(lower-case($SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status)='pending') then 'Complete' else&#xA;$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status"/>
                    </pfx54:CWOrderStatus>
                    <pfx54:MSISDN>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                    </pfx54:MSISDN>
                    <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;1&quot;)))">
                        <pfx54:UserName>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                        </pfx54:UserName>
                    </xsl:if>
                    <pfx54:Source>
                        <xsl:value-of select="'External Channel'"/>
                    </pfx54:Source>
                    <pfx54:FlexiOffer>
                        <xsl:value-of select="&quot;N&quot;"/>
                    </pfx54:FlexiOffer>
                </pfx54:CBiO2AsyncOrderInputs>
            </pfx54:CBiO2AsyncOrderCreationIO>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_FinalResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1475</pd:x>
        <pd:y>207</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($PrepareDataForCRMUpdate/pfx54:CBiO2AsyncOrderCreationIO)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data For SyncService">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>617</pd:x>
        <pd:y>332</pd:y>
        <config>
            <element ref="pfx50:root"/>
        </config>
        <pd:inputBindings>
            <pfx50:root>
                <pfx50:MSISDN>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                </pfx50:MSISDN>
                <pfx50:Action>
                    <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then 'Add' else 'Delete'"/>
                </pfx50:Action>
                <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil=(&quot;1&quot;)))">
                    <pfx50:ProductId>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                    </pfx50:ProductId>
                </xsl:if>
                <pfx50:PartNum>
                    <xsl:value-of select="''"/>
                </pfx50:PartNum>
            </pfx50:root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data for CRMError">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1059</pd:x>
        <pd:y>76</pd:y>
        <config>
            <element ref="ns16:CreateOrderRes"/>
        </config>
        <pd:inputBindings>
            <ns16:CreateOrderRes>
                <ns11:BusinessMessageHeader>
                    <ExternalTransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ExternalTransactionID>
                    <Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </Timestamp>
                    <ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ApplicationID>
                    <ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ComponentName>
                    <Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </Hostname>
                    <TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </TransactionDomain>
                    <TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </TransactionType>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                </ns11:BusinessMessageHeader>
                <ns16:errorCode>
                    <xsl:value-of select="if($Parse-Order/pfx55:ErrorResponse/pfx55:Error_SourceErrDesc='SERVICE IS ALREADY ACTIVE') then '105'  else&#xA;$Parse-Order/pfx55:ErrorResponse/pfx55:Error_SourceErrCode"/>
                </ns16:errorCode>
                <ns16:errorDescription>
                    <xsl:value-of select="$Parse-Order/pfx55:ErrorResponse/pfx55:Error_SourceErrDesc"/>
                </ns16:errorDescription>
            </ns16:CreateOrderRes>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPRequestReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>1093</pd:x>
        <pd:y>204</pd:y>
        <config>
            <timeout>%%BusinessProcesses/Services/Common/ExternalChannel/TimeOut%%</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx52:syncCreateService</service>
            <servicePort>syncCreateServicePort</servicePort>
            <operation>syncCreateServiceOp</operation>
            <soapAction>syncCreateServiceOp</soapAction>
            <endpointURL>http://192.168.50.102:8080/cwf/services/syncCreateServiceInterface</endpointURL>
            <authScheme>BASIC</authScheme>
            <requireBasicAuth>true</requireBasicAuth>
            <basicHttpAuthIdentity>/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/Implementation/EOM_Identity.id</basicHttpAuthIdentity>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx53:orderList>
                    <xsl:copy-of select="$PrepareOMRequest/pfx53:orderRequest"/>
                </pfx53:orderList>
                <ns18:_configData>
                    <endpointURL>
                        <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/CommonResources/Connections/SOAP/External/EOC/SOAP_IP,$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/SyncServiceEndpointURI)"/>
                    </endpointURL>
                </ns18:_configData>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PrepareOMRequest">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>857</pd:x>
        <pd:y>202</pd:y>
        <config>
            <element ref="pfx53:orderRequest"/>
        </config>
        <pd:inputBindings>
            <pfx53:orderRequest>
                <pfx53:subscriptionList>
                    <pfx53:subscriptionInfo>
                        <pfx53:subscriberId>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SUBSCRIBER_ID"/>
                        </pfx53:subscriberId>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BILLING_CONTRACT_ID">
                            <pfx53:billingContractId>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BILLING_CONTRACT_ID"/>
                            </pfx53:billingContractId>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/MARKET">
                            <pfx53:market>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/MARKET"/>
                            </pfx53:market>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SUBMARKET">
                            <pfx53:subMarket>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SUBMARKET"/>
                            </pfx53:subMarket>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/MSISDN">
                            <pfx53:msisdn>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/MSISDN"/>
                            </pfx53:msisdn>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/IMSI">
                            <pfx53:imsi>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/IMSI"/>
                            </pfx53:imsi>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/DNID">
                            <pfx53:dnID>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/DNID"/>
                            </pfx53:dnID>
                        </xsl:if>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1/ICCID">
                            <pfx53:simNumber>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ICCID"/>
                            </pfx53:simNumber>
                        </xsl:if>
                        <pfx53:productList>
                            <pfx53:product>
                                <pfx53:lineID>
                                    <xsl:value-of select="''"/>
                                </pfx53:lineID>
                                <pfx53:productType>
                                    <xsl:value-of select="'LogicalResourceSpec'"/>
                                </pfx53:productType>
                                <pfx53:productCode>
                                    <xsl:value-of select="'LRS_MSISDN'"/>
                                </pfx53:productCode>
                                <pfx53:parentProductCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PARENT_PRODUCT_CODE"/>
                                </pfx53:parentProductCode>
                                <pfx53:action>
                                    <xsl:value-of select="'NOCHANGE'"/>
                                </pfx53:action>
                                <pfx53:productAttributeList>
                                    <pfx53:productAttribute>
                                        <pfx53:name>
                                            <xsl:value-of select="'SP_MSISDN'"/>
                                        </pfx53:name>
                                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1/MSISDN">
                                            <pfx53:value>
                                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/MSISDN"/>
                                            </pfx53:value>
                                        </xsl:if>
                                    </pfx53:productAttribute>
                                </pfx53:productAttributeList>
                            </pfx53:product>
                            <pfx53:product>
                                <pfx53:lineID>
                                    <xsl:value-of select="''"/>
                                </pfx53:lineID>
                                <pfx53:productType>
                                    <xsl:value-of select="'PhysicalResourceSpec'"/>
                                </pfx53:productType>
                                <pfx53:productCode>
                                    <xsl:value-of select="'PRS_SIM'"/>
                                </pfx53:productCode>
                                <pfx53:parentProductCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PARENT_PRODUCT_CODE"/>
                                </pfx53:parentProductCode>
                                <pfx53:action>
                                    <xsl:value-of select="'NOCHANGE'"/>
                                </pfx53:action>
                                <pfx53:productAttributeList>
                                    <pfx53:productAttribute>
                                        <pfx53:name>
                                            <xsl:value-of select="'SP_IMSI'"/>
                                        </pfx53:name>
                                        <pfx53:value>
                                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/IMSI"/>
                                        </pfx53:value>
                                    </pfx53:productAttribute>
                                    <pfx53:productAttribute>
                                        <pfx53:name>
                                            <xsl:value-of select="'SP_ICCID'"/>
                                        </pfx53:name>
                                        <pfx53:value>
                                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ICCID"/>
                                        </pfx53:value>
                                    </pfx53:productAttribute>
                                </pfx53:productAttributeList>
                            </pfx53:product>
                            <pfx53:product>
                                <pfx53:lineID>
                                    <xsl:value-of select="''"/>
                                </pfx53:lineID>
                                <pfx53:productType>
                                    <xsl:value-of select="'ProductOffering'"/>
                                </pfx53:productType>
                                <pfx53:productCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PARENT_PRODUCT_CODE"/>
                                </pfx53:productCode>
                                <pfx53:parentProductCode>
                                    <xsl:value-of select="''"/>
                                </pfx53:parentProductCode>
                                <pfx53:action>
                                    <xsl:value-of select="'NOCHANGE'"/>
                                </pfx53:action>
                            </pfx53:product>
                            <pfx53:product>
                                <pfx53:lineID>
                                    <xsl:value-of select="''"/>
                                </pfx53:lineID>
                                <pfx53:productType>
                                    <xsl:value-of select="'ProductSpecification'"/>
                                </pfx53:productType>
                                <pfx53:productCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ECM_PACKAGE_ID"/>
                                </pfx53:productCode>
                                <pfx53:parentProductCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PARENT_PRODUCT_CODE"/>
                                </pfx53:parentProductCode>
                                <pfx53:action>
                                    <xsl:value-of select="'NOCHANGE'"/>
                                </pfx53:action>
                            </pfx53:product>
                            <pfx53:product>
                                <pfx53:lineID>
                                    <xsl:value-of select="''"/>
                                </pfx53:lineID>
                                <pfx53:productType>
                                    <xsl:value-of select="'CustomerFacingServiceSpec'"/>
                                </pfx53:productType>
                                <pfx53:productCode>
                                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='CFSSID']/pfx45:value"/>
                                </pfx53:productCode>
                                <pfx53:parentProductCode>
                                    <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ECM_PACKAGE_ID"/>
                                </pfx53:parentProductCode>
                                <pfx53:action>
                                    <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType='SUBSCRIBE') then 'ADD' else 'DEL'"/>
                                </pfx53:action>
                                <pfx53:productAttributeList>
                                    <pfx53:productAttribute>
                                        <pfx53:name>
                                            <xsl:value-of select="'SP_SYNCMAINSERVICE'"/>
                                        </pfx53:name>
                                        <pfx53:value>
                                            <xsl:value-of select="'Y'"/>
                                        </pfx53:value>
                                    </pfx53:productAttribute>
                                    <pfx53:productAttribute>
                                        <pfx53:name>
                                            <xsl:value-of select="'SP_INTPROMO_AVAILABLE'"/>
                                        </pfx53:name>
                                        <pfx53:value>
                                            <xsl:value-of select="substring-after($ESI_Call_SyncServiceQuery/ResponseData, '|')"/>
                                        </pfx53:value>
                                    </pfx53:productAttribute>
                                </pfx53:productAttributeList>
                            </pfx53:product>
                            <xsl:for-each select="$Parse-Order/Resultsets/ResultSet1/Record1[GLOBAL_PRODUCT_CODE!=$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='CFSSID']/pfx45:value]">
                                <pfx53:product>
                                    <pfx53:lineID>
                                        <xsl:value-of select="''"/>
                                    </pfx53:lineID>
                                    <pfx53:productType>
                                        <xsl:value-of select="'CustomerFacingServiceSpec'"/>
                                    </pfx53:productType>
                                    <pfx53:productCode>
                                        <xsl:value-of select="current()/GLOBAL_PRODUCT_CODE"/>
                                    </pfx53:productCode>
                                    <pfx53:parentProductCode>
                                        <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ECM_PACKAGE_ID"/>
                                    </pfx53:parentProductCode>
                                    <pfx53:action>
                                        <xsl:value-of select="if(current()/ACTION='Add') then 'ADD' else 'DEL'"/>
                                    </pfx53:action>
                                    <pfx53:productAttributeList>
                                        <pfx53:productAttribute>
                                            <pfx53:name>
                                                <xsl:value-of select="'SP_SYNCMAINSERVICE'"/>
                                            </pfx53:name>
                                            <pfx53:value>
                                                <xsl:value-of select="'N'"/>
                                            </pfx53:value>
                                        </pfx53:productAttribute>
                                    </pfx53:productAttributeList>
                                </pfx53:product>
                            </xsl:for-each>
                        </pfx53:productList>
                        <pfx53:lineType>
                            <xsl:value-of select="'PREPAID'"/>
                        </pfx53:lineType>
                    </pfx53:subscriptionInfo>
                </pfx53:subscriptionList>
                <pfx53:customerInfo>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CRM_CUSTOMER_ID">
                        <pfx53:crmCustomerId>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CRM_CUSTOMER_ID"/>
                        </pfx53:crmCustomerId>
                    </xsl:if>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CUSTOMER_TYPE">
                        <pfx53:customerType>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CUSTOMER_TYPE"/>
                        </pfx53:customerType>
                    </xsl:if>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PREF_LANG_CODE">
                        <pfx53:preferredLanguageCode>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/PREF_LANG_CODE"/>
                        </pfx53:preferredLanguageCode>
                    </xsl:if>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1/ARABIC_NAME">
                        <pfx53:name>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/ARABIC_NAME"/>
                        </pfx53:name>
                    </xsl:if>
                </pfx53:customerInfo>
                <pfx53:orderHeader>
                    <pfx53:orderType>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/SyncOrderType"/>
                    </pfx53:orderType>
                    <pfx53:orderNumber>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </pfx53:orderNumber>
                    <pfx53:createdDate>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx53:createdDate>
                    <pfx53:requestedDate>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx53:requestedDate>
                    <pfx53:sourceSystem>
                        <xsl:value-of select="'External Channel'"/>
                    </pfx53:sourceSystem>
                    <pfx53:orderSubType>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/SyncOrderSubType"/>
                    </pfx53:orderSubType>
                    <pfx53:sourceOrderID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </pfx53:sourceOrderID>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SHOP_ID">
                        <pfx53:shopId>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SHOP_ID"/>
                        </pfx53:shopId>
                    </xsl:if>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SHOP_NAME">
                        <pfx53:shopName>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/SHOP_NAME"/>
                        </pfx53:shopName>
                    </xsl:if>
                    <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;1&quot;)))">
                        <pfx53:sourceCreatedBy>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                        </pfx53:sourceCreatedBy>
                    </xsl:if>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BUSINESS_UNIT">
                        <pfx53:buID>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BUSINESS_UNIT"/>
                        </pfx53:buID>
                    </xsl:if>
                    <pfx53:batchType>
                        <xsl:value-of select="'N'"/>
                    </pfx53:batchType>
                    <pfx53:channel>
                        <xsl:value-of select="'External Channel'"/>
                    </pfx53:channel>
                    <pfx53:revision>
                        <xsl:value-of select="'1'"/>
                    </pfx53:revision>
                    <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CURRENCY_CODE">
                        <pfx53:currencyCode>
                            <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/CURRENCY_CODE"/>
                        </pfx53:currencyCode>
                    </xsl:if>
                </pfx53:orderHeader>
                <pfx53:paymentList>
                    <pfx53:paymentInfo>
                        <xsl:if test="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BILLING_ACCOUNT_NUMBER">
                            <pfx53:bscsBillingAccountNumber>
                                <xsl:value-of select="$Parse-Order/Resultsets/ResultSet1/Record1[1]/BILLING_ACCOUNT_NUMBER"/>
                            </pfx53:bscsBillingAccountNumber>
                        </xsl:if>
                    </pfx53:paymentInfo>
                </pfx53:paymentList>
            </pfx53:orderRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_OM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>974</pd:x>
        <pd:y>205</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($PrepareOMRequest/pfx53:orderRequest)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>594</pd:x>
        <pd:y>258</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
                <data>
                    <ns16:CreateOrderRes>
                        <ns16:errorCode>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                        </ns16:errorCode>
                        <ns16:errorDescription>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                        </ns16:errorDescription>
                    </ns16:CreateOrderRes>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call ProductValidation">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>505</pd:x>
        <pd:y>86</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Map-Data-For-ProductValidation/pfx56:CheckProductEligibility_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ESI_RequestQueue_ProductValidation"/>
                </EMS_DestinationQueue>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="'60'"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-For-ProductValidation">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>505</pd:x>
        <pd:y>193</pd:y>
        <config>
            <element ref="pfx56:CheckProductEligibility_Input"/>
        </config>
        <pd:inputBindings>
            <pfx56:CheckProductEligibility_Input>
                <pfx56:ProductId>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                </pfx56:ProductId>
                <pfx56:MSISDN>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                </pfx56:MSISDN>
            </pfx56:CheckProductEligibility_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>715</pd:x>
        <pd:y>86</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx56:CheckProductEligibility_Output"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Call-ProductValidation/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-for productvalidation">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>818</pd:x>
        <pd:y>58</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$Parse-XML/pfx56:CheckProductEligibility_Output/pfx56:Error_spcMessage"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Parse-XML/pfx56:CheckProductEligibility_Output/pfx56:Error_spcCode"/>
                </messageCode>
                <data>
                    <ns16:CreateOrderRes>
                        <ns16:errorCode>
                            <xsl:value-of select="$Parse-XML/pfx56:CheckProductEligibility_Output/pfx56:Error_spcCode"/>
                        </ns16:errorCode>
                        <ns16:errorDescription>
                            <xsl:value-of select="$Parse-XML/pfx56:CheckProductEligibility_Output/pfx56:Error_spcMessage"/>
                        </ns16:errorDescription>
                    </ns16:CreateOrderRes>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-for error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1048</pd:x>
        <pd:y>313</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring">
                    <message>
                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultcode">
                    <messageCode>
                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultcode"/>
                    </messageCode>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="string-length(tib:trim($_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultcode))>0">
                        <data>
                            <ns16:CreateOrderRes>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultcode">
                                    <ns16:errorCode>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultcode"/>
                                    </ns16:errorCode>
                                </xsl:if>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring">
                                    <ns16:errorDescription>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultstring"/>
                                    </ns16:errorDescription>
                                </xsl:if>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:when>
                    <xsl:when test="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpClientException">
                        <data>
                            <ns16:CreateOrderRes>
                                <ns16:errorCode>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpClientException/msgCode"/>
                                </ns16:errorCode>
                                <ns16:errorDescription>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpClientException/msg"/>
                                </ns16:errorDescription>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:when>
                    <xsl:when test="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpServerException">
                        <data>
                            <ns16:CreateOrderRes>
                                <ns16:errorCode>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpServerException/msgCode"/>
                                </ns16:errorCode>
                                <ns16:errorDescription>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpServerException/msg"/>
                                </ns16:errorDescription>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:when>
                    <xsl:when test="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpCommunicationException">
                        <data>
                            <ns16:CreateOrderRes>
                                <ns16:errorCode>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpCommunicationException/msgCode"/>
                                </ns16:errorCode>
                                <ns16:errorDescription>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/ns22:HttpCommunicationException/msg"/>
                                </ns16:errorDescription>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:when>
                    <xsl:when test="$_error_SOAPRequestReply/ActivityErrors/pfx17:ActivityTimedOutException">
                        <data>
                            <ns16:CreateOrderRes>
                                <ns16:errorCode>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/pfx17:ActivityTimedOutException/msgCode"/>
                                </ns16:errorCode>
                                <ns16:errorDescription>
                                    <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/pfx17:ActivityTimedOutException/msg"/>
                                </ns16:errorDescription>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:when>
                    <xsl:otherwise>
                        <data>
                            <ns16:CreateOrderRes>
                                <ns16:errorCode>
                                    <xsl:value-of select="$_error/ns9:ErrorReport/MsgCode"/>
                                </ns16:errorCode>
                                <ns16:errorDescription>
                                    <xsl:value-of select="$_error/ns9:ErrorReport/Msg"/>
                                </ns16:errorDescription>
                                <xsl:if test="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor">
                                    <ns16:errorSourceSystem>
                                        <xsl:value-of select="$_error_SOAPRequestReply/ActivityErrors/defaultFaultElement/faultactor"/>
                                    </ns16:errorSourceSystem>
                                </xsl:if>
                            </ns16:CreateOrderRes>
                        </data>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Preorder Postpaid Validation">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>595</pd:x>
        <pd:y>655</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Prepare-Validation-Request-1/pfx49:OrderPreValidation_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ESI_RequestQueue_PostpaidPreOrderValidation"/>
                </EMS_DestinationQueue>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="'60'"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Prepare Validation Request">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>478</pd:y>
        <config>
            <element ref="pfx49:OrderPreValidation_Input"/>
        </config>
        <pd:inputBindings>
            <pfx49:OrderPreValidation_Input>
                <pfx49:TargetCustNo>
                    <xsl:value-of select="''"/>
                </pfx49:TargetCustNo>
                <pfx49:ProductId>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                </pfx49:ProductId>
                <pfx49:OrderSubType>
                    <xsl:value-of select="'Add/Remove/Update'"/>
                </pfx49:OrderSubType>
                <pfx49:MSISDN>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                </pfx49:MSISDN>
                <pfx49:Operation>
                    <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/ADDRENEW) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;'Delete'"/>
                </pfx49:Operation>
            </pfx49:OrderPreValidation_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-Response-Data">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>785</pd:x>
        <pd:y>642</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx49:OrderPreValidation_Output"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Call-Preorder-Postpaid-Validation/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Validation-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>654</pd:x>
        <pd:y>541</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="if(string-length($ParseSP-Response/pfx55:ErrorResponse/pfx55:Error_SourceErrDesc)>0) then $ParseSP-Response/pfx55:ErrorResponse/pfx55:Error_SourceErrDesc else&#xA;if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORMSG_OUT"/>
                </message>
                <messageCode>
                    <xsl:value-of select="if(string-length($ParseSP-Response/pfx55:ErrorResponse/pfx55:Error_SourceErrDesc)>0) then $ParseSP-Response/pfx55:ErrorResponse/pfx55:Error_SourceErrCode else&#xA;if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT"/>
                </messageCode>
                <data>
                    <ns16:CreateOrderRes>
                        <ns11:Response>
                            <ResponseCode>
                                <xsl:value-of select="if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORMSG_OUT"/>
                            </ResponseDescription>
                        </ns11:Response>
                        <xsl:if test="if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT">
                            <ns16:errorCode>
                                <xsl:value-of select="if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT"/>
                            </ns16:errorCode>
                        </xsl:if>
                        <ns16:errorDescription>
                            <xsl:value-of select="if(string-length($Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc)>0 and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode!=0) then $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrDesc else&#xA;$ParseSP-Response/resultSet/outputSet/P_ERRORMSG_OUT"/>
                        </ns16:errorDescription>
                    </ns16:CreateOrderRes>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call-Preorder-Postpaid-Validation-SP">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>589</pd:x>
        <pd:y>470</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Prepare-Validation-Request/pfx49:OrderPreValidation_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ESI_RequestQueue_PreorderValidationSP"/>
                </EMS_DestinationQueue>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="'60'"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseSP-Response">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>766</pd:x>
        <pd:y>471</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:choice>
                    <xsd:element ref="pfx55:ErrorResponse"/>
                    <xsd:element ref="pfx57:resultSet"/>
                </xsd:choice>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Call-Preorder-Postpaid-Validation-SP/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>17</pd:x>
        <pd:y>177</pd:y>
        <pd:width>369</pd:width>
        <pd:height>274</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/ns8:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CheckMSISDN</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log_CDM_Request-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CheckMSISDN</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_CheckMSISDN/ActivityErrors/pfx58:JDBCTimedOutException)
or
exists($_error_CheckMSISDN/ActivityErrors/pfx58:LoginTimedOutException)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>Technical Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CheckMSISDN</pd:from>
            <pd:to>Log_CDM_Request-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="CheckMSISDN">
            <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
            <pd:x>116</pd:x>
            <pd:y>249</pd:y>
            <config>
                <timeout>10</timeout>
                <maxRows>100</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/CommonResources/Connections/JDBC/External/SeibelLOVConnection.sharedjdbc</jdbcSharedConfig>
                <ProcedureName>ZAINKW_SUBSCRIBER_INFO_SP</ProcedureName>
                <oraObjects/>
                <oraTables/>
                <parameterTypes>
                    <parameter>
                        <colName>P_SUBNO_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_PRODUCTID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_SYNC_FLAG_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_PAYMENT_CD_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_MAIN_SERVICE_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_LINE_TYPE_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_SUB_STATUS_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_OFFER_ELIG_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORCODE_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORMSG_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                </parameterTypes>
            </config>
            <pd:inputBindings>
                <inputs>
                    <inputSet>
                        <P_SUBNO_IN>
                            <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn/@xsi:nil"/>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                        </P_SUBNO_IN>
                        <P_PRODUCTID_IN>
                            <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil"/>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                        </P_PRODUCTID_IN>
                    </inputSet>
                </inputs>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>313</pd:x>
            <pd:y>381</pd:y>
            <config/>
            <pd:inputBindings>
                <ns0:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/CommonSettings/JMSTimeOuts/Timeout_Regular_Wait"/>
                    </IntervalInMillisec>
                </ns0:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>202</pd:x>
            <pd:y>320</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Technical Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>119</pd:x>
            <pd:y>379</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <pfx:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns9:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns9:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns9:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </pfx:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log_CDM_Request-1">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>279</pd:x>
            <pd:y>249</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <pfx12:LogRequest>
                    <ns6:Header>
                        <ns6:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns6:ApplicationID>
                        <ns6:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                        </ns6:ComponentName>
                        <ns6:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns6:Hostname>
                        <ns6:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns6:Timestamp>
                        <ns6:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_ORDER"/>
                        </ns6:TransactionDomain>
                        <ns6:TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                        </ns6:TransactionType>
                        <ns6:TransactionID>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </ns6:TransactionID>
                        <ns6:Message>
                            <xsl:value-of select="tib:render-xml($CheckMSISDN/resultSet)"/>
                        </ns6:Message>
                        <xsl:if test="not(($CheckMSISDN/resultSet/outputSet/P_OFFER_ELIG_OUT/@xsi:nil=(&quot;true&quot;)) or ($CheckMSISDN/resultSet/outputSet/P_OFFER_ELIG_OUT/@xsi:nil=(&quot;1&quot;)))">
                            <ns6:Transaction>
                                <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_OFFER_ELIG_OUT"/>
                            </ns6:Transaction>
                        </xsl:if>
                    </ns6:Header>
                    <TimeDuration>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </pfx12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>503</pd:x>
        <pd:y>327</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SP_Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>195</pd:x>
        <pd:y>571</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORMSG_OUT"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT"/>
                </messageCode>
                <data>
                    <ns16:CreateOrderRes>
                        <ns11:Response>
                            <xsl:if test="not(($CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;true&quot;)) or ($CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <ResponseCode>
                                    <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT"/>
                                </ResponseCode>
                            </xsl:if>
                            <xsl:if test="not(($CheckMSISDN/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;true&quot;)) or ($CheckMSISDN/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <ResponseDescription>
                                    <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORMSG_OUT"/>
                                </ResponseDescription>
                            </xsl:if>
                        </ns11:Response>
                        <ns16:errorCode>
                            <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT"/>
                        </ns16:errorCode>
                        <ns16:errorDescription>
                            <xsl:value-of select="$CheckMSISDN/resultSet/outputSet/P_ERRORMSG_OUT"/>
                        </ns16:errorDescription>
                    </ns16:CreateOrderRes>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>332</pd:x>
        <pd:y>527</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Prepare-Validation-Request-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>440</pd:x>
        <pd:y>641</pd:y>
        <config>
            <element ref="pfx49:OrderPreValidation_Input"/>
        </config>
        <pd:inputBindings>
            <pfx49:OrderPreValidation_Input>
                <pfx49:TargetCustNo>
                    <xsl:value-of select="''"/>
                </pfx49:TargetCustNo>
                <pfx49:ProductId>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                </pfx49:ProductId>
                <pfx49:OrderSubType>
                    <xsl:value-of select="'Add/Remove/Update'"/>
                </pfx49:OrderSubType>
                <pfx49:MSISDN>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                </pfx49:MSISDN>
                <pfx49:Operation>
                    <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/ADDRENEW) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Delete"/>
                </pfx49:Operation>
            </pfx49:OrderPreValidation_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallMultipleOrder">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>954</pd:x>
        <pd:y>657</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/HelperProcess/MultipleOrderSubmission.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx45:processOrderListElement>
                    <pfx45:session>
                        <pfx45:username>
                            <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil"/>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                        </pfx45:username>
                        <pfx45:password>
                            <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:password/@xsi:nil"/>
                            <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:password"/>
                        </pfx45:password>
                    </pfx45:session>
                    <pfx45:msisdn>
                        <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn/@xsi:nil"/>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                    </pfx45:msisdn>
                    <pfx45:orderList>
                        <pfx45:order>
                            <pfx45:orderType>
                                <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType='SUBSCRIBE') then 'Subscribe' else 'Unsubscribe'"/>
                            </pfx45:orderType>
                            <pfx45:serviceCode>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='EquipID']/pfx45:value"/>
                            </pfx45:serviceCode>
                            <pfx45:serialNumber>
                                <xsl:value-of select="''"/>
                            </pfx45:serialNumber>
                            <pfx45:paramList>
                                <pfx45:param>
                                    <pfx45:name>
                                        <xsl:value-of select="''"/>
                                    </pfx45:name>
                                    <pfx45:value>
                                        <xsl:value-of select="''"/>
                                    </pfx45:value>
                                </pfx45:param>
                            </pfx45:paramList>
                        </pfx45:order>
                    </pfx45:orderList>
                </pfx45:processOrderListElement>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_FinalResponse-1">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1115</pd:x>
        <pd:y>655</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CallMultipleOrder/pfx45:processOrderResponseListElement)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PrepareFinalResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1288</pd:x>
        <pd:y>654</pd:y>
        <config>
            <element ref="ns16:CreateOrderRes"/>
        </config>
        <pd:inputBindings>
            <ns16:CreateOrderRes>
                <ns16:errorCode>
                    <xsl:value-of select="if($CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:resultCode=1) then 0 else&#xA;$CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:resultCode"/>
                </ns16:errorCode>
                <xsl:if test="not(($CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:value/@xsi:nil=(&quot;true&quot;)) or ($CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:value/@xsi:nil=(&quot;1&quot;)))">
                    <ns16:errorUsrErrorCode>
                        <xsl:value-of select="$CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:value"/>
                    </ns16:errorUsrErrorCode>
                </xsl:if>
                <xsl:if test="not(($CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:name/@xsi:nil=(&quot;true&quot;)) or ($CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:name/@xsi:nil=(&quot;1&quot;)))">
                    <ns16:errorUsrErrorDesc>
                        <xsl:value-of select="$CallMultipleOrder/pfx45:processOrderResponseListElement/pfx45:result/pfx45:paramList/pfx45:param[1]/pfx45:name"/>
                    </ns16:errorUsrErrorDesc>
                </xsl:if>
                <ns16:errorAddDesc1>
                    <xsl:value-of select="'Multiple'"/>
                </ns16:errorAddDesc1>
            </ns16:CreateOrderRes>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_FinalResponse-2">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1551</pd:x>
        <pd:y>653</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($PrepareFinalResponse/ns16:CreateOrderRes)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapAsyncData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>951</pd:x>
        <pd:y>459</pd:y>
        <config>
            <element ref="pfx59:ListOfCbio2asyncpostpaidorderdetails"/>
        </config>
        <pd:inputBindings>
            <pfx59:ListOfCbio2asyncpostpaidorderdetails>
                <pfx59:Cbio2AsyncPostpaidOrderDetails>
                    <pfx59:Operation>
                        <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/ADDRENEW) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Delete"/>
                    </pfx59:Operation>
                    <pfx59:OrderReason>
                        <xsl:value-of select="'Legal'"/>
                    </pfx59:OrderReason>
                    <pfx59:OrderSubType>
                        <xsl:value-of select="'Add/Remove/Update Multiple'"/>
                    </pfx59:OrderSubType>
                    <pfx59:OrderType>
                        <xsl:value-of select="'Modify'"/>
                    </pfx59:OrderType>
                    <pfx59:ProductId>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                    </pfx59:ProductId>
                    <pfx59:MSISDN>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                    </pfx59:MSISDN>
                    <pfx59:SourceSystem>
                        <xsl:value-of select="'External Channel'"/>
                    </pfx59:SourceSystem>
                    <pfx59:TransactionRef>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </pfx59:TransactionRef>
                    <pfx59:UserName>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                    </pfx59:UserName>
                </pfx59:Cbio2AsyncPostpaidOrderDetails>
            </pfx59:ListOfCbio2asyncpostpaidorderdetails>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Response-for-Async-1">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1245</pd:x>
        <pd:y>460</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($MapAsyncData/pfx59:ListOfCbio2asyncpostpaidorderdetails)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="if (string-length($Start/root/StartTimeStamp)>0)&#xA;then&#xA;tib:timestamp() - $Start/root/StartTimeStamp&#xA;else&#xA;$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendReqToCRM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1555</pd:x>
        <pd:y>461</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSender.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($MapAsyncData/pfx59:ListOfCbio2asyncpostpaidorderdetails)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/CRM_Request_Queue_PostpaidAsyncQueue"/>
                </EMS_DestinationQueue>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallNPRoaming">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1241</pd:x>
        <pd:y>299</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/HelperProcess/ESI_Call_NPRoamingBlockUnblock.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx59:ListOfCbio2asyncpostpaidorderdetails>
                    <xsl:for-each select="$MapAsyncData/pfx59:ListOfCbio2asyncpostpaidorderdetails/pfx59:Cbio2AsyncPostpaidOrderDetails">
                        <pfx59:Cbio2AsyncPostpaidOrderDetails>
                            <pfx59:Operation>
                                <xsl:value-of select="pfx59:Operation"/>
                            </pfx59:Operation>
                            <xsl:if test="pfx59:GiftReceiverMSISDN">
                                <pfx59:GiftReceiverMSISDN>
                                    <xsl:value-of select="pfx59:GiftReceiverMSISDN"/>
                                </pfx59:GiftReceiverMSISDN>
                            </xsl:if>
                            <xsl:if test="pfx59:GiftRemarks">
                                <pfx59:GiftRemarks>
                                    <xsl:value-of select="pfx59:GiftRemarks"/>
                                </pfx59:GiftRemarks>
                            </xsl:if>
                            <xsl:if test="pfx59:OrderReason">
                                <pfx59:OrderReason>
                                    <xsl:value-of select="pfx59:OrderReason"/>
                                </pfx59:OrderReason>
                            </xsl:if>
                            <pfx59:OrderSubType>
                                <xsl:value-of select="'NP Roaming'"/>
                            </pfx59:OrderSubType>
                            <pfx59:OrderType>
                                <xsl:value-of select="pfx59:OrderType"/>
                            </pfx59:OrderType>
                            <pfx59:ProductId>
                                <xsl:value-of select="pfx59:ProductId"/>
                            </pfx59:ProductId>
                            <xsl:if test="pfx59:Requestor">
                                <pfx59:Requestor>
                                    <xsl:value-of select="pfx59:Requestor"/>
                                </pfx59:Requestor>
                            </xsl:if>
                            <pfx59:MSISDN>
                                <xsl:value-of select="pfx59:MSISDN"/>
                            </pfx59:MSISDN>
                            <pfx59:SourceSystem>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                            </pfx59:SourceSystem>
                            <pfx59:TransactionRef>
                                <xsl:value-of select="pfx59:TransactionRef"/>
                            </pfx59:TransactionRef>
                            <pfx59:UserName>
                                <xsl:value-of select="pfx59:UserName"/>
                            </pfx59:UserName>
                        </pfx59:Cbio2AsyncPostpaidOrderDetails>
                    </xsl:for-each>
                </pfx59:ListOfCbio2asyncpostpaidorderdetails>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;1&quot;)))">
                    <SourceSystem>
                        <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                    </SourceSystem>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <ECMId>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='CFSSID']/pfx45:value"/>
                </ECMId>
                <ProductId>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                </ProductId>
                <LineType>
                    <xsl:value-of select="if($CheckMSISDN/resultSet/outputSet/P_LINE_TYPE_OUT='Prepaid') then 'PREP' else 'POST'"/>
                </LineType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AddOfferToCS">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>620</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/HelperProcess/ESI_Call_AddDelete.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns19:Set>
                    <ns19:MOType>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Transaction/UpdateMA-DA/MOType"/>
                    </ns19:MOType>
                    <ns19:MOId>
                        <ns20:actionid>
                            <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Add else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Delete"/>
                        </ns20:actionid>
                    </ns19:MOId>
                    <ns19:MOAttributes>
                        <ns20:setSubscription>
                            <xsl:attribute name="actionid">
                                <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Add else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Delete"/>
                            </xsl:attribute>
                            <ns20:msisdn>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                            </ns20:msisdn>
                            <ns20:actionid>
                                <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Add else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/EMAActionId/Delete"/>
                            </ns20:actionid>
                            <ns20:srvName>
                                <xsl:value-of select="'CMSTRSF'"/>
                            </ns20:srvName>
                            <ns20:prepost_paid>
                                <xsl:value-of select="'PREP'"/>
                            </ns20:prepost_paid>
                            <ns20:subscriberNumberNAI>
                                <xsl:value-of select="1"/>
                            </ns20:subscriberNumberNAI>
                            <ns20:offertype>
                                <xsl:value-of select="'DATA'"/>
                            </ns20:offertype>
                            <ns20:offerId>
                                <xsl:value-of select="$GetVariable/root/Records[CFSSId=$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='CFSSID']/pfx45:value]/CSOfferId"/>
                            </ns20:offerId>
                            <ns20:renewalFlag>
                                <xsl:value-of select="0"/>
                            </ns20:renewalFlag>
                            <ns20:orderNumber>
                                <xsl:value-of select="1"/>
                            </ns20:orderNumber>
                            <ns20:offerHandler>
                                <xsl:value-of select="$GetVariable/root/Records[CFSSId=$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='CFSSID']/pfx45:value]/OfferHandler"/>
                            </ns20:offerHandler>
                        </ns20:setSubscription>
                    </ns19:MOAttributes>
                </ns19:Set>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <xsl:if test="$Start/root/SourceSystem">
                    <SourceSystem>
                        <xsl:value-of select="$Start/root/SourceSystem"/>
                    </SourceSystem>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>1230</pd:x>
        <pd:y>35</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <statement>INSERT INTO SERVICEORDER_CSRECORDS (MSISDN,EQUIPID,ACTION,RESPONSECODE,RESPONSEDESC,CREATIONDATE,STATUS) VALUES(?,?,?,?,?,?,?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>MSISDN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>EQUIPID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ACTION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RESPONSECODE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RESPONSEDESC</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CREATIONDATE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <MSISDN>
                    <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn/@xsi:nil"/>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                </MSISDN>
                <EQUIPID>
                    <xsl:copy-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil"/>
                    <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                </EQUIPID>
                <ACTION>
                    <xsl:value-of select="if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/SUBSCRIBE) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;if($Start/root/pfx45:processOrderElement/pfx45:orderType=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OrderType/ADDRENEW) then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/OperationType/Add else&#xA;'Delete'"/>
                </ACTION>
                <RESPONSECODE>
                    <xsl:choose>
                        <xsl:when test="exists($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode)">
                            <xsl:value-of select="$AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RESPONSECODE>
                <RESPONSEDESC>
                    <xsl:choose>
                        <xsl:when test="exists($AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respDesc)">
                            <xsl:value-of select="$AddOfferToCS/ns19:SetResponse/ns19:MOAttributes/ns20:setResponseSubscription/ns20:respDesc"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RESPONSEDESC>
                <CREATIONDATE>
                    <xsl:choose>
                        <xsl:when test="exists(tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime()))">
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CREATIONDATE>
                <STATUS>
                    <xsl:value-of select="'NEW'"/>
                </STATUS>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>321</pd:x>
        <pd:y>36</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/CFSSID.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-3">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>885</pd:x>
        <pd:y>558</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate-Error-ProductNotEligible">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>569</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrCode"/>
                </messageCode>
                <data>
                    <ns16:CreateOrderRes>
                        <ns11:Response>
                            <ResponseCode>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrCode"/>
                            </ResponseCode>
                            <ResponseDescription>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrDesc"/>
                            </ResponseDescription>
                        </ns11:Response>
                        <ns16:errorCode>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrCode"/>
                        </ns16:errorCode>
                        <ns16:errorDescription>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/ProductNotEligibleErrDesc"/>
                        </ns16:errorDescription>
                    </ns16:CreateOrderRes>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_Call_InsertOrderDetails">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1475</pd:x>
        <pd:y>103</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/ExternalChannelOrderSubmission/HelperProcess/ESI_Call_InsertOrderDetails.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns21:ListOfCbio2prepaidorderhistory>
                    <ns21:Cbio2PrepaidOrderHistory>
                        <ns21:ErrorCode>
                            <xsl:value-of select="0"/>
                        </ns21:ErrorCode>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:sourceSystem">
                            <ns21:Channel>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:sourceSystem"/>
                            </ns21:Channel>
                        </xsl:if>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId">
                            <ns21:CwOrderNum>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderId"/>
                            </ns21:CwOrderNum>
                        </xsl:if>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status">
                            <ns21:CwOrderStatus>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status"/>
                            </ns21:CwOrderStatus>
                        </xsl:if>
                        <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:msisdn/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:msisdn/@xsi:nil=(&quot;1&quot;)))">
                            <ns21:MSISDN>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:msisdn"/>
                            </ns21:MSISDN>
                        </xsl:if>
                        <xsl:if test="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderStartTime">
                            <ns21:OrderDate>
                                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:cwOrderStartTime"/>
                            </ns21:OrderDate>
                        </xsl:if>
                        <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:serviceCode/@xsi:nil=(&quot;1&quot;)))">
                            <ns21:ServiceId>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:serviceCode"/>
                            </ns21:ServiceId>
                        </xsl:if>
                        <ns21:TransactionRef>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </ns21:TransactionRef>
                        <xsl:if test="not(($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;true&quot;)) or ($Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username/@xsi:nil=(&quot;1&quot;)))">
                            <ns21:UserName>
                                <xsl:value-of select="$Start/root/pfx45:processOrderElement/pfx45:session/pfx45:username"/>
                            </ns21:UserName>
                        </xsl:if>
                        <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo/pfx48:productList/pfx48:product">
                            <ns21:PrepaidOrderHistoryServiceDetails>
                                <ns21:ActionCode>
                                    <xsl:value-of select="pfx48:action"/>
                                </ns21:ActionCode>
                                <ns21:EquipId>
                                    <xsl:value-of select="pfx48:productCode"/>
                                </ns21:EquipId>
                                <xsl:if test="pfx48:parentProductCode">
                                    <ns21:ParentEquipId>
                                        <xsl:value-of select="pfx48:parentProductCode"/>
                                    </ns21:ParentEquipId>
                                </xsl:if>
                                <ns21:ServiceStartDate>
                                    <xsl:value-of select="if(string-length($SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerStartDate)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerStartDate)&#xA;else ''"/>
                                </ns21:ServiceStartDate>
                                <ns21:ServiceEndDate>
                                    <xsl:value-of select="if(string-length($SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerEndDate)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:subscriptionList/pfx48:subscriptionInfo[1]/pfx48:productList/pfx48:product[1]/pfx48:offerEndDate)&#xA;else ''"/>
                                </ns21:ServiceEndDate>
                            </ns21:PrepaidOrderHistoryServiceDetails>
                        </xsl:for-each>
                    </ns21:Cbio2PrepaidOrderHistory>
                </ns21:ListOfCbio2prepaidorderhistory>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <xsl:if test="$Start/root/SourceSystem">
                    <SourceSystem>
                        <xsl:value-of select="$Start/root/SourceSystem"/>
                    </SourceSystem>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="IgnError">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:description>Ignore Error while order details insertion</pd:description>
        <pd:x>1590</pd:x>
        <pd:y>174</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>ESI_Call_SyncServiceQuery</pd:from>
        <pd:to>Parse-Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-Order</pd:from>
        <pd:to>PrepareOMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Parse-Order/Resultsets) and $CheckMSISDN/resultSet/outputSet/P_SYNC_FLAG_OUT='Y'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_OM_Response</pd:from>
        <pd:to>PrepareDataForCRMUpdate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendUpdateToCRM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_FinalResponse</pd:from>
        <pd:to>ESI_Call_InsertOrderDetails</pd:to>
        <pd:xpathDescription>NoErr</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status!='Error'
and
$SOAPRequestReply/outputMessage/pfx48:orderResponse/pfx48:orderHeader/pfx48:status!='Cancelled'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data For SyncService</pd:from>
        <pd:to>ESI_Call_SyncServiceQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-Order</pd:from>
        <pd:to>Map Data for CRMError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data for CRMError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>Log_OM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PrepareOMRequest</pd:from>
        <pd:to>Log_OM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_OM_Request</pd:from>
        <pd:to>SOAPRequestReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-Order</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-For-ProductValidation</pd:from>
        <pd:to>Call ProductValidation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call ProductValidation</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Parse-Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx56:CheckProductEligibility_Output/pfx56:Error_spcCode=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Generate-Error-for productvalidation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_FinalResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PrepareDataForCRMUpdate</pd:from>
        <pd:to>Log_FinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>Generate-Error-for error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Preorder Postpaid Validation</pd:from>
        <pd:to>Parse-Response-Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Prepare Validation Request</pd:from>
        <pd:to>Call-Preorder-Postpaid-Validation-SP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call-Preorder-Postpaid-Validation-SP</pd:from>
        <pd:to>ParseSP-Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($CheckMSISDN/resultSet/outputSet/P_LINE_TYPE_OUT='Prepaid' and $CheckMSISDN/resultSet/outputSet/P_MAIN_SERVICE_OUT!='Y')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Map Data For SyncService</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Map-Data-For-ProductValidation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-Order</pd:from>
        <pd:to>MapAsyncData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckMSISDN/resultSet/outputSet/P_SYNC_FLAG_OUT!='Y' or
$Start/root/pfx45:processOrderElement/pfx45:serviceCode=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/NPRoamingEquipId</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>SP_Error</pd:to>
        <pd:xpathDescription>Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckMSISDN/resultSet/outputSet/P_ERRORCODE_OUT!=0 or exists($_error_CheckMSISDN/ActivityErrors) or
((exists($_error_CheckMSISDN/ActivityErrors/pfx58:JDBCTimedOutException) or
exists($_error_CheckMSISDN/ActivityErrors/pfx58:LoginTimedOutException) or
exists($_error_CheckMSISDN/ActivityErrors/pfx58:JDBCConnectionNotFoundException)) and
$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='BillingType']/pfx45:value='Postpaid')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Prepare Validation Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Prepare-Validation-Request-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Prepare-Validation-Request-1</pd:from>
        <pd:to>Call Preorder Postpaid Validation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallMultipleOrder</pd:from>
        <pd:to>Log_FinalResponse-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_FinalResponse-1</pd:from>
        <pd:to>PrepareFinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PrepareFinalResponse</pd:from>
        <pd:to>Log_FinalResponse-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_FinalResponse-2</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapAsyncData</pd:from>
        <pd:to>Log_CDM_Response-for-Async-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response-for-Async-1</pd:from>
        <pd:to>SendReqToCRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendReqToCRM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseSP-Response</pd:from>
        <pd:to>Null-3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-Response-Data</pd:from>
        <pd:to>Null-3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapAsyncData</pd:from>
        <pd:to>CallNPRoaming</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='EquipID']/pfx45:value=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/NPRoamingEquipId</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CallNPRoaming</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>((exists($_error_CheckMSISDN/ActivityErrors/pfx58:JDBCTimedOutException) or
exists($_error_CheckMSISDN/ActivityErrors/pfx58:LoginTimedOutException) or
exists($_error_CheckMSISDN/ActivityErrors/pfx58:JDBCConnectionNotFoundException)) and
$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/ExternalChannel/AlternateCall='Y' and
$Start/root/pfx45:processOrderElement/pfx45:paramList/pfx45:param[pfx45:name='BillingType']/pfx45:value='Prepaid')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AddOfferToCS</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>AddOfferToCS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-3</pd:from>
        <pd:to>CallMultipleOrder</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT='0' and $CheckMSISDN/resultSet/outputSet/P_MAIN_SERVICE_OUT='Y'  and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-3</pd:from>
        <pd:to>Generate-Validation-Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-3</pd:from>
        <pd:to>MapAsyncData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ParseSP-Response/resultSet/outputSet/P_ERRORCODE_OUT='0' and $CheckMSISDN/resultSet/outputSet/P_MAIN_SERVICE_OUT!='Y'  and $Parse-Response-Data/pfx49:OrderPreValidation_Output/pfx49:ErrorSourceErrCode=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:description>$CheckMSISDN/resultSet/outputSet/P_OFFER_ELIG_OUT='N'  and  $CheckMSISDN/resultSet/outputSet/P_LINE_TYPE_OUT='Prepaid'</pd:description>
        <pd:from>Group</pd:from>
        <pd:to>Generate-Error-ProductNotEligible</pd:to>
        <pd:xpathDescription>NotElig-Prepaid</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckMSISDN/resultSet/outputSet/P_OFFER_ELIG_OUT='N'
and
$CheckMSISDN/resultSet/outputSet/P_LINE_TYPE_OUT='Prepaid'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_Call_InsertOrderDetails</pd:from>
        <pd:to>SendUpdateToCRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_Call_InsertOrderDetails</pd:from>
        <pd:to>IgnError</pd:to>
        <pd:xpathDescription>IgnoreError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-26368</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IgnError</pd:from>
        <pd:to>SendUpdateToCRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>CR-19-044 :

Date-13 NOV-2019 : an intermediate Table insertion was required to be done in order to resolve order already exist issue.
Change: a new CRM API CBiO2_spcPrepaid_spcOrder_spcDetails_spcWorkflow is required to be called in case of successull Order creation in CW</pd:description>
        <pd:x>2330</pd:x>
        <pd:y>51</pd:y>
        <pd:width>680</pd:width>
        <pd:height>69</pd:height>
        <pd:fontName>Dialog.plain-plain-10</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-13369549</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
    <pd:label>
        <pd:name>Label (1)</pd:name>
        <pd:description>              CR-21-091
Added the prepaid Condition 
</pd:description>
        <pd:x>92</pd:x>
        <pd:y>463</pd:y>
        <pd:width>148</pd:width>
        <pd:height>46</pd:height>
        <pd:fontName>Dialog.bold-plain-10</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-13369549</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>1</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>