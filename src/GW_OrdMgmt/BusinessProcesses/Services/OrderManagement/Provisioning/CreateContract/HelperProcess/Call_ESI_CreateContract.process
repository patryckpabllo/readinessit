<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx42="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx41="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2CustomerModificationReqIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/OrderManagement/Provisioning/CreateContract/HelperProcess/Call_ESI_CreateContract.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx41:CreateOrderRequest"/>
                    <xsd:element name="TransactionID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>138</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($CDMToNative/pfx42:CreateOrderResponse)">
                <xsl:copy-of select="$CDMToNative/pfx42:CreateOrderResponse"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$MapErrorResponse/pfx42:CreateOrderResponse"/>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx42:CreateOrderResponse"/>
    <pd:endX>1374</pd:endX>
    <pd:endY>312</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="pfx42:CreateOrderResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>746</pd:x>
        <pd:y>311</pd:y>
        <config>
            <element ref="pfx42:CreateOrderResponse"/>
        </config>
        <pd:inputBindings>
            <pfx42:CreateOrderResponse>
                <pfx42:orderHeader>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID">
                        <pfx42:correlationID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID"/>
                        </pfx42:correlationID>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId">
                        <pfx42:serviceOrderId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId"/>
                        </pfx42:serviceOrderId>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:salesOrderId">
                        <pfx42:salesOrderId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:salesOrderId"/>
                        </pfx42:salesOrderId>
                    </xsl:if>
                    <pfx42:Status>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/SuccessMsg"/>
                    </pfx42:Status>
                </pfx42:orderHeader>
                <xsl:if test="exists($ParseResponse/pfx39:CreateOrderRes/ns11:ZainIdentifiers[1]/contractID/ns11:value)">
                    <pfx42:contractNew>
                        <xsl:if test="$ParseResponse/pfx39:CreateOrderRes/ns11:ZainIdentifiers[1]/contractID/ns11:value">
                            <pfx42:coIdPub>
                                <xsl:value-of select="$ParseResponse/pfx39:CreateOrderRes/ns11:ZainIdentifiers[1]/contractID/ns11:value"/>
                            </pfx42:coIdPub>
                        </xsl:if>
                    </pfx42:contractNew>
                </xsl:if>
            </pfx42:CreateOrderResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>603</pd:x>
        <pd:y>178</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_ORDER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Common_EAI_EMSSender_WithRetry/ResponseData)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>292</pd:x>
        <pd:y>175</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_ORDER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx38:CreateOrderReq)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>748</pd:x>
        <pd:y>74</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <pfx42:CreateOrderResponse>
                        <pfx42:response>
                            <xsl:if test="$_error/ns9:ErrorReport/MsgCode">
                                <pfx42:responseCode>
                                    <xsl:value-of select="$_error/ns9:ErrorReport/MsgCode"/>
                                </pfx42:responseCode>
                            </xsl:if>
                            <pfx42:responseMessage>
                                <xsl:value-of select="$_error/ns9:ErrorReport/Msg"/>
                            </pfx42:responseMessage>
                        </pfx42:response>
                    </pfx42:CreateOrderResponse>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>429</pd:x>
        <pd:y>178</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx38:CreateOrderReq)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/BPI_Request_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/JMS_Timeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>283</pd:x>
        <pd:y>297</pd:y>
        <config>
            <element ref="pfx38:CreateOrderReq"/>
        </config>
        <pd:inputBindings>
            <pfx38:CreateOrderReq>
                <ns11:BusinessMessageHeader>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID">
                        <ExternalTransactionID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID"/>
                        </ExternalTransactionID>
                    </xsl:if>
                    <SourceSystemInfo>
                        <SystemtId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:buIdPubKey"/>
                        </SystemtId>
                        <SystemAddress>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:buIdPubValue"/>
                        </SystemAddress>
                    </SourceSystemInfo>
                </ns11:BusinessMessageHeader>
                <ns11:ZainIdentifiers>
                    <ns11:customerId>
                        <ns11:systemName>
                            <xsl:value-of select="&quot;CRM&quot;"/>
                        </ns11:systemName>
                        <ns11:value>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:customerRead/pfx41:csIdPub"/>
                        </ns11:value>
                    </ns11:customerId>
                </ns11:ZainIdentifiers>
                <ns11:ZainCustomerOrderItem>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:sccodePub">
                        <billingContractId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:sccodePub"/>
                        </billingContractId>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:coNonexplServPaymentType">
                        <OrderType>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:coNonexplServPaymentType"/>
                        </OrderType>
                    </xsl:if>
                    <xsl:if test="{--CR-22-004--}&#xA;string-length(tib:trim($Start/root/pfx41:CreateOrderRequest/pfx41:contractServicesWrite/pfx41:effectiveDate))>0">
                        <AsofDate>
                            <xsl:value-of select="{--CR-22-004 --}&#xA;&#xA;$Start/root/pfx41:CreateOrderRequest/pfx41:contractServicesWrite/pfx41:effectiveDate"/>
                        </AsofDate>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:submIdPub">
                        <billMediumPublicKey>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:submIdPub"/>
                        </billMediumPublicKey>
                    </xsl:if>
                    <chargingPeriodAdjRef>
                        <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:chargingPeriodAdjustmentReference"/>
                    </chargingPeriodAdjRef>
                    <xsl:if test="string-length($Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumbers/pfx41:item[1]/pfx41:dnId)>0">
                        <directoryNumberId>
                            <xsl:value-of select="number($Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumbers/pfx41:item[1]/pfx41:dnId)"/>
                        </directoryNumberId>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:autoAssignCoreServ">
                        <directoryServicesRequired>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:autoAssignCoreServ"/>
                        </directoryServicesRequired>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:sdpId">
                        <equipmentTypeCode>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:sdpId"/>
                        </equipmentTypeCode>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:callDetail">
                        <ifBasicService>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:callDetail"/>
                        </ifBasicService>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumbers/pfx41:item[1]/pfx41:mainDirnum">
                        <SubscriberNo>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumbers/pfx41:item[1]/pfx41:mainDirnum"/>
                        </SubscriberNo>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:plcodePub">
                        <integrationID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:plcodePub"/>
                        </integrationID>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountId)&#xA;and $Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountId!=0">
                        <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountId">
                            <BillingAccountNumber>
                                <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountId"/>
                            </BillingAccountNumber>
                        </xsl:if>
                    </xsl:if>
                    <ratePlanDescription>
                        <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractNew/pfx41:rpcodePub"/>
                    </ratePlanDescription>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text08">
                        <reasonCode>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text08"/>
                        </reasonCode>
                    </xsl:if>
                    <serviceCode>
                        <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:sncodePub"/>
                    </serviceCode>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractDeviceAdd/pfx41:resNum">
                        <simNumber>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractDeviceAdd/pfx41:resNum"/>
                        </simNumber>
                    </xsl:if>
                    <xsl:for-each select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractServicesAdd/pfx41:services/pfx41:items[pfx41:isCore=&quot;false&quot;]">
                        <Product>
                            <xsl:if test="pfx41:OfferType">
                                <ProductType>
                                    <xsl:value-of select="pfx41:OfferType"/>
                                </ProductType>
                            </xsl:if>
                            <xsl:if test="pfx41:sncodePub">
                                <serviceID>
                                    <xsl:value-of select="pfx41:sncodePub"/>
                                </serviceID>
                            </xsl:if>
                            <xsl:if test="pfx41:spcodePub">
                                <servicePackageID>
                                    <xsl:value-of select="pfx41:spcodePub"/>
                                </servicePackageID>
                            </xsl:if>
                            <xsl:if test="pfx41:OfferSubType">
                                <crmProductSubType>
                                    <xsl:value-of select="pfx41:OfferSubType"/>
                                </crmProductSubType>
                            </xsl:if>
                        </Product>
                    </xsl:for-each>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text01)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;SalesAgent&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text01">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text01"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text02)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;Shop&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text02">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text02"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text03)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;SalesChannel&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text03">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text03"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text04)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;SubscriberName&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text04">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text04"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text05)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;AlternateNotificationNumber&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text05">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text05"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text06)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;PreferredTimingStart&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text06">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text06"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text07)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;PreferredTimingEnd&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text07">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text07"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text11)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;VBM&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text11">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text11"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text12)">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;HVLOP&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text12">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text12"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:if test="string-length($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text14)>0">
                        <LogicalResource>
                            <resourceName>
                                <xsl:value-of select="&quot;PO&quot;"/>
                            </resourceName>
                            <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text14">
                                <resourceValue>
                                    <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:text14"/>
                                </resourceValue>
                            </xsl:if>
                        </LogicalResource>
                    </xsl:if>
                    <xsl:for-each select="$Start/root/pfx41:CreateOrderRequest/pfx41:contractServicesWrite/pfx41:services/pfx41:item">
                        <ZainCustomerOrderItem>
                            <xsl:if test="string-length(pfx41:cosAccfeeOvw)>0">
                                <xsl:if test="pfx41:cosAccfeeOvw">
                                    <recurringChargeTotal>
                                        <xsl:value-of select="pfx41:cosAccfeeOvw"/>
                                    </recurringChargeTotal>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(pfx41:cosSubfeeOvw)>0">
                                <xsl:if test="pfx41:cosSubfeeOvw">
                                    <nonRecurringChargeTotal>
                                        <xsl:value-of select="pfx41:cosSubfeeOvw"/>
                                    </nonRecurringChargeTotal>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(pfx41:cosAccfeeOvwPrd)>0">
                                <xsl:if test="pfx41:cosAccfeeOvwPrd">
                                    <noOfBillCycle>
                                        <xsl:value-of select="pfx41:cosAccfeeOvwPrd"/>
                                    </noOfBillCycle>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="pfx41:sncodePub">
                                <serviceCode>
                                    <xsl:value-of select="pfx41:sncodePub"/>
                                </serviceCode>
                            </xsl:if>
                            <Product>
                                <ns11:ZainCharges>
                                    <ns11:Money>
                                        <xsl:if test="string-length(pfx41:advanceAccessOvw)>0">
                                            <xsl:if test="pfx41:advanceAccessOvw">
                                                <amount>
                                                    <xsl:value-of select="pfx41:advanceAccessOvw"/>
                                                </amount>
                                            </xsl:if>
                                        </xsl:if>
                                    </ns11:Money>
                                    <xsl:if test="pfx41:advanceAccessOvwPrd">
                                        <description>
                                            <xsl:value-of select="pfx41:advanceAccessOvwPrd"/>
                                        </description>
                                    </xsl:if>
                                </ns11:ZainCharges>
                                <xsl:if test="pfx41:cosQuantity">
                                    <volume>
                                        <xsl:value-of select="pfx41:cosQuantity"/>
                                    </volume>
                                </xsl:if>
                            </Product>
                        </ZainCustomerOrderItem>
                    </xsl:for-each>
                    <ListOfServiceParameters>
                        <xsl:for-each select="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceParameters/pfx41:contractServiceParametersWrite">
                            <ServiceParameters>
                                <xsl:if test="pfx41:spcodePub">
                                    <ActionCode>
                                        <xsl:value-of select="pfx41:spcodePub"/>
                                    </ActionCode>
                                </xsl:if>
                                <xsl:if test="pfx41:sncodePub">
                                    <Name>
                                        <xsl:value-of select="pfx41:sncodePub"/>
                                    </Name>
                                </xsl:if>
                                <xsl:if test="pfx41:paramValues/pfx41:item[1]/pfx41:targetParamValues/pfx41:item[1]/pfx41:multValues/pfx41:item[1]/pfx41:value">
                                    <Value>
                                        <xsl:value-of select="pfx41:paramValues/pfx41:item[1]/pfx41:targetParamValues/pfx41:item[1]/pfx41:multValues/pfx41:item[1]/pfx41:value"/>
                                    </Value>
                                </xsl:if>
                                <xsl:if test="pfx41:paramValues/pfx41:item[1]/pfx41:targetParamValues/pfx41:item[1]/pfx41:multValues/pfx41:item[1]/pfx41:valueDes">
                                    <OldValue>
                                        <xsl:value-of select="pfx41:paramValues/pfx41:item[1]/pfx41:targetParamValues/pfx41:item[1]/pfx41:multValues/pfx41:item[1]/pfx41:valueDes"/>
                                    </OldValue>
                                </xsl:if>
                            </ServiceParameters>
                        </xsl:for-each>
                    </ListOfServiceParameters>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumberType">
                        <BatchNumber>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:serviceResources/pfx41:item[1]/pfx41:contractServiceResourcesWrite/pfx41:directoryNumberType"/>
                        </BatchNumber>
                    </xsl:if>
                    <xsl:if test="exists($Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountAssignmentTemplateId)&#xA;and $Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountAssignmentTemplateId!=0">
                        <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountAssignmentTemplateId">
                            <BillingId>
                                <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:billingAccountAssignmentWrite/pfx41:billingAccountAssignmentTemplateId"/>
                            </BillingId>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="string-length($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:creditExemptionFlag)>0">
                        <creditExemption>
                            <xsl:value-of select="if ($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:creditExemptionFlag=&quot;true&quot;)&#xA;then 'TRUE'&#xA;else 'FALSE'"/>
                        </creditExemption>
                    </xsl:if>
                    <xsl:if test="string-length($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:collectionExemptionFlag)>0">
                        <collectionExemption>
                            <xsl:value-of select="if($Start/root/pfx41:CreateOrderRequest/pfx41:contractInfoWrite/pfx41:collectionExemptionFlag=&quot;true&quot;)&#xA;then 'TRUE'&#xA;else 'FALSE'"/>
                        </collectionExemption>
                    </xsl:if>
                </ns11:ZainCustomerOrderItem>
            </pfx38:CreateOrderReq>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>748</pd:x>
        <pd:y>177</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx39:CreateOrderRes"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateJMSSendError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>434</pd:x>
        <pd:y>288</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <pfx42:CreateOrderResponse>
                        <pfx42:response>
                            <pfx42:responseCode>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSErrorCode"/>
                            </pfx42:responseCode>
                            <pfx42:responseMessage>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSReceiveErrorDesc"/>
                            </pfx42:responseMessage>
                        </pfx42:response>
                    </pfx42:CreateOrderResponse>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapErrorResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1214</pd:x>
        <pd:y>175</pd:y>
        <config>
            <element ref="pfx42:CreateOrderResponse"/>
        </config>
        <pd:inputBindings>
            <pfx42:CreateOrderResponse>
                <pfx42:orderHeader>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID">
                        <pfx42:correlationID>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:correlationID"/>
                        </pfx42:correlationID>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId">
                        <pfx42:serviceOrderId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:serviceOrderId"/>
                        </pfx42:serviceOrderId>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:salesOrderId">
                        <pfx42:salesOrderId>
                            <xsl:value-of select="$Start/root/pfx41:CreateOrderRequest/pfx41:orderHeader/pfx41:salesOrderId"/>
                        </pfx42:salesOrderId>
                    </xsl:if>
                    <pfx42:Status>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/EOC/CreateContract/ErrorMsg"/>
                    </pfx42:Status>
                </pfx42:orderHeader>
                <pfx42:response>
                    <pfx42:ErrorResponse>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceSystem">
                            <pfx42:Error_SourceSystem>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                            </pfx42:Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <pfx42:Error_SourceErrCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </pfx42:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <pfx42:Error_SourceErrDesc>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </pfx42:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorType">
                            <pfx42:Error_Type>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                            </pfx42:Error_Type>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrCode">
                            <pfx42:Error_UserErrCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                            </pfx42:Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc">
                            <pfx42:Error_UserErrDesc>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                            </pfx42:Error_UserErrDesc>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorOccuranceTime">
                            <pfx42:Error_Occurance_Time>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorOccuranceTime"/>
                            </pfx42:Error_Occurance_Time>
                        </xsl:if>
                    </pfx42:ErrorResponse>
                </pfx42:response>
            </pfx42:CreateOrderResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>934</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="$ParseResponse/pfx39:CreateOrderRes/pfx39:errorSourceSystem">
                    <SourceSystem>
                        <xsl:value-of select="$ParseResponse/pfx39:CreateOrderRes/pfx39:errorSourceSystem"/>
                    </SourceSystem>
                </xsl:if>
                <ChannelType>
                    <xsl:value-of select="&quot;INTERNAL&quot;"/>
                </ChannelType>
                <xsl:if test="$ParseResponse/pfx39:CreateOrderRes/ns11:Response/ResponseCode">
                    <ResponseCode>
                        <xsl:value-of select="$ParseResponse/pfx39:CreateOrderRes/ns11:Response/ResponseCode"/>
                    </ResponseCode>
                </xsl:if>
                <xsl:if test="$ParseResponse/pfx39:CreateOrderRes/ns11:Response/ResponseDescription">
                    <ResponseDescription>
                        <xsl:value-of select="$ParseResponse/pfx39:CreateOrderRes/ns11:Response/ResponseDescription"/>
                    </ResponseDescription>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>GenerateJMSSendError</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:xpathDescription>ErrorResponse</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseResponse/pfx39:CreateOrderRes/ns11:Response/ResponseCode)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapErrorResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>MapErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>