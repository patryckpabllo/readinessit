<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns15="http://www.zain.com/ZESB/Types/Common" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/CBiO2UpdateCustomerbyCivilId" xmlns:pfx40="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx39="http://siebel.com/CustomUI" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx37="http://www.siebel.com/xml/CBiO2%20Demographic%20Modification%20Res%20IO" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx38="http://www.zain.com/ZESB/Services/UpsertCustomer/Types" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2CustomerModificationReqIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Demographic%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2DemographicModificationResIO.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/UpsertCustomer/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/UpsertCustomer/UpsertCustomerInbound.wsdl"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2DemographicUpdateWS_05022016.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/UpdateCorpCustCat.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/CBiO2DemographicUpdateWS_05022016.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/CBiO2UpdateCustomerbyCivilId.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/UpsertCustomer/HelperProcess/ESI_CRM_Call_UpdCustByCivilID.process</pd:name>
    <pd:description>Biometric CR Changes.

When Contract id from channel is "ANY" we have to udpate the customer details in 
CRM using the CRM API  CBIO2UpdateCustomerByCivilID</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>26</pd:startX>
    <pd:startY>96</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$CDMToNative/pfx39:updatedemographicInfo_Output"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx39:updatedemographicInfo_Output"/>
    <pd:endX>778</pd:endX>
    <pd:endY>99</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="ns7:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>681</pd:x>
        <pd:y>98</pd:y>
        <config>
            <element ref="pfx39:updatedemographicInfo_Output"/>
        </config>
        <pd:inputBindings>
            <pfx39:updatedemographicInfo_Output>
                <pfx39:CustomerId>
                    <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractID"/>
                </pfx39:CustomerId>
                <pfx39:ErrorAdditionalDesc1>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorAdditionalDesc1"/>
                </pfx39:ErrorAdditionalDesc1>
                <pfx39:ErrorAdditionalDesc2>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorAdditionalDesc2"/>
                </pfx39:ErrorAdditionalDesc2>
                <pfx39:ErrorOccuranceTime>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorOccuranceTime"/>
                </pfx39:ErrorOccuranceTime>
                <pfx39:ErrorSourceErrCode>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorSourceErrCode"/>
                </pfx39:ErrorSourceErrCode>
                <pfx39:ErrorSourceErrDesc>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorSourceErrDesc"/>
                </pfx39:ErrorSourceErrDesc>
                <pfx39:ErrorSourceSystem>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorSourceSystem"/>
                </pfx39:ErrorSourceSystem>
                <pfx39:ErrorType>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorType"/>
                </pfx39:ErrorType>
                <pfx39:ErrorUserErrCode>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorUserErrCode"/>
                </pfx39:ErrorUserErrCode>
                <pfx39:ErrorUserErrDesc>
                    <xsl:value-of select="$Parse-XML/pfx39:UpdateCustomerbyCivilId_Output/pfx39:ErrorUserErrDesc"/>
                </pfx39:ErrorUserErrDesc>
            </pfx39:updatedemographicInfo_Output>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>474</pd:x>
        <pd:y>34</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:UpdateCustomerbyCivilId_Input)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>298</pd:x>
        <pd:y>34</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdNumber"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Start/root/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:UpdateCustomerbyCivilId_Input)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>559</pd:x>
        <pd:y>209</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <ns7:ExceptionRequest>
                        <ns6:Header>
                            <ns6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns6:ApplicationID>
                            <ns6:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/DemographicUpdate/ComponentName"/>
                            </ns6:ComponentName>
                            <ns6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns6:Hostname>
                            <ns6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns6:Timestamp>
                            <ns6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                            </ns6:TransactionDomain>
                            <ns6:TransactionType>
                                <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                            </ns6:TransactionType>
                            <ns6:TransactionID>
                                <xsl:value-of select="$Start/root/TransactionID"/>
                            </ns6:TransactionID>
                        </ns6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns9:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns9:ErrorReport/StackTrace"/>
                        </StackTrace>
                    </ns7:ExceptionRequest>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>393</pd:x>
        <pd:y>99</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:UpdateCustomerbyCivilId_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/ESIQueue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/Timeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>98</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx39:UpdateCustomerbyCivilId_Output"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>106</pd:x>
        <pd:y>97</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx38:UpdateContractInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>207</pd:x>
        <pd:y>96</pd:y>
        <config>
            <element ref="pfx39:UpdateCustomerbyCivilId_Input"/>
        </config>
        <pd:inputBindings>
            <pfx39:UpdateCustomerbyCivilId_Input>
                <pfx41:UpdateCustomerCivilIdData>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'Additional']/ns15:Value)&#xA;and&#xA;string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'Additional']/ns15:Value)>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'Additional']/ns15:Value">
                            <pfx41:Additional>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'Additional']/ns15:Value"/>
                            </pfx41:Additional>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicFirstName">
                        <pfx41:ArabicName1>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicFirstName"/>
                        </pfx41:ArabicName1>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicSecondName">
                        <pfx41:ArabicName2>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicSecondName"/>
                        </pfx41:ArabicName2>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicThirdName">
                        <pfx41:ArabicName3>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicThirdName"/>
                        </pfx41:ArabicName3>
                    </xsl:if>
                    <pfx41:ArabicName4>
                        <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicLastName"/>
                    </pfx41:ArabicName4>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicTitle">
                        <pfx41:ArabicTitle>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicTitle"/>
                        </pfx41:ArabicTitle>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:DateOfBirth)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:DateOfBirth))>0">
                        <pfx41:Birthday>
                            <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date('yyyy-MM-dd',$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:DateOfBirth))"/>
                        </pfx41:Birthday>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Block">
                        <pfx41:Block>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Block"/>
                        </pfx41:Block>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'BloodType']/ns15:Value)&#xA;and&#xA;string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'BloodType']/ns15:Value)>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'BloodType']/ns15:Value">
                            <pfx41:BloodType>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'BloodType']/ns15:Value"/>
                            </pfx41:BloodType>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdExpirationDate)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdExpirationDate))>0">
                        <pfx41:CardExpiryDate>
                            <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date('yyyy-MM-dd',$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdExpirationDate))"/>
                        </pfx41:CardExpiryDate>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'CardIssueDate']/ns15:Value)&#xA;and&#xA;string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'CardIssueDate']/ns15:Value)>0">
                        <pfx41:CardIssueDate>
                            <xsl:value-of select="tib:format-date('MM/dd/yyyy',tib:parse-date('yyyy-MM-dd',$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name= 'CardIssueDate']/ns15:Value))"/>
                        </pfx41:CardIssueDate>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Governate">
                        <pfx41:City>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Governate"/>
                        </pfx41:City>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdNumber">
                        <pfx41:CivilID>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdNumber"/>
                        </pfx41:CivilID>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:eMailAddress">
                        <pfx41:EmailAddress>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:eMailAddress"/>
                        </pfx41:EmailAddress>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:FirstName">
                        <pfx41:EnglishName1>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:FirstName"/>
                        </pfx41:EnglishName1>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:SecondName">
                        <pfx41:EnglishName2>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:SecondName"/>
                        </pfx41:EnglishName2>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ThirdName">
                        <pfx41:EnglishName3>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ThirdName"/>
                        </pfx41:EnglishName3>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:LastName">
                        <pfx41:EnglishName4>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:LastName"/>
                        </pfx41:EnglishName4>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Floor">
                        <pfx41:Floor>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Floor"/>
                        </pfx41:Floor>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Sex">
                        <pfx41:Gender>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Sex"/>
                        </pfx41:Gender>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number)&#xA;and&#xA;string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number)>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number">
                            <pfx41:HomeNumber>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number"/>
                            </pfx41:HomeNumber>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdType">
                        <pfx41:IDType>
                            <xsl:value-of select="upper-case($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdType)"/>
                        </pfx41:IDType>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Main']/pfx38:Number)&#xA;and&#xA;string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Main']/pfx38:Number)>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Main']/pfx38:Number">
                            <pfx41:MainPhoneNumber>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact/pfx38:PhoneContact[pfx38:Type='Main']/pfx38:Number"/>
                            </pfx41:MainPhoneNumber>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Nationality">
                        <pfx41:Nationality>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Nationality"/>
                        </pfx41:Nationality>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:PostalAddress[1]/pfx38:PostalArea">
                        <pfx41:PostalAreaName>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:PostalAddress[1]/pfx38:PostalArea"/>
                        </pfx41:PostalAreaName>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:ReferredBy">
                        <pfx41:Sponsor>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:ReferredBy"/>
                        </pfx41:Sponsor>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:StreetNo">
                        <pfx41:StreetAddress>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:StreetNo"/>
                        </pfx41:StreetAddress>
                    </xsl:if>
                    <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Apartment">
                        <pfx41:UnitNo>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Apartment"/>
                        </pfx41:UnitNo>
                    </xsl:if>
                    <pfx41:UnitType>
                        <xsl:value-of select="if (string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Address[1]/pfx38:Apartment))>0)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/strApartment&#xA;else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateCustomerByCivilID/strHouse"/>
                    </pfx41:UnitType>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute1&quot;]/ns15:Value)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute1&quot;]/ns15:Value))>0">
                        <pfx41:Attribute1>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute1&quot;]/ns15:Value"/>
                        </pfx41:Attribute1>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute2&quot;]/ns15:Value)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute2&quot;]/ns15:Value))>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute2&quot;]/ns15:Value">
                            <pfx41:Attribute2>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute2&quot;]/ns15:Value"/>
                            </pfx41:Attribute2>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute3&quot;]/ns15:Value)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute3&quot;]/ns15:Value))>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute3&quot;]/ns15:Value">
                            <pfx41:Attribute3>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute3&quot;]/ns15:Value"/>
                            </pfx41:Attribute3>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute4&quot;]/ns15:Value)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute4&quot;]/ns15:Value))>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute4&quot;]/ns15:Value">
                            <pfx41:Attribute4>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute4&quot;]/ns15:Value"/>
                            </pfx41:Attribute4>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="exists($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute5&quot;]/ns15:Value)&#xA;and&#xA;string-length(tib:trim($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute5&quot;]/ns15:Value))>0">
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute5&quot;]/ns15:Value">
                            <pfx41:Attribute5>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Params/ns15:Param[ns15:Name=&quot;Attribute5&quot;]/ns15:Value"/>
                            </pfx41:Attribute5>
                        </xsl:if>
                    </xsl:if>
                </pfx41:UpdateCustomerCivilIdData>
            </pfx39:UpdateCustomerbyCivilId_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>This process is dynamically called if the Contract ID Field from channel
is coming as "ANY"  Biometric CR Changes</pd:description>
        <pd:x>823</pd:x>
        <pd:y>18</pd:y>
        <pd:width>410</pd:width>
        <pd:height>42</pd:height>
        <pd:fontName>Dialog.bold-plain-9</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>