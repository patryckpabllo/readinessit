<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns15="http://www.siebel.com/xml/CBiO2ModifyDemographicsReq" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.zain.com/ZESB/Types/Common" xmlns:pfx40="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx39="http://siebel.com/CustomUI" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx37="http://www.siebel.com/xml/CBiO2%20Demographic%20Modification%20Res%20IO" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx38="http://www.zain.com/ZESB/Services/UpsertCustomer/Types" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2CustomerModificationReqIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Demographic%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2DemographicModificationResIO.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/UpsertCustomer/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/UpsertCustomer/UpsertCustomerInbound.wsdl"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CustomerModifyDemographics.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/UpdateCorpCustCat.wsdl"/>
    <wsdl:import namespace="http://siebel.com/CustomUI" location="/BusinessWSDLS/Services/CRM/CBiO2DemographicUpdateWS_05022016.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/UpsertCustomer/HelperProcess/ESI_CRM_CorpDemoGraphicUpdate.process</pd:name>
    <pd:description>B2B SME App CR 


UpsertCustomer -&gt; UpdateContract operation to be used. If there is a value in Contractdetails/Category element, then fire this operation.
RESPONSE after discussion with Ali 4-Jul-2019:::&gt;&gt;&gt; CRM should reject if the Category is same as the earlier one. Ali confirmed that he shall ensure that channel will send a NEW category else will not populate the field.
</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>27</pd:startX>
    <pd:startY>143</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$Parse-XML/pfx39:CustomerModifyDemographics_Output"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx39:CustomerModifyDemographics_Output"/>
    <pd:endX>914</pd:endX>
    <pd:endY>124</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>670</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/ServiceName/UpdateContract"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Common_EAI_EMSSender_WithRetry/ResponseData)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>451</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/ServiceName/UpdateContract"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:CustomerModifyDemographics_Input)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>807</pd:x>
        <pd:y>238</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns9:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns9:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns9:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>566</pd:x>
        <pd:y>140</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:CustomerModifyDemographics_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateContract/ESI_QueueModifyCorpDemographic"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/UpsertCustomer/UpdateContract/JMSTimeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>798</pd:x>
        <pd:y>127</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx39:CustomerModifyDemographics_Output"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>110</pd:x>
        <pd:y>142</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx38:UpdateContractInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>392</pd:x>
        <pd:y>145</pd:y>
        <config>
            <element ref="pfx39:CustomerModifyDemographics_Input"/>
        </config>
        <pd:inputBindings>
            <pfx39:CustomerModifyDemographics_Input>
                <ns15:ListOfCBiO2ModifyDemographicsReq>
                    <ns15:CBiO2ModifyDemographicsReq>
                        <ns15:AccountSequenceNumber>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractID"/>
                        </ns15:AccountSequenceNumber>
                        <xsl:if test="$GetESBLOVVariable/root/ns16:ESBLOV/ns16:Record[ns16:TRANSTYPE='ID_Type' and ns16:TRANSKEY=&#xA;$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdType]/ns16:TRANSVALUE">
                            <ns15:IDType>
                                <xsl:value-of select="$GetESBLOVVariable/root/ns16:ESBLOV/ns16:Record[ns16:TRANSTYPE='ID_Type' and ns16:TRANSKEY=&#xA;$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdType]/ns16:TRANSVALUE"/>
                            </ns15:IDType>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdNumber">
                            <ns15:IDNumber>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdNumber"/>
                            </ns15:IDNumber>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdExpirationDate)>0">
                            <ns15:IDExpDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:IdExpirationDate)"/>
                            </ns15:IDExpDate>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicName">
                            <ns15:CompanyNameArabic>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicName"/>
                            </ns15:CompanyNameArabic>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:Name">
                            <ns15:CompanyNameEng>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:Name"/>
                            </ns15:CompanyNameEng>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Profession">
                            <ns15:Industry>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Profession"/>
                            </ns15:Industry>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Category">
                            <ns15:OrgCategory>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Category"/>
                            </ns15:OrgCategory>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:AllowedSubs)>0">
                            <ns15:OrgSize>
                                <xsl:value-of select="if($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:AllowedSubs&lt;=10)&#xA;then 'Small'&#xA;else if($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:AllowedSubs>10&#xA;and $ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:AllowedSubs&lt;=100)&#xA;then 'Medium'&#xA;else 'Large'"/>
                            </ns15:OrgSize>
                        </xsl:if>
                        <ns15:OrgType>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo/pfx38:Params/pfx41:Param[pfx41:Name='Organization_Type']/pfx41:Value"/>
                        </ns15:OrgType>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Segment">
                            <ns15:Sector>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Segment"/>
                            </ns15:Sector>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Segment">
                            <ns15:Segment>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:Segment"/>
                            </ns15:Segment>
                        </xsl:if>
                        <ns15:SubCorpSegment>
                            <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo/pfx38:Params/pfx41:Param[pfx41:Name='Sub-Segment']/pfx41:Value"/>
                        </ns15:SubCorpSegment>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Sex">
                            <ns15:Gender>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Sex"/>
                            </ns15:Gender>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Nationality">
                            <ns15:Nationality>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Nationality"/>
                            </ns15:Nationality>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:DateOfBirth)>0">
                            <ns15:DOB>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:DateOfBirth)"/>
                            </ns15:DOB>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicFirstName">
                            <ns15:ArabicFirstName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicFirstName"/>
                            </ns15:ArabicFirstName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicSecondName">
                            <ns15:ArabicSecondName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicSecondName"/>
                            </ns15:ArabicSecondName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicThirdName">
                            <ns15:ArabicThirdName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicThirdName"/>
                            </ns15:ArabicThirdName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicLastName">
                            <ns15:ArabicLastName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ArabicLastName"/>
                            </ns15:ArabicLastName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:FirstName">
                            <ns15:EnglishFirstName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:FirstName"/>
                            </ns15:EnglishFirstName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:SecondName">
                            <ns15:EnglishSecondName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:SecondName"/>
                            </ns15:EnglishSecondName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ThirdName">
                            <ns15:EnglishThirdName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:ThirdName"/>
                            </ns15:EnglishThirdName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:LastName">
                            <ns15:EnglishLastName>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Name/pfx38:LastName"/>
                            </ns15:EnglishLastName>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='NotifySubscriberNumber']/pfx38:Number)>0">
                            <ns15:NotificationNumber>
                                <xsl:value-of select="format:FormatMSISDN($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='NotifySubscriberNumber']/pfx38:Number,$_globalVariables/ns8:GlobalVariables/MSISDNBaseLength)"/>
                            </ns15:NotificationNumber>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:eMailAddress">
                            <ns15:MainEmailAddress>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:eMailAddress"/>
                            </ns15:MainEmailAddress>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:MaritalStatus">
                            <ns15:CustMaritalStatus>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:MaritalStatus"/>
                            </ns15:CustMaritalStatus>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number)>0">
                            <ns15:HomeNumber>
                                <xsl:value-of select="format:FormatMSISDN($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='Home']/pfx38:Number,$_globalVariables/ns8:GlobalVariables/MSISDNBaseLength)"/>
                            </ns15:HomeNumber>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Language)>0">
                            <xsl:if test="$GetESBLOVVariable/root/ns16:ESBLOV/ns16:Record[ns16:TRANSKEY=&#xA;$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Language]/ns16:TRANSVALUE">
                                <ns15:Language>
                                    <xsl:value-of select="$GetESBLOVVariable/root/ns16:ESBLOV/ns16:Record[ns16:TRANSKEY=&#xA;$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Language]/ns16:TRANSVALUE"/>
                                </ns15:Language>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='Fax']/pfx38:Number)>0">
                            <ns15:MainFaxNumber>
                                <xsl:value-of select="format:FormatMSISDN($ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Contact[1]/pfx38:PhoneContact[pfx38:Type='Fax']/pfx38:Number,$_globalVariables/ns8:GlobalVariables/MSISDNBaseLength)"/>
                            </ns15:MainFaxNumber>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Education">
                            <ns15:CustEducation>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Identity/pfx38:Information/pfx38:Education"/>
                            </ns15:CustEducation>
                        </xsl:if>
                        <xsl:if test="$Start/root/SourceSystem">
                            <ns15:CreatedBy>
                                <xsl:value-of select="$Start/root/SourceSystem"/>
                            </ns15:CreatedBy>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:VPNCode">
                            <ns15:AssociateCommunityId>
                                <xsl:value-of select="$ParseRequest/pfx38:UpdateContractInput/pfx38:ContractInfo[1]/pfx38:Details/pfx38:VPNCode"/>
                            </ns15:AssociateCommunityId>
                        </xsl:if>
                    </ns15:CBiO2ModifyDemographicsReq>
                </ns15:ListOfCBiO2ModifyDemographicsReq>
            </pfx39:CustomerModifyDemographics_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetESBLOVVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>247</pd:x>
        <pd:y>142</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>GetESBLOVVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetESBLOVVariable</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>