<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx60="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx63="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx62="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx57="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryRes.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" xmlns:pfx59="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" xmlns:pfx54="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryReq.xsd" xmlns:pfx55="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryRes.xsd" xmlns:pfx56="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryReq.xsd" xmlns:ns16="http://www.ericsson.com/CDM/telecom/Charge" xmlns:pfx52="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:ns17="http://www.ericsson.com/CDM/telecom/FAF" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:pfx50="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:ns14="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns15="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/GIftedOffers.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" xmlns:pfx49="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" xmlns:pfx46="http://www.zain.com/ZESB/Services/Updatefnf/Types" xmlns:pfx47="http://www.tibco.com/schemas/GW/BusinessProcesses/Services/Common/Query/GetPrepaidBalance/HelperProcess" xmlns:pfx44="http://www.ericsson.com/CDM/telecom/Response" xmlns:pfx45="http://www.zain.com/ZESB/Types/Common" xmlns:pfx42="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:pfx43="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.zain.com/ZESB/Services/PrepaidBalance/Types" xmlns:pfx40="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" xmlns:pfx39="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetAccountDetailsAndBalanceRes.xsd" xmlns:pfx31="http://www.tibco.com/schemas/CommonProject/BusinessWSDLs/Services/Query/GetAssetInfo/GetAssetInfoRes.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetBalanceReq.xsd" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetBalanceRes.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetAccountDetailsAndBalanceReq.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx37="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceReq.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx38="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAccountDetailsAndBalanceRes.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetAssetInfoRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.tibco.com/schemas/CommonProject/BusinessWSDLs/Services/Query/GetAssetInfo/GetAssetInfoReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GeAssetInfoReq.xsd" xmlns:pfx64="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetListOfMoz1AnyLevelDepositRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsReq.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Query%20Service%20Level%20Deposit%20IO/Req" xmlns:pfx26="http://www.siebel.com/xml/MOZ1%20Query%20AnyLevel%20Deposit%20IO/Res" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetListOfMoz1AnyLevelDepositReq.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.siebel.com/xml/MOZ1%20Query%20AnyLevel%20Deposit%20IO/Req">
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetTransactionsRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetTransactions/GetTransactionsRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalReq.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Updatefnf/Types" schemaLocation="/BusinessWSDLS/Services/Modification/UpdateFnF/UpdatefnfSchema.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Types/Common"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PrepaidBalance/Types" schemaLocation="/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalanceInbound.WSDL.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" schemaLocation="/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" schemaLocation="/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOfferResponse.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Types/Common" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetGiftedOffers/GetGiftedOffersOffers.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/GetGiftedOffers/HelperProcess/ESI_GetSubscriberOffers.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx63:GetOfferRequest"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="ApplicationID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="CorrelationID" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>228</pd:startX>
    <pd:startY>201</pd:startY>
    <pd:returnBindings>
        <pfx62:GetOfferResponse>
            <pfx62:GetOfferRes>
                <xsl:copy-of select="$MapGiftedOffers/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:BusinessMessageHeader"/>
                <ns11:SubscriberAssets>
                    <xsl:copy-of select="$MapGiftedOffers/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:SubscriberAssets/Subscriber"/>
                    <ListOfAssets>
                        <xsl:for-each select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:SubscriberAssets/ListOfAssets/Asset&#xA;[ AssetID =$MapGiftedOffers/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:SubscriberAssets/ListOfAssets/Asset/AssetID ]">
                            <Asset>
                                <xsl:if test="AssetID">
                                    <AssetID>
                                        <xsl:value-of select="AssetID"/>
                                    </AssetID>
                                </xsl:if>
                                <xsl:if test="AssetType">
                                    <AssetType>
                                        <xsl:value-of select="AssetType"/>
                                    </AssetType>
                                </xsl:if>
                                <xsl:if test="AssetsDescription">
                                    <AssetsDescription>
                                        <xsl:value-of select="AssetsDescription"/>
                                    </AssetsDescription>
                                </xsl:if>
                                <xsl:if test="AssetAutoRenewalFlag">
                                    <AssetAutoRenewalFlag>
                                        <xsl:value-of select="AssetAutoRenewalFlag"/>
                                    </AssetAutoRenewalFlag>
                                </xsl:if>
                                <xsl:for-each select="ListOfServices">
                                    <ListOfServices>
                                        <xsl:for-each select="Service">
                                            <Service>
                                                <ServiceID>
                                                    <xsl:value-of select="ServiceID"/>
                                                </ServiceID>
                                                <xsl:if test="ServiceType">
                                                    <ServiceType>
                                                        <xsl:value-of select="ServiceType"/>
                                                    </ServiceType>
                                                </xsl:if>
                                                <xsl:if test="ServiceVolume">
                                                    <ServiceVolume>
                                                        <xsl:value-of select="ServiceVolume"/>
                                                    </ServiceVolume>
                                                </xsl:if>
                                                <xsl:if test="ServiceUnit">
                                                    <ServiceUnit>
                                                        <xsl:value-of select="ServiceUnit"/>
                                                    </ServiceUnit>
                                                </xsl:if>
                                            </Service>
                                        </xsl:for-each>
                                    </ListOfServices>
                                </xsl:for-each>
                                <xsl:for-each select="product">
                                    <product>
                                        <ProductName>
                                            <xsl:value-of select="ProductName"/>
                                        </ProductName>
                                        <xsl:if test="ProductID">
                                            <ProductID>
                                                <xsl:value-of select="ProductID"/>
                                            </ProductID>
                                        </xsl:if>
                                    </product>
                                </xsl:for-each>
                                <xsl:for-each select="Price">
                                    <Price>
                                        <xsl:if test="One-Time">
                                            <One-Time>
                                                <xsl:value-of select="One-Time"/>
                                            </One-Time>
                                        </xsl:if>
                                        <xsl:if test="Recurring">
                                            <Recurring>
                                                <xsl:value-of select="Recurring"/>
                                            </Recurring>
                                        </xsl:if>
                                        <xsl:if test="Unit">
                                            <Unit>
                                                <xsl:value-of select="Unit"/>
                                            </Unit>
                                        </xsl:if>
                                        <xsl:if test="RecurringFrequency">
                                            <RecurringFrequency>
                                                <xsl:value-of select="RecurringFrequency"/>
                                            </RecurringFrequency>
                                        </xsl:if>
                                    </Price>
                                </xsl:for-each>
                                <xsl:if test="AssetStartDate">
                                    <AssetStartDate>
                                        <xsl:value-of select="AssetStartDate"/>
                                    </AssetStartDate>
                                </xsl:if>
                                <xsl:if test="AssetEndDate">
                                    <AssetEndDate>
                                        <xsl:value-of select="AssetEndDate"/>
                                    </AssetEndDate>
                                </xsl:if>
                                <xsl:if test="AssetActionCode">
                                    <AssetActionCode>
                                        <xsl:value-of select="AssetActionCode"/>
                                    </AssetActionCode>
                                </xsl:if>
                                <xsl:if test="AssetActionCommand">
                                    <AssetActionCommand>
                                        <xsl:value-of select="AssetActionCommand"/>
                                    </AssetActionCommand>
                                </xsl:if>
                                <xsl:if test="AssetStatus">
                                    <AssetStatus>
                                        <xsl:value-of select="AssetStatus"/>
                                    </AssetStatus>
                                </xsl:if>
                                <xsl:if test="AssetStatusDescription">
                                    <AssetStatusDescription>
                                        <xsl:value-of select="AssetStatusDescription"/>
                                    </AssetStatusDescription>
                                </xsl:if>
                            </Asset>
                        </xsl:for-each>
                    </ListOfAssets>
                </ns11:SubscriberAssets>
                <xsl:copy-of select="$MapGiftedOffers/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:Response"/>
            </pfx62:GetOfferRes>
        </pfx62:GetOfferResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx62:GetOfferResponse"/>
    <pd:endX>1096</pd:endX>
    <pd:endY>208</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="pfx45:FaultType"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>399</pd:x>
        <pd:y>58</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx63:GetOfferRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/GetGiftedOffers/ESI_Request_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/GetGiftedOffers/RequestTimeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>837</pd:x>
        <pd:y>58</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <pfx45:FaultType>
                        <pfx45:type>
                            <xsl:value-of select="'technical'"/>
                        </pfx45:type>
                        <pfx45:code>
                            <xsl:value-of select="if(exists($_error_Parse-XML/ActivityErrors/ns13:XMLParseException))&#xA;then $_error_Parse-XML/ActivityErrors/ns13:XMLParseException/msgCode&#xA;&#x9;else (if (exists($_error_Parse-XML/ActivityErrors/ns13:UnsupportedEncodingException))&#xA;&#x9;&#x9;then $_error_Parse-XML/ActivityErrors/ns13:UnsupportedEncodingException/msgCode&#xA;&#x9;&#x9;else (if (exists($_error_Parse-XML/ActivityErrors/ns13:MissingByteCountException))&#xA;&#x9;&#x9;then $_error_Parse-XML/ActivityErrors/ns13:MissingByteCountException/msgCode&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;$_error_Parse-XML/ActivityErrors/ns13:ValidationException/msgCode))"/>
                        </pfx45:code>
                        <pfx45:description>
                            <xsl:value-of select="if(exists($_error_Parse-XML/ActivityErrors/ns13:XMLParseException))&#xA;then $_error_Parse-XML/ActivityErrors/ns13:XMLParseException/msg&#xA;&#x9;else (if (exists($_error_Parse-XML/ActivityErrors/ns13:UnsupportedEncodingException))&#xA;&#x9;&#x9;then $_error_Parse-XML/ActivityErrors/ns13:UnsupportedEncodingException/msg&#xA;&#x9;&#x9;else (if (exists($_error_Parse-XML/ActivityErrors/ns13:MissingByteCountException))&#xA;&#x9;&#x9;then $_error_Parse-XML/ActivityErrors/ns13:MissingByteCountException/msg&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;$_error_Parse-XML/ActivityErrors/ns13:ValidationException/msg))"/>
                        </pfx45:description>
                        <pfx45:sourceSystem>
                            <xsl:value-of select="'Cs'"/>
                        </pfx45:sourceSystem>
                    </pfx45:FaultType>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLElogReqToBPI">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>399</pd:x>
        <pd:y>199</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/GetGiftedOffers/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$Start/root/CorrelationID">
                        <ns6:CorrelationID>
                            <xsl:value-of select="$Start/root/CorrelationID"/>
                        </ns6:CorrelationID>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx63:GetOfferRequest)"/>
                    </ns6:Message>
                </ns6:Header>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <xsl:if test="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLElogOutputResESI">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>579</pd:x>
        <pd:y>205</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/GetGiftedOffers/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$Start/root/CorrelationID">
                        <ns6:CorrelationID>
                            <xsl:value-of select="$Start/root/CorrelationID"/>
                        </ns6:CorrelationID>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx62:GetOfferResponse)"/>
                    </ns6:Message>
                </ns6:Header>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <xsl:if test="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>575</pd:x>
        <pd:y>57</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx62:GetOfferResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OtherErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>739</pd:x>
        <pd:y>125</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <pfx45:FaultType>
                        <pfx45:type>
                            <xsl:value-of select="'TECHNICAL'"/>
                        </pfx45:type>
                        <pfx45:code>
                            <xsl:value-of select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:Response/ResponseCode"/>
                        </pfx45:code>
                        <pfx45:description>
                            <xsl:value-of select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:Response/ResponseDescription"/>
                        </pfx45:description>
                        <pfx45:sourceSystem>
                            <xsl:value-of select="'TIBCO'"/>
                        </pfx45:sourceSystem>
                    </pfx45:FaultType>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetGiftedOffers">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>775</pd:x>
        <pd:y>205</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/GiftedOffers.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="MapGiftedOffers">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>938</pd:x>
        <pd:y>208</pd:y>
        <config>
            <element ref="pfx62:GetOfferResponse"/>
        </config>
        <pd:inputBindings>
            <pfx62:GetOfferResponse>
                <pfx62:GetOfferRes>
                    <xsl:copy-of select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:BusinessMessageHeader"/>
                    <ns11:SubscriberAssets>
                        <xsl:copy-of select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:SubscriberAssets/Subscriber"/>
                        <ListOfAssets>
                            <xsl:for-each select="$GetGiftedOffers/ns18:GiftedOffers/ns18:Offers[ns18:Gifted='Y']">
                                <Asset>
                                    <xsl:if test="ns18:OfferID">
                                        <AssetID>
                                            <xsl:value-of select="ns18:OfferID"/>
                                        </AssetID>
                                    </xsl:if>
                                    <ListOfServices>
                                        <Service>
                                            <ServiceID>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </ServiceID>
                                        </Service>
                                    </ListOfServices>
                                    <product>
                                        <ProductName>
                                            <xsl:value-of select="ns18:OfferName"/>
                                        </ProductName>
                                    </product>
                                </Asset>
                            </xsl:for-each>
                        </ListOfAssets>
                    </ns11:SubscriberAssets>
                    <xsl:copy-of select="$Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:Response"/>
                </pfx62:GetOfferRes>
            </pfx62:GetOfferResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Parse-XML</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLElogReqToBPI</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLElogOutputResESI</pd:from>
        <pd:to>GetGiftedOffers</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML</pd:from>
        <pd:to>ParseErr</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML</pd:from>
        <pd:to>OtherErr</pd:to>
        <pd:xpathDescription>OtherErr</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-26266</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>CLElogReqToBPI</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML</pd:from>
        <pd:to>CLElogOutputResESI</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($Parse-XML/pfx62:GetOfferResponse/pfx62:GetOfferRes/ns11:SubscriberAssets/ListOfAssets/Asset)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetGiftedOffers</pd:from>
        <pd:to>MapGiftedOffers</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapGiftedOffers</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>