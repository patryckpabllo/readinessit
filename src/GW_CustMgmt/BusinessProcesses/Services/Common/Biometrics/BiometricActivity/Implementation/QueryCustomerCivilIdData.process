<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:wsdlPfx="http://xmlns.example.com/1541416552111" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/BiometricActivity.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns13="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd">
    <wsdl:import namespace="http://xmlns.example.com/1541416552111" location="/BusinessWSDLS/Services/TIBCO/BiometricActivity.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/Biometrics/BiometricActivity/Implementation/QueryCustomerCivilIdData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:QueryCustomerCivilIdDataRequest"/>
    <pd:startX>89</pd:startX>
    <pd:startY>168</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:QueryCustomerCivilIdDataResponse>
            <Output>
                <xsl:choose>
                    <xsl:when test="string-length($ESI_Call/root/ns3:QueryCustomerCivilIdDataOutput/ns3:CivilID)>0">
                        <xsl:for-each select="$ESI_Call/root/ns3:QueryCustomerCivilIdDataOutput">
                            <ns3:QueryCustomerCivilIdDataOutput>
                                <xsl:if test="ns3:CivilID">
                                    <ns3:CivilID>
                                        <xsl:value-of select="ns3:CivilID"/>
                                    </ns3:CivilID>
                                </xsl:if>
                                <xsl:if test="ns3:IdType">
                                    <ns3:IdType>
                                        <xsl:value-of select="ns3:IdType"/>
                                    </ns3:IdType>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicTitle">
                                    <ns3:ArabicTitle>
                                        <xsl:value-of select="ns3:ArabicTitle"/>
                                    </ns3:ArabicTitle>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicName1">
                                    <ns3:ArabicName1>
                                        <xsl:value-of select="ns3:ArabicName1"/>
                                    </ns3:ArabicName1>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicName2">
                                    <ns3:ArabicName2>
                                        <xsl:value-of select="ns3:ArabicName2"/>
                                    </ns3:ArabicName2>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicName3">
                                    <ns3:ArabicName3>
                                        <xsl:value-of select="ns3:ArabicName3"/>
                                    </ns3:ArabicName3>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicName4">
                                    <ns3:ArabicName4>
                                        <xsl:value-of select="ns3:ArabicName4"/>
                                    </ns3:ArabicName4>
                                </xsl:if>
                                <xsl:if test="ns3:EnglishName1">
                                    <ns3:EnglishName1>
                                        <xsl:value-of select="ns3:EnglishName1"/>
                                    </ns3:EnglishName1>
                                </xsl:if>
                                <xsl:if test="ns3:EnglishName2">
                                    <ns3:EnglishName2>
                                        <xsl:value-of select="ns3:EnglishName2"/>
                                    </ns3:EnglishName2>
                                </xsl:if>
                                <xsl:if test="ns3:EnglishName3">
                                    <ns3:EnglishName3>
                                        <xsl:value-of select="ns3:EnglishName3"/>
                                    </ns3:EnglishName3>
                                </xsl:if>
                                <xsl:if test="ns3:EnglishName4">
                                    <ns3:EnglishName4>
                                        <xsl:value-of select="ns3:EnglishName4"/>
                                    </ns3:EnglishName4>
                                </xsl:if>
                                <xsl:if test="ns3:ArabicSex">
                                    <ns3:ArabicSex>
                                        <xsl:value-of select="ns3:ArabicSex"/>
                                    </ns3:ArabicSex>
                                </xsl:if>
                                <xsl:if test="ns3:Sex">
                                    <ns3:Sex>
                                        <xsl:value-of select="ns3:Sex"/>
                                    </ns3:Sex>
                                </xsl:if>
                                <xsl:if test="ns3:Nationality">
                                    <ns3:Nationality>
                                        <xsl:value-of select="ns3:Nationality"/>
                                    </ns3:Nationality>
                                </xsl:if>
                                <xsl:if test="ns3:NationalityCode">
                                    <ns3:NationalityCode>
                                        <xsl:value-of select="ns3:NationalityCode"/>
                                    </ns3:NationalityCode>
                                </xsl:if>
                                <ns3:Birthday>
                                    <xsl:value-of select="if(string-length(ns3:Birthday)>0)&#xA;then tib:format-date('MM/dd/yyyy',tib:parse-date('dd/MM/yyyy',ns3:Birthday))&#xA;else ''"/>
                                </ns3:Birthday>
                                <ns3:CardIssueDate>
                                    <xsl:value-of select="if(string-length(ns3:CardIssueDate)>0)&#xA;then tib:format-date('MM/dd/yyyy',tib:parse-date('dd/MM/yyyy',ns3:CardIssueDate))&#xA;else ''"/>
                                </ns3:CardIssueDate>
                                <ns3:CardExpiryDate>
                                    <xsl:value-of select="if(string-length(ns3:CardExpiryDate)>0)&#xA;then tib:format-date('MM/dd/yyyy',tib:parse-date('dd/MM/yyyy',ns3:CardExpiryDate))&#xA;else ''"/>
                                </ns3:CardExpiryDate>
                                <xsl:if test="ns3:DocumentNo">
                                    <ns3:DocumentNo>
                                        <xsl:value-of select="ns3:DocumentNo"/>
                                    </ns3:DocumentNo>
                                </xsl:if>
                                <xsl:if test="ns3:SerialNumber">
                                    <ns3:SerialNumber>
                                        <xsl:value-of select="ns3:SerialNumber"/>
                                    </ns3:SerialNumber>
                                </xsl:if>
                                <xsl:if test="ns3:MOIRef">
                                    <ns3:MOIRef>
                                        <xsl:value-of select="ns3:MOIRef"/>
                                    </ns3:MOIRef>
                                </xsl:if>
                                <xsl:if test="ns3:MOIIndicator">
                                    <ns3:MOIIndicator>
                                        <xsl:value-of select="ns3:MOIIndicator"/>
                                    </ns3:MOIIndicator>
                                </xsl:if>
                                <xsl:if test="ns3:UnCode">
                                    <ns3:UnCode>
                                        <xsl:value-of select="ns3:UnCode"/>
                                    </ns3:UnCode>
                                </xsl:if>
                                <xsl:if test="ns3:Destination">
                                    <ns3:Destination>
                                        <xsl:value-of select="ns3:Destination"/>
                                    </ns3:Destination>
                                </xsl:if>
                                <xsl:if test="ns3:Block">
                                    <ns3:Block>
                                        <xsl:value-of select="ns3:Block"/>
                                    </ns3:Block>
                                </xsl:if>
                                <xsl:if test="ns3:Street">
                                    <ns3:Street>
                                        <xsl:value-of select="ns3:Street"/>
                                    </ns3:Street>
                                </xsl:if>
                                <xsl:if test="ns3:Plot">
                                    <ns3:Plot>
                                        <xsl:value-of select="ns3:Plot"/>
                                    </ns3:Plot>
                                </xsl:if>
                                <xsl:if test="ns3:UnitType">
                                    <ns3:UnitType>
                                        <xsl:value-of select="ns3:UnitType"/>
                                    </ns3:UnitType>
                                </xsl:if>
                                <xsl:if test="ns3:UnitNo">
                                    <ns3:UnitNo>
                                        <xsl:value-of select="ns3:UnitNo"/>
                                    </ns3:UnitNo>
                                </xsl:if>
                                <xsl:if test="ns3:Floor">
                                    <ns3:Floor>
                                        <xsl:value-of select="ns3:Floor"/>
                                    </ns3:Floor>
                                </xsl:if>
                                <xsl:if test="ns3:BloodType">
                                    <ns3:BloodType>
                                        <xsl:value-of select="ns3:BloodType"/>
                                    </ns3:BloodType>
                                </xsl:if>
                                <xsl:if test="ns3:GuardianCivilIDNo">
                                    <ns3:GuardianCivilIDNo>
                                        <xsl:value-of select="ns3:GuardianCivilIDNo"/>
                                    </ns3:GuardianCivilIDNo>
                                </xsl:if>
                                <xsl:if test="ns3:TEL">
                                    <ns3:TEL>
                                        <xsl:value-of select="ns3:TEL"/>
                                    </ns3:TEL>
                                </xsl:if>
                                <xsl:if test="ns3:EMAILADDRESS">
                                    <ns3:EMAILADDRESS>
                                        <xsl:value-of select="ns3:EMAILADDRESS"/>
                                    </ns3:EMAILADDRESS>
                                </xsl:if>
                                <xsl:if test="ns3:ADDITIONAL">
                                    <ns3:ADDITIONAL>
                                        <xsl:value-of select="ns3:ADDITIONAL"/>
                                    </ns3:ADDITIONAL>
                                </xsl:if>
                                <xsl:if test="ns3:TEL2">
                                    <ns3:TEL2>
                                        <xsl:value-of select="ns3:TEL2"/>
                                    </ns3:TEL2>
                                </xsl:if>
                                <xsl:if test="ns3:Extra">
                                    <ns3:Extra>
                                        <xsl:value-of select="ns3:Extra"/>
                                    </ns3:Extra>
                                </xsl:if>
                                <xsl:if test="ns3:VisaSerial">
                                    <ns3:VisaSerial>
                                        <xsl:value-of select="ns3:VisaSerial"/>
                                    </ns3:VisaSerial>
                                </xsl:if>
                                <xsl:if test="ns3:VisaType">
                                    <ns3:VisaType>
                                        <xsl:value-of select="ns3:VisaType"/>
                                    </ns3:VisaType>
                                </xsl:if>
                                <xsl:if test="ns3:Sponsor">
                                    <ns3:Sponsor>
                                        <xsl:value-of select="ns3:Sponsor"/>
                                    </ns3:Sponsor>
                                </xsl:if>
                                <xsl:if test="ns3:ResidencyArticle">
                                    <ns3:ResidencyArticle>
                                        <xsl:value-of select="ns3:ResidencyArticle"/>
                                    </ns3:ResidencyArticle>
                                </xsl:if>
                                <xsl:if test="ns3:SiebelBloodType">
                                    <ns3:SiebelBloodType>
                                        <xsl:value-of select="ns3:SiebelBloodType"/>
                                    </ns3:SiebelBloodType>
                                </xsl:if>
                                <xsl:if test="ns3:SiebelCity">
                                    <ns3:SiebelCity>
                                        <xsl:value-of select="ns3:SiebelCity"/>
                                    </ns3:SiebelCity>
                                </xsl:if>
                                <xsl:if test="ns3:SiebelPostalAreaName">
                                    <ns3:SiebelPostalAreaName>
                                        <xsl:value-of select="ns3:SiebelPostalAreaName"/>
                                    </ns3:SiebelPostalAreaName>
                                </xsl:if>
                                <xsl:if test="ns3:SiebelNationality">
                                    <ns3:SiebelNationality>
                                        <xsl:value-of select="ns3:SiebelNationality"/>
                                    </ns3:SiebelNationality>
                                </xsl:if>
                                <xsl:if test="ns3:Article">
                                    <ns3:Article>
                                        <xsl:value-of select="ns3:Article"/>
                                    </ns3:Article>
                                </xsl:if>
                                <xsl:if test="ns3:CallBack">
                                    <ns3:CallBack>
                                        <xsl:value-of select="ns3:CallBack"/>
                                    </ns3:CallBack>
                                </xsl:if>
                                <xsl:if test="ns3:PassportNo">
                                    <ns3:PassportNo>
                                        <xsl:value-of select="ns3:PassportNo"/>
                                    </ns3:PassportNo>
                                </xsl:if>
                                <xsl:if test="ns3:JobTitle">
                                    <ns3:JobTitle>
                                        <xsl:value-of select="ns3:JobTitle"/>
                                    </ns3:JobTitle>
                                </xsl:if>
                                <ns4:ErrorResponse>
                                    <ns4:Error_SourceSystem>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_SourceSystem>
                                    <ns4:Error_SourceErrCode>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_SourceErrCode>
                                    <ns4:Error_SourceErrDesc>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_SourceErrDesc>
                                    <ns4:Error_Type>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_Type>
                                    <ns4:Error_UserErrCode>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_UserErrCode>
                                    <ns4:Error_UserErrDesc>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_UserErrDesc>
                                    <ns4:Error_Occurance_Time>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_Occurance_Time>
                                    <ns4:Error_Additional_Desc1>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_Additional_Desc1>
                                    <ns4:Error_Additional_Desc2>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns4:Error_Additional_Desc2>
                                </ns4:ErrorResponse>
                            </ns3:QueryCustomerCivilIdDataOutput>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="string-length($ESI_Call/root/ns3:QueryCustomerCivilIdDataOutput/ns4:ErrorResponse/ns4:Error_SourceErrCode)>0">
                        <ns3:QueryCustomerCivilIdDataOutput>
                            <xsl:copy-of select="$ESI_Call/root/ns3:QueryCustomerCivilIdDataOutput/ns4:ErrorResponse"/>
                        </ns3:QueryCustomerCivilIdDataOutput>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns3:QueryCustomerCivilIdDataOutput>
                            <ns4:ErrorResponse>
                                <ns4:Error_SourceSystem>
                                    <xsl:value-of select="&quot;TIBCO&quot;"/>
                                </ns4:Error_SourceSystem>
                                <ns4:Error_SourceErrCode>
                                    <xsl:value-of select="$ErrorHandler/ns13:ExceptionRequest/ExceptionCode"/>
                                </ns4:Error_SourceErrCode>
                                <xsl:if test="$ErrorHandler/ns13:ExceptionRequest/StackTrace">
                                    <ns4:Error_SourceErrDesc>
                                        <xsl:value-of select="$ErrorHandler/ns13:ExceptionRequest/StackTrace"/>
                                    </ns4:Error_SourceErrDesc>
                                </xsl:if>
                            </ns4:ErrorResponse>
                        </ns3:QueryCustomerCivilIdDataOutput>
                    </xsl:otherwise>
                </xsl:choose>
            </Output>
        </wsdlPfx:QueryCustomerCivilIdDataResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:QueryCustomerCivilIdDataResponse"/>
    <pd:endX>925</pd:endX>
    <pd:endY>168</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1541419002876</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>358</pd:x>
        <pd:y>333</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>531</pd:x>
        <pd:y>335</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns13:ExceptionRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/BiometricActivity/QueryCustomerCivilIdData/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                </ns2:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </StackTrace>
            </ns13:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>734</pd:x>
        <pd:y>333</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/BiometricActivity/QueryCustomerCivilIdData/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($ErrorHandler/ns13:ExceptionRequest)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                    </ns2:Transaction>
                </ns2:Header>
                <xsl:if test="$GetTransactionID/GUID/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_Call">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>578</pd:x>
        <pd:y>166</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Biometrics/BiometricActivity/HelperProcess/ESI_Call_QueryCustomerCivilIdData.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <TransactionId>
                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                </TransactionId>
                <StartTimeStamp>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </StartTimeStamp>
                <xsl:copy-of select="$Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTransactionID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>237</pd:x>
        <pd:y>165</pd:y>
        <config>
            <processName>/CommonProcesses/Utilities/GUID.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>414</pd:x>
        <pd:y>164</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/BiometricActivity/QueryCustomerCivilIdData/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns2:TransactionID>
                    <xsl:if test="$Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput/ns3:CustomerId">
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput/ns3:CustomerId"/>
                        </ns2:InterfaceID>
                    </xsl:if>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput)"/>
                    </ns2:Message>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>787</pd:x>
        <pd:y>171</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/BiometricActivity/QueryCustomerCivilIdData/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns2:TransactionID>
                    <xsl:if test="$Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput/ns3:CustomerId">
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/wsdlPfx:QueryCustomerCivilIdDataRequest/Input/ns3:QueryCustomerCivilIdDataInput/ns3:CustomerId"/>
                        </ns2:InterfaceID>
                    </xsl:if>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($ESI_Call/root/ns3:QueryCustomerCivilIdDataOutput)"/>
                    </ns2:Message>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetTransactionID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTransactionID</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>ESI_Call</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_Call</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>