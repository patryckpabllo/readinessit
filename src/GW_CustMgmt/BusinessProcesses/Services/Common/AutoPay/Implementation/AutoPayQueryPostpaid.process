<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns14="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns15="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.zain.com/ZESB/Services/AutoPay" xmlns:ns5="http://www.siebel.com/xml/CBiO2QueryPostpaidAutoPay" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns6="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns13="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns7="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:pfx="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:ns3="http://www.zain.com/ZESB/Services/AutoPay/Types" xmlns:ns0="http://www.zain.com/ZESB/Types/Common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://siebel.com/CustomUI" xmlns:pfx2="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayExecutionResponse.xsd">
    <xsd:import namespace="http://www.zain.com/ZESB/Services/AutoPay/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/AutoPay/AutoPayInbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/AutoPay" location="/BusinessWSDLS/Services/WSDLS/AutoPay/AutoPayInbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/AutoPay/Implementation/AutoPayQueryPostpaid.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:QueryPostpaidRequest"/>
    <pd:startX>123</pd:startX>
    <pd:startY>260</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:QueryPostpaidResponse>
            <QueryPostpaidResponse>
                <ns3:QueryPostpaidResp>
                    <MaskedCardNumber>
                        <xsl:value-of select="$CDMToNativeResponse/ns3:QueryPostpaidResp/MaskedCardNumber"/>
                    </MaskedCardNumber>
                    <CardExpiry>
                        <xsl:value-of select="$CDMToNativeResponse/ns3:QueryPostpaidResp/CardExpiry"/>
                    </CardExpiry>
                    <Active>
                        <xsl:value-of select="$CDMToNativeResponse/ns3:QueryPostpaidResp/Active"/>
                    </Active>
                    <xsl:copy-of select="$CDMToNativeResponse/ns3:QueryPostpaidResp/Params"/>
                </ns3:QueryPostpaidResp>
            </QueryPostpaidResponse>
        </wsdlPfx:QueryPostpaidResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:QueryPostpaidResponse"/>
    <pd:endX>1589</pd:endX>
    <pd:endY>254</pd:endY>
    <pd:errorSchemas>
        <Schema1 wsMsgRef="wsdlPfx:FaultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1453185870206</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>495</pd:x>
        <pd:y>136</pd:y>
        <pd:width>943</pd:width>
        <pd:height>352</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>GetESBLOV</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode)&gt;0 and $ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode='0')
{--(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode)&gt;0 and $ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrCodeCash)--}</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ErrorESI_Call</pd:to>
            <pd:xpathDescription>ErrorExists</pd:xpathDescription>
            <pd:lineType>Straight</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>ESI_Call</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNativeResponse</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ErrorResponse</pd:to>
            <pd:xpathDescription>ErrorResponse</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetESBLOV</pd:from>
            <pd:to>CDMToNativeResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>727</pd:x>
            <pd:y>204</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ComponentNameQryPost"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <xsl:if test="$GetJMSContext/ns7:_applicationProperties/ns7:JMSMessageID">
                            <ns2:CorrelationID>
                                <xsl:value-of select="$GetJMSContext/ns7:_applicationProperties/ns7:JMSMessageID"/>
                            </ns2:CorrelationID>
                        </xsl:if>
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/wsdlPfx:QueryPostpaidRequest/QueryPostpaidRequest/ns3:QueryPostpaidReq/Msisdn"/>
                        </ns2:InterfaceID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($Start/wsdlPfx:QueryPostpaidRequest)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1334</pd:x>
            <pd:y>205</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ComponentNameQryPost"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/wsdlPfx:QueryPostpaidRequest/QueryPostpaidRequest/ns3:QueryPostpaidReq/Msisdn"/>
                        </ns2:InterfaceID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($CDMToNativeResponse/ns3:QueryPostpaidResp)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESI_Call">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>883</pd:x>
            <pd:y>201</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/AutoPay/HelperProcess/ESI_Call_AutoPayQueryPostPaid.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                    <ns3:QueryPostpaidReq>
                        <Msisdn>
                            <xsl:value-of select="$Start/wsdlPfx:QueryPostpaidRequest/QueryPostpaidRequest/ns3:QueryPostpaidReq/Msisdn"/>
                        </Msisdn>
                    </ns3:QueryPostpaidReq>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>600</pd:x>
            <pd:y>208</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorESI_Call">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>775</pd:x>
            <pd:y>399</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns15:ActivityInput>
                    <data>
                        <wsdlPfx:FaultMessage>
                            <fault>
                                <ns0:FaultType>
                                    <ns0:type>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:type>
                                    <ns0:code>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                    </ns0:code>
                                    <ns0:description>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                    </ns0:description>
                                    <ns0:sourceSystem>
                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SourceTIBCO"/>
                                    </ns0:sourceSystem>
                                    <ns0:extErrorCode>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:extErrorCode>
                                    <ns0:detail>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:detail>
                                </ns0:FaultType>
                            </fault>
                        </wsdlPfx:FaultMessage>
                    </data>
                </ns15:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CDMToNativeResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1164</pd:x>
            <pd:y>208</pd:y>
            <config>
                <element ref="ns3:QueryPostpaidResp"/>
            </config>
            <pd:inputBindings>
                <ns3:QueryPostpaidResp>
                    <MaskedCardNumber>
                        <xsl:value-of select="if(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardNumber)>0)&#xA;then concat(substring($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardNumber,1,6),&quot;XXXXXX&quot;,substring($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardNumber,string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardNumber)-3,4))&#xA;else &quot;&quot;"/>
                    </MaskedCardNumber>
                    <xsl:choose>
                        <xsl:when test="string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationMonth)>0&#xA;or string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationYear)>0">
                            <CardExpiry>
                                <xsl:value-of select="if(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationMonth)>1)&#xA;then concat($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationMonth,&quot;/&quot;,tib:right($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationYear,2))&#xA;else concat('0',$ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationMonth,&quot;/&quot;,tib:right($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:ExpirationYear,2))"/>
                            </CardExpiry>
                        </xsl:when>
                        <xsl:otherwise>
                            <CardExpiry>
                                <xsl:value-of select="&quot;&quot;"/>
                            </CardExpiry>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Active>
                        <xsl:value-of select="if(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:Status)>0)&#xA;then true()&#xA;else false()"/>
                    </Active>
                    <xsl:if test="(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardType)>0&#xA;or string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:PaymentProfileType)>0&#xA;or string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:RegistrationDate)>0)&#xA;and ($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode!=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrCodeCash)">
                        <Params>
                            <xsl:if test="string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:RegistrationDate)>0">
                                <ns0:DateParam>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;ActiveSince&quot;"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="tib:format-date('yyyy-MM-dd',tib:parse-date(&quot;MM/dd/yyyy&quot;,$ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:RegistrationDate))"/>
                                </ns0:DateParam>
                            </xsl:if>
                            <xsl:if test="string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:PaymentProfileType)>0">
                                <ns0:StringParam>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;RegistrationLevel&quot;"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="if(upper-case($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:PaymentProfileType)='SUBSCRIBER LEVEL PAYMENT')&#xA;then &quot;Subscriber&quot;&#xA;else &quot;Contract&quot;"/>
                                </ns0:StringParam>
                            </xsl:if>
                            <xsl:if test="string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardType)>0">
                                <ns0:StringParam>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;CardType&quot;"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="if(string-length($ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardType)>0)&#xA;then $GetESBLOV/root/ns6:ESBLOV/ns6:Record[ns6:TRANSVALUE=$ESI_Call/pfx3:QueryPostpaidAutopay_Output/ns5:ListOfCbio2querypostpaidautopay/ns5:PostpaidAutopayDetails[1]/ns5:CardType]/ns6:TRANSKEY&#xA;else &quot;&quot;"/>
                                </ns0:StringParam>
                            </xsl:if>
                        </Params>
                    </xsl:if>
                </ns3:QueryPostpaidResp>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorResponse">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>985</pd:x>
            <pd:y>393</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns15:ActivityInput>
                    <data>
                        <wsdlPfx:FaultMessage>
                            <fault>
                                <ns0:FaultType>
                                    <ns0:type>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:type>
                                    <ns0:code>
                                        <xsl:value-of select="$ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode"/>
                                    </ns0:code>
                                    <ns0:description>
                                        <xsl:value-of select="if($ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrCodeCash)&#xA;then &quot;Autopay service is not active&quot;&#xA;else $ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceErrDesc"/>
                                    </ns0:description>
                                    <ns0:sourceSystem>
                                        <xsl:value-of select="$ESI_Call/pfx3:QueryPostpaidAutopay_Output/pfx3:ErrorSourceSystem"/>
                                    </ns0:sourceSystem>
                                    <ns0:extErrorCode>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:extErrorCode>
                                    <ns0:detail>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </ns0:detail>
                                </ns0:FaultType>
                            </fault>
                        </wsdlPfx:FaultMessage>
                    </data>
                </ns15:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetESBLOV">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>1008</pd:x>
            <pd:y>211</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>600</pd:x>
        <pd:y>565</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ComponentNameQuery"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($ErrorResponseMapFromEOM/root)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                    </ns2:Transaction>
                </ns2:Header>
                <xsl:if test="$GetTransactionID/GUID/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>138</pd:x>
        <pd:y>555</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns13:ExceptionRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ComponentNameQuery"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                </ns2:Header>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:description)">
                        <xsl:if test="$_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:description">
                            <StackTrace>
                                <xsl:value-of select="$_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:description"/>
                            </StackTrace>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:description)">
                        <StackTrace>
                            <xsl:value-of select="$_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:description"/>
                        </StackTrace>
                    </xsl:when>
                    <xsl:otherwise>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </StackTrace>
                    </xsl:otherwise>
                </xsl:choose>
            </ns13:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>772</pd:x>
        <pd:y>560</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="if(string-length($ErrorResponseMapFromEOM/root/ErrorSourceSystem)>0)&#xA;then $ErrorResponseMapFromEOM/root/ErrorSourceSystem&#xA;else $_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>942</pd:x>
        <pd:y>562</pd:y>
        <config>
            <faultName>Schema1</faultName>
        </config>
        <pd:inputBindings>
            <ns15:ActivityInput>
                <data>
                    <wsdlPfx:FaultMessage>
                        <fault>
                            <ns0:FaultType>
                                <ns0:type>
                                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                                </ns0:type>
                                <ns0:code>
                                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                                </ns0:code>
                                <ns0:description>
                                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                                </ns0:description>
                                <ns0:sourceSystem>
                                    <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                                </ns0:sourceSystem>
                                <ns0:extErrorCode>
                                    <xsl:value-of select="if($ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrCodeCash&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLPPCashError&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=tib:tokenize($_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrInactiveMSISDN,&quot;,&quot;)[1]&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=tib:tokenize($_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrInactiveMSISDN,&quot;,&quot;)[2]&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ErrNoService)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/InactiveErrCodeExt&#xA;else $ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                                </ns0:extErrorCode>
                                <ns0:detail>
                                    <xsl:value-of select="if($ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrCodeCash&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLPPCashError&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=tib:tokenize($_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrInactiveMSISDN,&quot;,&quot;)[1]&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=tib:tokenize($_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SBLErrInactiveMSISDN,&quot;,&quot;)[2]&#xA;or $ErrorResponseMapFromEOM/root/ErrorSourceErrCode=$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ErrNoService)&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/InactiveErrMsgExt&#xA;else $ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                                </ns0:detail>
                            </ns0:FaultType>
                        </fault>
                    </wsdlPfx:FaultMessage>
                </data>
            </ns15:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>300</pd:x>
        <pd:y>658</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </msgCode>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetJMSContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
        <pd:resourceType>service.activity.getContext</pd:resourceType>
        <pd:x>314</pd:x>
        <pd:y>262</pd:y>
        <config>
            <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>322</pd:x>
        <pd:y>558</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="if(exists($_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType))&#xA;then $_error_ErrorResponse/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:sourceSystem&#xA;else if(exists($_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType))&#xA;then $_error_ErrorESI_Call/wsdlPfx:FaultMessage/fault/ns0:FaultType/ns0:sourceSystem&#xA;else $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/SourceTIBCO"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="&quot;SELF-CARE&quot;"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="&quot;External&quot;"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="$ErrorHandler/ns13:ExceptionRequest/ExceptionCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="$ErrorHandler/ns13:ExceptionRequest/StackTrace"/>
                </ResponseDescription>
                <TIBCOServiceName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/AutoPayInbound/ComponentNameQryPost"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="''"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="''"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>SendErrorContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorContext</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetJMSContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetJMSContext</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>