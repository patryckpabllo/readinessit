<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx31="http://www.siebel.com/xml/CBiO2%20Customer%20Profile%20IO" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.siebel.com/xml/CBiO2CorporateCustomerCreationIO" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationIo.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationResIo.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CorporateCreateCustomer/CorporateCreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2CorporateCustomerCreationIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/CBiO2CorporateCustomerCreationIO_19_May_2016.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Provisioning/CorporateCreateCustomer/HelperProcess/BPI_Call.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx36:SiebelMessage"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>113</pd:startX>
    <pd:startY>211</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$CDMToNative/pfx35:ListOfCbio2CustomerCreationResIo"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>999</pd:endX>
    <pd:endY>211</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Common_EAI_EMSSender">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>575</pd:x>
        <pd:y>210</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSender.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/corporateCustomer)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CorporateCustomer/ESI_Request"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>272</pd:x>
        <pd:y>357</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>766</pd:x>
        <pd:y>211</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CorporateCustomer/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/CREATE_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx36:SiebelMessage/@MessageId"/>
                    </ns6:InterfaceID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/corporateCustomer)"/>
                    </ns6:Message>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="$NativeToCDM/corporateCustomer/Customer[1]/pfx32:CreateCustomerReq/ns11:ZainCustomerAccountList/ZainCustomerAccount[1]/ZainCustomerPayment[1]/ns11:ZainBankPM/accountNumber"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($NativeToCDM/corporateCustomer/Customer[1]/pfx32:CreateCustomerReq/ns11:ZainCustomerAccountList/ZainCustomerAccount[1]/ZainCustomerPayment[1]/ns11:ZainBankPM/accountNumber,6),'XXXXXX',tib:right($NativeToCDM/corporateCustomer/Customer[1]/pfx32:CreateCustomerReq/ns11:ZainCustomerAccountList/ZainCustomerAccount[1]/ZainCustomerPayment[1]/ns11:ZainBankPM/accountNumber,4))"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="if (string-length($Start/root/StartTimeStamp)>0)&#xA;then&#xA;tib:timestamp() - $Start/root/StartTimeStamp&#xA;else&#xA;$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>392</pd:x>
        <pd:y>211</pd:y>
        <config>
            <element>
                <xsd:element name="corporateCustomer">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Customer" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element ref="pfx32:CreateCustomerReq"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <corporateCustomer>
                <xsl:for-each select="$ParseRequest/pfx36:SiebelMessage/pfx36:CBiO2CorporateCustomerCreationIO/pfx36:Account[not(upper-case(pfx36:ErrorStatus)='SUCCESS')]">
                    <Customer>
                        <pfx32:CreateCustomerReq>
                            <ns11:BusinessMessageHeader>
                                <ExternalTransactionID>
                                    <xsl:value-of select="$ParseRequest/pfx36:SiebelMessage/@MessageId"/>
                                </ExternalTransactionID>
                                <Timestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </Timestamp>
                                <ApplicationID>
                                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                                </ApplicationID>
                                <ComponentName>
                                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Provisioning/CreateCustomer/ComponentName"/>
                                </ComponentName>
                                <Hostname>
                                    <xsl:value-of select="BW:getHostName()"/>
                                </Hostname>
                                <TransactionDomain>
                                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/PROVISIONING"/>
                                </TransactionDomain>
                                <TransactionType>
                                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                                </TransactionType>
                                <TransactionID>
                                    <xsl:value-of select="$Start/root/TransactionID"/>
                                </TransactionID>
                            </ns11:BusinessMessageHeader>
                            <ns11:Organization>
                                <OrganizationIdentification>
                                    <xsl:if test="pfx36:Name">
                                        <companyName>
                                            <xsl:value-of select="pfx36:Name"/>
                                        </companyName>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CompanyNameEng">
                                        <CompanyNameEng>
                                            <xsl:value-of select="pfx36:CBiO2CompanyNameEng"/>
                                        </CompanyNameEng>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2SisterCompany">
                                        <SisterCompany>
                                            <xsl:value-of select="pfx36:CBiO2SisterCompany"/>
                                        </SisterCompany>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2OrgType">
                                        <OrganizationType>
                                            <xsl:value-of select="pfx36:CBiO2OrgType"/>
                                        </OrganizationType>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2OrgSize">
                                        <Organizationsize>
                                            <xsl:value-of select="pfx36:CBiO2OrgSize"/>
                                        </Organizationsize>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2OrgCategory">
                                        <OrganizationCategory>
                                            <xsl:value-of select="pfx36:CBiO2OrgCategory"/>
                                        </OrganizationCategory>
                                    </xsl:if>
                                </OrganizationIdentification>
                            </ns11:Organization>
                            <ns11:ZainIndividualList>
                                <ZainIndividual>
                                    <xsl:if test="pfx36:CBiO2Gender">
                                        <gender>
                                            <xsl:value-of select="pfx36:CBiO2Gender"/>
                                        </gender>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CustMaritalStatus">
                                        <maritalStatus>
                                            <xsl:value-of select="pfx36:CBiO2CustMaritalStatus"/>
                                        </maritalStatus>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2Nationality">
                                        <nationality>
                                            <xsl:value-of select="pfx36:CBiO2Nationality"/>
                                        </nationality>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CustProfession">
                                        <profession>
                                            <xsl:value-of select="pfx36:CBiO2CustProfession"/>
                                        </profession>
                                    </xsl:if>
                                    <xsl:if test="exists(pfx36:CBiO2DOB) and string-length(pfx36:CBiO2DOB)>0">
                                        <DateofBirth>
                                            <xsl:value-of select="tib:parse-date('MM/dd/yyyy',pfx36:CBiO2DOB)"/>
                                        </DateofBirth>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2IDType">
                                        <idType>
                                            <xsl:value-of select="pfx36:CBiO2IDType"/>
                                        </idType>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2IDNumber">
                                        <CivilId>
                                            <xsl:value-of select="pfx36:CBiO2IDNumber"/>
                                        </CivilId>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2ResidencyType">
                                        <ResidencyType>
                                            <xsl:value-of select="pfx36:CBiO2ResidencyType"/>
                                        </ResidencyType>
                                    </xsl:if>
                                    <xsl:if test="pfx36:Region">
                                        <Region>
                                            <xsl:value-of select="pfx36:Region"/>
                                        </Region>
                                    </xsl:if>
                                    <languageCode>
                                        <xsl:value-of select="2"/>
                                    </languageCode>
                                    <xsl:if test="pfx36:Language">
                                        <language>
                                            <xsl:value-of select="pfx36:Language"/>
                                        </language>
                                    </xsl:if>
                                    <IndividualName>
                                        <xsl:if test="pfx36:CBiO2EnglishTitle">
                                            <AristocraticTitle>
                                                <xsl:value-of select="pfx36:CBiO2EnglishTitle"/>
                                            </AristocraticTitle>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2ArabicTitle">
                                            <ArabicAristocraticTitle>
                                                <xsl:value-of select="pfx36:CBiO2ArabicTitle"/>
                                            </ArabicAristocraticTitle>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2ArabicLastName">
                                            <familyNames>
                                                <xsl:value-of select="pfx36:CBiO2ArabicLastName"/>
                                            </familyNames>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2EnglishFullName">
                                            <fullName>
                                                <xsl:value-of select="pfx36:CBiO2EnglishFullName"/>
                                            </fullName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2ArabicFullName">
                                            <ArabicFullName>
                                                <xsl:value-of select="pfx36:CBiO2ArabicFullName"/>
                                            </ArabicFullName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2EnglishLastName">
                                            <legalName>
                                                <xsl:value-of select="pfx36:CBiO2EnglishLastName"/>
                                            </legalName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2EnglishFirstName">
                                            <FirstName>
                                                <xsl:value-of select="pfx36:CBiO2EnglishFirstName"/>
                                            </FirstName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2EnglishSecondName">
                                            <SecondName>
                                                <xsl:value-of select="pfx36:CBiO2EnglishSecondName"/>
                                            </SecondName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2EnglishThirdName">
                                            <ThirdName>
                                                <xsl:value-of select="pfx36:CBiO2EnglishThirdName"/>
                                            </ThirdName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2CompanyNameArabic">
                                            <ArabicFirstName>
                                                <xsl:value-of select="pfx36:CBiO2CompanyNameArabic"/>
                                            </ArabicFirstName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2ArabicSecondName">
                                            <ArabicSecondName>
                                                <xsl:value-of select="pfx36:CBiO2ArabicSecondName"/>
                                            </ArabicSecondName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2ArabicThirdName">
                                            <ArabicThirdName>
                                                <xsl:value-of select="pfx36:CBiO2ArabicThirdName"/>
                                            </ArabicThirdName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2NickName">
                                            <preferredName>
                                                <xsl:value-of select="pfx36:CBiO2NickName"/>
                                            </preferredName>
                                        </xsl:if>
                                        <xsl:if test="pfx36:CBiO2Behaviors">
                                            <Behaviors>
                                                <xsl:value-of select="pfx36:CBiO2Behaviors"/>
                                            </Behaviors>
                                        </xsl:if>
                                    </IndividualName>
                                    <xsl:for-each select="pfx36:ListOfCutAddress/pfx36:CutAddress">
                                        <ZainAddress>
                                            <xsl:if test="pfx36:ErrorStatus">
                                                <addressLine1>
                                                    <xsl:value-of select="pfx36:ErrorStatus"/>
                                                </addressLine1>
                                            </xsl:if>
                                            <xsl:if test="pfx36:Neighborhood">
                                                <area>
                                                    <xsl:value-of select="pfx36:Neighborhood"/>
                                                </area>
                                            </xsl:if>
                                            <xsl:if test="pfx36:City">
                                                <city>
                                                    <xsl:value-of select="pfx36:City"/>
                                                </city>
                                            </xsl:if>
                                            <xsl:if test="pfx36:Country">
                                                <country>
                                                    <xsl:value-of select="pfx36:Country"/>
                                                </country>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2Block">
                                                <Block>
                                                    <xsl:value-of select="pfx36:CBiO2Block"/>
                                                </Block>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2Floor">
                                                <Floor>
                                                    <xsl:value-of select="pfx36:CBiO2Floor"/>
                                                </Floor>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2Building">
                                                <Building>
                                                    <xsl:value-of select="pfx36:CBiO2Building"/>
                                                </Building>
                                            </xsl:if>
                                            <xsl:if test="pfx36:ApartmentNumber">
                                                <Apartment>
                                                    <xsl:value-of select="pfx36:ApartmentNumber"/>
                                                </Apartment>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2Avenue">
                                                <Avenue>
                                                    <xsl:value-of select="pfx36:CBiO2Avenue"/>
                                                </Avenue>
                                            </xsl:if>
                                            <xsl:if test="pfx36:LocationType">
                                                <BaseType>
                                                    <xsl:value-of select="pfx36:LocationType"/>
                                                </BaseType>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2POBox">
                                                <poBoxNumber>
                                                    <xsl:value-of select="pfx36:CBiO2POBox"/>
                                                </poBoxNumber>
                                            </xsl:if>
                                            <xsl:if test="pfx36:Id">
                                                <sourceAddressId>
                                                    <xsl:value-of select="pfx36:Id"/>
                                                </sourceAddressId>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2PostalAreaCode">
                                                <streetName>
                                                    <xsl:value-of select="pfx36:CBiO2PostalAreaCode"/>
                                                </streetName>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2StreetNumber">
                                                <streetNumber>
                                                    <xsl:value-of select="pfx36:CBiO2StreetNumber"/>
                                                </streetNumber>
                                            </xsl:if>
                                            <targetAddressId>
                                                <ns11:systemName>
                                                    <xsl:value-of select="&quot;BSCSAddressId&quot;"/>
                                                </ns11:systemName>
                                                <xsl:if test="pfx36:CBiO2BSCSId">
                                                    <ns11:value>
                                                        <xsl:value-of select="pfx36:CBiO2BSCSId"/>
                                                    </ns11:value>
                                                </xsl:if>
                                            </targetAddressId>
                                            <xsl:if test="pfx36:PostalCode">
                                                <postalCode>
                                                    <xsl:value-of select="pfx36:PostalCode"/>
                                                </postalCode>
                                            </xsl:if>
                                            <ns11:ZainContact>
                                                <xsl:if test="pfx36:CBiO2Mail">
                                                    <eMailAddress>
                                                        <xsl:value-of select="pfx36:CBiO2Mail"/>
                                                    </eMailAddress>
                                                </xsl:if>
                                                <xsl:if test="pfx36:LandlordPhoneNumber">
                                                    <homeContact>
                                                        <xsl:value-of select="pfx36:LandlordPhoneNumber"/>
                                                    </homeContact>
                                                </xsl:if>
                                            </ns11:ZainContact>
                                            <xsl:if test="pfx36:AddressType">
                                                <AdressType>
                                                    <xsl:value-of select="pfx36:AddressType"/>
                                                </AdressType>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2PostalAreaCode">
                                                <PostalArea>
                                                    <xsl:value-of select="pfx36:CBiO2PostalAreaCode"/>
                                                </PostalArea>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2Status">
                                                <ActiveStatus>
                                                    <xsl:value-of select="pfx36:CBiO2Status"/>
                                                </ActiveStatus>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2EngPostalAreaName">
                                                <PostalAreaName>
                                                    <xsl:value-of select="pfx36:CBiO2EngPostalAreaName"/>
                                                </PostalAreaName>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2PacciNumber">
                                                <PacciNumber>
                                                    <xsl:value-of select="pfx36:CBiO2PacciNumber"/>
                                                </PacciNumber>
                                            </xsl:if>
                                        </ZainAddress>
                                    </xsl:for-each>
                                    <xsl:if test="pfx36:CBiO2Category">
                                        <Category>
                                            <xsl:value-of select="pfx36:CBiO2Category"/>
                                        </Category>
                                    </xsl:if>
                                </ZainIndividual>
                            </ns11:ZainIndividualList>
                            <ns11:ZainCustomerAccountList>
                                <ZainCustomerAccount>
                                    <xsl:if test="pfx36:AccountStatus">
                                        <accountStatus>
                                            <xsl:value-of select="pfx36:AccountStatus"/>
                                        </accountStatus>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2AccountSequenceNumber">
                                        <ID>
                                            <xsl:value-of select="pfx36:CBiO2AccountSequenceNumber"/>
                                        </ID>
                                    </xsl:if>
                                    <xsl:if test="pfx36:Name">
                                        <name>
                                            <xsl:value-of select="pfx36:Name"/>
                                        </name>
                                    </xsl:if>
                                    <xsl:if test="pfx36:ParentAccountId">
                                        <parentAccountId>
                                            <xsl:value-of select="pfx36:ParentAccountId"/>
                                        </parentAccountId>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2BSCSId">
                                        <ContractID>
                                            <xsl:value-of select="pfx36:CBiO2BSCSId"/>
                                        </ContractID>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2GenerateStatementFlg">
                                        <HasPostpaid>
                                            <xsl:value-of select="pfx36:CBiO2GenerateStatementFlg"/>
                                        </HasPostpaid>
                                    </xsl:if>
                                    <ns11:EmployeeIdentifier>
                                        <EmployeeId>
                                            <ns11:systemName>
                                                <xsl:value-of select="&quot;employeeId&quot;"/>
                                            </ns11:systemName>
                                            <xsl:if test="pfx36:RelationshipId">
                                                <ns11:value>
                                                    <xsl:value-of select="pfx36:RelationshipId"/>
                                                </ns11:value>
                                            </xsl:if>
                                        </EmployeeId>
                                    </ns11:EmployeeIdentifier>
                                    <xsl:if test="pfx36:CBiO2Source">
                                        <SourceofSignOff>
                                            <xsl:value-of select="pfx36:CBiO2Source"/>
                                        </SourceofSignOff>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2SalesAgent">
                                        <Salesagent>
                                            <xsl:value-of select="pfx36:CBiO2SalesAgent"/>
                                        </Salesagent>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CustomerPPBSCSID">
                                        <costCodePub>
                                            <xsl:value-of select="pfx36:CBiO2CustomerPPBSCSID"/>
                                        </costCodePub>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CustomerPaymentProfId">
                                        <costId>
                                            <xsl:value-of select="pfx36:CBiO2CustomerPaymentProfId"/>
                                        </costId>
                                    </xsl:if>
                                    <xsl:if test="pfx36:Id">
                                        <crmCustomerId>
                                            <xsl:value-of select="pfx36:Id"/>
                                        </crmCustomerId>
                                    </xsl:if>
                                    <xsl:if test="pfx36:MasterAccountId">
                                        <crmParentCustomerId>
                                            <xsl:value-of select="pfx36:MasterAccountId"/>
                                        </crmParentCustomerId>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2BillCycle">
                                        <csBillcycle>
                                            <xsl:value-of select="pfx36:CBiO2BillCycle"/>
                                        </csBillcycle>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2PRFlg">
                                        <csPrepayment>
                                            <xsl:value-of select="pfx36:CBiO2PRFlg"/>
                                        </csPrepayment>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2CustomerLevel">
                                        <level>
                                            <xsl:value-of select="pfx36:CBiO2CustomerLevel"/>
                                        </level>
                                    </xsl:if>
                                    <xsl:if test="pfx36:ErrorStatus">
                                        <accountStatusChangeReason>
                                            <xsl:value-of select="pfx36:ErrorStatus"/>
                                        </accountStatusChangeReason>
                                    </xsl:if>
                                    <reasonCode>
                                        <xsl:value-of select="if($ParseRequest/pfx36:SiebelMessage/pfx36:CBiO2CorporateCustomerCreationIO/pfx36:Account[1]/pfx36:CBiO2CustomerPPCD='Customer Level Payment') then 'Customer' else 'Line'"/>
                                    </reasonCode>
                                    <xsl:for-each select="pfx36:ListOfOrganizationPaymentProfile/pfx36:OrganizationPaymentProfile">
                                        <ZainCustomerPayment>
                                            <xsl:if test="pfx36:Id">
                                                <ID>
                                                    <xsl:value-of select="pfx36:Id"/>
                                                </ID>
                                            </xsl:if>
                                            <xsl:if test="exists(pfx36:CBiO2StartDate)">
                                                <xsl:if test="string-length(pfx36:CBiO2StartDate)>0">
                                                    <paymentDate>
                                                        <xsl:value-of select="tib:parse-date('MM/dd/yyyy',pfx36:CBiO2StartDate)"/>
                                                    </paymentDate>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2BSCSId">
                                                <ID_Public>
                                                    <xsl:value-of select="pfx36:CBiO2BSCSId"/>
                                                </ID_Public>
                                            </xsl:if>
                                            <xsl:if test="pfx36:ErrorStatus">
                                                <ns11:Status>
                                                    <xsl:value-of select="pfx36:ErrorStatus"/>
                                                </ns11:Status>
                                            </xsl:if>
                                            <ns11:Level>
                                                <xsl:value-of select="if(current()/pfx36:CBiO2CustomerPPCD='Customer Level Payment') then 'Customer' else 'Line'"/>
                                            </ns11:Level>
                                            <xsl:if test="string-length(current()/pfx36:CBiO2BSCSId)>0">
                                                <ns11:ModificationFlag>
                                                    <ns11:Name>
                                                        <xsl:value-of select="'1'"/>
                                                    </ns11:Name>
                                                    <ns11:Value>
                                                        <xsl:value-of select="'CardChange'"/>
                                                    </ns11:Value>
                                                </ns11:ModificationFlag>
                                            </xsl:if>
                                            <xsl:if test="pfx36:CBiO2CardType">
                                                <cardtype>
                                                    <xsl:value-of select="pfx36:CBiO2CardType"/>
                                                </cardtype>
                                            </xsl:if>
                                            <PaymentMethod>
                                                <xsl:if test="pfx36:ProfileStatus">
                                                    <description>
                                                        <xsl:value-of select="pfx36:ProfileStatus"/>
                                                    </description>
                                                </xsl:if>
                                                <xsl:if test="pfx36:CBiO2CCCompanyName">
                                                    <name>
                                                        <xsl:value-of select="pfx36:CBiO2CCCompanyName"/>
                                                    </name>
                                                </xsl:if>
                                                <xsl:if test="pfx36:PaymentProfileType">
                                                    <paymentMethodType>
                                                        <xsl:value-of select="pfx36:PaymentProfileType"/>
                                                    </paymentMethodType>
                                                </xsl:if>
                                                <CreditCardPM>
                                                    <xsl:if test="pfx36:ExpirationMonth">
                                                        <ExpirationMonth>
                                                            <xsl:value-of select="pfx36:ExpirationMonth"/>
                                                        </ExpirationMonth>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:ExpirationYear">
                                                        <ExpirationYear>
                                                            <xsl:value-of select="pfx36:ExpirationYear"/>
                                                        </ExpirationYear>
                                                    </xsl:if>
                                                </CreditCardPM>
                                                <ZainBankPM>
                                                    <xsl:if test="pfx36:AccountNumber2">
                                                        <accountNumber>
                                                            <xsl:value-of select="pfx36:AccountNumber2"/>
                                                        </accountNumber>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:AccountHolder">
                                                        <accountowner>
                                                            <xsl:value-of select="pfx36:AccountHolder"/>
                                                        </accountowner>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:CBiO2BankBSCSId">
                                                        <BankCode>
                                                            <xsl:value-of select="pfx36:CBiO2BankBSCSId"/>
                                                        </BankCode>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:AccountBankName">
                                                        <BankName>
                                                            <xsl:value-of select="pfx36:AccountBankName"/>
                                                        </BankName>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:AccountBankBranch">
                                                        <BankBranchName>
                                                            <xsl:value-of select="pfx36:AccountBankBranch"/>
                                                        </BankBranchName>
                                                    </xsl:if>
                                                </ZainBankPM>
                                                <xsl:if test="pfx36:CBiO2PaymentInstrument">
                                                    <PreferredPaymentMode>
                                                        <xsl:value-of select="pfx36:CBiO2PaymentInstrument"/>
                                                    </PreferredPaymentMode>
                                                </xsl:if>
                                            </PaymentMethod>
                                            <ns11:CustomerBill>
                                                <ns11:billId>
                                                    <xsl:if test="pfx36:CBiO2BillProfileId">
                                                        <ns11:value>
                                                            <xsl:value-of select="pfx36:CBiO2BillProfileId"/>
                                                        </ns11:value>
                                                    </xsl:if>
                                                </ns11:billId>
                                            </ns11:CustomerBill>
                                            <BillingAddressId>
                                                <xsl:if test="pfx36:CBiO2BillProfileBSCSId">
                                                    <ns11:value>
                                                        <xsl:value-of select="pfx36:CBiO2BillProfileBSCSId"/>
                                                    </ns11:value>
                                                </xsl:if>
                                            </BillingAddressId>
                                            <xsl:if test="pfx36:ErrorStatus">
                                                <CreditNote>
                                                    <xsl:value-of select="pfx36:ErrorStatus"/>
                                                </CreditNote>
                                            </xsl:if>
                                        </ZainCustomerPayment>
                                    </xsl:for-each>
                                    <xsl:for-each select="pfx36:ListOfComInvoiceProfile/pfx36:ComInvoiceProfile">
                                        <CustomerBill>
                                            <xsl:if test="pfx36:Id">
                                                <billNo>
                                                    <xsl:value-of select="pfx36:Id"/>
                                                </billNo>
                                            </xsl:if>
                                            <ns11:billId>
                                                <xsl:if test="pfx36:CBiO2BSCSId">
                                                    <ns11:value>
                                                        <xsl:value-of select="pfx36:CBiO2BSCSId"/>
                                                    </ns11:value>
                                                </xsl:if>
                                            </ns11:billId>
                                            <ns11:paymentId>
                                                <xsl:if test="current()/pfx36:CBiO2PaymentProfileId">
                                                    <ns11:systemName>
                                                        <xsl:value-of select="current()/pfx36:CBiO2PaymentProfileId"/>
                                                    </ns11:systemName>
                                                </xsl:if>
                                                <xsl:if test="current()/pfx36:CBiO2BPPaymentProfileBSCSID">
                                                    <ns11:value>
                                                        <xsl:value-of select="current()/pfx36:CBiO2BPPaymentProfileBSCSID"/>
                                                    </ns11:value>
                                                </xsl:if>
                                            </ns11:paymentId>
                                            <ModIndicator>
                                                <xsl:value-of select="if(pfx36:CBiO2BPModificationIdentifier='NEW_CREATION' or pfx36:CBiO2BPModificationIdentifier='OnlyBPUpdate' ) then 0 else 1"/>
                                            </ModIndicator>
                                            <ns11:Level>
                                                <xsl:value-of select="if(current()/pfx36:CBiO2CustomerPPCD='Customer Level Payment') then 'Customer' else 'Line'"/>
                                            </ns11:Level>
                                            <ns11:addressId>
                                                <xsl:if test="pfx36:CBiO2AddressBSCSId">
                                                    <ns11:value>
                                                        <xsl:value-of select="pfx36:CBiO2AddressBSCSId"/>
                                                    </ns11:value>
                                                </xsl:if>
                                            </ns11:addressId>
                                            <xsl:if test="pfx36:CBiO2InvoiceFormat">
                                                <Format>
                                                    <xsl:value-of select="pfx36:CBiO2InvoiceFormat"/>
                                                </Format>
                                            </xsl:if>
                                            <xsl:if test="pfx36:ErrorStatus">
                                                <relationshipType>
                                                    <xsl:value-of select="pfx36:ErrorStatus"/>
                                                </relationshipType>
                                            </xsl:if>
                                            <xsl:if test="pfx36:Name">
                                                <RequestType>
                                                    <xsl:value-of select="pfx36:Name"/>
                                                </RequestType>
                                            </xsl:if>
                                            <xsl:if test="pfx36:Status">
                                                <RequestsubType>
                                                    <xsl:value-of select="pfx36:Status"/>
                                                </RequestsubType>
                                            </xsl:if>
                                            <xsl:if test="pfx36:ErrorStatus">
                                                <ns11:Status>
                                                    <xsl:value-of select="pfx36:ErrorStatus"/>
                                                </ns11:Status>
                                            </xsl:if>
                                        </CustomerBill>
                                    </xsl:for-each>
                                    <xsl:if test="pfx36:AccountNumber">
                                        <AccountNumber>
                                            <xsl:value-of select="pfx36:AccountNumber"/>
                                        </AccountNumber>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2PortInFlag">
                                        <PortIn>
                                            <xsl:value-of select="pfx36:CBiO2PortInFlag"/>
                                        </PortIn>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2PortOutFlag">
                                        <PortOut>
                                            <xsl:value-of select="pfx36:CBiO2PortOutFlag"/>
                                        </PortOut>
                                    </xsl:if>
                                    <xsl:if test="pfx36:CBiO2Sector">
                                        <Sector>
                                            <xsl:value-of select="pfx36:CBiO2Sector"/>
                                        </Sector>
                                    </xsl:if>
                                </ZainCustomerAccount>
                            </ns11:ZainCustomerAccountList>
                            <ns11:ZainIdentifiers>
                                <ns11:accountId>
                                    <ns11:systemName>
                                        <xsl:value-of select="&quot;BSCSAccountId&quot;"/>
                                    </ns11:systemName>
                                    <ns11:value>
                                        <xsl:value-of select="$ParseRequest/pfx36:SiebelMessage/pfx36:CBiO2CorporateCustomerCreationIO/pfx36:Account[1]/pfx36:CBiO2BSCSHierarchyId"/>
                                    </ns11:value>
                                </ns11:accountId>
                            </ns11:ZainIdentifiers>
                        </pfx32:CreateCustomerReq>
                    </Customer>
                </xsl:for-each>
            </corporateCustomer>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>211</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx36:SiebelMessage"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($Start/root/pfx36:SiebelMessage)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Common_EAI_EMSSender</pd:to>
        <pd:xpathDescription>BPI-Call</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>GenerateParseError</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>