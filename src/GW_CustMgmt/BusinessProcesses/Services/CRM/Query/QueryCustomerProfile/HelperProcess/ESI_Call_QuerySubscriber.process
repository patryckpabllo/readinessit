<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.siebel.com/xml/CBiO2SubscriberInfoDetails" xmlns:ns17="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:ns15="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx44="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx42="http://siebel.com/CustomUI" xmlns:pfx43="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/CustProfQryRes.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.zain.com/ZESB/Services/CustomerProfile/Types" xmlns:pfx40="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" xmlns:pfx31="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetCustomerProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/GetCustomerProfileResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerAsset/CustomerAssetQueryInbound.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2QuerySubscriberInfoWS.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/CustomerProfile/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/QueryCustomerProfile/QueryCustomerProfileInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/CustProfQryRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerProfile/CustProfQryRes.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementInbound/eAccountManagementInbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/HelperProcess/ESI_Call_QuerySubscriber.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx40:queryAssetRequest"/>
                    <xsd:element name="TransactionId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>34</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <response>
            <xsl:copy-of select="$MapFinalResponse/pfx41:QuerySubscriberResult"/>
        </response>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="response">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx41:QuerySubscriberResult"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1255</pd:endX>
    <pd:endY>176</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="ns7:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>604</pd:x>
        <pd:y>175</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConponentNameSubscriber"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx40:queryAssetRequest/pfx40:CustomerId"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx40:queryAssetRequest)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>756</pd:x>
        <pd:y>173</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx43:CustProfQryResp"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSendReceive/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>305</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConponentNameSubscriber"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx40:queryAssetRequest/pfx40:CustomerId"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($Start/root)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>661</pd:x>
        <pd:y>285</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Tibco_ErrSource,'|',&#xA;$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc)"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSendReceive">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>464</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx40:queryAssetRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionId"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ESIQUEUE"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/JMS_TimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>853</pd:x>
        <pd:y>285</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="concat($ParseResponse/pfx43:CustProfQryResp/pfx44:ErrorResponse/pfx44:Error_SourceSystem,'|',&#xA;$ParseResponse/pfx43:CustProfQryResp/pfx44:ErrorResponse/pfx44:Error_SourceErrDesc)"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx44:ErrorResponse/pfx44:Error_SourceErrCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapFinalResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1121</pd:x>
        <pd:y>176</pd:y>
        <config>
            <element ref="pfx41:QuerySubscriberResult"/>
        </config>
        <pd:inputBindings>
            <pfx41:QuerySubscriberResult>
                <pfx41:CustomerNumber>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet1/pfx43:Record1[1]/pfx43:X_CBIO2_ACC_SEQUENCE_NUM"/>
                </pfx41:CustomerNumber>
                <xsl:if test="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;]/pfx43:X_CBIO2_SUBMARKET_TYP">
                    <pfx41:CustomerType>
                        <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;]/pfx43:X_CBIO2_SUBMARKET_TYP"/>
                    </pfx41:CustomerType>
                </xsl:if>
                <pfx41:ContractID>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet1/pfx43:Record1[1]/pfx43:X_CBIO2_ACC_SEQUENCE_NUM"/>
                </pfx41:ContractID>
                <pfx41:AccountStatus>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet1/pfx43:Record1[1]/pfx43:X_CBIO2_SUB_STATUS"/>
                </pfx41:AccountStatus>
                <pfx41:Segment>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;]/pfx43:X_CBIO2_SEGMENT"/>
                </pfx41:Segment>
                <pfx41:SubscriberInfo>
                    <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;]">
                        <pfx41:PostalAddress>
                            <pfx41:PostalArea>
                                <xsl:value-of select="pfx43:X_POSTAL_AREA_CODE"/>
                            </pfx41:PostalArea>
                            <pfx41:POBox>
                                <xsl:value-of select="pfx43:X_CBIO2_PO_BOX"/>
                            </pfx41:POBox>
                            <pfx41:PostalCode>
                                <xsl:value-of select="pfx43:ZIPCODE"/>
                            </pfx41:PostalCode>
                        </pfx41:PostalAddress>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;]">
                        <pfx41:Address>
                            <xsl:if test="pfx43:COUNTRY">
                                <pfx41:Country>
                                    <xsl:value-of select="pfx43:COUNTRY"/>
                                </pfx41:Country>
                            </xsl:if>
                            <xsl:if test="pfx43:CITY">
                                <pfx41:Governate>
                                    <xsl:value-of select="pfx43:CITY"/>
                                </pfx41:Governate>
                            </xsl:if>
                            <xsl:if test="pfx43:X_POSTAL_AREA_CODE">
                                <pfx41:Area>
                                    <xsl:value-of select="pfx43:X_POSTAL_AREA_CODE"/>
                                </pfx41:Area>
                            </xsl:if>
                            <xsl:if test="pfx43:RURAL_ROUTE_NUM">
                                <pfx41:Block>
                                    <xsl:value-of select="pfx43:RURAL_ROUTE_NUM"/>
                                </pfx41:Block>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_STREET_NUMBER">
                                <pfx41:Street>
                                    <xsl:value-of select="pfx43:X_CBIO2_STREET_NUMBER"/>
                                </pfx41:Street>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_BUILDING">
                                <pfx41:HouseOrBuilding>
                                    <xsl:value-of select="pfx43:X_CBIO2_BUILDING"/>
                                </pfx41:HouseOrBuilding>
                            </xsl:if>
                            <pfx41:Floor>
                                <xsl:value-of select="pfx43:X_CBIO2_FLOOR"/>
                            </pfx41:Floor>
                            <xsl:if test="pfx43:ADDR_LINE_3">
                                <pfx41:Apartment>
                                    <xsl:value-of select="pfx43:ADDR_LINE_3"/>
                                </pfx41:Apartment>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_PACCI_NUMBER">
                                <pfx41:PACIRef>
                                    <xsl:value-of select="pfx43:X_CBIO2_PACCI_NUMBER"/>
                                </pfx41:PACIRef>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_STREET_NUMBER">
                                <pfx41:StreetNo>
                                    <xsl:value-of select="pfx43:X_CBIO2_STREET_NUMBER"/>
                                </pfx41:StreetNo>
                            </xsl:if>
                        </pfx41:Address>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;][1]">
                        <pfx41:Identity>
                            <pfx41:Name>
                                <xsl:if test="pfx43:X_CBIO2_NATIONALITY">
                                    <pfx41:Country>
                                        <xsl:value-of select="pfx43:X_CBIO2_NATIONALITY"/>
                                    </pfx41:Country>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_ENG_FULL_NAME">
                                    <pfx41:Name>
                                        <xsl:value-of select="pfx43:X_CBIO2_ENG_FULL_NAME"/>
                                    </pfx41:Name>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_TITLE_ENG">
                                    <pfx41:Title>
                                        <xsl:value-of select="pfx43:X_CBIO2_TITLE_ENG"/>
                                    </pfx41:Title>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_FNAME_ENG">
                                    <pfx41:FirstName>
                                        <xsl:value-of select="pfx43:X_CBIO2_FNAME_ENG"/>
                                    </pfx41:FirstName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_LNAME_ENG">
                                    <pfx41:LastName>
                                        <xsl:value-of select="pfx43:X_CBIO2_LNAME_ENG"/>
                                    </pfx41:LastName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_SNAME_ENG">
                                    <pfx41:SecondName>
                                        <xsl:value-of select="pfx43:X_CBIO2_SNAME_ENG"/>
                                    </pfx41:SecondName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_TNAME_ENG">
                                    <pfx41:ThirdName>
                                        <xsl:value-of select="pfx43:X_CBIO2_TNAME_ENG"/>
                                    </pfx41:ThirdName>
                                </xsl:if>
                                <pfx41:ArabicName>
                                    <xsl:value-of select="concat(pfx43:X_CBIO2_FNAME_ARA,&#xA;' ',&#xA;pfx43:X_CBIO2_SNAME_ARA,&#xA;if(string-length(pfx43:X_CBIO2_SNAME_ARA)>0)&#xA;then&#xA;' '&#xA;else&#xA;'',&#xA;pfx43:X_CBIO2_TNAME_ARA,&#xA;if(string-length(pfx43:X_CBIO2_TNAME_ARA)>0)&#xA;then&#xA;' '&#xA;else&#xA;'',&#xA;pfx43:X_CBIO2_LNAME_ARA)"/>
                                </pfx41:ArabicName>
                                <xsl:if test="pfx43:X_CBIO2_TITLE_ARA">
                                    <pfx41:ArabicTitle>
                                        <xsl:value-of select="pfx43:X_CBIO2_TITLE_ARA"/>
                                    </pfx41:ArabicTitle>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_FNAME_ARA">
                                    <pfx41:ArabicFirstName>
                                        <xsl:value-of select="pfx43:X_CBIO2_FNAME_ARA"/>
                                    </pfx41:ArabicFirstName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_LNAME_ARA">
                                    <pfx41:ArabicLastName>
                                        <xsl:value-of select="pfx43:X_CBIO2_LNAME_ARA"/>
                                    </pfx41:ArabicLastName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_SNAME_ARA">
                                    <pfx41:ArabicSecondName>
                                        <xsl:value-of select="pfx43:X_CBIO2_SNAME_ARA"/>
                                    </pfx41:ArabicSecondName>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_TNAME_ARA">
                                    <pfx41:ArabicThirdName>
                                        <xsl:value-of select="pfx43:X_CBIO2_TNAME_ARA"/>
                                    </pfx41:ArabicThirdName>
                                </xsl:if>
                            </pfx41:Name>
                            <pfx41:Information>
                                <xsl:if test="string-length(pfx43:X_CBIO2_BIRTH_DT)>0">
                                    <pfx41:DateOfBirth>
                                        <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd&quot;, pfx43:X_CBIO2_BIRTH_DT)"/>
                                    </pfx41:DateOfBirth>
                                </xsl:if>
                                <pfx41:Sex>
                                    <xsl:value-of select="if(upper-case(pfx43:X_CBIO2_GENDER)='MALE')&#xA;then&#xA;'M'&#xA;else&#xA;if(upper-case(pfx43:X_CBIO2_GENDER)='FEMALE')&#xA;then&#xA;'F'&#xA;else&#xA;pfx43:X_CBIO2_GENDER"/>
                                </pfx41:Sex>
                                <xsl:if test="pfx43:X_CBIO2_NATIONALITY">
                                    <pfx41:Nationality>
                                        <xsl:value-of select="pfx43:X_CBIO2_NATIONALITY"/>
                                    </pfx41:Nationality>
                                </xsl:if>
                                <xsl:if test="string-length(pfx43:X_CBIO2_IVR_LANG)>0">
                                    <pfx41:Language>
                                        <xsl:value-of select="$GetESBLOV/root/ns17:ESBLOV/ns17:Record[ns17:TRANSVALUE=&#xA;current()/pfx43:X_CBIO2_IVR_LANG]/ns17:TRANSKEY"/>
                                    </pfx41:Language>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_PROFESSION">
                                    <pfx41:Profession>
                                        <xsl:value-of select="pfx43:X_CBIO2_PROFESSION"/>
                                    </pfx41:Profession>
                                </xsl:if>
                                <xsl:if test="pfx43:HSHLDHD_OCC_CD">
                                    <pfx41:ProfessionDescription>
                                        <xsl:value-of select="pfx43:HSHLDHD_OCC_CD"/>
                                    </pfx41:ProfessionDescription>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_EDUCATION">
                                    <pfx41:Education>
                                        <xsl:value-of select="pfx43:X_CBIO2_EDUCATION"/>
                                    </pfx41:Education>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_MARITAL_STAT">
                                    <pfx41:MaritalStatus>
                                        <xsl:value-of select="pfx43:X_CBIO2_MARITAL_STAT"/>
                                    </pfx41:MaritalStatus>
                                </xsl:if>
                                <pfx41:Employee>
                                    <xsl:value-of select="if(string-length(pfx43:X_CBIO2_STAFF_NO)>0)&#xA;then&#xA;&quot;Y&quot;&#xA;else&#xA;&quot;N&quot;"/>
                                </pfx41:Employee>
                                <xsl:if test="pfx43:X_CBIO2_STAFF_NO">
                                    <pfx41:StaffNumber>
                                        <xsl:value-of select="pfx43:X_CBIO2_STAFF_NO"/>
                                    </pfx41:StaffNumber>
                                </xsl:if>
                                <pfx41:PersonalNumber>
                                    <xsl:value-of select="pfx43:X_CBIO2_IVR_PIN"/>
                                </pfx41:PersonalNumber>
                                <xsl:if test="string-length(pfx43:X_CBIO2_ID_TYPE)>0">
                                    <pfx41:IdType>
                                        <xsl:value-of select="$GetESBLOV/root/ns17:ESBLOV/ns17:Record[ns17:TRANSVALUE=current()/pfx43:X_CBIO2_ID_TYPE&#xA;and&#xA;ns17:TRANSTYPE=&quot;ID_Type&quot;]/ns17:TRANSKEY"/>
                                    </pfx41:IdType>
                                </xsl:if>
                                <xsl:if test="pfx43:X_CBIO2_ID_NUMBER">
                                    <pfx41:IdNumber>
                                        <xsl:value-of select="pfx43:X_CBIO2_ID_NUMBER"/>
                                    </pfx41:IdNumber>
                                </xsl:if>
                                <xsl:if test="string-length(pfx43:X_CBIO2_ID_EXPIRY_DT)">
                                    <pfx41:IdExpirationDate>
                                        <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd&quot;, &#xA;pfx43:X_CBIO2_ID_EXPIRY_DT)"/>
                                    </pfx41:IdExpirationDate>
                                </xsl:if>
                            </pfx41:Information>
                        </pfx41:Identity>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;][1]">
                        <pfx41:Contact>
                            <xsl:if test="string-length(pfx43:X_CBIO2_SUBC_HOME_PH)>0">
                                <pfx41:PhoneContact>
                                    <pfx41:Number>
                                        <xsl:value-of select="if(starts-with(pfx43:X_CBIO2_SUBC_HOME_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after(pfx43:X_CBIO2_SUBC_HOME_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;pfx43:X_CBIO2_SUBC_HOME_PH"/>
                                    </pfx41:Number>
                                    <pfx41:Type>
                                        <xsl:value-of select="&quot;Home Number&quot;"/>
                                    </pfx41:Type>
                                </pfx41:PhoneContact>
                            </xsl:if>
                            <xsl:if test="string-length(pfx43:X_CBIO2_SUBC_WORK_PH)>0">
                                <pfx41:PhoneContact>
                                    <pfx41:Number>
                                        <xsl:value-of select="if(starts-with(pfx43:X_CBIO2_SUBC_WORK_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after(pfx43:X_CBIO2_SUBC_WORK_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;pfx43:X_CBIO2_SUBC_WORK_PH"/>
                                    </pfx41:Number>
                                    <pfx41:Type>
                                        <xsl:value-of select="&quot;Work Number&quot;"/>
                                    </pfx41:Type>
                                </pfx41:PhoneContact>
                            </xsl:if>
                            <xsl:if test="string-length(pfx43:X_CBIO2_SUBC_FAX_PH)>0">
                                <pfx41:PhoneContact>
                                    <pfx41:Number>
                                        <xsl:value-of select="if(starts-with(pfx43:X_CBIO2_SUBC_FAX_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after(pfx43:X_CBIO2_SUBC_FAX_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;pfx43:X_CBIO2_SUBC_FAX_PH"/>
                                    </pfx41:Number>
                                    <pfx41:Type>
                                        <xsl:value-of select="&quot;Fax Number&quot;"/>
                                    </pfx41:Type>
                                </pfx41:PhoneContact>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_SUBC_EMAIL">
                                <pfx41:eMailAddress>
                                    <xsl:value-of select="pfx43:X_CBIO2_SUBC_EMAIL"/>
                                </pfx41:eMailAddress>
                            </xsl:if>
                        </pfx41:Contact>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;Service Account&quot;][1]">
                        <pfx41:Details>
                            <pfx41:MSISDN>
                                <xsl:value-of select="if(starts-with($Start/root/pfx40:queryAssetRequest/pfx40:MSISDN, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after($Start/root/pfx40:queryAssetRequest/pfx40:MSISDN, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;$Start/root/pfx40:queryAssetRequest/pfx40:MSISDN"/>
                            </pfx41:MSISDN>
                            <xsl:if test="pfx43:X_POSTAL_AREA_CODE">
                                <pfx41:Area>
                                    <xsl:value-of select="pfx43:X_POSTAL_AREA_CODE"/>
                                </pfx41:Area>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_SUBSCRIBER_STATUS">
                                <pfx41:Status>
                                    <xsl:value-of select="pfx43:X_CBIO2_SUBSCRIBER_STATUS"/>
                                </pfx41:Status>
                            </xsl:if>
                            <xsl:if test="if(pfx43:X_CBIO2_LINE_TYPE=&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LineTypePrepaid)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/BillingTypePre&#xA;else&#xA;if(pfx43:X_CBIO2_LINE_TYPE=&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LineTypePostpaid)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/BillingTypePost&#xA;else&#xA;pfx43:X_CBIO2_LINE_TYPE">
                                <pfx41:BillingType>
                                    <xsl:value-of select="if(pfx43:X_CBIO2_LINE_TYPE=&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LineTypePrepaid)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/BillingTypePre&#xA;else&#xA;if(pfx43:X_CBIO2_LINE_TYPE=&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LineTypePostpaid)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/BillingTypePost&#xA;else&#xA;pfx43:X_CBIO2_LINE_TYPE"/>
                                </pfx41:BillingType>
                            </xsl:if>
                            <pfx41:BasicServiceType>
                                <xsl:value-of select="if(upper-case(pfx43:X_CBIO2_CONNECTION_TYPE)=&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConnectionType)&#xA;then&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConnectionType&#xA;else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/BS_Type"/>
                            </pfx41:BasicServiceType>
                            <xsl:choose>
                                <xsl:when test="string-length(pfx43:X_CBIO2_SUBC_NOTI_PH)>0">
                                    <pfx41:MainSubscriberNumber>
                                        <xsl:value-of select="if(starts-with(pfx43:X_CBIO2_SUBC_NOTI_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after(pfx43:X_CBIO2_SUBC_NOTI_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;pfx43:X_CBIO2_SUBC_NOTI_PH"/>
                                    </pfx41:MainSubscriberNumber>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx41:MainSubscriberNumber>
                                        <xsl:value-of select="substring-after($Start/root/pfx40:queryAssetRequest/pfx40:MSISDN,&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)"/>
                                    </pfx41:MainSubscriberNumber>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx41:NotifiedSubscriberNumber>
                                <xsl:value-of select="if(starts-with(pfx43:X_CBIO2_SUBC_NOTI_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code))&#xA;then&#xA;substring-after(pfx43:X_CBIO2_SUBC_NOTI_PH, &#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ISD_Code)&#xA;else&#xA;pfx43:X_CBIO2_SUBC_NOTI_PH"/>
                            </pfx41:NotifiedSubscriberNumber>
                            <xsl:if test="pfx43:CITY">
                                <pfx41:NotifiedSubscriberArea>
                                    <xsl:value-of select="pfx43:CITY"/>
                                </pfx41:NotifiedSubscriberArea>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_VBM_CLASS">
                                <pfx41:SCRClass>
                                    <xsl:value-of select="pfx43:X_CBIO2_VBM_CLASS"/>
                                </pfx41:SCRClass>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_MSISDN_CATEGORY">
                                <pfx41:NumberType>
                                    <xsl:value-of select="pfx43:X_CBIO2_MSISDN_CATEGORY"/>
                                </pfx41:NumberType>
                            </xsl:if>
                            <xsl:if test="pfx43:X_CBIO2_SPEND_LIMIT">
                                <pfx41:CreditLimit>
                                    <xsl:value-of select="pfx43:X_CBIO2_SPEND_LIMIT"/>
                                </pfx41:CreditLimit>
                            </xsl:if>
                            <xsl:if test="string-length(pfx43:X_CBIO2_FST_CALL_DT)>0">
                                <pfx41:FirstCallDate>
                                    <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;, &#xA;pfx43:X_CBIO2_FST_CALL_DT)"/>
                                </pfx41:FirstCallDate>
                            </xsl:if>
                            <xsl:if test="string-length(pfx43:X_CBIO2_CREATED_DT)>0">
                                <pfx41:CreatedDate>
                                    <xsl:value-of select="tib:format-dateTime(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;, &#xA;pfx43:X_CBIO2_CREATED_DT)"/>
                                </pfx41:CreatedDate>
                            </xsl:if>
                            <xsl:for-each select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD=&quot;SIM&quot;][1]">
                                <pfx41:SimCard>
                                    <xsl:if test="pfx43:X_CBIO2_SIM_TYPE">
                                        <pfx41:CardType>
                                            <xsl:value-of select="pfx43:X_CBIO2_SIM_TYPE"/>
                                        </pfx41:CardType>
                                    </xsl:if>
                                    <pfx41:CardNumber>
                                        <xsl:value-of select="if(exists($ESI_Call_CardNo/response/CardNo) and string-length($ESI_Call_CardNo/response/CardNo)>0)&#xA;then&#xA;$ESI_Call_CardNo/response/CardNo&#xA;else&#xA;&quot;&quot;"/>
                                    </pfx41:CardNumber>
                                    <xsl:if test="pfx43:X_CBIO2_IMSI">
                                        <pfx41:IMSI>
                                            <xsl:value-of select="pfx43:X_CBIO2_IMSI"/>
                                        </pfx41:IMSI>
                                    </xsl:if>
                                    <xsl:if test="pfx43:X_CBIO2_ICCID">
                                        <pfx41:ICCID>
                                            <xsl:value-of select="pfx43:X_CBIO2_ICCID"/>
                                        </pfx41:ICCID>
                                    </xsl:if>
                                    <xsl:if test="pfx43:X_CBIO2_PIN1">
                                        <pfx41:PIN>
                                            <xsl:value-of select="pfx43:X_CBIO2_PIN1"/>
                                        </pfx41:PIN>
                                    </xsl:if>
                                    <pfx41:PUK1>
                                        <xsl:value-of select="if(string-length(pfx43:X_CBIO2_PUK1)>0)&#xA;then&#xA;pfx43:X_CBIO2_PUK1&#xA;else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/PUK1"/>
                                    </pfx41:PUK1>
                                    <pfx41:PUK2>
                                        <xsl:value-of select="if(string-length(pfx43:X_CBIO2_PUK2)>0)&#xA;then&#xA;pfx43:X_CBIO2_PUK2&#xA;else&#xA;$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/PUK2"/>
                                    </pfx41:PUK2>
                                </pfx41:SimCard>
                            </xsl:for-each>
                        </pfx41:Details>
                    </xsl:for-each>
                </pfx41:SubscriberInfo>
            </pfx41:QuerySubscriberResult>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_Call_CardNo">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>962</pd:x>
        <pd:y>237</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/HelperProcess/ESI_Call_QueryMSISDNCardNo.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SerialNumber>
                    <xsl:value-of select="$ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD='SIM']/pfx43:SERIAL_NUM"/>
                </SerialNumber>
                <TransactionId>
                    <xsl:value-of select="$Start/root/TransactionId"/>
                </TransactionId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1066</pd:x>
        <pd:y>322</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetESBLOV">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>168</pd:x>
        <pd:y>178</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ESI_Call_CardNo</pd:to>
        <pd:xpathDescription>ExistsICCID</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseResponse/pfx43:CustProfQryResp/pfx43:Resultsets/pfx43:ResultSet5/pfx43:Record5[pfx43:TYPE_CD='SIM']/pfx43:SERIAL_NUM)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSendReceive</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSendReceive</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetESBLOV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError-1</pd:to>
        <pd:xpathDescription>ESI_Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ParseResponse/pfx43:CustProfQryResp/pfx44:ErrorResponse/pfx44:Error_SourceErrCode)&gt;0
and
$ParseResponse/pfx43:CustProfQryResp/pfx44:ErrorResponse/pfx44:Error_SourceErrCode!=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapFinalResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>MapFinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_Call_CardNo</pd:from>
        <pd:to>MapFinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_Call_CardNo</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>MapFinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetESBLOV</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>