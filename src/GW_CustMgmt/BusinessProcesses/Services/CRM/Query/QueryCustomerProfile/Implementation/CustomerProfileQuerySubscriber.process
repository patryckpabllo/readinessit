<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.zain.com/ZESB/Services/CustomerProfile/Types" xmlns:ns14="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns15="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.zain.com/ZESB/Services/CustomerProfile" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://www.zain.com/ZESB/Services/SubscriberList" xmlns:format="java://MSISDNFormatter" xmlns:ns5="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns6="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:pfx="http://siebel.com/CustomUI" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns3="http://www.zain.com/ZESB/Types/Common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/http---siebel.com-CustomUI_CBiO2 Query Asset Workflow.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" schemaLocation="/BusinessSchemas/Services/Query/CustomerAsset/CustomerAssetQueryInbound.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/CustomerProfile/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/QueryCustomerProfile/QueryCustomerProfileInbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/CustomerProfile" location="/BusinessWSDLS/Services/WSDLS/QueryCustomerProfile/QueryCustomerProfileInbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/Implementation/CustomerProfileQuerySubscriber.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:QuerySubscriberRequest"/>
    <pd:startX>62</pd:startX>
    <pd:startY>186</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:QuerySubscriberResponse>
            <response>
                <xsl:for-each select="$MapFinalResponse/ns:QuerySubscriberResult">
                    <ns:QuerySubscriberResult>
                        <xsl:if test="string-length(ns:CustomerProfile)>0">
                            <xsl:if test="ns:CustomerProfile">
                                <ns:CustomerProfile>
                                    <xsl:value-of select="ns:CustomerProfile"/>
                                </ns:CustomerProfile>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(ns:CustomerNumber)>0">
                            <xsl:if test="ns:CustomerNumber">
                                <ns:CustomerNumber>
                                    <xsl:value-of select="ns:CustomerNumber"/>
                                </ns:CustomerNumber>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(ns:CustomerType)>0">
                            <xsl:if test="ns:CustomerType">
                                <ns:CustomerType>
                                    <xsl:value-of select="ns:CustomerType"/>
                                </ns:CustomerType>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(ns:ContractID)>0">
                            <xsl:if test="ns:ContractID">
                                <ns:ContractID>
                                    <xsl:value-of select="ns:ContractID"/>
                                </ns:ContractID>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(ns:AccountStatus)>0">
                            <xsl:if test="ns:AccountStatus">
                                <ns:AccountStatus>
                                    <xsl:value-of select="ns:AccountStatus"/>
                                </ns:AccountStatus>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(ns:Segment)>0">
                            <xsl:if test="ns:Segment">
                                <ns:Segment>
                                    <xsl:value-of select="ns:Segment"/>
                                </ns:Segment>
                            </xsl:if>
                        </xsl:if>
                        <xsl:for-each select="ns:SubscriberInfo">
                            <ns:SubscriberInfo>
                                <xsl:for-each select="ns:PostalAddress">
                                    <ns:PostalAddress>
                                        <xsl:if test="string-length(ns:PostalArea)>0">
                                            <xsl:if test="ns:PostalArea">
                                                <ns:PostalArea>
                                                    <xsl:value-of select="ns:PostalArea"/>
                                                </ns:PostalArea>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:POBox)>0">
                                            <xsl:if test="ns:POBox">
                                                <ns:POBox>
                                                    <xsl:value-of select="ns:POBox"/>
                                                </ns:POBox>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:PostalCode)>0">
                                            <xsl:if test="ns:PostalCode">
                                                <ns:PostalCode>
                                                    <xsl:value-of select="ns:PostalCode"/>
                                                </ns:PostalCode>
                                            </xsl:if>
                                        </xsl:if>
                                    </ns:PostalAddress>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Address">
                                    <ns:Address>
                                        <xsl:if test="string-length(ns:Country)>0">
                                            <xsl:if test="ns:Country">
                                                <ns:Country>
                                                    <xsl:value-of select="ns:Country"/>
                                                </ns:Country>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Governate)>0">
                                            <xsl:if test="ns:Governate">
                                                <ns:Governate>
                                                    <xsl:value-of select="ns:Governate"/>
                                                </ns:Governate>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Area)>0">
                                            <xsl:if test="ns:Area">
                                                <ns:Area>
                                                    <xsl:value-of select="ns:Area"/>
                                                </ns:Area>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Block)>0">
                                            <xsl:if test="ns:Block">
                                                <ns:Block>
                                                    <xsl:value-of select="ns:Block"/>
                                                </ns:Block>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Street)>0">
                                            <xsl:if test="ns:Street">
                                                <ns:Street>
                                                    <xsl:value-of select="ns:Street"/>
                                                </ns:Street>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:HouseOrBuilding)>0">
                                            <xsl:if test="ns:HouseOrBuilding">
                                                <ns:HouseOrBuilding>
                                                    <xsl:value-of select="ns:HouseOrBuilding"/>
                                                </ns:HouseOrBuilding>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Floor)>0">
                                            <xsl:if test="ns:Floor">
                                                <ns:Floor>
                                                    <xsl:value-of select="ns:Floor"/>
                                                </ns:Floor>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Apartment)>0">
                                            <xsl:if test="ns:Apartment">
                                                <ns:Apartment>
                                                    <xsl:value-of select="ns:Apartment"/>
                                                </ns:Apartment>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Directions)>0">
                                            <xsl:if test="ns:Directions">
                                                <ns:Directions>
                                                    <xsl:value-of select="ns:Directions"/>
                                                </ns:Directions>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:PACIRef)>0">
                                            <xsl:if test="ns:PACIRef">
                                                <ns:PACIRef>
                                                    <xsl:value-of select="ns:PACIRef"/>
                                                </ns:PACIRef>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Region)>0">
                                            <xsl:if test="ns:Region">
                                                <ns:Region>
                                                    <xsl:value-of select="ns:Region"/>
                                                </ns:Region>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:ZipCode)>0">
                                            <xsl:if test="ns:ZipCode">
                                                <ns:ZipCode>
                                                    <xsl:value-of select="ns:ZipCode"/>
                                                </ns:ZipCode>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:StreetNo)>0">
                                            <xsl:if test="ns:StreetNo">
                                                <ns:StreetNo>
                                                    <xsl:value-of select="ns:StreetNo"/>
                                                </ns:StreetNo>
                                            </xsl:if>
                                        </xsl:if>
                                    </ns:Address>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Identity">
                                    <ns:Identity>
                                        <xsl:for-each select="ns:Name">
                                            <ns:Name>
                                                <xsl:if test="string-length(ns:Country)>0">
                                                    <xsl:if test="ns:Country">
                                                        <ns:Country>
                                                            <xsl:value-of select="ns:Country"/>
                                                        </ns:Country>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Name)>0">
                                                    <xsl:if test="ns:Name">
                                                        <ns:Name>
                                                            <xsl:value-of select="ns:Name"/>
                                                        </ns:Name>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Title)>0">
                                                    <xsl:if test="ns:Title">
                                                        <ns:Title>
                                                            <xsl:value-of select="ns:Title"/>
                                                        </ns:Title>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:FirstName)>0">
                                                    <xsl:if test="ns:FirstName">
                                                        <ns:FirstName>
                                                            <xsl:value-of select="ns:FirstName"/>
                                                        </ns:FirstName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:LastName)>0">
                                                    <xsl:if test="ns:LastName">
                                                        <ns:LastName>
                                                            <xsl:value-of select="ns:LastName"/>
                                                        </ns:LastName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:SecondName)>0">
                                                    <xsl:if test="ns:SecondName">
                                                        <ns:SecondName>
                                                            <xsl:value-of select="ns:SecondName"/>
                                                        </ns:SecondName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ThirdName)>0">
                                                    <xsl:if test="ns:ThirdName">
                                                        <ns:ThirdName>
                                                            <xsl:value-of select="ns:ThirdName"/>
                                                        </ns:ThirdName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicName)>0">
                                                    <xsl:if test="ns:ArabicName">
                                                        <ns:ArabicName>
                                                            <xsl:value-of select="ns:ArabicName"/>
                                                        </ns:ArabicName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicTitle)>0">
                                                    <xsl:if test="ns:ArabicTitle">
                                                        <ns:ArabicTitle>
                                                            <xsl:value-of select="ns:ArabicTitle"/>
                                                        </ns:ArabicTitle>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicFirstName)>0">
                                                    <xsl:if test="ns:ArabicFirstName">
                                                        <ns:ArabicFirstName>
                                                            <xsl:value-of select="ns:ArabicFirstName"/>
                                                        </ns:ArabicFirstName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicLastName)>0">
                                                    <xsl:if test="ns:ArabicLastName">
                                                        <ns:ArabicLastName>
                                                            <xsl:value-of select="ns:ArabicLastName"/>
                                                        </ns:ArabicLastName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicSecondName)>0">
                                                    <xsl:if test="ns:ArabicSecondName">
                                                        <ns:ArabicSecondName>
                                                            <xsl:value-of select="ns:ArabicSecondName"/>
                                                        </ns:ArabicSecondName>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ArabicThirdName)>0">
                                                    <xsl:if test="ns:ArabicThirdName">
                                                        <ns:ArabicThirdName>
                                                            <xsl:value-of select="ns:ArabicThirdName"/>
                                                        </ns:ArabicThirdName>
                                                    </xsl:if>
                                                </xsl:if>
                                            </ns:Name>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns:Information">
                                            <ns:Information>
                                                <xsl:if test="string-length(ns:DateOfBirth)>0">
                                                    <xsl:if test="ns:DateOfBirth">
                                                        <ns:DateOfBirth>
                                                            <xsl:copy-of select="ns:DateOfBirth/@xsi:nil"/>
                                                            <xsl:value-of select="ns:DateOfBirth"/>
                                                        </ns:DateOfBirth>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Sex)>0">
                                                    <xsl:if test="ns:Sex">
                                                        <ns:Sex>
                                                            <xsl:value-of select="ns:Sex"/>
                                                        </ns:Sex>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Nationality)>0">
                                                    <xsl:if test="ns:Nationality">
                                                        <ns:Nationality>
                                                            <xsl:value-of select="ns:Nationality"/>
                                                        </ns:Nationality>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Language)>0">
                                                    <xsl:if test="ns:Language">
                                                        <ns:Language>
                                                            <xsl:value-of select="ns:Language"/>
                                                        </ns:Language>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Profession)>0">
                                                    <xsl:if test="ns:Profession">
                                                        <ns:Profession>
                                                            <xsl:value-of select="ns:Profession"/>
                                                        </ns:Profession>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ProfessionDescription)>0">
                                                    <xsl:if test="ns:ProfessionDescription">
                                                        <ns:ProfessionDescription>
                                                            <xsl:value-of select="ns:ProfessionDescription"/>
                                                        </ns:ProfessionDescription>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Education)>0">
                                                    <xsl:if test="ns:Education">
                                                        <ns:Education>
                                                            <xsl:value-of select="ns:Education"/>
                                                        </ns:Education>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:MaritalStatus)>0">
                                                    <xsl:if test="ns:MaritalStatus">
                                                        <ns:MaritalStatus>
                                                            <xsl:value-of select="ns:MaritalStatus"/>
                                                        </ns:MaritalStatus>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:Employee)>0">
                                                    <xsl:if test="ns:Employee">
                                                        <ns:Employee>
                                                            <xsl:value-of select="ns:Employee"/>
                                                        </ns:Employee>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:StaffNumber)>0">
                                                    <xsl:if test="ns:StaffNumber">
                                                        <ns:StaffNumber>
                                                            <xsl:value-of select="ns:StaffNumber"/>
                                                        </ns:StaffNumber>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:PersonalNumber)>0">
                                                    <xsl:if test="ns:PersonalNumber">
                                                        <ns:PersonalNumber>
                                                            <xsl:value-of select="ns:PersonalNumber"/>
                                                        </ns:PersonalNumber>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:IdType)>0">
                                                    <xsl:if test="ns:IdType">
                                                        <ns:IdType>
                                                            <xsl:value-of select="ns:IdType"/>
                                                        </ns:IdType>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:IdNumber)>0">
                                                    <xsl:if test="ns:IdNumber">
                                                        <ns:IdNumber>
                                                            <xsl:value-of select="ns:IdNumber"/>
                                                        </ns:IdNumber>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:IdExpirationDate)>0">
                                                    <xsl:if test="ns:IdExpirationDate">
                                                        <ns:IdExpirationDate>
                                                            <xsl:copy-of select="ns:IdExpirationDate/@xsi:nil"/>
                                                            <xsl:value-of select="ns:IdExpirationDate"/>
                                                        </ns:IdExpirationDate>
                                                    </xsl:if>
                                                </xsl:if>
                                            </ns:Information>
                                        </xsl:for-each>
                                    </ns:Identity>
                                </xsl:for-each>
                                <xsl:if test="count(ns:Contact/ns:PhoneContact/ns:Number[string-length(text())>0])>0&#xA;or&#xA;string-length(ns:Contact[1]/ns:eMailAddress)>0">
                                    <xsl:for-each select="ns:Contact">
                                        <ns:Contact>
                                            <xsl:if test="count(ns:PhoneContact/ns:Number[string-length(text())>0])>0">
                                                <xsl:for-each select="ns:PhoneContact">
                                                    <ns:PhoneContact>
                                                        <xsl:if test="string-length(ns:Number)>0">
                                                            <xsl:if test="ns:Number">
                                                                <ns:Number>
                                                                    <xsl:value-of select="ns:Number"/>
                                                                </ns:Number>
                                                            </xsl:if>
                                                        </xsl:if>
                                                        <xsl:if test="string-length(ns:Number)>0">
                                                            <xsl:if test="ns:Type">
                                                                <ns:Type>
                                                                    <xsl:value-of select="ns:Type"/>
                                                                </ns:Type>
                                                            </xsl:if>
                                                        </xsl:if>
                                                    </ns:PhoneContact>
                                                </xsl:for-each>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns:eMailAddress)>0">
                                                <xsl:if test="ns:eMailAddress">
                                                    <ns:eMailAddress>
                                                        <xsl:value-of select="ns:eMailAddress"/>
                                                    </ns:eMailAddress>
                                                </xsl:if>
                                            </xsl:if>
                                        </ns:Contact>
                                    </xsl:for-each>
                                </xsl:if>
                                <xsl:for-each select="ns:Details">
                                    <ns:Details>
                                        <xsl:if test="string-length(ns:MSISDN)>0">
                                            <xsl:if test="ns:MSISDN">
                                                <ns:MSISDN>
                                                    <xsl:value-of select="ns:MSISDN"/>
                                                </ns:MSISDN>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Area)>0">
                                            <xsl:if test="ns:Area">
                                                <ns:Area>
                                                    <xsl:value-of select="ns:Area"/>
                                                </ns:Area>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:Status)>0">
                                            <xsl:if test="ns:Status">
                                                <ns:Status>
                                                    <xsl:value-of select="ns:Status"/>
                                                </ns:Status>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:TransferDate)>0">
                                            <xsl:if test="ns:TransferDate">
                                                <ns:TransferDate>
                                                    <xsl:copy-of select="ns:TransferDate/@xsi:nil"/>
                                                    <xsl:value-of select="ns:TransferDate"/>
                                                </ns:TransferDate>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:BillingType)>0">
                                            <xsl:if test="ns:BillingType">
                                                <ns:BillingType>
                                                    <xsl:value-of select="ns:BillingType"/>
                                                </ns:BillingType>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:BasicServiceType)>0">
                                            <xsl:if test="ns:BasicServiceType">
                                                <ns:BasicServiceType>
                                                    <xsl:value-of select="ns:BasicServiceType"/>
                                                </ns:BasicServiceType>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:BSFlag)>0">
                                            <xsl:if test="ns:BSFlag">
                                                <ns:BSFlag>
                                                    <xsl:value-of select="ns:BSFlag"/>
                                                </ns:BSFlag>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:MainSubscriberNumber)>0">
                                            <xsl:if test="ns:MainSubscriberNumber">
                                                <ns:MainSubscriberNumber>
                                                    <xsl:value-of select="ns:MainSubscriberNumber"/>
                                                </ns:MainSubscriberNumber>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:HLRProfile)>0">
                                            <xsl:if test="ns:HLRProfile">
                                                <ns:HLRProfile>
                                                    <xsl:value-of select="ns:HLRProfile"/>
                                                </ns:HLRProfile>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:NotifiedSubscriberNumber)>0">
                                            <xsl:if test="ns:NotifiedSubscriberNumber">
                                                <ns:NotifiedSubscriberNumber>
                                                    <xsl:value-of select="ns:NotifiedSubscriberNumber"/>
                                                </ns:NotifiedSubscriberNumber>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:NotifiedSubscriberType)>0">
                                            <xsl:if test="ns:NotifiedSubscriberType">
                                                <ns:NotifiedSubscriberType>
                                                    <xsl:value-of select="ns:NotifiedSubscriberType"/>
                                                </ns:NotifiedSubscriberType>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:NotifiedSubscriberArea)>0">
                                            <xsl:if test="ns:NotifiedSubscriberArea">
                                                <ns:NotifiedSubscriberArea>
                                                    <xsl:value-of select="ns:NotifiedSubscriberArea"/>
                                                </ns:NotifiedSubscriberArea>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:ContractAuthority)>0">
                                            <xsl:if test="ns:ContractAuthority">
                                                <ns:ContractAuthority>
                                                    <xsl:value-of select="ns:ContractAuthority"/>
                                                </ns:ContractAuthority>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:GSMMain)>0">
                                            <xsl:if test="ns:GSMMain">
                                                <ns:GSMMain>
                                                    <xsl:value-of select="ns:GSMMain"/>
                                                </ns:GSMMain>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:SCRClass)>0">
                                            <xsl:if test="ns:SCRClass">
                                                <ns:SCRClass>
                                                    <xsl:value-of select="ns:SCRClass"/>
                                                </ns:SCRClass>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:NumberType)>0">
                                            <xsl:if test="ns:NumberType">
                                                <ns:NumberType>
                                                    <xsl:value-of select="ns:NumberType"/>
                                                </ns:NumberType>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:CreditLimit)>0">
                                            <xsl:if test="ns:CreditLimit">
                                                <ns:CreditLimit>
                                                    <xsl:value-of select="ns:CreditLimit"/>
                                                </ns:CreditLimit>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:FirstCallDate)>0">
                                            <xsl:if test="ns:FirstCallDate">
                                                <ns:FirstCallDate>
                                                    <xsl:copy-of select="ns:FirstCallDate/@xsi:nil"/>
                                                    <xsl:value-of select="ns:FirstCallDate"/>
                                                </ns:FirstCallDate>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:if test="string-length(ns:CreatedDate)>0">
                                            <xsl:if test="ns:CreatedDate">
                                                <ns:CreatedDate>
                                                    <xsl:copy-of select="ns:CreatedDate/@xsi:nil"/>
                                                    <xsl:value-of select="ns:CreatedDate"/>
                                                </ns:CreatedDate>
                                            </xsl:if>
                                        </xsl:if>
                                        <xsl:for-each select="ns:SimCard">
                                            <ns:SimCard>
                                                <xsl:if test="string-length(ns:CardType)>0">
                                                    <xsl:if test="ns:CardType">
                                                        <ns:CardType>
                                                            <xsl:value-of select="ns:CardType"/>
                                                        </ns:CardType>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:CardNumber)>0">
                                                    <xsl:if test="ns:CardNumber">
                                                        <ns:CardNumber>
                                                            <xsl:value-of select="ns:CardNumber"/>
                                                        </ns:CardNumber>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:IMSI)>0">
                                                    <xsl:if test="ns:IMSI">
                                                        <ns:IMSI>
                                                            <xsl:value-of select="ns:IMSI"/>
                                                        </ns:IMSI>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:ICCID)>0">
                                                    <xsl:if test="ns:ICCID">
                                                        <ns:ICCID>
                                                            <xsl:value-of select="ns:ICCID"/>
                                                        </ns:ICCID>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:PIN)>0">
                                                    <xsl:if test="ns:PIN">
                                                        <ns:PIN>
                                                            <xsl:value-of select="ns:PIN"/>
                                                        </ns:PIN>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:PUK1)>0">
                                                    <xsl:if test="ns:PUK1">
                                                        <ns:PUK1>
                                                            <xsl:value-of select="ns:PUK1"/>
                                                        </ns:PUK1>
                                                    </xsl:if>
                                                </xsl:if>
                                                <xsl:if test="string-length(ns:PUK2)>0">
                                                    <xsl:if test="ns:PUK2">
                                                        <ns:PUK2>
                                                            <xsl:value-of select="ns:PUK2"/>
                                                        </ns:PUK2>
                                                    </xsl:if>
                                                </xsl:if>
                                            </ns:SimCard>
                                        </xsl:for-each>
                                    </ns:Details>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Params">
                                    <ns:Params>
                                        <xsl:for-each select="ns3:Param">
                                            <ns3:Param>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="ns3:Value"/>
                                                </ns3:Value>
                                            </ns3:Param>
                                        </xsl:for-each>
                                    </ns:Params>
                                </xsl:for-each>
                            </ns:SubscriberInfo>
                        </xsl:for-each>
                    </ns:QuerySubscriberResult>
                </xsl:for-each>
            </response>
        </wsdlPfx:QuerySubscriberResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:QuerySubscriberResponse"/>
    <pd:endX>1568</pd:endX>
    <pd:endY>180</pd:endY>
    <pd:errorSchemas>
        <Schema1 wsMsgRef="wsdlPfx:faultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1444375224306</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>448</pd:x>
        <pd:y>1</pd:y>
        <pd:width>1017</pd:width>
        <pd:height>358</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>NativeToCDM</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>NativeToCDM</pd:from>
            <pd:to>Call_ESI_GetSubscriberList</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ESI_GetSubscriberList</pd:from>
            <pd:to>GenerateError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapFinalResponse</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Loyalty_Call</pd:from>
            <pd:to>MapFinalResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>NativeToCDM</pd:from>
            <pd:to>ESI_Loyalty_Call</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ESI_GetSubscriberList</pd:from>
            <pd:to>MapFinalResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Loyalty_Call</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ESI_GetSubscriberList</pd:from>
            <pd:to>Call_Sub_Authorization</pd:to>
            <pd:xpathDescription>Corporate_Customer</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Call_ESI_GetSubscriberList/response/ns:QuerySubscriberResult/ns:CustomerType=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/SUB_Authority/Corporate</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_Sub_Authorization</pd:from>
            <pd:to>MapFinalResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_Sub_Authorization</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>MapFinalResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>698</pd:x>
            <pd:y>158</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
                <x__copyToClipboardReference>
                    <ref>
                        <pfx>xsd</pfx>
                        <type>N</type>
                        <ns>http://www.w3.org/2001/XMLSchema</ns>
                    </ref>
                </x__copyToClipboardReference>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns22:Header>
                        <ns22:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns22:ApplicationID>
                        <ns22:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConponentNameSubscriber"/>
                        </ns22:ComponentName>
                        <ns22:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns22:Hostname>
                        <ns22:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns22:Timestamp>
                        <ns22:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns22:TransactionDomain>
                        <ns22:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </ns22:TransactionType>
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                        <xsl:if test="$GetContext/ns5:_applicationProperties/ns5:JMSMessageID">
                            <ns22:CorrelationID>
                                <xsl:value-of select="$GetContext/ns5:_applicationProperties/ns5:JMSMessageID"/>
                            </ns22:CorrelationID>
                        </xsl:if>
                        <ns22:InterfaceID>
                            <xsl:value-of select="$Start/wsdlPfx:QuerySubscriberRequest/request/ns:QuerySubscriberInput/ns:MSISDN"/>
                        </ns22:InterfaceID>
                        <ns22:Filename>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                        </ns22:Filename>
                        <ns22:Message>
                            <xsl:value-of select="tib:render-xml($Start/wsdlPfx:QuerySubscriberRequest)"/>
                        </ns22:Message>
                    </ns22:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1383</pd:x>
            <pd:y>154</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
                <x__copyToClipboardReference>
                    <ref>
                        <pfx>xsd</pfx>
                        <type>N</type>
                        <ns>http://www.w3.org/2001/XMLSchema</ns>
                    </ref>
                </x__copyToClipboardReference>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns22:Header>
                        <ns22:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns22:ApplicationID>
                        <ns22:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConponentNameSubscriber"/>
                        </ns22:ComponentName>
                        <ns22:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns22:Hostname>
                        <ns22:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns22:Timestamp>
                        <ns22:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns22:TransactionDomain>
                        <ns22:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </ns22:TransactionType>
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                        <ns22:Filename>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                        </ns22:Filename>
                        <ns22:Message>
                            <xsl:value-of select="tib:render-xml($MapFinalResponse/ns:QuerySubscriberResult)"/>
                        </ns22:Message>
                    </ns22:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_ESI_GetSubscriberList">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1026</pd:x>
            <pd:y>297</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/HelperProcess/ESI_Call_QuerySubscriber.process</processName>
                <x__copyToClipboardReference>
                    <ref>
                        <pfx>xsd</pfx>
                        <type>N</type>
                        <ns>http://www.w3.org/2001/XMLSchema</ns>
                    </ref>
                </x__copyToClipboardReference>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:copy-of select="$NativeToCDM/root/pfx2:queryAssetRequest"/>
                    <TransactionId>
                        <xsl:value-of select="$NativeToCDM/root/TransactionId"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$NativeToCDM/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>563</pd:x>
            <pd:y>157</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
                <x__copyToClipboardReference>
                    <ref>
                        <pfx>xsd</pfx>
                        <type>N</type>
                        <ns>http://www.w3.org/2001/XMLSchema</ns>
                    </ref>
                </x__copyToClipboardReference>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="NativeToCDM">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>818</pd:x>
            <pd:y>155</pd:y>
            <config>
                <x__copyToClipboardReference>
                    <ref>
                        <pfx>xsd</pfx>
                        <type>N</type>
                        <ns>http://www.w3.org/2001/XMLSchema</ns>
                    </ref>
                    <ref>
                        <loc>/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd</loc>
                        <pfx>pfx24</pfx>
                        <type>S</type>
                        <ns>http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd</ns>
                    </ref>
                </x__copyToClipboardReference>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx2:queryAssetRequest"/>
                                <xsd:element name="TransactionId" type="xsd:string"/>
                                <xsd:element name="StartTimeStamp" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx2:queryAssetRequest>
                        <pfx2:MSISDN>
                            <xsl:value-of select="format:FormatMSISDN($Start/wsdlPfx:QuerySubscriberRequest/request/ns:QuerySubscriberInput/ns:MSISDN, $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/MSISDN_Format)"/>
                        </pfx2:MSISDN>
                    </pfx2:queryAssetRequest>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GenerateError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>1250</pd:x>
            <pd:y>301</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapFinalResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1272</pd:x>
            <pd:y>153</pd:y>
            <config>
                <element ref="ns:QuerySubscriberResult"/>
            </config>
            <pd:inputBindings>
                <xsl:for-each select="$Call_ESI_GetSubscriberList/response/ns:QuerySubscriberResult">
                    <ns:QuerySubscriberResult>
                        <xsl:if test="ns:CustomerProfile">
                            <ns:CustomerProfile>
                                <xsl:value-of select="ns:CustomerProfile"/>
                            </ns:CustomerProfile>
                        </xsl:if>
                        <xsl:if test="ns:CustomerNumber">
                            <ns:CustomerNumber>
                                <xsl:value-of select="ns:CustomerNumber"/>
                            </ns:CustomerNumber>
                        </xsl:if>
                        <xsl:if test="ns:CustomerType">
                            <ns:CustomerType>
                                <xsl:value-of select="ns:CustomerType"/>
                            </ns:CustomerType>
                        </xsl:if>
                        <xsl:if test="ns:ContractID">
                            <ns:ContractID>
                                <xsl:value-of select="ns:ContractID"/>
                            </ns:ContractID>
                        </xsl:if>
                        <xsl:variable name="SubStatus" select="$ESI_Loyalty_Call/response/pfx2:queryAssetResponse/pfx2:ListOfCbio2QueryAssetIo/pfx2:Account/pfx2:ListOfSubscribers/pfx2:SubscriberInformation"/>
                        <ns:AccountStatus>
                            <xsl:value-of select="ns:AccountStatus"/>
                        </ns:AccountStatus>
                        <xsl:if test="ns:Segment">
                            <ns:Segment>
                                <xsl:value-of select="ns:Segment"/>
                            </ns:Segment>
                        </xsl:if>
                        <xsl:for-each select="ns:SubscriberInfo">
                            <ns:SubscriberInfo>
                                <xsl:for-each select="ns:PostalAddress">
                                    <ns:PostalAddress>
                                        <xsl:if test="ns:PostalArea">
                                            <ns:PostalArea>
                                                <xsl:value-of select="ns:PostalArea"/>
                                            </ns:PostalArea>
                                        </xsl:if>
                                        <xsl:if test="ns:POBox">
                                            <ns:POBox>
                                                <xsl:value-of select="ns:POBox"/>
                                            </ns:POBox>
                                        </xsl:if>
                                        <xsl:if test="ns:PostalCode">
                                            <ns:PostalCode>
                                                <xsl:value-of select="ns:PostalCode"/>
                                            </ns:PostalCode>
                                        </xsl:if>
                                    </ns:PostalAddress>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Address">
                                    <ns:Address>
                                        <xsl:if test="ns:Country">
                                            <ns:Country>
                                                <xsl:value-of select="ns:Country"/>
                                            </ns:Country>
                                        </xsl:if>
                                        <xsl:if test="ns:Governate">
                                            <ns:Governate>
                                                <xsl:value-of select="ns:Governate"/>
                                            </ns:Governate>
                                        </xsl:if>
                                        <xsl:if test="ns:Area">
                                            <ns:Area>
                                                <xsl:value-of select="ns:Area"/>
                                            </ns:Area>
                                        </xsl:if>
                                        <xsl:if test="ns:Block">
                                            <ns:Block>
                                                <xsl:value-of select="ns:Block"/>
                                            </ns:Block>
                                        </xsl:if>
                                        <xsl:if test="ns:Street">
                                            <ns:Street>
                                                <xsl:value-of select="ns:Street"/>
                                            </ns:Street>
                                        </xsl:if>
                                        <xsl:if test="ns:HouseOrBuilding">
                                            <ns:HouseOrBuilding>
                                                <xsl:value-of select="ns:HouseOrBuilding"/>
                                            </ns:HouseOrBuilding>
                                        </xsl:if>
                                        <xsl:if test="ns:Floor">
                                            <ns:Floor>
                                                <xsl:value-of select="ns:Floor"/>
                                            </ns:Floor>
                                        </xsl:if>
                                        <xsl:if test="ns:Apartment">
                                            <ns:Apartment>
                                                <xsl:value-of select="ns:Apartment"/>
                                            </ns:Apartment>
                                        </xsl:if>
                                        <xsl:if test="ns:Directions">
                                            <ns:Directions>
                                                <xsl:value-of select="ns:Directions"/>
                                            </ns:Directions>
                                        </xsl:if>
                                        <xsl:if test="ns:PACIRef">
                                            <ns:PACIRef>
                                                <xsl:value-of select="ns:PACIRef"/>
                                            </ns:PACIRef>
                                        </xsl:if>
                                        <xsl:if test="ns:Region">
                                            <ns:Region>
                                                <xsl:value-of select="ns:Region"/>
                                            </ns:Region>
                                        </xsl:if>
                                        <xsl:if test="ns:ZipCode">
                                            <ns:ZipCode>
                                                <xsl:value-of select="ns:ZipCode"/>
                                            </ns:ZipCode>
                                        </xsl:if>
                                        <xsl:if test="ns:StreetNo">
                                            <ns:StreetNo>
                                                <xsl:value-of select="ns:StreetNo"/>
                                            </ns:StreetNo>
                                        </xsl:if>
                                    </ns:Address>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Identity">
                                    <ns:Identity>
                                        <xsl:for-each select="ns:Name">
                                            <ns:Name>
                                                <xsl:if test="ns:Country">
                                                    <ns:Country>
                                                        <xsl:value-of select="ns:Country"/>
                                                    </ns:Country>
                                                </xsl:if>
                                                <xsl:if test="ns:Name">
                                                    <ns:Name>
                                                        <xsl:value-of select="ns:Name"/>
                                                    </ns:Name>
                                                </xsl:if>
                                                <xsl:if test="ns:Title">
                                                    <ns:Title>
                                                        <xsl:value-of select="ns:Title"/>
                                                    </ns:Title>
                                                </xsl:if>
                                                <xsl:if test="ns:FirstName">
                                                    <ns:FirstName>
                                                        <xsl:value-of select="ns:FirstName"/>
                                                    </ns:FirstName>
                                                </xsl:if>
                                                <xsl:if test="ns:LastName">
                                                    <ns:LastName>
                                                        <xsl:value-of select="ns:LastName"/>
                                                    </ns:LastName>
                                                </xsl:if>
                                                <xsl:if test="ns:SecondName">
                                                    <ns:SecondName>
                                                        <xsl:value-of select="ns:SecondName"/>
                                                    </ns:SecondName>
                                                </xsl:if>
                                                <xsl:if test="ns:ThirdName">
                                                    <ns:ThirdName>
                                                        <xsl:value-of select="ns:ThirdName"/>
                                                    </ns:ThirdName>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicName">
                                                    <ns:ArabicName>
                                                        <xsl:value-of select="ns:ArabicName"/>
                                                    </ns:ArabicName>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicTitle">
                                                    <ns:ArabicTitle>
                                                        <xsl:value-of select="ns:ArabicTitle"/>
                                                    </ns:ArabicTitle>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicFirstName">
                                                    <ns:ArabicFirstName>
                                                        <xsl:value-of select="ns:ArabicFirstName"/>
                                                    </ns:ArabicFirstName>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicLastName">
                                                    <ns:ArabicLastName>
                                                        <xsl:value-of select="ns:ArabicLastName"/>
                                                    </ns:ArabicLastName>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicSecondName">
                                                    <ns:ArabicSecondName>
                                                        <xsl:value-of select="ns:ArabicSecondName"/>
                                                    </ns:ArabicSecondName>
                                                </xsl:if>
                                                <xsl:if test="ns:ArabicThirdName">
                                                    <ns:ArabicThirdName>
                                                        <xsl:value-of select="ns:ArabicThirdName"/>
                                                    </ns:ArabicThirdName>
                                                </xsl:if>
                                            </ns:Name>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns:Information">
                                            <ns:Information>
                                                <xsl:if test="ns:DateOfBirth">
                                                    <ns:DateOfBirth>
                                                        <xsl:copy-of select="ns:DateOfBirth/@xsi:nil"/>
                                                        <xsl:value-of select="ns:DateOfBirth"/>
                                                    </ns:DateOfBirth>
                                                </xsl:if>
                                                <xsl:if test="ns:Sex">
                                                    <ns:Sex>
                                                        <xsl:value-of select="ns:Sex"/>
                                                    </ns:Sex>
                                                </xsl:if>
                                                <xsl:if test="ns:Nationality">
                                                    <ns:Nationality>
                                                        <xsl:value-of select="ns:Nationality"/>
                                                    </ns:Nationality>
                                                </xsl:if>
                                                <xsl:if test="ns:Language">
                                                    <ns:Language>
                                                        <xsl:value-of select="ns:Language"/>
                                                    </ns:Language>
                                                </xsl:if>
                                                <xsl:if test="ns:Profession">
                                                    <ns:Profession>
                                                        <xsl:value-of select="ns:Profession"/>
                                                    </ns:Profession>
                                                </xsl:if>
                                                <xsl:if test="ns:ProfessionDescription">
                                                    <ns:ProfessionDescription>
                                                        <xsl:value-of select="ns:ProfessionDescription"/>
                                                    </ns:ProfessionDescription>
                                                </xsl:if>
                                                <xsl:if test="ns:Education">
                                                    <ns:Education>
                                                        <xsl:value-of select="ns:Education"/>
                                                    </ns:Education>
                                                </xsl:if>
                                                <xsl:if test="ns:MaritalStatus">
                                                    <ns:MaritalStatus>
                                                        <xsl:value-of select="ns:MaritalStatus"/>
                                                    </ns:MaritalStatus>
                                                </xsl:if>
                                                <xsl:if test="ns:Employee">
                                                    <ns:Employee>
                                                        <xsl:value-of select="ns:Employee"/>
                                                    </ns:Employee>
                                                </xsl:if>
                                                <xsl:if test="ns:StaffNumber">
                                                    <ns:StaffNumber>
                                                        <xsl:value-of select="ns:StaffNumber"/>
                                                    </ns:StaffNumber>
                                                </xsl:if>
                                                <xsl:if test="ns:PersonalNumber">
                                                    <ns:PersonalNumber>
                                                        <xsl:value-of select="ns:PersonalNumber"/>
                                                    </ns:PersonalNumber>
                                                </xsl:if>
                                                <xsl:if test="ns:IdType">
                                                    <ns:IdType>
                                                        <xsl:value-of select="ns:IdType"/>
                                                    </ns:IdType>
                                                </xsl:if>
                                                <xsl:if test="ns:IdNumber">
                                                    <ns:IdNumber>
                                                        <xsl:value-of select="ns:IdNumber"/>
                                                    </ns:IdNumber>
                                                </xsl:if>
                                                <xsl:if test="ns:IdExpirationDate">
                                                    <ns:IdExpirationDate>
                                                        <xsl:copy-of select="ns:IdExpirationDate/@xsi:nil"/>
                                                        <xsl:value-of select="ns:IdExpirationDate"/>
                                                    </ns:IdExpirationDate>
                                                </xsl:if>
                                            </ns:Information>
                                        </xsl:for-each>
                                    </ns:Identity>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Contact">
                                    <ns:Contact>
                                        <xsl:for-each select="ns:PhoneContact">
                                            <ns:PhoneContact>
                                                <xsl:if test="ns:Number">
                                                    <ns:Number>
                                                        <xsl:value-of select="ns:Number"/>
                                                    </ns:Number>
                                                </xsl:if>
                                                <xsl:if test="ns:Type">
                                                    <ns:Type>
                                                        <xsl:value-of select="ns:Type"/>
                                                    </ns:Type>
                                                </xsl:if>
                                            </ns:PhoneContact>
                                        </xsl:for-each>
                                        <xsl:if test="ns:eMailAddress">
                                            <ns:eMailAddress>
                                                <xsl:value-of select="ns:eMailAddress"/>
                                            </ns:eMailAddress>
                                        </xsl:if>
                                    </ns:Contact>
                                </xsl:for-each>
                                <xsl:for-each select="ns:Details">
                                    <ns:Details>
                                        <xsl:if test="ns:MSISDN">
                                            <ns:MSISDN>
                                                <xsl:value-of select="ns:MSISDN"/>
                                            </ns:MSISDN>
                                        </xsl:if>
                                        <xsl:if test="ns:Area">
                                            <ns:Area>
                                                <xsl:value-of select="ns:Area"/>
                                            </ns:Area>
                                        </xsl:if>
                                        <ns:Status>
                                            <xsl:value-of select="$GetSubStatusVariable/root/ns6:ESBLOV/ns6:Record[ns6:TRANSKEY=$SubStatus/pfx2:CBiO2SubscriberStatus and ns6:TRANSTYPE='QueryCustomer']/ns6:TRANSVALUE"/>
                                        </ns:Status>
                                        <xsl:if test="ns:TransferDate">
                                            <ns:TransferDate>
                                                <xsl:copy-of select="ns:TransferDate/@xsi:nil"/>
                                                <xsl:value-of select="ns:TransferDate"/>
                                            </ns:TransferDate>
                                        </xsl:if>
                                        <xsl:if test="ns:BillingType">
                                            <ns:BillingType>
                                                <xsl:value-of select="ns:BillingType"/>
                                            </ns:BillingType>
                                        </xsl:if>
                                        <xsl:if test="ns:BasicServiceType">
                                            <ns:BasicServiceType>
                                                <xsl:value-of select="ns:BasicServiceType"/>
                                            </ns:BasicServiceType>
                                        </xsl:if>
                                        <xsl:if test="ns:BSFlag">
                                            <ns:BSFlag>
                                                <xsl:value-of select="ns:BSFlag"/>
                                            </ns:BSFlag>
                                        </xsl:if>
                                        <xsl:if test="ns:MainSubscriberNumber">
                                            <ns:MainSubscriberNumber>
                                                <xsl:value-of select="ns:MainSubscriberNumber"/>
                                            </ns:MainSubscriberNumber>
                                        </xsl:if>
                                        <xsl:if test="ns:HLRProfile">
                                            <ns:HLRProfile>
                                                <xsl:value-of select="ns:HLRProfile"/>
                                            </ns:HLRProfile>
                                        </xsl:if>
                                        <xsl:if test="ns:NotifiedSubscriberNumber">
                                            <ns:NotifiedSubscriberNumber>
                                                <xsl:value-of select="ns:NotifiedSubscriberNumber"/>
                                            </ns:NotifiedSubscriberNumber>
                                        </xsl:if>
                                        <xsl:if test="ns:NotifiedSubscriberType">
                                            <ns:NotifiedSubscriberType>
                                                <xsl:value-of select="ns:NotifiedSubscriberType"/>
                                            </ns:NotifiedSubscriberType>
                                        </xsl:if>
                                        <xsl:if test="ns:NotifiedSubscriberArea">
                                            <ns:NotifiedSubscriberArea>
                                                <xsl:value-of select="ns:NotifiedSubscriberArea"/>
                                            </ns:NotifiedSubscriberArea>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="string-length($Call_Sub_Authorization/root/CONT_AUTH)>0">
                                                <xsl:if test="$Call_Sub_Authorization/root/CONT_AUTH">
                                                    <ns:ContractAuthority>
                                                        <xsl:value-of select="$Call_Sub_Authorization/root/CONT_AUTH"/>
                                                    </ns:ContractAuthority>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <ns:ContractAuthority>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/SUB_Authority/Non-Authorized"/>
                                                </ns:ContractAuthority>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="ns:GSMMain">
                                            <ns:GSMMain>
                                                <xsl:value-of select="ns:GSMMain"/>
                                            </ns:GSMMain>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="string-length($Call_Sub_Authorization/root/CONT_AUTH)>0">
                                                <ns:SCRClass>
                                                    <xsl:value-of select="$Call_Sub_Authorization/root/CONT_AUTH_SCRClass"/>
                                                </ns:SCRClass>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="ns:SCRClass">
                                                    <ns:SCRClass>
                                                        <xsl:value-of select="ns:SCRClass"/>
                                                    </ns:SCRClass>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="ns:NumberType">
                                            <ns:NumberType>
                                                <xsl:value-of select="ns:NumberType"/>
                                            </ns:NumberType>
                                        </xsl:if>
                                        <xsl:if test="ns:CreditLimit">
                                            <ns:CreditLimit>
                                                <xsl:value-of select="ns:CreditLimit"/>
                                            </ns:CreditLimit>
                                        </xsl:if>
                                        <xsl:if test="ns:FirstCallDate">
                                            <ns:FirstCallDate>
                                                <xsl:copy-of select="ns:FirstCallDate/@xsi:nil"/>
                                                <xsl:value-of select="ns:FirstCallDate"/>
                                            </ns:FirstCallDate>
                                        </xsl:if>
                                        <xsl:if test="ns:CreatedDate">
                                            <ns:CreatedDate>
                                                <xsl:copy-of select="ns:CreatedDate/@xsi:nil"/>
                                                <xsl:value-of select="ns:CreatedDate"/>
                                            </ns:CreatedDate>
                                        </xsl:if>
                                        <xsl:for-each select="ns:SimCard">
                                            <ns:SimCard>
                                                <xsl:if test="ns:CardType">
                                                    <ns:CardType>
                                                        <xsl:value-of select="ns:CardType"/>
                                                    </ns:CardType>
                                                </xsl:if>
                                                <xsl:if test="ns:CardNumber">
                                                    <ns:CardNumber>
                                                        <xsl:value-of select="ns:CardNumber"/>
                                                    </ns:CardNumber>
                                                </xsl:if>
                                                <xsl:if test="ns:IMSI">
                                                    <ns:IMSI>
                                                        <xsl:value-of select="ns:IMSI"/>
                                                    </ns:IMSI>
                                                </xsl:if>
                                                <xsl:if test="ns:ICCID">
                                                    <ns:ICCID>
                                                        <xsl:value-of select="ns:ICCID"/>
                                                    </ns:ICCID>
                                                </xsl:if>
                                                <xsl:if test="ns:PIN">
                                                    <ns:PIN>
                                                        <xsl:value-of select="ns:PIN"/>
                                                    </ns:PIN>
                                                </xsl:if>
                                                <xsl:if test="ns:PUK1">
                                                    <ns:PUK1>
                                                        <xsl:value-of select="ns:PUK1"/>
                                                    </ns:PUK1>
                                                </xsl:if>
                                                <xsl:if test="ns:PUK2">
                                                    <ns:PUK2>
                                                        <xsl:value-of select="ns:PUK2"/>
                                                    </ns:PUK2>
                                                </xsl:if>
                                            </ns:SimCard>
                                        </xsl:for-each>
                                    </ns:Details>
                                </xsl:for-each>
                                <ns:Params>
                                    <xsl:choose>
                                        <xsl:when test="ns:Details/ns:BillingType=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/POST_LOV">
                                            <ns3:Param>
                                                <ns3:Name>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Loyalty"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LOY_NEW"/>
                                                </ns3:Value>
                                            </ns3:Param>
                                        </xsl:when>
                                        <xsl:when test="$ESI_Loyalty_Call/response/pfx2:queryAssetResponse/pfx2:ListOfCbio2QueryAssetIo/pfx2:Account[*]/pfx2:ListOfAssetMgmtAsset[*]/pfx2:AssetMgmtAsset/pfx2:ProductPartNumber=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/EQUIPID_LOV">
                                            <ns3:Param>
                                                <ns3:Name>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Loyalty"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LOY_EXISTS"/>
                                                </ns3:Value>
                                            </ns3:Param>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns3:Param>
                                                <ns3:Name>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Loyalty"/>
                                                </ns3:Name>
                                                <ns3:Value>
                                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/LOY_NEW"/>
                                                </ns3:Value>
                                            </ns3:Param>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns:Params>
                            </ns:SubscriberInfo>
                        </xsl:for-each>
                    </ns:QuerySubscriberResult>
                </xsl:for-each>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESI_Loyalty_Call">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1022</pd:x>
            <pd:y>68</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/HelperProcess/ESI_Call_QueryCustomerAsset.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx2:queryAssetRequest>
                        <pfx2:OperationType>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/OperationType"/>
                        </pfx2:OperationType>
                        <pfx2:MSISDN>
                            <xsl:value-of select="format:FormatMSISDN($Start/wsdlPfx:QuerySubscriberRequest/request/ns:QuerySubscriberInput/ns:MSISDN, $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/AssetQuery/MSISDN_Format)"/>
                        </pfx2:MSISDN>
                    </pfx2:queryAssetRequest>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_Sub_Authorization">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>953</pd:x>
            <pd:y>153</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/CRM/Query/QueryCustomerProfile/HelperProcess/Call_Sub_Authorization.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <MSISDN>
                        <xsl:value-of select="$Start/wsdlPfx:QuerySubscriberRequest/request/ns:QuerySubscriberInput/ns:MSISDN"/>
                    </MSISDN>
                    <CustomerID>
                        <xsl:value-of select="$Call_ESI_GetSubscriberList/response/ns:QuerySubscriberResult/ns:ContractID"/>
                    </CustomerID>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>1263</pd:x>
            <pd:y>56</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>666</pd:x>
        <pd:y>417</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/SubscriberList/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                </ns22:Header>
                <xsl:if test="string-length($GetTransactionID/GUID/StartTimeStamp)>0">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>63</pd:x>
        <pd:y>415</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns14:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/SubscriberList/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:QuerySubscriberRequest)"/>
                    </ns22:Message>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </StackTrace>
            </ns14:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>806</pd:x>
        <pd:y>417</pd:y>
        <config>
            <faultName>Schema1</faultName>
        </config>
        <pd:inputBindings>
            <ns13:ActivityInput>
                <data>
                    <wsdlPfx:faultMessage>
                        <fault>
                            <ns3:FaultType>
                                <ns3:type>
                                    <xsl:value-of select="$Call_Error_Process/root/ErrorType"/>
                                </ns3:type>
                                <ns3:code>
                                    <xsl:value-of select="if(contains($Call_Error_Process/root/ErrorUserErrDesc, $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/NonZainCustErrorDesc))&#xA;then&#xA;$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/NonZainCustErrorCode&#xA;else&#xA;$Call_Error_Process/root/ErrorUserErrCode"/>
                                </ns3:code>
                                <ns3:description>
                                    <xsl:value-of select="$Call_Error_Process/root/ErrorUserErrDesc"/>
                                </ns3:description>
                                <ns3:sourceSystem>
                                    <xsl:value-of select="$Call_Error_Process/root/ErrorSourceSystem"/>
                                </ns3:sourceSystem>
                                <ns3:extErrorCode>
                                    <xsl:value-of select="$Call_Error_Process/root/ErrorSourceErrCode"/>
                                </ns3:extErrorCode>
                                <ns3:detail>
                                    <xsl:value-of select="$Call_Error_Process/root/ErrorSourceErrDesc"/>
                                </ns3:detail>
                            </ns3:FaultType>
                        </fault>
                    </wsdlPfx:faultMessage>
                </data>
            </ns13:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>228</pd:x>
        <pd:y>488</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns15:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </msgCode>
            </ns15:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetFaultContext-1">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>525</pd:x>
        <pd:y>416</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="if(contains($Call_Error_Process/root/ErrorUserErrDesc, $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/NonZainCustErrorDesc))&#xA;then&#xA;$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/NonZainCustErrorCode&#xA;else&#xA;$Call_Error_Process/root/ErrorUserErrCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$Call_Error_Process/root/ErrorUserErrDesc"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$Call_Error_Process/root/ErrorType"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
        <pd:resourceType>service.activity.getContext</pd:resourceType>
        <pd:x>170</pd:x>
        <pd:y>187</pd:y>
        <config>
            <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Call_Error_Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>380</pd:x>
        <pd:y>413</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="if(string-length(substring-before($ErrorHandler/ns14:ExceptionRequest/StackTrace, '|'))>0)&#xA;then&#xA;substring-before($ErrorHandler/ns14:ExceptionRequest/StackTrace, '|')&#xA;else&#xA;$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Tibco_ErrSource"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/Channel_Name"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ExtChannelType"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="$ErrorHandler/ns14:ExceptionRequest/ExceptionCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="if(string-length(substring-after($ErrorHandler/ns14:ExceptionRequest/StackTrace, '|'))>0)&#xA;then&#xA;substring-after($ErrorHandler/ns14:ExceptionRequest/StackTrace, '|')&#xA;else&#xA;$ErrorHandler/ns14:ExceptionRequest/StackTrace"/>
                </ResponseDescription>
                <TIBCOServiceName>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/CRM/Query/CustomerQuery/ConponentNameSubscriber"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="&quot;&quot;"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="&quot;&quot;"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetSubStatusVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>296</pd:x>
        <pd:y>188</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Call_Error_Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetFaultContext-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>Call_Error_Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetContext</pd:from>
        <pd:to>GetSubStatusVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Error_Process</pd:from>
        <pd:to>SetFaultContext-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubStatusVariable</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>