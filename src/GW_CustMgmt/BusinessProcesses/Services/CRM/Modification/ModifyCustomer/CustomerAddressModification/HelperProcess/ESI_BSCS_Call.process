<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationIo.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Modification/ModifyCustomer/CustomerAddressModification/HelperProcess/ESI_BSCS_Call.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>133</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$Map-Data/pfx32:ListOfCBiO2AddressModificationResIO"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx32:ListOfCBiO2AddressModificationResIO"/>
    <pd:endX>1215</pd:endX>
    <pd:endY>338</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="ns7:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>604</pd:x>
        <pd:y>179</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/ModifyCustomer/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>173</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/ModifyCustomer/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($ParseRequest)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx34:ModifyCustomerreq)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>755</pd:x>
        <pd:y>317</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>436</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx34:ModifyCustomerreq)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/ModifyCustomer/ESI_Request_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/JMSTimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>136</pd:x>
        <pd:y>304</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx35:SiebelMessage"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>302</pd:y>
        <config>
            <element ref="pfx34:ModifyCustomerreq"/>
        </config>
        <pd:inputBindings>
            <pfx34:ModifyCustomerreq>
                <pfx34:ModifyCustomerReq>
                    <ns11:BusinessMessageHeader>
                        <Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </Timestamp>
                        <ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ApplicationID>
                        <ComponentName>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/ModifyCustomer/ComponentName"/>
                        </ComponentName>
                        <Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </Hostname>
                        <TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </TransactionDomain>
                        <TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                        </TransactionType>
                        <TransactionID>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </TransactionID>
                    </ns11:BusinessMessageHeader>
                    <ns11:ZainIndividualList>
                        <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfCutAddress/pfx35:CutAddress">
                            <ZainIndividual>
                                <xsl:if test="../../pfx35:CBiO2Gender">
                                    <gender>
                                        <xsl:value-of select="../../pfx35:CBiO2Gender"/>
                                    </gender>
                                </xsl:if>
                                <xsl:if test="../../pfx35:CBiO2CustMaritalStatus">
                                    <maritalStatus>
                                        <xsl:value-of select="../../pfx35:CBiO2CustMaritalStatus"/>
                                    </maritalStatus>
                                </xsl:if>
                                <xsl:if test="../../pfx35:CBiO2Nationality">
                                    <nationality>
                                        <xsl:value-of select="../../pfx35:CBiO2Nationality"/>
                                    </nationality>
                                </xsl:if>
                                <xsl:if test="string-length(../../pfx35:CBiO2DOB)>0">
                                    <DateofBirth>
                                        <xsl:value-of select="tib:parse-date('MM/dd/yyyy',../../pfx35:CBiO2DOB)"/>
                                    </DateofBirth>
                                </xsl:if>
                                <xsl:if test="../../pfx35:Id">
                                    <idType>
                                        <xsl:value-of select="../../pfx35:Id"/>
                                    </idType>
                                </xsl:if>
                                <xsl:if test="../../pfx35:CBiO2IDNumber">
                                    <CivilId>
                                        <xsl:value-of select="../../pfx35:CBiO2IDNumber"/>
                                    </CivilId>
                                </xsl:if>
                                <xsl:if test="../../pfx35:CBiO2IDType">
                                    <ResidencyType>
                                        <xsl:value-of select="../../pfx35:CBiO2IDType"/>
                                    </ResidencyType>
                                </xsl:if>
                                <xsl:if test="../../pfx35:Language">
                                    <language>
                                        <xsl:value-of select="../../pfx35:Language"/>
                                    </language>
                                </xsl:if>
                                <IndividualName>
                                    <xsl:if test="../../pfx35:CBiO2EnglishTitle">
                                        <AristocraticTitle>
                                            <xsl:value-of select="../../pfx35:CBiO2EnglishTitle"/>
                                        </AristocraticTitle>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicTitle">
                                        <ArabicAristocraticTitle>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicTitle"/>
                                        </ArabicAristocraticTitle>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2EnglishFullName">
                                        <fullName>
                                            <xsl:value-of select="../../pfx35:CBiO2EnglishFullName"/>
                                        </fullName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicFullName">
                                        <ArabicFullName>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicFullName"/>
                                        </ArabicFullName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicLastName">
                                        <givenNames>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicLastName"/>
                                        </givenNames>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2EnglishLastName">
                                        <legalName>
                                            <xsl:value-of select="../../pfx35:CBiO2EnglishLastName"/>
                                        </legalName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2EnglishFirstName">
                                        <FirstName>
                                            <xsl:value-of select="../../pfx35:CBiO2EnglishFirstName"/>
                                        </FirstName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2EnglishSecondName">
                                        <SecondName>
                                            <xsl:value-of select="../../pfx35:CBiO2EnglishSecondName"/>
                                        </SecondName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicFirstName">
                                        <ArabicFirstName>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicFirstName"/>
                                        </ArabicFirstName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicSecondName">
                                        <ArabicSecondName>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicSecondName"/>
                                        </ArabicSecondName>
                                    </xsl:if>
                                    <xsl:if test="../../pfx35:CBiO2ArabicThirdName">
                                        <ArabicThirdName>
                                            <xsl:value-of select="../../pfx35:CBiO2ArabicThirdName"/>
                                        </ArabicThirdName>
                                    </xsl:if>
                                </IndividualName>
                                <xsl:for-each select=".">
                                    <ZainAddress>
                                        <xsl:if test="pfx35:CBiO2EngPostalAreaName">
                                            <addressLine1>
                                                <xsl:value-of select="pfx35:CBiO2EngPostalAreaName"/>
                                            </addressLine1>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2PostalAreaCode">
                                            <addressLine2>
                                                <xsl:value-of select="pfx35:CBiO2PostalAreaCode"/>
                                            </addressLine2>
                                        </xsl:if>
                                        <city>
                                            <xsl:value-of select="pfx35:City"/>
                                        </city>
                                        <xsl:if test="pfx35:Country">
                                            <country>
                                                <xsl:value-of select="pfx35:Country"/>
                                            </country>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2Block">
                                            <Block>
                                                <xsl:value-of select="pfx35:CBiO2Block"/>
                                            </Block>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2Floor">
                                            <Floor>
                                                <xsl:value-of select="pfx35:CBiO2Floor"/>
                                            </Floor>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2Building">
                                            <Building>
                                                <xsl:value-of select="pfx35:CBiO2Building"/>
                                            </Building>
                                        </xsl:if>
                                        <xsl:if test="pfx35:ApartmentNumber">
                                            <Apartment>
                                                <xsl:value-of select="pfx35:ApartmentNumber"/>
                                            </Apartment>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2Avenue">
                                            <Avenue>
                                                <xsl:value-of select="pfx35:CBiO2Avenue"/>
                                            </Avenue>
                                        </xsl:if>
                                        <xsl:if test="pfx35:LocationType">
                                            <BaseType>
                                                <xsl:value-of select="pfx35:LocationType"/>
                                            </BaseType>
                                        </xsl:if>
                                        <xsl:choose>
                                            <xsl:when test="string-length(current()/pfx35:CBiO2BSCSId)>0">
                                                <xsl:if test="pfx35:CBiO2BSCSId">
                                                    <seqNumber>
                                                        <xsl:value-of select="pfx35:CBiO2BSCSId"/>
                                                    </seqNumber>
                                                </xsl:if>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <seqNumber>
                                                    <xsl:value-of select="0"/>
                                                </seqNumber>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <streetName>
                                            <xsl:value-of select="pfx35:StreetAddress"/>
                                        </streetName>
                                        <xsl:if test="pfx35:CBiO2StreetNumber">
                                            <streetNumber>
                                                <xsl:value-of select="pfx35:CBiO2StreetNumber"/>
                                            </streetNumber>
                                        </xsl:if>
                                        <xsl:if test="pfx35:PostalCode">
                                            <postalCode>
                                                <xsl:value-of select="pfx35:PostalCode"/>
                                            </postalCode>
                                        </xsl:if>
                                        <ns11:ZainContact>
                                            <xsl:if test="../../pfx35:MainEmailAddress">
                                                <eMailAddress>
                                                    <xsl:value-of select="../../pfx35:MainEmailAddress"/>
                                                </eMailAddress>
                                            </xsl:if>
                                            <xsl:if test="../../pfx35:MainFaxNumber">
                                                <faxContact>
                                                    <xsl:value-of select="../../pfx35:MainFaxNumber"/>
                                                </faxContact>
                                            </xsl:if>
                                            <xsl:if test="../../pfx35:CBiO2NotificationNumber">
                                                <Notificationnumber>
                                                    <xsl:value-of select="../../pfx35:CBiO2NotificationNumber"/>
                                                </Notificationnumber>
                                            </xsl:if>
                                        </ns11:ZainContact>
                                        <xsl:if test="pfx35:AddressType">
                                            <AdressType>
                                                <xsl:value-of select="pfx35:AddressType"/>
                                            </AdressType>
                                        </xsl:if>
                                        <xsl:if test="pfx35:Id">
                                            <AccountID>
                                                <xsl:value-of select="pfx35:Id"/>
                                            </AccountID>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2POBox">
                                            <PostalArea>
                                                <xsl:value-of select="pfx35:CBiO2POBox"/>
                                            </PostalArea>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2Status">
                                            <ActiveStatus>
                                                <xsl:value-of select="pfx35:CBiO2Status"/>
                                            </ActiveStatus>
                                        </xsl:if>
                                        <xsl:if test="pfx35:Neighborhood">
                                            <PostalAreaName>
                                                <xsl:value-of select="pfx35:Neighborhood"/>
                                            </PostalAreaName>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2PacciNumber">
                                            <PacciNumber>
                                                <xsl:value-of select="pfx35:CBiO2PacciNumber"/>
                                            </PacciNumber>
                                        </xsl:if>
                                    </ZainAddress>
                                </xsl:for-each>
                                <xsl:for-each select=".">
                                    <ZainContact>
                                        <xsl:if test="pfx35:CBiO2Mail">
                                            <eMailAddress>
                                                <xsl:value-of select="pfx35:CBiO2Mail"/>
                                            </eMailAddress>
                                        </xsl:if>
                                        <!--landlordnumber-->
                                        <xsl:if test="pfx35:LandlordPhoneNumber">
                                            <homeContact>
                                                <xsl:value-of select="pfx35:LandlordPhoneNumber"/>
                                            </homeContact>
                                        </xsl:if>
                                        <xsl:if test="pfx35:LandlordPhoneNumber">
                                            <Notificationnumber>
                                                <xsl:value-of select="pfx35:LandlordPhoneNumber"/>
                                            </Notificationnumber>
                                        </xsl:if>
                                    </ZainContact>
                                </xsl:for-each>
                                <ns11:CorporateInfo>
                                    <xsl:if test="../../pfx35:CBiO2Segment">
                                        <Segment>
                                            <xsl:value-of select="../../pfx35:CBiO2Segment"/>
                                        </Segment>
                                    </xsl:if>
                                </ns11:CorporateInfo>
                                <xsl:if test="../../pfx35:CBiO2Category">
                                    <Category>
                                        <xsl:value-of select="../../pfx35:CBiO2Category"/>
                                    </Category>
                                </xsl:if>
                            </ZainIndividual>
                        </xsl:for-each>
                    </ns11:ZainIndividualList>
                    <ns11:ZainCustomerAccountList>
                        <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfCutAddress/pfx35:CutAddress">
                            <ZainCustomerAccount>
                                <xsl:if test="../../pfx35:AccountStatus">
                                    <accountStatus>
                                        <xsl:value-of select="../../pfx35:AccountStatus"/>
                                    </accountStatus>
                                </xsl:if>
                                <xsl:if test="pfx35:Id">
                                    <ID>
                                        <xsl:value-of select="pfx35:Id"/>
                                    </ID>
                                </xsl:if>
                                <ns11:EmployeeIdentifier>
                                    <EmployeeId>
                                        <ns11:systemName>
                                            <xsl:value-of select="'BSCS'"/>
                                        </ns11:systemName>
                                        <xsl:if test="../../pfx35:RelationshipId">
                                            <ns11:value>
                                                <xsl:value-of select="../../pfx35:RelationshipId"/>
                                            </ns11:value>
                                        </xsl:if>
                                    </EmployeeId>
                                </ns11:EmployeeIdentifier>
                                <xsl:if test="../../pfx35:CBiO2AccountSequenceNumber">
                                    <crmCustomerId>
                                        <xsl:value-of select="../../pfx35:CBiO2AccountSequenceNumber"/>
                                    </crmCustomerId>
                                </xsl:if>
                            </ZainCustomerAccount>
                        </xsl:for-each>
                    </ns11:ZainCustomerAccountList>
                    <ns11:Organization>
                        <OrganizationIdentification/>
                    </ns11:Organization>
                </pfx34:ModifyCustomerReq>
            </pfx34:ModifyCustomerreq>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>755</pd:x>
        <pd:y>181</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx36:ModifyCustomerres"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetResponseCode">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>921</pd:x>
        <pd:y>108</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1211</pd:x>
        <pd:y>181</pd:y>
        <config>
            <element ref="pfx32:ListOfCBiO2AddressModificationResIO"/>
        </config>
        <pd:inputBindings>
            <pfx32:ListOfCBiO2AddressModificationResIO>
                <xsl:choose>
                    <xsl:when test="not(exists($Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:Response/ResponseCode))">
                        <pfx32:Account>
                            <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                                <pfx32:Id>
                                    <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                                </pfx32:Id>
                            </xsl:if>
                            <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId">
                                <pfx32:CBiO2BSCSId>
                                    <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId"/>
                                </pfx32:CBiO2BSCSId>
                            </xsl:if>
                            <pfx32:ListOfCutAddress>
                                <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfCutAddress/pfx35:CutAddress">
                                    <pfx32:CutAddress>
                                        <xsl:if test="pfx35:Id">
                                            <pfx32:Id>
                                                <xsl:value-of select="pfx35:Id"/>
                                            </pfx32:Id>
                                        </xsl:if>
                                        <xsl:if test="if(exists(pfx35:CBiO2BSCSId) and string-length(pfx35:CBiO2BSCSId)>0)&#xA;then&#xA;pfx35:CBiO2BSCSId&#xA;else&#xA;$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:ZainAddress[1]/seqNumber">
                                            <pfx32:CBiOBSCSId>
                                                <xsl:value-of select="if(exists(pfx35:CBiO2BSCSId) and string-length(pfx35:CBiO2BSCSId)>0)&#xA;then&#xA;pfx35:CBiO2BSCSId&#xA;else&#xA;$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:ZainAddress[1]/seqNumber"/>
                                            </pfx32:CBiOBSCSId>
                                        </xsl:if>
                                        <pfx32:CBiO2ActionPerformed>
                                            <xsl:value-of select="&quot;&quot;"/>
                                        </pfx32:CBiO2ActionPerformed>
                                        <pfx32:Status>
                                            <xsl:value-of select="&quot;Success&quot;"/>
                                        </pfx32:Status>
                                    </pfx32:CutAddress>
                                </xsl:for-each>
                            </pfx32:ListOfCutAddress>
                        </pfx32:Account>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx32:Account>
                            <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                                <pfx32:Id>
                                    <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                                </pfx32:Id>
                            </xsl:if>
                            <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId">
                                <pfx32:CBiO2BSCSId>
                                    <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId"/>
                                </pfx32:CBiO2BSCSId>
                            </xsl:if>
                            <pfx32:ListOfCutAddress>
                                <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfCutAddress/pfx35:CutAddress">
                                    <pfx32:CutAddress>
                                        <xsl:if test="pfx35:Id">
                                            <pfx32:Id>
                                                <xsl:value-of select="pfx35:Id"/>
                                            </pfx32:Id>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2BSCSId">
                                            <pfx32:CBiOBSCSId>
                                                <xsl:value-of select="pfx35:CBiO2BSCSId"/>
                                            </pfx32:CBiOBSCSId>
                                        </xsl:if>
                                        <pfx32:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx32:CBiO2ActionPerformed>
                                        <pfx32:ErrorSourceErrDesc>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorSourceErrDesc"/>
                                        </pfx32:ErrorSourceErrDesc>
                                        <pfx32:ErrorUserErrDesc>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorUserErrDesc"/>
                                        </pfx32:ErrorUserErrDesc>
                                        <pfx32:ErrorSourceSystem>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorSourceSystem"/>
                                        </pfx32:ErrorSourceSystem>
                                        <pfx32:ErrorSourceErrCode>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorSourceErrCode"/>
                                        </pfx32:ErrorSourceErrCode>
                                        <pfx32:ErrorUserErrCode>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorUserErrCode"/>
                                        </pfx32:ErrorUserErrCode>
                                        <pfx32:ErrorType>
                                            <xsl:value-of select="$Call_Error_Process/root/ErrorType"/>
                                        </pfx32:ErrorType>
                                        <pfx32:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx32:ErrorOccuranceTime>
                                        <pfx32:Status>
                                            <xsl:value-of select="&quot;Failed&quot;"/>
                                        </pfx32:Status>
                                    </pfx32:CutAddress>
                                </xsl:for-each>
                            </pfx32:ListOfCutAddress>
                        </pfx32:Account>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx32:ListOfCBiO2AddressModificationResIO>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_Error_Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1067</pd:x>
        <pd:y>180</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="'BSCS'"/>
                </SourceSystem>
                <ChannelType>
                    <xsl:value-of select="'Internal'"/>
                </ChannelType>
                <xsl:if test="$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:Response/ResponseCode">
                    <ResponseCode>
                        <xsl:value-of select="$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:Response/ResponseCode"/>
                    </ResponseCode>
                </xsl:if>
                <xsl:if test="$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:Response/ResponseDescription">
                    <ResponseDescription>
                        <xsl:value-of select="$Parse-XML/pfx36:ModifyCustomerres/pfx36:ModifyCustomerRes/ns11:Response/ResponseDescription"/>
                    </ResponseDescription>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:xpathDescription>ESI-Call</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Call_Error_Process</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResponseCode</pd:from>
        <pd:to>Call_Error_Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Error_Process</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>GetResponseCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>1=2</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>