<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx44="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx42="qqwe" xmlns:pfx43="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.tibco.com/schemas/GW/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd" xmlns:pfx40="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" xmlns:pfx39="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2BillingProfileModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2PaymentProfileModificationResIO.xsd"/>
    <xsd:import namespace="qqwe" schemaLocation="/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationIo.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/BPI_Call.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>140</pd:startX>
    <pd:startY>178</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:copy-of select="$MapFinalResponse/pfx40:ListOfCBiO2PaymentProfileModificationResIO"/>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx40:ListOfCBiO2PaymentProfileModificationResIO"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1416</pd:endX>
    <pd:endY>387</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>603</pd:x>
        <pd:y>179</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PPUpdate/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Message>
                    <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </ns6:AltKeyName>
                            <xsl:if test="pfx35:AccountNumber2">
                                <ns6:AltKeyValue>
                                    <xsl:value-of select="pfx35:AccountNumber2"/>
                                </ns6:AltKeyValue>
                            </xsl:if>
                        </ns6:AltKey>
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </ns6:AltKeyName>
                            <ns6:AltKeyValue>
                                <xsl:value-of select="concat(tib:left(pfx35:AccountNumber2,6),'XXXXXX',tib:right(pfx35:AccountNumber2,4))"/>
                            </ns6:AltKeyValue>
                        </ns6:AltKey>
                    </xsl:for-each>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>267</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <xsl:if test="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PPUpdate/ComponentName">
                        <ns6:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PPUpdate/ComponentName"/>
                        </ns6:ComponentName>
                    </xsl:if>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Start/root/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx43:UpdatePaymentProfileRequest)"/>
                    </ns6:Transaction>
                    <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </ns6:AltKeyName>
                            <xsl:if test="pfx35:AccountNumber2">
                                <ns6:AltKeyValue>
                                    <xsl:value-of select="pfx35:AccountNumber2"/>
                                </ns6:AltKeyValue>
                            </xsl:if>
                        </ns6:AltKey>
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </ns6:AltKeyName>
                            <ns6:AltKeyValue>
                                <xsl:value-of select="concat(tib:left(pfx35:AccountNumber2,6),'XXXXXX',tib:right(pfx35:AccountNumber2,4))"/>
                            </ns6:AltKeyValue>
                        </ns6:AltKey>
                    </xsl:for-each>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>935</pd:x>
        <pd:y>179</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <xsl:if test="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msg">
                    <message>
                        <xsl:value-of select="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msgCode">
                    <messageCode>
                        <xsl:value-of select="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msgCode"/>
                    </messageCode>
                </xsl:if>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>428</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx43:UpdatePaymentProfileRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PPUpdate/BPI_Request_PPUpdateQueue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="0"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>301</pd:y>
        <config>
            <element ref="pfx43:UpdatePaymentProfileRequest"/>
        </config>
        <pd:inputBindings>
            <pfx43:UpdatePaymentProfileRequest>
                <ns11:BusinessMessageHeader>
                    <Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </Timestamp>
                    <ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ApplicationID>
                    <Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </Hostname>
                    <TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </TransactionDomain>
                    <TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </TransactionType>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                </ns11:BusinessMessageHeader>
                <ns11:ZainCustomerAccountList>
                    <ZainCustomerAccount>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2AccountSequenceNumber">
                            <ID>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2AccountSequenceNumber"/>
                            </ID>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2CustomerPPBSCSID">
                            <costCodePub>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2CustomerPPBSCSID"/>
                            </costCodePub>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2CustomerPaymentProfId">
                            <costId>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2CustomerPaymentProfId"/>
                            </costId>
                        </xsl:if>
                        <level>
                            <xsl:value-of select="if($ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2CustomerPPCD='Customer Level Payment') then 'Customer' else 'Line'"/>
                        </level>
                        <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                            <ZainCustomerPayment>
                                <xsl:if test="current()/pfx35:Id">
                                    <ID>
                                        <xsl:value-of select="current()/pfx35:Id"/>
                                    </ID>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx35:CBiO2StartDate) and string-length(current()/pfx35:CBiO2StartDate)>0">
                                    <paymentDate>
                                        <xsl:value-of select="tib:parse-date('MM/dd/yyyy',current()/pfx35:CBiO2StartDate)"/>
                                    </paymentDate>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx35:CBiO2EndDate) and string-length(current()/pfx35:CBiO2EndDate)>0">
                                    <paymentReceiptDate>
                                        <xsl:value-of select="tib:parse-date('MM/dd/yyyy',current()/pfx35:CBiO2EndDate)"/>
                                    </paymentReceiptDate>
                                </xsl:if>
                                <xsl:if test="current()/pfx35:CBiO2BSCSId">
                                    <ID_Public>
                                        <xsl:value-of select="current()/pfx35:CBiO2BSCSId"/>
                                    </ID_Public>
                                </xsl:if>
                                <ns11:Status>
                                    <xsl:value-of select="current()/pfx35:ErrorStatus"/>
                                </ns11:Status>
                                <ns11:Level>
                                    <xsl:value-of select="if(current()/pfx35:CBiO2CustomerPPCD='Customer Level Payment') then 'Customer' else 'Line'"/>
                                </ns11:Level>
                                <xsl:if test="string-length(current()/pfx35:CBiO2BSCSId)>0">
                                    <ns11:ModificationFlag>
                                        <ns11:Name>
                                            <xsl:value-of select="'1'"/>
                                        </ns11:Name>
                                        <ns11:Value>
                                            <xsl:value-of select="'CardChange'"/>
                                        </ns11:Value>
                                    </ns11:ModificationFlag>
                                </xsl:if>
                                <xsl:if test="current()/pfx35:CBiO2CardType">
                                    <cardtype>
                                        <xsl:value-of select="current()/pfx35:CBiO2CardType"/>
                                    </cardtype>
                                </xsl:if>
                                <PaymentMethod>
                                    <xsl:if test="current()/pfx35:CBiO2CCCompanyName">
                                        <name>
                                            <xsl:value-of select="current()/pfx35:CBiO2CCCompanyName"/>
                                        </name>
                                    </xsl:if>
                                    <xsl:if test="current()/pfx35:PaymentProfileType">
                                        <paymentMethodType>
                                            <xsl:value-of select="current()/pfx35:PaymentProfileType"/>
                                        </paymentMethodType>
                                    </xsl:if>
                                    <CreditCardPM>
                                        <xsl:if test="pfx35:AccountNumber2">
                                            <creditCardNumber>
                                                <xsl:value-of select="pfx35:AccountNumber2"/>
                                            </creditCardNumber>
                                        </xsl:if>
                                        <xsl:if test="current()/pfx35:ExpirationMonth">
                                            <ExpirationMonth>
                                                <xsl:value-of select="current()/pfx35:ExpirationMonth"/>
                                            </ExpirationMonth>
                                        </xsl:if>
                                        <xsl:if test="current()/pfx35:ExpirationYear">
                                            <ExpirationYear>
                                                <xsl:value-of select="current()/pfx35:ExpirationYear"/>
                                            </ExpirationYear>
                                        </xsl:if>
                                    </CreditCardPM>
                                    <ZainBankPM>
                                        <accountNumber>
                                            <xsl:value-of select="current()/pfx35:AccountNumber2"/>
                                        </accountNumber>
                                        <accountowner>
                                            <xsl:value-of select="current()/pfx35:AccountHolder"/>
                                        </accountowner>
                                        <BankName>
                                            <xsl:value-of select="current()/pfx35:AccountBankName"/>
                                        </BankName>
                                        <xsl:if test="current()/pfx35:AccountBankBranch">
                                            <BankBranchName>
                                                <xsl:value-of select="current()/pfx35:AccountBankBranch"/>
                                            </BankBranchName>
                                        </xsl:if>
                                    </ZainBankPM>
                                </PaymentMethod>
                                <BillingAddressId>
                                    <xsl:if test="current()/pfx35:CBiO2BillProfileBSCSId">
                                        <ns11:value>
                                            <xsl:value-of select="current()/pfx35:CBiO2BillProfileBSCSId"/>
                                        </ns11:value>
                                    </xsl:if>
                                </BillingAddressId>
                            </ZainCustomerPayment>
                        </xsl:for-each>
                        <AccountNumber>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2AccountSequenceNumber"/>
                        </AccountNumber>
                    </ZainCustomerAccount>
                </ns11:ZainCustomerAccountList>
            </pfx43:UpdatePaymentProfileRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>744</pd:x>
        <pd:y>179</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx44:UpdatePaymentProfileResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>144</pd:x>
        <pd:y>299</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx35:SiebelMessage"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>557</pd:x>
        <pd:y>273</pd:y>
        <pd:width>494</pd:width>
        <pd:height>226</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$ParseResponse/pfx44:UpdatePaymentProfileResponse/pfx44:resultlist</pd:over>
            <pd:iterationElementSlot>pp_res</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>CDMmap</pd:outSlot>
            <pd:activityOutputName>CDMToNative</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNative_old</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNative</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetResponseCodes-1</pd:from>
            <pd:to>CDMToNative</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>GetResponseCodes-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($pp_res/pfx44:resultlist/ns11:Response/ResponseCode) and $pp_res/pfx44:resultlist/ns11:Response/ResponseCode!=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>CDMToNative</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetResponseCodes-1</pd:from>
            <pd:to>CDMToNative_old</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>1=2</pd:xpath>
        </pd:transition>
        <pd:activity name="CDMToNative_old">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>895</pd:x>
            <pd:y>346</pd:y>
            <config>
                <element ref="pfx40:ListOfCBiO2PaymentProfileModificationResIO"/>
            </config>
            <pd:inputBindings>
                <pfx40:ListOfCBiO2PaymentProfileModificationResIO>
                    <pfx40:Account>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                            <pfx40:Id>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                            </pfx40:Id>
                        </xsl:if>
                        <pfx40:CBiO2BSCSId>
                            <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId"/>
                        </pfx40:CBiO2BSCSId>
                        <pfx40:ListOfOrganizationPaymentProfile>
                            <xsl:for-each select="$ParseResponse/pfx44:UpdatePaymentProfileResponse/pfx44:resultlist">
                                <xsl:choose>
                                    <xsl:when test="current()/ns11:Response/ResponseCode=0">
                                        <pfx40:OrganizationPaymentProfile>
                                            <xsl:if test="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value">
                                                <pfx40:Id>
                                                    <xsl:value-of select="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value"/>
                                                </pfx40:Id>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value">
                                                <pfx40:CBiO2BSCSId>
                                                    <xsl:value-of select="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value"/>
                                                </pfx40:CBiO2BSCSId>
                                            </xsl:if>
                                            <pfx40:CBiO2ActionPerformed>
                                                <xsl:value-of select="''"/>
                                            </pfx40:CBiO2ActionPerformed>
                                            <pfx40:Status>
                                                <xsl:value-of select="&quot;Success&quot;"/>
                                            </pfx40:Status>
                                        </pfx40:OrganizationPaymentProfile>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx40:OrganizationPaymentProfile>
                                            <xsl:if test="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value">
                                                <pfx40:Id>
                                                    <xsl:value-of select="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value"/>
                                                </pfx40:Id>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value">
                                                <pfx40:CBiO2BSCSId>
                                                    <xsl:value-of select="ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value"/>
                                                </pfx40:CBiO2BSCSId>
                                            </xsl:if>
                                            <pfx40:CBiO2ActionPerformed>
                                                <xsl:value-of select="''"/>
                                            </pfx40:CBiO2ActionPerformed>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorAdditionalDesc1">
                                                <pfx40:ErrorAdditionalDesc1>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorAdditionalDesc1"/>
                                                </pfx40:ErrorAdditionalDesc1>
                                            </xsl:if>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorAdditionalDesc2">
                                                <pfx40:ErrorAdditionalDesc2>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorAdditionalDesc2"/>
                                                </pfx40:ErrorAdditionalDesc2>
                                            </xsl:if>
                                            <xsl:if test="$pp_res/pfx44:resultlist/ns11:Response/ResponseDescription">
                                                <pfx40:ErrorSourceErrDesc>
                                                    <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseDescription"/>
                                                </pfx40:ErrorSourceErrDesc>
                                            </xsl:if>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorUserErrDesc">
                                                <pfx40:ErrorUserErrDesc>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorUserErrDesc"/>
                                                </pfx40:ErrorUserErrDesc>
                                            </xsl:if>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorSourceSystem">
                                                <pfx40:ErrorSourceSystem>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorSourceSystem"/>
                                                </pfx40:ErrorSourceSystem>
                                            </xsl:if>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorUserErrCode">
                                                <pfx40:ErrorUserErrCode>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorUserErrCode"/>
                                                </pfx40:ErrorUserErrCode>
                                            </xsl:if>
                                            <xsl:if test="$pp_res/pfx44:resultlist/ns11:Response/ResponseCode">
                                                <pfx40:ErrorSourceErrCode>
                                                    <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseCode"/>
                                                </pfx40:ErrorSourceErrCode>
                                            </xsl:if>
                                            <pfx40:ErrorOccuranceTime>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorOccuranceTime"/>
                                            </pfx40:ErrorOccuranceTime>
                                            <xsl:if test="$GetResponseCodes-1/root/ErrorType">
                                                <pfx40:ErrorType>
                                                    <xsl:value-of select="$GetResponseCodes-1/root/ErrorType"/>
                                                </pfx40:ErrorType>
                                            </xsl:if>
                                            <pfx40:Status>
                                                <xsl:value-of select="if (current()/ns11:Response/ResponseRefernces/Reference[1]/Value)&#xA;then current()/ns11:Response/ResponseRefernces/Reference[1]/Value&#xA;else &quot;Failed&quot;"/>
                                            </pfx40:Status>
                                        </pfx40:OrganizationPaymentProfile>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:for-each>
                            <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                                <xsl:variable name="var" select="current()/pfx35:Id"/>
                                <xsl:if test="contains($ParseResponse/pfx44:UpdatePaymentProfileResponse,$var)=0">
                                    <pfx40:OrganizationPaymentProfile>
                                        <xsl:if test="$var">
                                            <pfx40:Id>
                                                <xsl:value-of select="$var"/>
                                            </pfx40:Id>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2BSCSId">
                                            <pfx40:CBiO2BSCSId>
                                                <xsl:value-of select="pfx35:CBiO2BSCSId"/>
                                            </pfx40:CBiO2BSCSId>
                                        </xsl:if>
                                        <pfx40:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx40:CBiO2ActionPerformed>
                                    </pfx40:OrganizationPaymentProfile>
                                </xsl:if>
                            </xsl:for-each>
                        </pfx40:ListOfOrganizationPaymentProfile>
                    </pfx40:Account>
                </pfx40:ListOfCBiO2PaymentProfileModificationResIO>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetResponseCodes-1">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>761</pd:x>
            <pd:y>340</pd:y>
            <config>
                <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <SourceSystem>
                        <xsl:value-of select="'BSCS'"/>
                    </SourceSystem>
                    <ResponseCode>
                        <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseCode"/>
                    </ResponseCode>
                    <ResponseDescription>
                        <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseDescription"/>
                    </ResponseDescription>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>684</pd:x>
            <pd:y>437</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="CDMToNative">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>900</pd:x>
            <pd:y>423</pd:y>
            <config>
                <element ref="pfx40:ListOfCBiO2PaymentProfileModificationResIO"/>
            </config>
            <pd:inputBindings>
                <pfx40:ListOfCBiO2PaymentProfileModificationResIO>
                    <pfx40:Account>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id">
                            <pfx40:Id>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:Id"/>
                            </pfx40:Id>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId">
                            <pfx40:CBiO2BSCSId>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2CustomerCreationIo/pfx35:Account[1]/pfx35:CBiO2BSCSId"/>
                            </pfx40:CBiO2BSCSId>
                        </xsl:if>
                        <pfx40:ListOfOrganizationPaymentProfile>
                            <xsl:choose>
                                <xsl:when test="exists($GetResponseCodes-1/root)">
                                    <pfx40:OrganizationPaymentProfile>
                                        <pfx40:Id>
                                            <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value"/>
                                        </pfx40:Id>
                                        <xsl:if test="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value">
                                            <pfx40:CBiO2BSCSId>
                                                <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value"/>
                                            </pfx40:CBiO2BSCSId>
                                        </xsl:if>
                                        <pfx40:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx40:CBiO2ActionPerformed>
                                        <xsl:if test="$GetResponseCodes-1/root/ErrorAdditionalDesc1">
                                            <pfx40:ErrorAdditionalDesc1>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorAdditionalDesc1"/>
                                            </pfx40:ErrorAdditionalDesc1>
                                        </xsl:if>
                                        <xsl:if test="$GetResponseCodes-1/root/ErrorAdditionalDesc2">
                                            <pfx40:ErrorAdditionalDesc2>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorAdditionalDesc2"/>
                                            </pfx40:ErrorAdditionalDesc2>
                                        </xsl:if>
                                        <xsl:if test="$pp_res/pfx44:resultlist/ns11:Response/ResponseDescription">
                                            <pfx40:ErrorSourceErrDesc>
                                                <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseDescription"/>
                                            </pfx40:ErrorSourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="$GetResponseCodes-1/root/ErrorUserErrDesc">
                                            <pfx40:ErrorUserErrDesc>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorUserErrDesc"/>
                                            </pfx40:ErrorUserErrDesc>
                                        </xsl:if>
                                        <pfx40:ErrorSourceSystem>
                                            <xsl:value-of select="$GetResponseCodes-1/root/ErrorSourceSystem"/>
                                        </pfx40:ErrorSourceSystem>
                                        <xsl:if test="$GetResponseCodes-1/root/ErrorUserErrCode">
                                            <pfx40:ErrorUserErrCode>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorUserErrCode"/>
                                            </pfx40:ErrorUserErrCode>
                                        </xsl:if>
                                        <xsl:if test="$pp_res/pfx44:resultlist/ns11:Response/ResponseCode">
                                            <pfx40:ErrorSourceErrCode>
                                                <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:Response/ResponseCode"/>
                                            </pfx40:ErrorSourceErrCode>
                                        </xsl:if>
                                        <pfx40:ErrorOccuranceTime>
                                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', current-dateTime())"/>
                                        </pfx40:ErrorOccuranceTime>
                                        <xsl:if test="$GetResponseCodes-1/root/ErrorType">
                                            <pfx40:ErrorType>
                                                <xsl:value-of select="$GetResponseCodes-1/root/ErrorType"/>
                                            </pfx40:ErrorType>
                                        </xsl:if>
                                        <pfx40:Status>
                                            <xsl:value-of select="'Failed'"/>
                                        </pfx40:Status>
                                    </pfx40:OrganizationPaymentProfile>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx40:OrganizationPaymentProfile>
                                        <pfx40:Id>
                                            <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='CRM']/ns11:value"/>
                                        </pfx40:Id>
                                        <xsl:if test="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value">
                                            <pfx40:CBiO2BSCSId>
                                                <xsl:value-of select="$pp_res/pfx44:resultlist/ns11:ZainIdentifiers/ns11:paymentId[ns11:systemName='BSCS']/ns11:value"/>
                                            </pfx40:CBiO2BSCSId>
                                        </xsl:if>
                                        <pfx40:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx40:CBiO2ActionPerformed>
                                        <pfx40:Status>
                                            <xsl:value-of select="'Success'"/>
                                        </pfx40:Status>
                                    </pfx40:OrganizationPaymentProfile>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx40:ListOfOrganizationPaymentProfile>
                    </pfx40:Account>
                </pfx40:ListOfCBiO2PaymentProfileModificationResIO>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="MapFinalResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1220</pd:x>
        <pd:y>386</pd:y>
        <config>
            <element ref="pfx40:ListOfCBiO2PaymentProfileModificationResIO"/>
        </config>
        <pd:inputBindings>
            <pfx40:ListOfCBiO2PaymentProfileModificationResIO>
                <pfx40:Account>
                    <xsl:if test="$CDMmap/AccumulatedOutput/pfx40:ListOfCBiO2PaymentProfileModificationResIO[1]/pfx40:Account[1]/pfx40:Id">
                        <pfx40:Id>
                            <xsl:value-of select="$CDMmap/AccumulatedOutput/pfx40:ListOfCBiO2PaymentProfileModificationResIO[1]/pfx40:Account[1]/pfx40:Id"/>
                        </pfx40:Id>
                    </xsl:if>
                    <xsl:if test="$CDMmap/AccumulatedOutput/pfx40:ListOfCBiO2PaymentProfileModificationResIO[1]/pfx40:Account[1]/pfx40:CBiO2BSCSId">
                        <pfx40:CBiO2BSCSId>
                            <xsl:value-of select="$CDMmap/AccumulatedOutput/pfx40:ListOfCBiO2PaymentProfileModificationResIO[1]/pfx40:Account[1]/pfx40:CBiO2BSCSId"/>
                        </pfx40:CBiO2BSCSId>
                    </xsl:if>
                    <pfx40:ListOfOrganizationPaymentProfile>
                        <xsl:for-each select="$CDMmap/AccumulatedOutput/pfx40:ListOfCBiO2PaymentProfileModificationResIO">
                            <pfx40:OrganizationPaymentProfile>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:Id">
                                    <pfx40:Id>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:Id"/>
                                    </pfx40:Id>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:CBiO2BSCSId">
                                    <pfx40:CBiO2BSCSId>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:CBiO2BSCSId"/>
                                    </pfx40:CBiO2BSCSId>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:CBiO2ActionPerformed">
                                    <pfx40:CBiO2ActionPerformed>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:CBiO2ActionPerformed"/>
                                    </pfx40:CBiO2ActionPerformed>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorAdditionalDesc1">
                                    <pfx40:ErrorAdditionalDesc1>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorAdditionalDesc1"/>
                                    </pfx40:ErrorAdditionalDesc1>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorAdditionalDesc2">
                                    <pfx40:ErrorAdditionalDesc2>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorAdditionalDesc2"/>
                                    </pfx40:ErrorAdditionalDesc2>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceErrDesc">
                                    <pfx40:ErrorSourceErrDesc>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceErrDesc"/>
                                    </pfx40:ErrorSourceErrDesc>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorUserErrDesc">
                                    <pfx40:ErrorUserErrDesc>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorUserErrDesc"/>
                                    </pfx40:ErrorUserErrDesc>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceSystem">
                                    <pfx40:ErrorSourceSystem>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceSystem"/>
                                    </pfx40:ErrorSourceSystem>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorUserErrCode">
                                    <pfx40:ErrorUserErrCode>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorUserErrCode"/>
                                    </pfx40:ErrorUserErrCode>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceErrCode">
                                    <pfx40:ErrorSourceErrCode>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorSourceErrCode"/>
                                    </pfx40:ErrorSourceErrCode>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorOccuranceTime">
                                    <pfx40:ErrorOccuranceTime>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorOccuranceTime"/>
                                    </pfx40:ErrorOccuranceTime>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorType">
                                    <pfx40:ErrorType>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:ErrorType"/>
                                    </pfx40:ErrorType>
                                </xsl:if>
                                <xsl:if test="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:Status">
                                    <pfx40:Status>
                                        <xsl:value-of select="current()/pfx40:Account[1]/pfx40:ListOfOrganizationPaymentProfile/pfx40:OrganizationPaymentProfile[1]/pfx40:Status"/>
                                    </pfx40:Status>
                                </xsl:if>
                            </pfx40:OrganizationPaymentProfile>
                        </xsl:for-each>
                    </pfx40:ListOfOrganizationPaymentProfile>
                </pfx40:Account>
            </pfx40:ListOfCBiO2PaymentProfileModificationResIO>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorEMSReceive">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>434</pd:x>
        <pd:y>281</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSReceiveErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:xpathDescription>ESI-Call</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>MapFinalResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapFinalResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>ErrorEMSReceive</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3394816</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>