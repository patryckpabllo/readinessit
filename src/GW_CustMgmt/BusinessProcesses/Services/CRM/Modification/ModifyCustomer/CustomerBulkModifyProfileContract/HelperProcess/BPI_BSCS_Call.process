<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx131="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns91="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx141="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx51="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx46="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx44="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx45="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx42="qqwe" xmlns:pfx43="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.tibco.com/schemas/GW/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd" xmlns:pfx40="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" xmlns:ns71="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx39="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:ns61="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx161="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx310="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx311="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:pfx121="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns81="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx71="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns72="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx151="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationResIo.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2BulkBillingProfileModificationReq.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2BulkBillingProfileModificationRes.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Modification/ModifyCustomer/CustomerBulkModifyProfileContract/HelperProcess/BPI_BSCS_Call.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                    <xsd:element name="InterfaceID" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>138</pd:startX>
    <pd:startY>96</pd:startY>
    <pd:returnBindings>
        <pfx39:ListOfCbio2BulkBillingProfileModificationRes>
            <xsl:for-each select="$Map-Data-1/pfx45:ListOfCbio2CustomerCreationResIo/pfx45:Account">
                <pfx39:Account>
                    <xsl:if test="pfx45:Id">
                        <pfx39:Id>
                            <xsl:value-of select="pfx45:Id"/>
                        </pfx39:Id>
                    </xsl:if>
                    <xsl:if test="pfx45:CBiO2BSCSId">
                        <pfx39:CBiO2BSCSId>
                            <xsl:value-of select="pfx45:CBiO2BSCSId"/>
                        </pfx39:CBiO2BSCSId>
                    </xsl:if>
                    <xsl:for-each select="pfx45:ListOfComInvoiceProfile">
                        <pfx39:ListOfComInvoiceProfile>
                            <xsl:for-each select="pfx45:ComInvoiceProfile">
                                <pfx39:ComInvoiceProfile>
                                    <xsl:if test="pfx45:Id">
                                        <pfx39:Id>
                                            <xsl:value-of select="pfx45:Id"/>
                                        </pfx39:Id>
                                    </xsl:if>
                                    <pfx39:BatchFlag>
                                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:ListOfComInvoiceProfile/pfx35:ComInvoiceProfile[1]/pfx35:BatchFlag"/>
                                    </pfx39:BatchFlag>
                                    <xsl:if test="pfx45:CBiO2BSCSId">
                                        <pfx39:CBiO2BSCSId>
                                            <xsl:value-of select="pfx45:CBiO2BSCSId"/>
                                        </pfx39:CBiO2BSCSId>
                                    </xsl:if>
                                    <xsl:if test="pfx45:Status='Success'">
                                        <pfx39:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx39:CBiO2ActionPerformed>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorAdditionalDesc1">
                                        <pfx39:ErrorAdditionalDesc1>
                                            <xsl:value-of select="pfx45:ErrorAdditionalDesc1"/>
                                        </pfx39:ErrorAdditionalDesc1>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorAdditionalDesc2">
                                        <pfx39:ErrorAdditionalDesc2>
                                            <xsl:value-of select="pfx45:ErrorAdditionalDesc2"/>
                                        </pfx39:ErrorAdditionalDesc2>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceErrDesc">
                                        <pfx39:ErrorSourceErrDesc>
                                            <xsl:value-of select="pfx45:ErrorSourceErrDesc"/>
                                        </pfx39:ErrorSourceErrDesc>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorUserErrDesc">
                                        <pfx39:ErrorUserErrDesc>
                                            <xsl:value-of select="pfx45:ErrorUserErrDesc"/>
                                        </pfx39:ErrorUserErrDesc>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceSystem">
                                        <pfx39:ErrorSourceSystem>
                                            <xsl:value-of select="pfx45:ErrorSourceSystem"/>
                                        </pfx39:ErrorSourceSystem>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceErrCode">
                                        <pfx39:ErrorSourceErrCode>
                                            <xsl:value-of select="pfx45:ErrorSourceErrCode"/>
                                        </pfx39:ErrorSourceErrCode>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorUserErrCode">
                                        <pfx39:ErrorUserErrCode>
                                            <xsl:value-of select="pfx45:ErrorUserErrCode"/>
                                        </pfx39:ErrorUserErrCode>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorOccuranceTime">
                                        <pfx39:ErrorOccuranceTime>
                                            <xsl:value-of select="pfx45:ErrorOccuranceTime"/>
                                        </pfx39:ErrorOccuranceTime>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorType">
                                        <pfx39:ErrorType>
                                            <xsl:value-of select="pfx45:ErrorType"/>
                                        </pfx39:ErrorType>
                                    </xsl:if>
                                    <xsl:if test="pfx45:Status">
                                        <pfx39:Status>
                                            <xsl:value-of select="pfx45:Status"/>
                                        </pfx39:Status>
                                    </xsl:if>
                                </pfx39:ComInvoiceProfile>
                            </xsl:for-each>
                        </pfx39:ListOfComInvoiceProfile>
                    </xsl:for-each>
                    <xsl:for-each select="pfx45:ListOfOrganizationPaymentProfile">
                        <pfx39:ListOfOrganizationPaymentProfile>
                            <xsl:for-each select="pfx45:OrganizationPaymentProfile">
                                <pfx39:OrganizationPaymentProfile>
                                    <xsl:if test="pfx45:Id">
                                        <pfx39:Id>
                                            <xsl:value-of select="pfx45:Id"/>
                                        </pfx39:Id>
                                    </xsl:if>
                                    <xsl:if test="pfx45:CBiO2BSCSId">
                                        <pfx39:CBiO2BSCSId>
                                            <xsl:value-of select="pfx45:CBiO2BSCSId"/>
                                        </pfx39:CBiO2BSCSId>
                                    </xsl:if>
                                    <xsl:if test="pfx45:Status='Sucess'">
                                        <pfx39:CBiO2ActionPerformed>
                                            <xsl:value-of select="''"/>
                                        </pfx39:CBiO2ActionPerformed>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorAdditionalDesc1">
                                        <pfx39:ErrorAdditionalDesc1>
                                            <xsl:value-of select="pfx45:ErrorAdditionalDesc1"/>
                                        </pfx39:ErrorAdditionalDesc1>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorAdditionalDesc2">
                                        <pfx39:ErrorAdditionalDesc2>
                                            <xsl:value-of select="pfx45:ErrorAdditionalDesc2"/>
                                        </pfx39:ErrorAdditionalDesc2>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceErrDesc">
                                        <pfx39:ErrorSourceErrDesc>
                                            <xsl:value-of select="pfx45:ErrorSourceErrDesc"/>
                                        </pfx39:ErrorSourceErrDesc>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorUserErrDesc">
                                        <pfx39:ErrorUserErrDesc>
                                            <xsl:value-of select="pfx45:ErrorUserErrDesc"/>
                                        </pfx39:ErrorUserErrDesc>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceSystem">
                                        <pfx39:ErrorSourceSystem>
                                            <xsl:value-of select="pfx45:ErrorSourceSystem"/>
                                        </pfx39:ErrorSourceSystem>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorSourceErrCode">
                                        <pfx39:ErrorSourceErrCode>
                                            <xsl:value-of select="pfx45:ErrorSourceErrCode"/>
                                        </pfx39:ErrorSourceErrCode>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorUserErrCode">
                                        <pfx39:ErrorUserErrCode>
                                            <xsl:value-of select="pfx45:ErrorUserErrCode"/>
                                        </pfx39:ErrorUserErrCode>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorType">
                                        <pfx39:ErrorType>
                                            <xsl:value-of select="pfx45:ErrorType"/>
                                        </pfx39:ErrorType>
                                    </xsl:if>
                                    <xsl:if test="pfx45:ErrorOccuranceTime">
                                        <pfx39:ErrorOccuranceTime>
                                            <xsl:value-of select="pfx45:ErrorOccuranceTime"/>
                                        </pfx39:ErrorOccuranceTime>
                                    </xsl:if>
                                    <xsl:if test="pfx45:Status">
                                        <pfx39:Status>
                                            <xsl:value-of select="pfx45:Status"/>
                                        </pfx39:Status>
                                    </xsl:if>
                                </pfx39:OrganizationPaymentProfile>
                            </xsl:for-each>
                        </pfx39:ListOfOrganizationPaymentProfile>
                    </xsl:for-each>
                </pfx39:Account>
            </xsl:for-each>
        </pfx39:ListOfCbio2BulkBillingProfileModificationRes>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx39:ListOfCbio2BulkBillingProfileModificationRes"/>
    <pd:endX>1201</pd:endX>
    <pd:endY>477</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="ns7:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="Status" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>510</pd:x>
        <pd:y>122</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <xsl:if test="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/ComponentName">
                        <ns6:ComponentName>
                            <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/ComponentName"/>
                        </ns6:ComponentName>
                    </xsl:if>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:Id"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Start/root/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Transaction>
                    <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </ns6:AltKeyName>
                            <xsl:if test="pfx35:AccountNumber2">
                                <ns6:AltKeyValue>
                                    <xsl:value-of select="pfx35:AccountNumber2"/>
                                </ns6:AltKeyValue>
                            </xsl:if>
                        </ns6:AltKey>
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </ns6:AltKeyName>
                            <ns6:AltKeyValue>
                                <xsl:value-of select="concat(tib:left(pfx35:AccountNumber2,6),'XXXXXX',tib:right(pfx35:AccountNumber2,4))"/>
                            </ns6:AltKeyValue>
                        </ns6:AltKey>
                    </xsl:for-each>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>277</pd:x>
        <pd:y>188</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <xsl:if test="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/ComponentName">
                        <ns6:ComponentName>
                            <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/ComponentName"/>
                        </ns6:ComponentName>
                    </xsl:if>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$NativeToCDM/pfx37:CreateBillProcessRequest/ns11:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:Id"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Start/root/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx37:CreateBillProcessRequest)"/>
                    </ns6:Transaction>
                    <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account/pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </ns6:AltKeyName>
                            <xsl:if test="pfx35:AccountNumber2">
                                <ns6:AltKeyValue>
                                    <xsl:value-of select="pfx35:AccountNumber2"/>
                                </ns6:AltKeyValue>
                            </xsl:if>
                        </ns6:AltKey>
                        <ns6:AltKey>
                            <ns6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </ns6:AltKeyName>
                            <ns6:AltKeyValue>
                                <xsl:value-of select="concat(tib:left(pfx35:AccountNumber2,6),'XXXXXX',tib:right(pfx35:AccountNumber2,4))"/>
                            </ns6:AltKeyValue>
                        </ns6:AltKey>
                    </xsl:for-each>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1003</pd:x>
        <pd:y>194</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <ns7:ExceptionRequest>
                        <ns6:Header>
                            <ns6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns6:ApplicationID>
                            <ns6:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                            </ns6:ComponentName>
                            <ns6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns6:Hostname>
                            <ns6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns6:Timestamp>
                            <ns6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                            </ns6:TransactionDomain>
                            <ns6:TransactionType>
                                <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                            </ns6:TransactionType>
                            <ns6:TransactionID>
                                <xsl:value-of select="$Start/root/TransactionID"/>
                            </ns6:TransactionID>
                        </ns6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="&quot;100001&quot;"/>
                        </ExceptionCode>
                    </ns7:ExceptionRequest>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>411</pd:x>
        <pd:y>195</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx37:CreateBillProcessRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/BulkBillingProfile/BPI_Request_Bulk_Queue"/>
                </EMS_DestinationQueue>
                <EMS_ReplyToQueue>
                    <xsl:value-of select="''"/>
                </EMS_ReplyToQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/JMSTimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>143</pd:x>
        <pd:y>311</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx35:SiebelMessage"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>751</pd:x>
        <pd:y>192</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx37:CreateBillProcessRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>294</pd:x>
        <pd:y>312</pd:y>
        <config>
            <element ref="pfx37:CreateBillProcessRequest"/>
        </config>
        <pd:inputBindings>
            <pfx37:CreateBillProcessRequest>
                <ns11:BusinessMessageHeader>
                    <ExternalTransactionID>
                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/@MessageId"/>
                    </ExternalTransactionID>
                    <Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </Timestamp>
                    <ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ApplicationID>
                    <ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/BulkBillingProfile/ComponentName"/>
                    </ComponentName>
                    <Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </Hostname>
                    <TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </TransactionDomain>
                    <TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </TransactionType>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                </ns11:BusinessMessageHeader>
                <ns11:ZainCustomerAccountList>
                    <xsl:for-each select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account">
                        <ZainCustomerAccount>
                            <ID>
                                <xsl:value-of select="pfx35:CBiO2AccountSequenceNumber"/>
                            </ID>
                            <costCodePub>
                                <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:CBiO2CustomerPPBSCSID"/>
                            </costCodePub>
                            <xsl:if test="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:CBiO2CustomerPaymentProfId">
                                <costId>
                                    <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:CBiO2CustomerPaymentProfId"/>
                                </costId>
                            </xsl:if>
                            <level>
                                <xsl:value-of select="if ($ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account/pfx35:CBiO2CustomerPPCD = 'Customer Level Payment')&#xA;then&#xA;'Customer'&#xA;else&#xA;'Line'"/>
                            </level>
                            <mode>
                                <xsl:value-of select="pfx35:CBiO2CustomerLevel"/>
                            </mode>
                            <xsl:for-each select="pfx35:ListOfOrganizationPaymentProfile/pfx35:OrganizationPaymentProfile">
                                <ZainCustomerPayment>
                                    <xsl:if test="current()/pfx35:Id">
                                        <ID>
                                            <xsl:value-of select="current()/pfx35:Id"/>
                                        </ID>
                                    </xsl:if>
                                    <xsl:if test="exists(pfx35:CBiO2StartDate) and string-length(pfx35:CBiO2StartDate)>0">
                                        <paymentDate>
                                            <xsl:value-of select="tib:parse-date('MM/dd/yyyy',pfx35:CBiO2StartDate)"/>
                                        </paymentDate>
                                    </xsl:if>
                                    <xsl:if test="exists(pfx35:CBiO2EndDate) and string-length(pfx35:CBiO2EndDate)>0">
                                        <paymentReceiptDate>
                                            <xsl:value-of select="tib:parse-date('MM/dd/yyyy',pfx35:CBiO2EndDate)"/>
                                        </paymentReceiptDate>
                                    </xsl:if>
                                    <xsl:if test="current()/pfx35:CBiO2BSCSId">
                                        <ID_Public>
                                            <xsl:value-of select="current()/pfx35:CBiO2BSCSId"/>
                                        </ID_Public>
                                    </xsl:if>
                                    <xsl:if test="current()/pfx35:ErrorStatus">
                                        <ns11:Status>
                                            <xsl:value-of select="current()/pfx35:ErrorStatus"/>
                                        </ns11:Status>
                                    </xsl:if>
                                    <ns11:Level>
                                        <xsl:value-of select="if (pfx35:CBiO2CustomerPPCD = 'Customer Level Payment')&#xA;then&#xA;'Customer'&#xA;else&#xA;'Line'"/>
                                    </ns11:Level>
                                    <xsl:if test="string-length(current()/pfx35:CBiO2BSCSId)>0">
                                        <ns11:ModificationFlag>
                                            <ns11:Name>
                                                <xsl:value-of select="'1'"/>
                                            </ns11:Name>
                                            <ns11:Value>
                                                <xsl:value-of select="'CardChange'"/>
                                            </ns11:Value>
                                        </ns11:ModificationFlag>
                                    </xsl:if>
                                    <xsl:if test="current()/pfx35:CBiO2CardType">
                                        <cardtype>
                                            <xsl:value-of select="current()/pfx35:CBiO2CardType"/>
                                        </cardtype>
                                    </xsl:if>
                                    <PaymentMethod>
                                        <xsl:if test="pfx35:CBiO2CCCompanyName">
                                            <name>
                                                <xsl:value-of select="pfx35:CBiO2CCCompanyName"/>
                                            </name>
                                        </xsl:if>
                                        <xsl:if test="current()/pfx35:PaymentProfileType">
                                            <paymentMethodType>
                                                <xsl:value-of select="current()/pfx35:PaymentProfileType"/>
                                            </paymentMethodType>
                                        </xsl:if>
                                        <CreditCardPM>
                                            <xsl:if test="current()/pfx35:ExpirationMonth">
                                                <ExpirationMonth>
                                                    <xsl:value-of select="current()/pfx35:ExpirationMonth"/>
                                                </ExpirationMonth>
                                            </xsl:if>
                                            <xsl:if test="current()/pfx35:ExpirationYear">
                                                <ExpirationYear>
                                                    <xsl:value-of select="current()/pfx35:ExpirationYear"/>
                                                </ExpirationYear>
                                            </xsl:if>
                                        </CreditCardPM>
                                        <ZainBankPM>
                                            <accountNumber>
                                                <xsl:value-of select="current()/pfx35:AccountNumber2"/>
                                            </accountNumber>
                                            <accountowner>
                                                <xsl:value-of select="current()/pfx35:AccountHolder"/>
                                            </accountowner>
                                            <xsl:if test="pfx35:CBiO2BankBSCSId">
                                                <BankCode>
                                                    <xsl:value-of select="pfx35:CBiO2BankBSCSId"/>
                                                </BankCode>
                                            </xsl:if>
                                            <BankName>
                                                <xsl:value-of select="current()/pfx35:AccountBankName"/>
                                            </BankName>
                                            <xsl:if test="current()/pfx35:AccountBankBranch">
                                                <BankBranchName>
                                                    <xsl:value-of select="current()/pfx35:AccountBankBranch"/>
                                                </BankBranchName>
                                            </xsl:if>
                                        </ZainBankPM>
                                    </PaymentMethod>
                                    <ns11:CustomerBill>
                                        <ns11:billId>
                                            <xsl:if test="pfx35:CBiO2BillProfileId">
                                                <ns11:value>
                                                    <xsl:value-of select="pfx35:CBiO2BillProfileId"/>
                                                </ns11:value>
                                            </xsl:if>
                                        </ns11:billId>
                                    </ns11:CustomerBill>
                                    <BillingAddressId>
                                        <xsl:if test="current()/pfx35:CBiO2BillProfileBSCSId">
                                            <ns11:value>
                                                <xsl:value-of select="current()/pfx35:CBiO2BillProfileBSCSId"/>
                                            </ns11:value>
                                        </xsl:if>
                                    </BillingAddressId>
                                    <xsl:if test="pfx35:ErrorStatus">
                                        <CreditNote>
                                            <xsl:value-of select="pfx35:ErrorStatus"/>
                                        </CreditNote>
                                    </xsl:if>
                                </ZainCustomerPayment>
                            </xsl:for-each>
                            <xsl:for-each select="pfx35:ListOfComInvoiceProfile/pfx35:ComInvoiceProfile">
                                <CustomerBill>
                                    <xsl:if test="pfx35:Id">
                                        <billNo>
                                            <xsl:value-of select="pfx35:Id"/>
                                        </billNo>
                                    </xsl:if>
                                    <ns11:billId>
                                        <xsl:if test="pfx35:CBiO2BSCSId">
                                            <ns11:value>
                                                <xsl:value-of select="pfx35:CBiO2BSCSId"/>
                                            </ns11:value>
                                        </xsl:if>
                                    </ns11:billId>
                                    <ns11:paymentId>
                                        <xsl:if test="pfx35:CBiO2PaymentProfileId">
                                            <ns11:systemName>
                                                <xsl:value-of select="pfx35:CBiO2PaymentProfileId"/>
                                            </ns11:systemName>
                                        </xsl:if>
                                        <xsl:if test="pfx35:CBiO2PaymentProfileBSCSId">
                                            <ns11:value>
                                                <xsl:value-of select="pfx35:CBiO2PaymentProfileBSCSId"/>
                                            </ns11:value>
                                        </xsl:if>
                                    </ns11:paymentId>
                                    <ModIndicator>
                                        <xsl:value-of select="if((pfx35:CBiO2BPModificationIdentifier='NEW_CREATION' and current()/pfx35:CBiO2CustomerPPCD='Customer Level Payment') or pfx35:CBiO2BPModificationIdentifier='OnlyBPUpdate' ) then 0 else 1"/>
                                    </ModIndicator>
                                    <ns11:Level>
                                        <xsl:value-of select="if (pfx35:CBiO2CustomerPPCD = 'Customer Level Payment')&#xA;then 'Customer'&#xA;else&#xA;'Line'"/>
                                    </ns11:Level>
                                    <ns11:addressId>
                                        <xsl:if test="pfx35:CBiO2AddressBSCSId">
                                            <ns11:value>
                                                <xsl:value-of select="pfx35:CBiO2AddressBSCSId"/>
                                            </ns11:value>
                                        </xsl:if>
                                    </ns11:addressId>
                                    <xsl:if test="pfx35:ErrorStatus">
                                        <Format>
                                            <xsl:value-of select="pfx35:ErrorStatus"/>
                                        </Format>
                                    </xsl:if>
                                    <CustomerBillFormat>
                                        <CustomerBillPresentationMedia>
                                            <xsl:if test="pfx35:CBiO2InvoiceFormat">
                                                <name>
                                                    <xsl:value-of select="pfx35:CBiO2InvoiceFormat"/>
                                                </name>
                                            </xsl:if>
                                        </CustomerBillPresentationMedia>
                                    </CustomerBillFormat>
                                    <xsl:if test="pfx35:Status">
                                        <RequestType>
                                            <xsl:value-of select="pfx35:Status"/>
                                        </RequestType>
                                    </xsl:if>
                                    <xsl:if test="pfx35:ErrorStatus">
                                        <ns11:Status>
                                            <xsl:value-of select="pfx35:ErrorStatus"/>
                                        </ns11:Status>
                                    </xsl:if>
                                </CustomerBill>
                            </xsl:for-each>
                        </ZainCustomerAccount>
                    </xsl:for-each>
                </ns11:ZainCustomerAccountList>
            </pfx37:CreateBillProcessRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>831</pd:x>
        <pd:y>76</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetResCode">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>140</pd:x>
        <pd:y>202</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map-Data-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>962</pd:x>
        <pd:y>478</pd:y>
        <config>
            <element ref="pfx45:ListOfCbio2CustomerCreationResIo"/>
        </config>
        <pd:inputBindings>
            <pfx45:ListOfCbio2CustomerCreationResIo>
                <pfx45:Account>
                    <pfx45:Id>
                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:Id"/>
                    </pfx45:Id>
                    <pfx45:CBiO2BSCSId>
                        <xsl:value-of select="$ParseRequest/pfx35:SiebelMessage/pfx35:ListOfCbio2BulkBillingProfileModificationReq/pfx35:Account[1]/pfx35:CBiO2BSCSId"/>
                    </pfx45:CBiO2BSCSId>
                    <pfx45:Status>
                        <xsl:value-of select="$Variable0/Status"/>
                    </pfx45:Status>
                    <pfx45:ListOfComInvoiceProfile>
                        <xsl:for-each select="$Parse-XML/pfx37:CreateBillProcessRequest/ns11:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill">
                            <pfx45:ComInvoiceProfile>
                                <xsl:if test="billNo">
                                    <pfx45:Id>
                                        <xsl:value-of select="billNo"/>
                                    </pfx45:Id>
                                </xsl:if>
                                <xsl:if test="ns11:billId/ns11:value">
                                    <pfx45:CBiO2BSCSId>
                                        <xsl:value-of select="ns11:billId/ns11:value"/>
                                    </pfx45:CBiO2BSCSId>
                                </xsl:if>
                                <xsl:if test="current()/ns11:Status!=0">
                                    <xsl:if test="current()/ns11:Status">
                                        <pfx45:ErrorSourceErrCode>
                                            <xsl:value-of select="current()/ns11:Status"/>
                                        </pfx45:ErrorSourceErrCode>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="current()/ns11:Status!=0">
                                    <xsl:if test="current()/ModIndicator">
                                        <pfx45:ErrorSourceErrDesc>
                                            <xsl:value-of select="current()/ModIndicator"/>
                                        </pfx45:ErrorSourceErrDesc>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="current()/ns11:Status!=0">
                                    <pfx45:ErrorSourceSystem>
                                        <xsl:value-of select="'BSCS'"/>
                                    </pfx45:ErrorSourceSystem>
                                </xsl:if>
                                <xsl:if test="current()/ns11:Status!=0">
                                    <xsl:if test="current()/ModIndicator">
                                        <pfx45:ErrorUserErrCode>
                                            <xsl:value-of select="current()/ModIndicator"/>
                                        </pfx45:ErrorUserErrCode>
                                    </xsl:if>
                                </xsl:if>
                                <xsl:if test="current()/ns11:Status!=0">
                                    <xsl:if test="current()/ns11:Status">
                                        <pfx45:ErrorUserErrDesc>
                                            <xsl:value-of select="current()/ns11:Status"/>
                                        </pfx45:ErrorUserErrDesc>
                                    </xsl:if>
                                </xsl:if>
                                <pfx45:Status>
                                    <xsl:value-of select="if(current()/ns11:Status='0') then 'Success' else 'Failed'"/>
                                </pfx45:Status>
                            </pfx45:ComInvoiceProfile>
                        </xsl:for-each>
                    </pfx45:ListOfComInvoiceProfile>
                    <pfx45:ListOfOrganizationPaymentProfile>
                        <xsl:for-each select="$Parse-XML/pfx37:CreateBillProcessRequest/ns11:ZainCustomerAccountList/ZainCustomerAccount/ZainCustomerPayment">
                            <pfx45:OrganizationPaymentProfile>
                                <xsl:if test="ID">
                                    <pfx45:Id>
                                        <xsl:value-of select="ID"/>
                                    </pfx45:Id>
                                </xsl:if>
                                <xsl:if test="ID_Public">
                                    <pfx45:CBiO2BSCSId>
                                        <xsl:value-of select="ID_Public"/>
                                    </pfx45:CBiO2BSCSId>
                                </xsl:if>
                                <pfx45:Status>
                                    <xsl:value-of select="if(current()/ns11:Status='0') then 'Success' else 'Failed'"/>
                                </pfx45:Status>
                            </pfx45:OrganizationPaymentProfile>
                        </xsl:for-each>
                    </pfx45:ListOfOrganizationPaymentProfile>
                </pfx45:Account>
            </pfx45:ListOfCbio2CustomerCreationResIo>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>580</pd:x>
        <pd:y>191</pd:y>
        <config>
            <variableName>Variable0</variableName>
        </config>
        <pd:inputBindings>
            <Status>
                <xsl:value-of select="'Success'"/>
            </Status>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="CheckStatusForBP">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>687</pd:x>
        <pd:y>250</pd:y>
        <pd:width>141</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx37:CreateBillProcessRequest/ns11:ZainCustomerAccountList/ZainCustomerAccount[1]/CustomerBill</pd:over>
            <pd:iterationElementSlot>result</pd:iterationElementSlot>
            <pd:indexSlot>ii</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>FetchStatus</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>FetchStatus</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="FetchStatus">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>745</pd:x>
            <pd:y>314</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <Status>
                    <xsl:value-of select="if(($result/CustomerBill/ns11:Status='0') and $Variable0/Status='Success') then 'Success'&#xA;else 'Failed'"/>
                </Status>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="CheckStatusForPP">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>887</pd:x>
        <pd:y>250</pd:y>
        <pd:width>152</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx37:CreateBillProcessRequest/ns11:ZainCustomerAccountList/ZainCustomerAccount[1]/ZainCustomerPayment</pd:over>
            <pd:iterationElementSlot>PPResult</pd:iterationElementSlot>
            <pd:indexSlot>jj</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>FetchStatus-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>FetchStatus-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="FetchStatus-1">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>952</pd:x>
            <pd:y>314</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <Status>
                    <xsl:value-of select="if(($PPResult/ZainCustomerPayment/ns11:Status='0') and $Variable0/Status='Success') then 'Success'&#xA;else 'Failed'"/>
                </Status>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorEMSReceive">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>418</pd:x>
        <pd:y>311</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSReceiveErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetResCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:xpathDescription>resultlistempty</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Parse-XML/pfx37:CreateBillProcessRequest/ns11:ZainCustomerAccountList/ZainCustomerAccount/CustomerBill/ns11:Status)) and 1=2</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCode</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>CheckStatusForBP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForBP</pd:from>
        <pd:to>CheckStatusForPP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Variable0/Status='Success'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForPP</pd:from>
        <pd:to>Map-Data-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckStatusForBP</pd:from>
        <pd:to>Map-Data-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>ErrorEMSReceive</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>This service is exposed to CRM for CR-20-013-Bulk Modify Billing Profile On Contract.</pd:description>
        <pd:x>323</pd:x>
        <pd:y>20</pd:y>
        <pd:width>513</pd:width>
        <pd:height>39</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3342388</pd:color>
        <pd:type>dash</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>false</pd:fade>
    </pd:label>
</pd:ProcessDefinition>