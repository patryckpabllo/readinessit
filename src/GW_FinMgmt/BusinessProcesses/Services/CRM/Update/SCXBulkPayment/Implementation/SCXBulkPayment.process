<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://xmlns.zain.com/BSS/ESB/Financial/MultiSubscriberPayment" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx5="http://www.siebel.com/xml/CBiO2SCXPaymentResIO" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.siebel.com/xml/CBiO2SCXPaymentReqIO" xmlns:pfx3="http://www.siebel.com/xml/CBiO2PaymentReversalAsyncResIO" xmlns:pfx2="http://www.siebel.com/xml/CBiO2PaymentReversalAsyncIO" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns15="http://www.zain.com/ZESB/Types/Common" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns6="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns13="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPaymentReversal.xsd" xmlns:pfx="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns2="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:ns3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/MultiSubscriberPayment.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2PaymentReversalAsyncIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2paymentreversalasyncio.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2PaymentReversalAsyncResIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2paymentreversalasyncresio.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2SCXPaymentReqIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2scxpaymentreqio.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2SCXPaymentResIO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Transaction/ListOfCbio2scxpaymentresio.xsd"/>
    <wsdl:import namespace="http://xmlns.zain.com/BSS/ESB/Financial/MultiSubscriberPayment" location="/BusinessWSDLS/Services/TIBCO/MultiSubscriberPaymentAbstractWSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/CRM/Update/SCXBulkPayment/Implementation/SCXBulkPayment.process</pd:name>
    <pd:startName>ReceiveSCXBulkPayment</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="ReceiveSCXBulkPayment">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>89</pd:x>
        <pd:y>197</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/CRM/Update/SCXBulkPayment/CRM_RequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1123</pd:endX>
    <pd:endY>199</pd:endY>
    <pd:errorSchemas>
        <ErrSchema ref="pfx:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <ModPayVar>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="group" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="DESC_TEXT" type="xsd:string" minOccurs="0"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </ModPayVar>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1497709310496</pd:targetNamespace>
    <pd:activity name="Call_BPI">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>634</pd:x>
        <pd:y>195</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/CRM/Update/SCXBulkPayment/HelperProcess/BPI_Call.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns4:PaymentTransactionRequest>
                    <ns4:Header>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SourceTransactionId">
                            <ns4:ExternalTransactionID>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SourceTransactionId"/>
                            </ns4:ExternalTransactionID>
                        </xsl:if>
                    </ns4:Header>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentType">
                        <ns4:PaymentType>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentType"/>
                        </ns4:PaymentType>
                    </xsl:if>
                    <ns4:totalAmount>
                        <ns4:amount>
                            <xsl:choose>
                                <xsl:when test="exists($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Amount)">
                                    <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Amount"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </ns4:amount>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CurrencyCode">
                            <ns4:currency>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CurrencyCode"/>
                            </ns4:currency>
                        </xsl:if>
                    </ns4:totalAmount>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentMethod">
                        <ns4:paymentMethod>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentMethod"/>
                        </ns4:paymentMethod>
                    </xsl:if>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CustomerId">
                        <ns4:CRMCustomerID>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CustomerId"/>
                        </ns4:CRMCustomerID>
                    </xsl:if>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CustomerCategory">
                        <ns4:customerCategory>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CustomerCategory"/>
                        </ns4:customerCategory>
                    </xsl:if>
                    <ns4:ChannelDetails>
                        <ns4:payDate>
                            <xsl:value-of select="if (string-length($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:TransactionDate)>0)&#xA;then&#xA;tib:parse-date('MM/dd/yyyy',$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:TransactionDate)&#xA;else ''"/>
                        </ns4:payDate>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:AuthCode">
                            <ns4:payAuthCode>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:AuthCode"/>
                            </ns4:payAuthCode>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Channel">
                            <ns4:channel>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Channel"/>
                            </ns4:channel>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SalesAgent">
                            <ns4:user>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SalesAgent"/>
                            </ns4:user>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SourceTransactionId">
                            <ns4:sourceTransactionId>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:SourceTransactionId"/>
                            </ns4:sourceTransactionId>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Location">
                            <ns4:location>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Location"/>
                            </ns4:location>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:MerchantId">
                            <ns4:merchantId>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:MerchantId"/>
                            </ns4:merchantId>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:TerminalId">
                            <ns4:terminalId>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:TerminalId"/>
                            </ns4:terminalId>
                        </xsl:if>
                        <xsl:if test="if(string-length($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber)>0)&#xA;then $ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber&#xA;else $ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ChequeNumber">
                            <ns4:cardnum>
                                <xsl:value-of select="if(string-length($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber)>0)&#xA;then $ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber&#xA;else $ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ChequeNumber"/>
                            </ns4:cardnum>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Comments">
                            <ns4:remarks>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:Comments"/>
                            </ns4:remarks>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PayDesk">
                            <ns4:payDesk>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PayDesk"/>
                            </ns4:payDesk>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:WorkArea">
                            <ns4:workArea>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:WorkArea"/>
                            </ns4:workArea>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:IssuerBank">
                            <ns4:issuerBank>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:IssuerBank"/>
                            </ns4:issuerBank>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ExpiryDate">
                            <ns4:expiryDate>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ExpiryDate"/>
                            </ns4:expiryDate>
                        </xsl:if>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentMode">
                            <ns4:modPay>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:PaymentMode"/>
                            </ns4:modPay>
                        </xsl:if>
                    </ns4:ChannelDetails>
                </ns4:PaymentTransactionRequest>
                <TransactionID>
                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                </TransactionID>
                <SourceSystem>
                    <xsl:value-of select="'CRM'"/>
                </SourceSystem>
                <StartTimeStamp>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetTransactionID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>249</pd:x>
        <pd:y>200</pd:y>
        <config>
            <processName>/CommonProcesses/Utilities/GUID.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>504</pd:x>
        <pd:y>197</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/CRM/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ReceiptNo">
                        <ns22:InterfaceID>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ReceiptNo"/>
                        </ns22:InterfaceID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($ReceiveSCXBulkPayment/ns6:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber,6),'XXXXXX',tib:right($ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>863</pd:x>
        <pd:y>201</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/CRM/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ReceiptNo">
                        <ns22:InterfaceID>
                            <xsl:value-of select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails[1]/pfx4:ReceiptNo"/>
                        </ns22:InterfaceID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($MapResponse/pfx5:ListOfCbio2scxpaymentresio)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>245</pd:x>
        <pd:y>374</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>509</pd:x>
        <pd:y>375</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns13:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/CRM/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </StackTrace>
            </ns13:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>908</pd:x>
        <pd:y>374</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/CRM/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($MapErrorResponse/pfx5:ListOfCbio2scxpaymentresio)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(string-length($GetTransactionID/GUID/StartTimeStamp)>0)&#xA;then $GetTransactionID/GUID/StartTimeStamp&#xA;else 0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>366</pd:x>
        <pd:y>373</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" element="ns13:ExceptionRequest"/>
        </pd:coercions>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="&quot;TIBCO&quot;"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="'Channel'"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="'External'"/>
                </ChannelType>
                <xsl:choose>
                    <xsl:when test="string-length($Catch/exceptiondata/ns13:ExceptionRequest/ExceptionCode)>0">
                        <ResponseCode>
                            <xsl:value-of select="$Catch/exceptiondata/ns13:ExceptionRequest/ExceptionCode"/>
                        </ResponseCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ResponseCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ResponseCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length($Catch/exceptiondata/ns13:ExceptionRequest/ns22:Header/ns22:Message)>1">
                        <ResponseDescription>
                            <xsl:value-of select="$Catch/exceptiondata/ns13:ExceptionRequest/ns22:Header/ns22:Message"/>
                        </ResponseDescription>
                    </xsl:when>
                    <xsl:otherwise>
                        <ResponseDescription>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </ResponseDescription>
                    </xsl:otherwise>
                </xsl:choose>
                <TIBCOServiceName>
                    <xsl:value-of select="'SCXBulkPayment'"/>
                </TIBCOServiceName>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseCRMRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>382</pd:x>
        <pd:y>198</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx4:SiebelMessage"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$ReceiveSCXBulkPayment/ns6:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>756</pd:x>
        <pd:y>198</pd:y>
        <config>
            <element ref="pfx5:ListOfCbio2scxpaymentresio"/>
        </config>
        <pd:inputBindings>
            <pfx5:ListOfCbio2scxpaymentresio>
                <xsl:for-each select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails">
                    <pfx5:Cbio2BulkPaymentDetails>
                        <xsl:if test="pfx4:Id">
                            <pfx5:Id>
                                <xsl:value-of select="pfx4:Id"/>
                            </pfx5:Id>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceErrCode">
                            <pfx5:CBiO2ErrorCode>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceErrCode"/>
                            </pfx5:CBiO2ErrorCode>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceErrDesc">
                            <pfx5:CBiO2ErrorMessage>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceErrDesc"/>
                            </pfx5:CBiO2ErrorMessage>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_Type">
                            <pfx5:CBiO2ErrorType>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_Type"/>
                            </pfx5:CBiO2ErrorType>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_Occurance_Time">
                            <pfx5:CBiO2Error_Occurance_Time>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_Occurance_Time"/>
                            </pfx5:CBiO2Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceSystem">
                            <pfx5:CBiO2Error_SourceSystem>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_SourceSystem"/>
                            </pfx5:CBiO2Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_UserErrCode">
                            <pfx5:CBiO2Error_UserErrCode>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_UserErrCode"/>
                            </pfx5:CBiO2Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_UserErrDesc">
                            <pfx5:CBiO2Error_UserErrDesc>
                                <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Error/ns4:Error_UserErrDesc"/>
                            </pfx5:CBiO2Error_UserErrDesc>
                        </xsl:if>
                        <pfx5:PaymentStatus>
                            <xsl:value-of select="$Call_BPI/ns4:PaymentTransactionResponse/ns4:Status"/>
                        </pfx5:PaymentStatus>
                    </pfx5:Cbio2BulkPaymentDetails>
                </xsl:for-each>
            </pfx5:ListOfCbio2scxpaymentresio>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendResponse">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>978</pd:x>
        <pd:y>200</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/CRM/Update/SCXBulkPayment/CRM_ResponseQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapResponse/pfx5:ListOfCbio2scxpaymentresio)"/>
                </Body>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapErrorResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>715</pd:x>
        <pd:y>375</pd:y>
        <config>
            <element ref="pfx5:ListOfCbio2scxpaymentresio"/>
        </config>
        <pd:inputBindings>
            <pfx5:ListOfCbio2scxpaymentresio>
                <xsl:for-each select="$ParseCRMRequest/pfx4:SiebelMessage/pfx4:ListOfCbio2scxpaymentreqio/pfx4:Cbio2BulkPaymentDetails">
                    <pfx5:Cbio2BulkPaymentDetails>
                        <xsl:if test="pfx4:Id">
                            <pfx5:Id>
                                <xsl:value-of select="pfx4:Id"/>
                            </pfx5:Id>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <pfx5:CBiO2ErrorCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </pfx5:CBiO2ErrorCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <pfx5:CBiO2ErrorMessage>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </pfx5:CBiO2ErrorMessage>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorType">
                            <pfx5:CBiO2ErrorType>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                            </pfx5:CBiO2ErrorType>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc1">
                            <pfx5:CBiO2Error_Additional_Desc1>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc1"/>
                            </pfx5:CBiO2Error_Additional_Desc1>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc2">
                            <pfx5:CBiO2Error_Additional_Desc2>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc2"/>
                            </pfx5:CBiO2Error_Additional_Desc2>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorOccuranceTime">
                            <pfx5:CBiO2Error_Occurance_Time>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorOccuranceTime"/>
                            </pfx5:CBiO2Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceSystem">
                            <pfx5:CBiO2Error_SourceSystem>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                            </pfx5:CBiO2Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrCode">
                            <pfx5:CBiO2Error_UserErrCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                            </pfx5:CBiO2Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc">
                            <pfx5:CBiO2Error_UserErrDesc>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                            </pfx5:CBiO2Error_UserErrDesc>
                        </xsl:if>
                        <pfx5:PaymentStatus>
                            <xsl:value-of select="'Failed'"/>
                        </pfx5:PaymentStatus>
                    </pfx5:Cbio2BulkPaymentDetails>
                </xsl:for-each>
            </pfx5:ListOfCbio2scxpaymentresio>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorResponse">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1127</pd:x>
        <pd:y>372</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/CRM/Update/SCXBulkPayment/CRM_ResponseQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapErrorResponse/pfx5:ListOfCbio2scxpaymentresio)"/>
                </Body>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetTransactionID</pd:from>
        <pd:to>ParseCRMRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_BPI</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BPI</pd:from>
        <pd:to>MapResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveSCXBulkPayment</pd:from>
        <pd:to>GetTransactionID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>MapErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>SendErrorResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseCRMRequest</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapResponse</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>SendResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapErrorResponse</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>