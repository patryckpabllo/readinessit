<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.zain.com/ZESB/Services/Payment" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns6="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns13="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx="http://www.zain.com/ZESB/Types/Common" xmlns:ns8="http://www.zain.com/ZESB/Services/CustomerProfile/Types" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/pe/CheckpointSchema" xmlns:ns3="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd">
    <xsd:import namespace="http://www.zain.com/ZESB/Types/Common" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/Payment" location="/BusinessWSDLS/Services/WSDLS/Payment/payment.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/Payment/Implementation/PaySubscribers.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:PaySubscribersRequest"/>
    <pd:startX>27</pd:startX>
    <pd:startY>190</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:PaySubscribersResponse>
            <response>
                <xsl:choose>
                    <xsl:when test="exists($Call_BPI_BSCS/ns:GeneralOutput) and string-length($Call_BPI_BSCS/ns:GeneralOutput)>0">
                        <xsl:copy-of select="$Call_BPI_BSCS/ns:GeneralOutput"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:copy-of select="$Contract-Payment/root/ns:GeneralOutput"/>
                    </xsl:otherwise>
                </xsl:choose>
            </response>
        </wsdlPfx:PaySubscribersResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:PaySubscribersResponse"/>
    <pd:endX>1606</pd:endX>
    <pd:endY>180</pd:endY>
    <pd:errorSchemas>
        <faultSchema wsMsgRef="wsdlPfx:faultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <MSISDNVar>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="group" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="MSISDN" type="xsd:string" minOccurs="0"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </MSISDNVar>
        <ModPayVar>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="group" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="DESC_TEXT" type="xsd:string" minOccurs="0"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </ModPayVar>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1454655975902</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>416</pd:x>
        <pd:y>56</pd:y>
        <pd:width>168</pd:width>
        <pd:height>223</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber</pd:over>
            <pd:iterationElementSlot>msisdn</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Generate-Error-2-1</pd:to>
            <pd:xpathDescription>InvalidAmount</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$msisdn/ns:Subscriber/ns:Amount&lt;=0</pd:xpath>
        </pd:transition>
        <pd:activity name="Generate-Error-2-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>483</pd:x>
            <pd:y>223</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns14:ActivityInput>
                    <message>
                        <xsl:value-of select="'Amount should be greater than zero'"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="'TIB-BUS-VAL-ERR-21'"/>
                    </messageCode>
                </ns14:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>483</pd:x>
            <pd:y>124</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>350</pd:x>
        <pd:y>190</pd:y>
        <config>
            <variableName>ModPayVar</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$GetVariable/ns6:ListOfValues/ns6:LOV[ns6:TYPE='CBIO2_PAYMENT_MODE' and ns6:DESC_TEXT=$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:PaymentMethod]">
                    <group>
                        <xsl:if test="ns6:DESC_TEXT">
                            <DESC_TEXT>
                                <xsl:value-of select="ns6:DESC_TEXT"/>
                            </DESC_TEXT>
                        </xsl:if>
                    </group>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_BPI_BSCS">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1265</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/BPI_PaySubscriber_Call.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:copy-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput"/>
                <TransactionID>
                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                </TransactionID>
                <SourceSystem>
                    <xsl:value-of select="'CRM'"/>
                </SourceSystem>
                <StartTimeStamp>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>153</pd:x>
        <pd:y>362</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CheckTransactionRef">
        <pd:type>com.tibco.pe.core.CheckpointActivity</pd:type>
        <pd:resourceType>ae.process.checkpoint</pd:resourceType>
        <pd:x>992</pd:x>
        <pd:y>176</pd:y>
        <config/>
        <pd:inputBindings>
            <ns4:input>
                <duplicateKey>
                    <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:TransactionReference"/>
                </duplicateKey>
            </ns4:input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_To_Native">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>561</pd:x>
        <pd:y>362</pd:y>
        <config>
            <element ref="pfx:FaultType"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$ErrorResponseMapFromEOM/root/ErrorUserErrCode='ZESB-9999'">
                    <pfx:FaultType>
                        <pfx:type>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                        </pfx:type>
                        <pfx:code>
                            <xsl:value-of select="'ZESB-1001'"/>
                        </pfx:code>
                        <pfx:description>
                            <xsl:value-of select="'Bussiness Error'"/>
                        </pfx:description>
                        <pfx:sourceSystem>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                        </pfx:sourceSystem>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <pfx:extErrorCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </pfx:extErrorCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <pfx:detail>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </pfx:detail>
                        </xsl:if>
                    </pfx:FaultType>
                </xsl:when>
                <xsl:otherwise>
                    <pfx:FaultType>
                        <pfx:type>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                        </pfx:type>
                        <pfx:code>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                        </pfx:code>
                        <pfx:description>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                        </pfx:description>
                        <pfx:sourceSystem>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                        </pfx:sourceSystem>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <pfx:extErrorCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </pfx:extErrorCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <pfx:detail>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </pfx:detail>
                        </xsl:if>
                    </pfx:FaultType>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>362</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" element="pfx4:ExceptionRequest"/>
        </pd:coercions>
        <pd:inputBindings>
            <ns13:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/PaySubscriber/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput)"/>
                    </ns22:Message>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </StackTrace>
                <Custom>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </Custom>
            </ns13:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>659</pd:x>
        <pd:y>362</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/PaySubscriber/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_To_Native/pfx:FaultType)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber, 7,6),'XXXX')"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(string-length($GetTransactionID/GUID/StartTimeStamp)>0)&#xA;then $GetTransactionID/GUID/StartTimeStamp&#xA;else 0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>362</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="if(string-length($_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:sourceSystem)>0)&#xA;then $_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:sourceSystem&#xA;else &quot;TIBCO&quot;"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="'Channel'"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="'External'"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="if(string-length($_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:extErrorCode)>0)&#xA;then $_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:extErrorCode&#xA;else if(string-length($_error_CheckTransactionRef/ns5:DuplicateException/msgCode)>0)&#xA;then $_error_CheckTransactionRef/ns5:DuplicateException/msgCode&#xA;else $_error/ns2:ErrorReport/MsgCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="if(string-length($_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:detail)>0)&#xA;then $_error_Generate-Error-1/wsdlPfx:faultMessage/fault/pfx:FaultType/pfx:detail&#xA;else if(string-length($_error_CheckTransactionRef/ns5:DuplicateException/msgCode)>0)&#xA;then $_error_CheckTransactionRef/ns5:DuplicateException/msg&#xA;else $_error/ns2:ErrorReport/Msg"/>
                </ResponseDescription>
                <TIBCOServiceName>
                    <xsl:value-of select="'PaySubscriber'"/>
                </TIBCOServiceName>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>906</pd:x>
        <pd:y>362</pd:y>
        <config>
            <faultName>faultSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <data>
                    <wsdlPfx:faultMessage>
                        <fault>
                            <xsl:copy-of select="$CLE_To_Native/pfx:FaultType"/>
                        </fault>
                    </wsdlPfx:faultMessage>
                </data>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1265</pd:x>
        <pd:y>70</pd:y>
        <config>
            <faultName>faultSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <data>
                    <wsdlPfx:faultMessage>
                        <fault>
                            <pfx:FaultType>
                                <pfx:type>
                                    <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_Type"/>
                                </pfx:type>
                                <pfx:code>
                                    <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_UserErrCode"/>
                                </pfx:code>
                                <pfx:description>
                                    <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_UserErrDesc"/>
                                </pfx:description>
                                <pfx:sourceSystem>
                                    <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_SourceSystem"/>
                                </pfx:sourceSystem>
                                <xsl:if test="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_SourceErrCode">
                                    <pfx:extErrorCode>
                                        <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_SourceErrCode"/>
                                    </pfx:extErrorCode>
                                </xsl:if>
                                <xsl:if test="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_SourceErrDesc">
                                    <pfx:detail>
                                        <xsl:value-of select="$Call_BPI_BSCS/pfx2:ErrorResponse/pfx2:Error_SourceErrDesc"/>
                                    </pfx:detail>
                                </xsl:if>
                            </pfx:FaultType>
                        </fault>
                    </wsdlPfx:faultMessage>
                </data>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>352</pd:x>
        <pd:y>57</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <message>
                    <xsl:value-of select="'Invalid Payment Method'"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'TIB-BUS-VAL-ERR-20'"/>
                </messageCode>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-for-UserValidation">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>842</pd:x>
        <pd:y>52</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/UserPermisionErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/UserPermissionErrorCode"/>
                </messageCode>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
        <pd:resourceType>service.activity.getContext</pd:resourceType>
        <pd:x>124</pd:x>
        <pd:y>190</pd:y>
        <config>
            <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetSOUser">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>683</pd:x>
        <pd:y>51</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/SOUser.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetTransactionID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>742</pd:x>
        <pd:y>173</pd:y>
        <config>
            <processName>/CommonProcesses/Utilities/GUID.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>230</pd:x>
        <pd:y>190</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/LOVs.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>862</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/PaySubscriber/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber,6),'XXXXXX',tib:right($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1371</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/PaySubscriber/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetContext/ns3:_applicationProperties/ns3:JMSMessageID"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Call_BPI_BSCS/ns:GeneralOutput)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1525</pd:x>
        <pd:y>73</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="QueryCustomer">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1102</pd:x>
        <pd:y>273</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/QueryCustomer.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MSISDN>
                    <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                </MSISDN>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetFaultContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>767</pd:x>
        <pd:y>362</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$CLE_To_Native/pfx:FaultType/pfx:code"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$CLE_To_Native/pfx:FaultType/pfx:description"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$CLE_To_Native/pfx:FaultType/pfx:sourceSystem"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Updating_Internal_Records">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1477</pd:x>
        <pd:y>178</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/Payment/TIBCODBQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <InDataxsdString>
                <xsd:element name="Payment_Records">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="CONTRACTID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MSISDN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MULTI_MSISDN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="USERNAME" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANSACTIONID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANS_REF" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AMOUNT" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="PAY_METHOD" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANSACTION_TYPE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="REQUEST_STATUS" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="RECEIPTNO" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_FLAG" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_TYPE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MERCHANT_ID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TERMINAL_ID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_CODE_SOURCE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_NUMBER" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_EXPIRY" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANSACTION_REF" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="SHOP_TRANS_REF" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_RECEIPT" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_AMOUNT" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ACQ_RES_CODE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="SETMENT_DATE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ISSUE_BANK" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_RESP_CODE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_NUMBER" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="BANK" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CHEQUE_NUMBER" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ACCOUNT_NUMBER" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ISSUE_DATE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ORDERINFO" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_STATUS" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InDataxsdString>
        </config>
        <pd:inputBindings>
            <ns7:ActivityInput>
                <Body>
                    <Payment_Records>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ContractId">
                            <CONTRACTID>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ContractId"/>
                            </CONTRACTID>
                        </xsl:if>
                        <MSISDN>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Msisdn"/>
                        </MSISDN>
                        <MULTI_MSISDN>
                            <xsl:value-of select="if(count($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber)>1)&#xA;then&#xA;'Y'&#xA;else&#xA;'N'"/>
                        </MULTI_MSISDN>
                        <USERNAME>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:UserName"/>
                        </USERNAME>
                        <TRANSACTIONID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </TRANSACTIONID>
                        <TRANS_REF>
                            <xsl:value-of select="if(string-length($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:Params/ns:Param[ns:Name='PaymentMethodRefernce']/ns:Value)>0)&#xA;then&#xA;$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:Params/ns:Param[ns:Name='PaymentMethodRefernce']/ns:Value&#xA;else&#xA;$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:TransactionReference"/>
                        </TRANS_REF>
                        <AMOUNT>
                            <xsl:value-of select="sum($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber/ns:Amount)"/>
                        </AMOUNT>
                        <PAY_METHOD>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:PaymentMethod"/>
                        </PAY_METHOD>
                        <TRANSACTION_TYPE>
                            <xsl:value-of select="&quot;PaySubscriber&quot;"/>
                        </TRANSACTION_TYPE>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:RequestStatus">
                            <REQUEST_STATUS>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:RequestStatus"/>
                            </REQUEST_STATUS>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:ReceiptNumber">
                            <RECEIPTNO>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:ReceiptNumber"/>
                            </RECEIPTNO>
                        </xsl:if>
                        <AUTH_FLAG>
                            <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:AuthorizeCredit"/>
                        </AUTH_FLAG>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:CardType">
                            <CARD_TYPE>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:CardType"/>
                            </CARD_TYPE>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:MerchantId">
                            <MERCHANT_ID>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:MerchantId"/>
                            </MERCHANT_ID>
                        </xsl:if>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:TerminalId">
                            <TERMINAL_ID>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:TerminalId"/>
                            </TERMINAL_ID>
                        </xsl:if>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:AuthCode">
                            <AUTH_CODE_SOURCE>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:AuthCode"/>
                            </AUTH_CODE_SOURCE>
                        </xsl:if>
                        <CARD_NUMBER>
                            <xsl:value-of select="tib:string-to-base64($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:CardNumber)"/>
                        </CARD_NUMBER>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:ExpiryDate">
                            <CARD_EXPIRY>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails/ns:ExpiryDate"/>
                            </CARD_EXPIRY>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:TransactionReference">
                            <TRANSACTION_REF>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:TransactionReference"/>
                            </TRANSACTION_REF>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:ShoppingTransactionReference">
                            <SHOP_TRANS_REF>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:ShoppingTransactionReference"/>
                            </SHOP_TRANS_REF>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:ReceiptNumber">
                            <AUTH_RECEIPT>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:ReceiptNumber"/>
                            </AUTH_RECEIPT>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:Amount">
                            <AUTH_AMOUNT>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:Amount"/>
                            </AUTH_AMOUNT>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AcquirerResponseCode">
                            <ACQ_RES_CODE>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AcquirerResponseCode"/>
                            </ACQ_RES_CODE>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:SettlementDate">
                            <SETMENT_DATE>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:SettlementDate"/>
                            </SETMENT_DATE>
                        </xsl:if>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:Bank">
                            <ISSUE_BANK>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:Bank"/>
                            </ISSUE_BANK>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AcquirerResponseCode">
                            <AUTH_RESP_CODE>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AcquirerResponseCode"/>
                            </AUTH_RESP_CODE>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AuthorizationID">
                            <AUTH_NUMBER>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AuthorizationID"/>
                            </AUTH_NUMBER>
                        </xsl:if>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:Branch">
                            <BANK>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:Branch"/>
                            </BANK>
                        </xsl:if>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:ChequeNumber">
                            <CHEQUE_NUMBER>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:ChequeNumber"/>
                            </CHEQUE_NUMBER>
                        </xsl:if>
                        <ACCOUNT_NUMBER>
                            <xsl:value-of select="tib:string-to-base64($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:AccountNumber)"/>
                        </ACCOUNT_NUMBER>
                        <xsl:if test="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:IssueDate">
                            <ISSUE_DATE>
                                <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail/ns:IssueDate"/>
                            </ISSUE_DATE>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:OrderInfo">
                            <ORDERINFO>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:OrderInfo"/>
                            </ORDERINFO>
                        </xsl:if>
                        <xsl:if test="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AuthorizationStatus">
                            <AUTH_STATUS>
                                <xsl:value-of select="$Call_BPI_BSCS/ns:GeneralOutput/ns:Authorization/ns:AuthorizationStatus"/>
                            </AUTH_STATUS>
                        </xsl:if>
                    </Payment_Records>
                </Body>
            </ns7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Contract Payment">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1446</pd:x>
        <pd:y>277</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/PayContractInternal.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns:PayContractInput>
                    <ns:ContractId>
                        <xsl:value-of select="$QueryCustomer/root/ns8:QuerySubscriberResult/ns8:CustomerNumber"/>
                    </ns:ContractId>
                    <ns:Amount>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:SubscribersList/ns:Subscriber[1]/ns:Amount"/>
                    </ns:Amount>
                    <ns:UserName>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:UserName"/>
                    </ns:UserName>
                    <ns:PaymentMethod>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:PaymentMethod"/>
                    </ns:PaymentMethod>
                    <ns:AuthorizeCredit>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:AuthorizeCredit"/>
                    </ns:AuthorizeCredit>
                    <ns:TransactionReference>
                        <xsl:value-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:TransactionReference"/>
                    </ns:TransactionReference>
                    <xsl:copy-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:CardDetails"/>
                    <xsl:copy-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:ChequeDetail"/>
                    <xsl:copy-of select="$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:NotificationMedia"/>
                </ns:PayContractInput>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateENETMNP">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1279</pd:x>
        <pd:y>355</pd:y>
        <config>
            <faultName>faultSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns14:ActivityInput>
                <data>
                    <wsdlPfx:faultMessage>
                        <fault>
                            <xsl:choose>
                                <xsl:when test="exists($_error_QueryCustomer/pfx:FaultType) and string-length($_error_QueryCustomer/pfx:FaultType)>0">
                                    <xsl:copy-of select="$_error_QueryCustomer/pfx:FaultType"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:copy-of select="$_error_Contract-Payment/root/pfx:FaultType"/>
                                </xsl:otherwise>
                            </xsl:choose>
                        </fault>
                    </wsdlPfx:faultMessage>
                </data>
            </ns14:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_To_Native</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTransactionID</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>CheckTransactionRef</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_To_Native</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BPI_BSCS</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>SetFaultContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetFaultContext</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetContext</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BPI_BSCS</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:xpathDescription>BusinessError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Call_BPI_BSCS/pfx2:ErrorResponse)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckTransactionRef</pd:from>
        <pd:to>Call_BPI_BSCS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Generate-Error-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Updating_Internal_Records</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GetSOUser</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ModPayVar/root/group[1]/DESC_TEXT)&gt;0
or
upper-case($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:PaymentMethod)='CASH'
or
upper-case($Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:PaymentMethod)='CARD'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSOUser</pd:from>
        <pd:to>GetTransactionID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($GetSOUser/SOUser/Record[UserName=$Start/wsdlPfx:PaySubscribersRequest/request/ns:PaySubscribersInput/ns:UserName 
and 
(TransactionType = "PAYMENT AND SALES ORDER" or TransactionType ="ALL TRANSACTION")] )</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSOUser</pd:from>
        <pd:to>Generate-Error-for-UserValidation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Updating_Internal_Records</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Updating_Internal_Records</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckTransactionRef</pd:from>
        <pd:to>QueryCustomer</pd:to>
        <pd:xpathDescription>ENETMNP</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetContext/ns3:_applicationProperties/ns3:JMSType = $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payment/ENETMNP</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustomer</pd:from>
        <pd:to>Contract Payment</pd:to>
        <pd:xpathDescription>Prepaid - ContractPayment</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16724788</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract Payment</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustomer</pd:from>
        <pd:to>Call_BPI_BSCS</pd:to>
        <pd:xpathDescription>If - Postpaid</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-26368</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$QueryCustomer/root/ns8:QuerySubscriberResult/ns8:SubscriberInfo/ns8:Details/ns8:BasicServiceType='POST'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryCustomer</pd:from>
        <pd:to>GenerateENETMNP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract Payment</pd:from>
        <pd:to>GenerateENETMNP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>