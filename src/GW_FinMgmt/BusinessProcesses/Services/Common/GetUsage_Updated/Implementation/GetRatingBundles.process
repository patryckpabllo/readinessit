<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://xmlns.example.com/1450253296761" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx5="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetUsage/GetRatingBundlesResponse.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.zain.com/ZESB/Services/GetUsage/Types" xmlns:pfx3="http://www.zain.com/ZESB/Services/GetUsage" xmlns:pfx2="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns15="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns9="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns6="http://www.zain.com/ZESB/Types/Common" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns7="http://www.Zain.com/schemas/BusinessSchemas/Services/Query/GetUsage.xsd" xmlns:pfx="http://www.zain.com/ZESB/Services/PostpaidBilling" xmlns:ns8="http://www.Zain.com/schemas/CommonResources/SharedVariables/ESBOfferMapping.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns3="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/GetUsage/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetUsage/GetUsage.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetUsage/GetRatingBundlesResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsage/GetRatingBundlesResponse.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1450253296761" location="/BusinessWSDLS/Services/TIBCO/GetUsageDetailsAbstract.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling" location="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/GetUsage" location="/BusinessWSDLS/Services/WSDLS/GetUsage/GetUsage.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/GetUsage_Updated/Implementation/GetRatingBundles.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx3:GetRatingBundlesRequest"/>
    <pd:startX>104</pd:startX>
    <pd:startY>239</pd:startY>
    <pd:returnBindings>
        <pfx3:GetRatingBundlesResponse>
            <response>
                <pfx4:GetRatingBundlesOutput>
                    <xsl:for-each select="$CDMToNativeResponse/pfx5:GetRatingBundlesResponse/pfx5:Records">
                        <pfx4:Bundle>
                            <pfx4:Type>
                                <xsl:value-of select="pfx5:Type"/>
                            </pfx4:Type>
                            <pfx4:ServiceCode>
                                <xsl:value-of select="pfx5:ServiceCode"/>
                            </pfx4:ServiceCode>
                            <pfx4:Unit>
                                <xsl:value-of select="pfx5:Unit"/>
                            </pfx4:Unit>
                            <pfx4:Used>
                                <xsl:value-of select="if(exists(pfx5:Used)) then current()/pfx5:Used else 0"/>
                            </pfx4:Used>
                            <pfx4:Threshold>
                                <xsl:value-of select="if(exists(current()/pfx5:Threshold)) then current()/pfx5:Threshold else 0"/>
                            </pfx4:Threshold>
                            <pfx4:Peak>
                                <xsl:value-of select="if(exists(current()/pfx5:Peak)) then current()/pfx5:Peak else 0"/>
                            </pfx4:Peak>
                            <pfx4:OffPeak>
                                <xsl:value-of select="if(exists(current()/pfx5:OffPeak)) then current()/pfx5:OffPeak else 0"/>
                            </pfx4:OffPeak>
                            <xsl:if test="pfx5:OnNet">
                                <pfx4:OnNet>
                                    <xsl:value-of select="pfx5:OnNet"/>
                                </pfx4:OnNet>
                            </xsl:if>
                            <xsl:if test="pfx5:OffNet">
                                <pfx4:OffNet>
                                    <xsl:value-of select="pfx5:OffNet"/>
                                </pfx4:OffNet>
                            </xsl:if>
                            <pfx4:StartDate>
                                <xsl:value-of select="pfx5:StartDate"/>
                            </pfx4:StartDate>
                            <pfx4:EndDate>
                                <xsl:value-of select="pfx5:EndDate"/>
                            </pfx4:EndDate>
                        </pfx4:Bundle>
                    </xsl:for-each>
                </pfx4:GetRatingBundlesOutput>
            </response>
        </pfx3:GetRatingBundlesResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx3:GetRatingBundlesResponse"/>
    <pd:endX>1337</pd:endX>
    <pd:endY>213</pd:endY>
    <pd:errorSchemas>
        <Schema1 wsMsgRef="pfx3:FaultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1450342523273</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>341</pd:x>
        <pd:y>42</pd:y>
        <pd:width>894</pd:width>
        <pd:height>323</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ESI_Call-GetOffers</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($ESI_Call/root/ns7:GetOfferUsageRes)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ErrorESI_Call</pd:to>
            <pd:xpathDescription>ErrorExists</pd:xpathDescription>
            <pd:lineType>Straight</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>ESI_Call</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNativeResponse</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetOfferUsage</pd:from>
            <pd:to>GetDADetails</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ErrorResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetDADetails</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>CDMToNativeResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call-GetOffers</pd:from>
            <pd:to>GetOfferUsage</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>539</pd:x>
            <pd:y>114</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetRatingBundles/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($Start/pfx3:GetRatingBundlesRequest/request/pfx4:GetRatingBundlesInput)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1169</pd:x>
            <pd:y>119</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetRatingBundles/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($CDMToNativeResponse/pfx5:GetRatingBundlesResponse)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESI_Call">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>646</pd:x>
            <pd:y>113</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/GetUsage_Updated/HelperProcess/ESI_RatingBundles.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                    <ns7:MSISDN>
                        <xsl:value-of select="format:FormatMSISDN($Start/pfx3:GetRatingBundlesRequest/request/pfx4:GetRatingBundlesInput/pfx4:MSISDN, $_globalVariables/ns:GlobalVariables/MSISDNBaseLength)"/>
                    </ns7:MSISDN>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>413</pd:x>
            <pd:y>114</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorESI_Call">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>578</pd:x>
            <pd:y>285</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <data>
                        <pfx3:FaultMessage>
                            <fault>
                                <ns6:FaultType>
                                    <ns6:type>
                                        <xsl:value-of select="''"/>
                                    </ns6:type>
                                    <ns6:code>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                    </ns6:code>
                                    <ns6:description>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                    </ns6:description>
                                    <ns6:sourceSystem>
                                        <xsl:value-of select="'TIBCO'"/>
                                    </ns6:sourceSystem>
                                </ns6:FaultType>
                            </fault>
                        </pfx3:FaultMessage>
                    </data>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CDMToNativeResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1065</pd:x>
            <pd:y>122</pd:y>
            <config>
                <element ref="pfx5:GetRatingBundlesResponse"/>
            </config>
            <pd:inputBindings>
                <pfx5:GetRatingBundlesResponse>
                    <xsl:for-each select="$ESI_Call/root/ns7:GetOfferUsageRes/ns7:Records">
                        <xsl:variable name="var9" select="current()/ns7:OFFER_ID"/>
                        <xsl:variable name="var10" select="current()/ns7:OFFER_ID"/>
                        <xsl:if test="current()/ns7:OFFER_ID!='' and $GetOfferUsage/ns8:ESBOfferMapping/ns8:Record/ns8:Records[number(ns8:OFFERID)=$var9]/ns8:OFFER_TYPE!='DATA' and $GetOfferUsage/ns8:ESBOfferMapping/ns8:Record/ns8:Records[ns8:OFFERID=$var10]/ns8:SHOW_OFFER_FLAG='Y' and current()/ns7:ACCOUNT_ID!='500'">
                            <pfx5:Records>
                                <xsl:variable name="var" select="current()/ns7:OFFER_ID"/>
                                <xsl:variable name="var6" select="current()/ns7:ACCOUNT_ID"/>
                                <xsl:variable name="var11" select="concat('XXXX',tib:substring-after-last(current()/ns7:ACCOUNT_ID, current()/ns7:OFFER_ID))"/>
                                <xsl:variable name="var12" select="current()/ns7:ACCOUNT_ID"/>
                                <pfx5:Type>
                                    <xsl:value-of select="if(string-length(current()/ns7:ACCOUNT_ID)>4) then&#xA;$GetDADetails/root/Records[DA_ID=$var11]/DA_INSTANCE else&#xA;$GetDADetails/root/Records[DA_ID=$var12]/DA_INSTANCE"/>
                                </pfx5:Type>
                                <xsl:variable name="var2" select="current()/ns7:OFFER_ID"/>
                                <xsl:variable name="var7" select="current()/ns7:ACCOUNT_ID"/>
                                <xsl:variable name="var13" select="current()/ns7:OFFER_ID"/>
                                <pfx5:ServiceCode>
                                    <xsl:value-of select="$GetOfferUsage/ns8:ESBOfferMapping/ns8:Record/ns8:Records[ns8:OFFERID=$var13]/ns8:SERVICE_CODE"/>
                                </pfx5:ServiceCode>
                                <xsl:variable name="var3" select="current()/ns7:OFFER_ID"/>
                                <xsl:variable name="var8" select="current()/ns7:ACCOUNT_ID"/>
                                <pfx5:Unit>
                                    <xsl:value-of select="if(string-length(current()/ns7:ACCOUNT_ID)>4) then&#xA;$GetDADetails/root/Records[DA_ID=$var11]/UNIT else&#xA;$GetDADetails/root/Records[DA_ID=$var12]/UNIT"/>
                                </pfx5:Unit>
                                <pfx5:Used>
                                    <xsl:value-of select="if((exists(current()/ns7:OFF_PEAK_DURATION)) and (exists(current()/ns7:PEAK_DURATION))) then current()/ns7:PEAK_DURATION + current()/ns7:OFF_PEAK_DURATION else&#xA;if((exists(current()/ns7:PEAK_DURATION)) and (not(exists(current()/ns7:OFF_PEAK_DURATION)))) then current()/ns7:PEAK_DURATION else&#xA;current()/ns7:OFF_PEAK_DURATION"/>
                                </pfx5:Used>
                                <xsl:variable name="var4" select="current()/ns7:OFFER_ID"/>
                                <xsl:variable name="var5" select="current()/ns7:OFFER_ID"/>
                                <pfx5:Threshold>
                                    <xsl:value-of select="if(string-length($GetOfferUsage/ns8:ESBOfferMapping/ns8:Record/ns8:Records[ns8:OFFERID=$var4]/ns8:THRESHOLD)>0) then $GetOfferUsage/ns8:ESBOfferMapping/ns8:Record/ns8:Records[ns8:OFFERID=$var5]/ns8:THRESHOLD else 0"/>
                                </pfx5:Threshold>
                                <pfx5:Peak>
                                    <xsl:value-of select="if(string-length(current()/ns7:PEAK_DURATION)>0) then current()/ns7:PEAK_DURATION else 0"/>
                                </pfx5:Peak>
                                <pfx5:OffPeak>
                                    <xsl:value-of select="if(string-length(current()/ns7:OFF_PEAK_DURATION)>0) then current()/ns7:OFF_PEAK_DURATION else 0"/>
                                </pfx5:OffPeak>
                                <xsl:if test="current()/ns7:ON_NET_DURATION">
                                    <pfx5:OnNet>
                                        <xsl:value-of select="current()/ns7:ON_NET_DURATION"/>
                                    </pfx5:OnNet>
                                </xsl:if>
                                <xsl:if test="current()/ns7:OFF_NET_DURATION">
                                    <pfx5:OffNet>
                                        <xsl:value-of select="current()/ns7:OFF_NET_DURATION"/>
                                    </pfx5:OffNet>
                                </xsl:if>
                                <pfx5:StartDate>
                                    <xsl:value-of select="substring-before(current()/ns7:START_DATE, '+')"/>
                                </pfx5:StartDate>
                                <pfx5:EndDate>
                                    <xsl:value-of select="substring-before(current()/ns7:END_DATE, '+')"/>
                                </pfx5:EndDate>
                            </pfx5:Records>
                        </xsl:if>
                    </xsl:for-each>
                    <pfx5:ResponseCode>
                        <xsl:value-of select="'0'"/>
                    </pfx5:ResponseCode>
                    <pfx5:ResponseDescription>
                        <xsl:value-of select="'Success'"/>
                    </pfx5:ResponseDescription>
                </pfx5:GetRatingBundlesResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetOfferUsage">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>779</pd:x>
            <pd:y>112</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESBOfferMapping.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorResponse">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>711</pd:x>
            <pd:y>291</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <data>
                        <pfx3:FaultMessage>
                            <fault>
                                <ns6:FaultType>
                                    <ns6:type>
                                        <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_Type"/>
                                    </ns6:type>
                                    <ns6:code>
                                        <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_SourceErrCode"/>
                                    </ns6:code>
                                    <ns6:description>
                                        <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_SourceErrDesc"/>
                                    </ns6:description>
                                    <ns6:sourceSystem>
                                        <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_SourceSystem"/>
                                    </ns6:sourceSystem>
                                </ns6:FaultType>
                            </fault>
                        </pfx3:FaultMessage>
                    </data>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetDADetails">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>892</pd:x>
            <pd:y>115</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESB_DAMapping.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>973</pd:x>
            <pd:y>115</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="param" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:for-each select="$ESI_Call/root/ns7:GetOfferUsageRes/ns7:Records">
                        <param>
                            <xsl:value-of select="concat('XXXX',tib:substring-after-last(current()/ns7:ACCOUNT_ID, current()/ns7:OFFER_ID))"/>
                        </param>
                    </xsl:for-each>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESI_Call-GetOffers">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>754</pd:x>
            <pd:y>219</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/GetUsage/HelperProcess/ESI_GetOffers.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                    <ns0:GetOfferRequest>
                        <ns0:GetOfferReq>
                            <ns10:Subscriber>
                                <ServiceNo>
                                    <xsl:value-of select="format:FormatMSISDN($Start/pfx3:GetRatingBundlesRequest/request/pfx4:GetRatingBundlesInput/pfx4:MSISDN, $_globalVariables/ns:GlobalVariables/MSISDNBaseLength)"/>
                                </ServiceNo>
                            </ns10:Subscriber>
                        </ns0:GetOfferReq>
                    </ns0:GetOfferRequest>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>405</pd:x>
        <pd:y>518</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetRatingBundles/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($ErrorHandler/ns14:ExceptionRequest)"/>
                    </ns2:Message>
                </ns2:Header>
                <xsl:if test="$GetTransactionID/GUID/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>513</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns14:ExceptionRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetRatingBundles/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                </ns2:Header>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description)">
                        <xsl:if test="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description">
                            <StackTrace>
                                <xsl:value-of select="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description"/>
                            </StackTrace>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description)">
                        <xsl:if test="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description">
                            <StackTrace>
                                <xsl:value-of select="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description"/>
                            </StackTrace>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                        </StackTrace>
                    </xsl:otherwise>
                </xsl:choose>
            </ns14:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1018</pd:x>
        <pd:y>515</pd:y>
        <config>
            <faultName>Schema1</faultName>
        </config>
        <pd:inputBindings>
            <ns13:ActivityInput>
                <data>
                    <pfx3:FaultMessage>
                        <fault>
                            <ns6:FaultType>
                                <ns6:type>
                                    <xsl:value-of select="$PopulateResponse/root/ErrorType"/>
                                </ns6:type>
                                <ns6:code>
                                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrCode"/>
                                </ns6:code>
                                <ns6:description>
                                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrDesc"/>
                                </ns6:description>
                                <ns6:sourceSystem>
                                    <xsl:value-of select="$PopulateResponse/root/ErrorSourceSystem"/>
                                </ns6:sourceSystem>
                                <xsl:if test="$PopulateResponse/root/ErrorSourceErrCode">
                                    <ns6:extErrorCode>
                                        <xsl:value-of select="$PopulateResponse/root/ErrorSourceErrCode"/>
                                    </ns6:extErrorCode>
                                </xsl:if>
                                <xsl:if test="$PopulateResponse/root/ErrorSourceErrDesc">
                                    <ns6:detail>
                                        <xsl:value-of select="$PopulateResponse/root/ErrorSourceErrDesc"/>
                                    </ns6:detail>
                                </xsl:if>
                            </ns6:FaultType>
                        </fault>
                    </pfx3:FaultMessage>
                </data>
            </ns13:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>281</pd:x>
        <pd:y>593</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns15:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </msgCode>
            </ns15:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>783</pd:x>
        <pd:y>519</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrDesc"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PopulateResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>586</pd:x>
        <pd:y>517</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="if(exists($_error_ErrorResponse/pfx3:FaultMessage)) then $_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:sourceSystem else&#xA;'TIBCO'"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ChannelName"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ChannelType"/>
                </ChannelType>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($ESI_Call/root/ns9:ErrorResponse)">
                        <ResponseCode>
                            <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_SourceErrCode"/>
                        </ResponseCode>
                    </xsl:when>
                    <xsl:when test="exists($ESI_Call/root/ns7:GetOfferUsageRes)">
                        <ResponseCode>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoMatchFoundErrorCode"/>
                        </ResponseCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ResponseCode>
                            <xsl:value-of select="$ErrorHandler/ns14:ExceptionRequest/ExceptionCode"/>
                        </ResponseCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($ESI_Call/root/ns9:ErrorResponse)">
                        <ResponseDescription>
                            <xsl:value-of select="$ESI_Call/root/ns9:ErrorResponse/ns9:Error_SourceErrDesc"/>
                        </ResponseDescription>
                    </xsl:when>
                    <xsl:when test="exists($ESI_Call/root/ns7:GetOfferUsageRes)">
                        <ResponseDescription>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoDataFoundErrorDesc"/>
                        </ResponseDescription>
                    </xsl:when>
                    <xsl:otherwise>
                        <ResponseDescription>
                            <xsl:value-of select="$ErrorHandler/ns14:ExceptionRequest/StackTrace"/>
                        </ResponseDescription>
                    </xsl:otherwise>
                </xsl:choose>
                <TIBCOServiceName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetRatingBundles/ComponentName"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ErrorCategory"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/TargetSystem"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
        <pd:resourceType>service.activity.getContext</pd:resourceType>
        <pd:x>249</pd:x>
        <pd:y>239</pd:y>
        <config>
            <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>JMSContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>PopulateResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorContext</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($CDMToNativeResponse/pfx5:GetRatingBundlesResponse/pfx5:Records)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PopulateResponse</pd:from>
        <pd:to>SendErrorContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMSContext</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>