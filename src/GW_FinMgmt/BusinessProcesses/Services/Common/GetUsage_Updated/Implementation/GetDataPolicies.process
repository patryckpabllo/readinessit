<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns141="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/GetDataUsage" xmlns:pfx10="http://www.zain.com/ZESB/Services/GetSubscriberOffers" xmlns:ns101="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns01="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns17="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns14="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns15="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns18="http://www.zain.com/ZESB/Services/GetVoucherlessRechargeHistory/Types" xmlns:ns151="http://www.zain.com/ZESB/Services/GetSubAccounts/Types" xmlns:ns19="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRefundHistory/GetRefundHistoryRes.xsd" xmlns:ns111="http://www.ericsson.com/CDM/telecom/FAF" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns110="http://www.zain.com/ZESB/Services/PrepaidBalance/Types" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesResponse.xsd" xmlns:pfx="http://www.zain.com/ZESB/Services/PostpaidBilling" xmlns:ns11="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns29="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesRequest.xsd" xmlns:ns25="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetOffers/GetOffersResponse.xsd" xmlns:ns26="http://www.Zain.com/schemas/CommonResources/SharedVariables/ESBOfferMapping.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns27="http://www.zain.com/ZESB/Services/GetDataUsage/Types" xmlns:wsdlPfx="http://xmlns.example.com/1450253296761" xmlns:ns21="http://www.zain.com/ZESB/Services/GetPrepaidRechargeHistory/Types" xmlns:ns22="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:ns23="http://www.zain.com/ZESB/Services/PeriodicBonus/Types" xmlns:ns121="http://www.zain.com/ZESB/Services/ExecuteRecharge/Types" xmlns:ns24="http://www.zain.com/ZESB/Services/GetSubscriberOffers/Types" xmlns:ns161="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" xmlns:ns20="http://www.zain.com/ZESB/Services/GetPrepaidRefundHistory/Types" xmlns:pfx5="http://www.zain.com/ZESB/Services/GetSubAccounts" xmlns:pfx31="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" xmlns:pfx4="http://www.zain.com/ZESB/Services/ExecuteRecharge" xmlns:pfx3="http://www.zain.com/ZESB/Services/GetUsage" xmlns:pfx2="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" xmlns:pfx9="http://www.zain.com/ZESB/Services/PeriodicBonus" xmlns:pfx8="http://www.zain.com/ZESB/Services/GetPrepaidRechargeHistory" xmlns:pfx7="http://www.zain.com/ZESB/Services/GetPrepaidRefundHistory" xmlns:pfx6="http://www.zain.com/ZESB/Services/GetVoucherlessRechargeHistory" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdlPfx1="http://www.zain.com/ZESB/Services/PrepaidBalance" xmlns:ns9="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns131="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" xmlns:ns81="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:ns5="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns30="http://www.ericsson.com/BusinessSchemas/Common/JMSHeader/Header.xsd" xmlns:ns6="http://www.zain.com/ZESB/Types/Common" xmlns:ns171="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetChargeHistory/GetChargeHistoryRes.xsd" xmlns:ns7="http://www.zain.com/ZESB/Services/GetUsage/Types" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns3="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx21="http://www.tibco.com/schemas/GW/tester-2/Schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/GetUsage/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetUsage/GetUsage.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1450253296761" location="/BusinessWSDLS/Services/TIBCO/GetUsageDetailsAbstract.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling" location="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/GetUsage" location="/BusinessWSDLS/Services/WSDLS/GetUsage/GetUsage.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/GetUsage_Updated/Implementation/GetDataPolicies.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx3:GetDataPoliciesRequest"/>
    <pd:startX>104</pd:startX>
    <pd:startY>239</pd:startY>
    <pd:returnBindings>
        <pfx3:GetDataPoliciesResponse>
            <response>
                <xsl:copy-of select="$CDMToNativeResponse-1/ns7:GetDataPoliciesOutput"/>
            </response>
        </pfx3:GetDataPoliciesResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx3:GetDataPoliciesResponse"/>
    <pd:endX>1239</pd:endX>
    <pd:endY>215</pd:endY>
    <pd:errorSchemas>
        <Schema1 wsMsgRef="pfx3:FaultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1450342523273</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>342</pd:x>
        <pd:y>75</pd:y>
        <pd:width>777</pd:width>
        <pd:height>321</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BPI_Call</pd:from>
            <pd:to>CDMToNativeResponse</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>1=2</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>BPI_Call</pd:from>
            <pd:to>ErrorESI_Call</pd:to>
            <pd:xpathDescription>ErrorExists</pd:xpathDescription>
            <pd:lineType>Straight</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>BPI_Call</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNativeResponse</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BPI_Call</pd:from>
            <pd:to>ErrorResponse</pd:to>
            <pd:xpathDescription>ErrorResponse</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$BPI_Call/ns10:DataInquiriesResponse/ns17:Response/ResponseCode!='0'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>BPI_Call</pd:from>
            <pd:to>GetOfferMappingTable</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNativeResponse-1</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetOfferMappingTable</pd:from>
            <pd:to>CDMToNativeResponse-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BPI_Call</pd:from>
            <pd:to>ErrorResponse-for-NoData</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>count($BPI_Call/ns10:DataInquiriesResponse/ns11:SubscriberAssets/ns11:ListOfAssets/ns11:Asset)=0</pd:xpath>
        </pd:transition>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>577</pd:x>
            <pd:y>159</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetDataPolicies/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/pfx3:GetDataPoliciesRequest/request/ns7:GetDataPoliciesInput/ns7:MSISDN"/>
                        </ns2:InterfaceID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($Start/pfx3:GetDataPoliciesRequest/request/ns7:GetDataPoliciesInput)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1030</pd:x>
            <pd:y>148</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetDataPolicies/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($CDMToNativeResponse/ns7:GetDataPoliciesOutput)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="BPI_Call">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>706</pd:x>
            <pd:y>157</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/GetUsage_Updated/HelperProcess/ESI_Call_GetDataPolicies.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                    <ns0:GetOfferRequest>
                        <ns0:GetOfferReq>
                            <ns9:BusinessMessageHeader>
                                <Timestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </Timestamp>
                                <ApplicationID>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                                </ApplicationID>
                                <ComponentName>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/GetUsage/GetDataPolicies/ComponentName"/>
                                </ComponentName>
                                <Hostname>
                                    <xsl:value-of select="BW:getHostName()"/>
                                </Hostname>
                                <TransactionDomain>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                                </TransactionDomain>
                                <TransactionType>
                                    <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                                </TransactionType>
                                <TransactionID>
                                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                                </TransactionID>
                            </ns9:BusinessMessageHeader>
                            <ns9:Subscriber>
                                <ServiceNo>
                                    <xsl:value-of select="format:FormatMSISDN($Start/pfx3:GetDataPoliciesRequest/request/ns7:GetDataPoliciesInput/ns7:MSISDN, $_globalVariables/ns:GlobalVariables/MSISDNBaseLength)"/>
                                </ServiceNo>
                            </ns9:Subscriber>
                        </ns0:GetOfferReq>
                    </ns0:GetOfferRequest>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>461</pd:x>
            <pd:y>158</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorESI_Call">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>519</pd:x>
            <pd:y>276</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <data>
                        <pfx3:FaultMessage>
                            <fault>
                                <ns6:FaultType>
                                    <ns6:type>
                                        <xsl:value-of select="''"/>
                                    </ns6:type>
                                    <ns6:code>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                    </ns6:code>
                                    <ns6:description>
                                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                    </ns6:description>
                                    <ns6:sourceSystem>
                                        <xsl:value-of select="'SDP'"/>
                                    </ns6:sourceSystem>
                                </ns6:FaultType>
                            </fault>
                        </pfx3:FaultMessage>
                    </data>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CDMToNativeResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>846</pd:x>
            <pd:y>158</pd:y>
            <config>
                <element ref="ns7:GetDataPoliciesOutput"/>
            </config>
            <pd:inputBindings>
                <ns7:GetDataPoliciesOutput>
                    <ns7:IMSI>
                        <xsl:value-of select="$BPI_Call/ns10:DataInquiriesResponse/ns11:SubscriberAssets/ns11:Subscriber/IMSI"/>
                    </ns7:IMSI>
                    <xsl:for-each-group select="$BPI_Call/ns10:DataInquiriesResponse/ns11:SubscriberAssets/ns11:ListOfAssets/ns11:Asset" group-by="ns11:Product/ns11:ProductID">
                        <ns7:Service>
                            <xsl:choose>
                                <xsl:when test="string-length(ns11:Product/ns11:ProductID)!=0">
                                    <ns7:ID>
                                        <xsl:value-of select="ns11:Product/ns11:ProductID"/>
                                    </ns7:ID>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns7:ID>
                                        <xsl:value-of select="ns11:AssetID"/>
                                    </ns7:ID>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="ns11:AssetType">
                                <ns7:Type>
                                    <xsl:value-of select="ns11:AssetType"/>
                                </ns7:Type>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length(ns11:AssetStartDate)!=0">
                                    <ns7:BillingStartDate>
                                        <xsl:value-of select="ns11:AssetStartDate"/>
                                    </ns7:BillingStartDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns7:BillingStartDate>
                                        <xsl:value-of select="&quot;1970-01-01T04:00:00&quot;"/>
                                    </ns7:BillingStartDate>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length(ns11:AssetEndDate)!=0">
                                    <ns7:BillingEndDate>
                                        <xsl:value-of select="ns11:AssetEndDate"/>
                                    </ns7:BillingEndDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns7:BillingEndDate>
                                        <xsl:value-of select="&quot;1970-01-01T04:00:00&quot;"/>
                                    </ns7:BillingEndDate>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="exists(current-group()/ListOfServices/ns11:Service)">
                                    <xsl:for-each select="current-group()">
                                        <ns7:Quota>
                                            <xsl:choose>
                                                <xsl:when test="starts-with(ns11:Product/ns11:ProductName,'Prepaid')">
                                                    <ns7:ID>
                                                        <xsl:value-of select="concat(../../../ns:Quotas/ns:Quota[ns:ID=ns11:AssetID]/ns:ID,'-',substring-after(ns11:Product/ns11:ProductName, 'Prepaid '))"/>
                                                    </ns7:ID>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns7:ID>
                                                        <xsl:value-of select="concat(../../../ns:Quotas/ns:Quota[ns:ID=ns11:AssetID]/ns:ID,'-',ns11:Product/ns11:ProductName)"/>
                                                    </ns7:ID>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <ns7:Used>
                                                <xsl:value-of select="../../../ns:Quotas/ns:Quota[ns:ID=ns11:AssetID]/ns11:Used"/>
                                            </ns7:Used>
                                            <ns7:Remaining>
                                                <xsl:value-of select="../../../ns:Quotas/ns:Quota[ns:ID=ns11:AssetID]/ns11:Remaining"/>
                                            </ns7:Remaining>
                                            <ns7:Threshold>
                                                <xsl:value-of select="../../../ns:Quotas/ns:Quota[ns:ID=ns11:AssetID]/ns11:Threshold"/>
                                            </ns7:Threshold>
                                        </ns7:Quota>
                                    </xsl:for-each>
                                    <xsl:for-each select="current-group()/ListOfServices/ns11:Service">
                                        <ns7:Quota>
                                            <xsl:choose>
                                                <xsl:when test="starts-with(../../ns11:Product/ns11:ProductName,'Prepaid')">
                                                    <ns7:ID>
                                                        <xsl:value-of select="concat(../../ns11:AssetID,'-',substring-after(../../ns11:Product/ns11:ProductName, 'Prepaid '))"/>
                                                    </ns7:ID>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns7:ID>
                                                        <xsl:value-of select="concat(../../ns11:AssetID,'-',../../ns11:Product/ns11:ProductName)"/>
                                                    </ns7:ID>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:choose>
                                                <xsl:when test="current()/ns11:ServiceVolume>0 and current()/ns11:ServiceUnit>0">
                                                    <ns7:Used>
                                                        <xsl:value-of select="ns11:ServiceType"/>
                                                    </ns7:Used>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns7:Used>
                                                        <xsl:value-of select="if(string-length($BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Used)>0)&#xA;then&#xA;$BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Used&#xA;else&#xA;current()/ns11:ServiceVolume"/>
                                                    </ns7:Used>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:choose>
                                                <xsl:when test="current()/ns11:ServiceUnit>0">
                                                    <ns7:Remaining>
                                                        <xsl:value-of select="ns11:ServiceUnit"/>
                                                    </ns7:Remaining>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns7:Remaining>
                                                        <xsl:value-of select="if(string-length($BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Remaining)>0)&#xA;then&#xA;$BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Remaining&#xA;else&#xA;0"/>
                                                    </ns7:Remaining>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <xsl:choose>
                                                <xsl:when test="current()/ns11:ServiceVolume>0">
                                                    <ns7:Threshold>
                                                        <xsl:value-of select="ns11:ServiceVolume"/>
                                                    </ns7:Threshold>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ns7:Threshold>
                                                        <xsl:value-of select="if(string-length($BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Threshold)>0)&#xA;then&#xA;$BPI_Call/ns10:DataInquiriesResponse/ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Threshold&#xA;else&#xA;0"/>
                                                    </ns7:Threshold>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </ns7:Quota>
                                    </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns7:Quota>
                                        <ns7:ID>
                                            <xsl:value-of select="../../../ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:ID"/>
                                        </ns7:ID>
                                        <ns7:Used>
                                            <xsl:value-of select="../../../ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Used"/>
                                        </ns7:Used>
                                        <ns7:Remaining>
                                            <xsl:value-of select="../../../ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Remaining"/>
                                        </ns7:Remaining>
                                        <ns7:Threshold>
                                            <xsl:value-of select="../../../ns10:Quotas/ns10:Quota[current-group()/ns11:AssetID=ns10:ID]/ns10:Threshold"/>
                                        </ns7:Threshold>
                                    </ns7:Quota>
                                </xsl:otherwise>
                            </xsl:choose>
                        </ns7:Service>
                    </xsl:for-each-group>
                </ns7:GetDataPoliciesOutput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorResponse">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>617</pd:x>
            <pd:y>305</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <data>
                        <pfx3:FaultMessage>
                            <fault>
                                <ns6:FaultType>
                                    <ns6:type>
                                        <xsl:value-of select="''"/>
                                    </ns6:type>
                                    <ns6:code>
                                        <xsl:value-of select="$BPI_Call/ns10:DataInquiriesResponse/ns17:Response/ResponseCode"/>
                                    </ns6:code>
                                    <ns6:description>
                                        <xsl:value-of select="$BPI_Call/ns10:DataInquiriesResponse/ns17:Response/ResponseDescription"/>
                                    </ns6:description>
                                    <ns6:sourceSystem>
                                        <xsl:value-of select="'SDP'"/>
                                    </ns6:sourceSystem>
                                </ns6:FaultType>
                            </fault>
                        </pfx3:FaultMessage>
                    </data>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CDMToNativeResponse-1">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>960</pd:x>
            <pd:y>257</pd:y>
            <config>
                <element ref="ns7:GetDataPoliciesOutput"/>
            </config>
            <pd:inputBindings>
                <ns7:GetDataPoliciesOutput>
                    <ns7:IMSI>
                        <xsl:value-of select="$BPI_Call/ns10:DataInquiriesResponse/ns11:SubscriberAssets/ns11:Subscriber/IMSI"/>
                    </ns7:IMSI>
                    <xsl:for-each select="$BPI_Call/ns10:DataInquiriesResponse/ns11:SubscriberAssets/ns11:ListOfAssets/ns11:Asset">
                        <ns7:Service>
                            <ns7:ID>
                                <xsl:value-of select="current()/ns11:AssetAutoRenewalFlag"/>
                            </ns7:ID>
                            <xsl:if test="$GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetID]/ns26:CHARGING_TYPE">
                                <ns7:Type>
                                    <xsl:value-of select="$GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetID]/ns26:CHARGING_TYPE"/>
                                </ns7:Type>
                            </xsl:if>
                            <ns7:BillingStartDate>
                                <xsl:value-of select="if(string-length(ns11:AssetStartDate)>0) then (current()/ns11:AssetStartDate)&#xA;else &quot;1970-01-01T04:00:00&quot;"/>
                            </ns7:BillingStartDate>
                            <ns7:BillingEndDate>
                                <xsl:value-of select="if(exists(ns11:AssetEndDate)) then current()/ns11:AssetEndDate&#xA;else&#xA;&quot;1970-01-01T04:00:00&quot;"/>
                            </ns7:BillingEndDate>
                            <ns7:Quota>
                                <ns7:ID>
                                    <xsl:value-of select="{--if(exists(../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetID]/ns10:ID)) then --}&#xA;concat(current()/ns11:AssetAutoRenewalFlag,' - ',$GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetAutoRenewalFlag]/ns26:CHARGING_TYPE)"/>
                                </ns7:ID>
                                <ns7:Used>
                                    <xsl:value-of select="if(exists(../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Used)) then round(( ../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Used) *(1 div 1024)*(1 div 1024))&#xA;else 0"/>
                                </ns7:Used>
                                <ns7:Remaining>
                                    <xsl:value-of select="if(exists(../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Remaining)) then (../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Remaining) else&#xA;if(string-length($GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetAutoRenewalFlag]/ns26:THRESHOLD)>0) then &#xA;($GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetAutoRenewalFlag]/ns26:THRESHOLD) else&#xA;0"/>
                                </ns7:Remaining>
                                <ns7:Threshold>
                                    <xsl:value-of select="if(exists(../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Threshold)) then (../../../ns10:Quotas/ns10:Quota[ns10:ID=current()/ns11:AssetAutoRenewalFlag]/ns10:Threshold) else &#xA;if(string-length($GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetAutoRenewalFlag]/ns26:THRESHOLD)>0) then &#xA;($GetOfferMappingTable/ns26:ESBOfferMapping/ns26:Record/ns26:Records[ns26:OFFERID=current()/ns11:AssetAutoRenewalFlag]/ns26:THRESHOLD) else&#xA;0"/>
                                </ns7:Threshold>
                            </ns7:Quota>
                        </ns7:Service>
                    </xsl:for-each>
                    <xsl:if test="$BPI_Call/ns10:DataInquiriesResponse/ns10:DowngradeDate">
                        <ns7:DowngradeDate>
                            <xsl:value-of select="$BPI_Call/ns10:DataInquiriesResponse/ns10:DowngradeDate"/>
                        </ns7:DowngradeDate>
                    </xsl:if>
                </ns7:GetDataPoliciesOutput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetOfferMappingTable">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>824</pd:x>
            <pd:y>252</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESBOfferMapping.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorResponse-for-NoData">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>737</pd:x>
            <pd:y>308</pd:y>
            <config>
                <faultName>Schema1</faultName>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoDataFoundErrorDesc"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoDataFoundErrorCode"/>
                    </messageCode>
                    <data>
                        <pfx3:FaultMessage>
                            <fault>
                                <ns6:FaultType>
                                    <ns6:type>
                                        <xsl:value-of select="''"/>
                                    </ns6:type>
                                    <ns6:code>
                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoDataFoundErrorCode"/>
                                    </ns6:code>
                                    <ns6:description>
                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/CommonQueryNoDataFoundErrorDesc"/>
                                    </ns6:description>
                                    <ns6:sourceSystem>
                                        <xsl:value-of select="'TIBCO'"/>
                                    </ns6:sourceSystem>
                                </ns6:FaultType>
                            </fault>
                        </pfx3:FaultMessage>
                    </data>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>405</pd:x>
        <pd:y>518</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetBillDetails/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($ErrorHandler/ns14:ExceptionRequest)"/>
                    </ns2:Message>
                </ns2:Header>
                <xsl:if test="$GetTransactionID/GUID/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>513</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns14:ExceptionRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/UsageDetails/BilledUsage/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                </ns2:Header>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code)">
                        <ExceptionCode>
                            <xsl:value-of select="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:code"/>
                        </ExceptionCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description)">
                        <xsl:if test="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description">
                            <StackTrace>
                                <xsl:value-of select="$_error_ErrorResponse/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description"/>
                            </StackTrace>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="exists($_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description)">
                        <xsl:if test="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description">
                            <StackTrace>
                                <xsl:value-of select="$_error_ErrorESI_Call/pfx3:FaultMessage/fault/ns6:FaultType/ns6:description"/>
                            </StackTrace>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </StackTrace>
                    </xsl:otherwise>
                </xsl:choose>
            </ns14:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>927</pd:x>
        <pd:y>519</pd:y>
        <config>
            <faultName>Schema1</faultName>
        </config>
        <pd:inputBindings>
            <ns13:ActivityInput>
                <data>
                    <pfx3:FaultMessage>
                        <fault>
                            <ns6:FaultType>
                                <ns6:type>
                                    <xsl:value-of select="''"/>
                                </ns6:type>
                                <ns6:code>
                                    <xsl:value-of select="$SendErrorContext/Fault/faultcode"/>
                                </ns6:code>
                                <ns6:description>
                                    <xsl:value-of select="$SendErrorContext/Fault/faultstring"/>
                                </ns6:description>
                                <ns6:sourceSystem>
                                    <xsl:value-of select="$PopulateResponse/root/ErrorSourceSystem"/>
                                </ns6:sourceSystem>
                                <xsl:if test="$PopulateResponse/root/ErrorSourceErrCode">
                                    <ns6:extErrorCode>
                                        <xsl:value-of select="$PopulateResponse/root/ErrorSourceErrCode"/>
                                    </ns6:extErrorCode>
                                </xsl:if>
                                <xsl:if test="$PopulateResponse/root/ErrorSourceErrDesc">
                                    <ns6:detail>
                                        <xsl:value-of select="$PopulateResponse/root/ErrorSourceErrDesc"/>
                                    </ns6:detail>
                                </xsl:if>
                            </ns6:FaultType>
                        </fault>
                    </pfx3:FaultMessage>
                </data>
            </ns13:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>281</pd:x>
        <pd:y>593</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns15:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </msgCode>
            </ns15:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>750</pd:x>
        <pd:y>522</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$PopulateResponse/root/ErrorUserErrDesc"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$PopulateResponse/root/ErrorSourceSystem"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="PopulateResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>567</pd:x>
        <pd:y>520</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="'TIBCO'"/>
                </SourceSystem>
                <ChannelName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ChannelName"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ChannelType"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="$ErrorHandler/ns14:ExceptionRequest/ExceptionCode"/>
                </ResponseCode>
                <xsl:if test="$ErrorHandler/ns14:ExceptionRequest/StackTrace">
                    <ResponseDescription>
                        <xsl:value-of select="$ErrorHandler/ns14:ExceptionRequest/StackTrace"/>
                    </ResponseDescription>
                </xsl:if>
                <TIBCOServiceName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/TIBCOServiceName"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/ErrorCategory"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PaymentInfoInbound/TargetSystem"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>PopulateResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorContext</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PopulateResponse</pd:from>
        <pd:to>SendErrorContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>