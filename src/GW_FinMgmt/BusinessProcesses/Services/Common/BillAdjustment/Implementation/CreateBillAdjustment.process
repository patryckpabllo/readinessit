<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx16="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx15="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:ns="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx13="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx201="http://www.siebel.com/xml/CBiO2/20Customer/20Profile/20IO" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx18="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx17="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:ns17="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx141="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:zainesbcustom1="java://GenUUID" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns14="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:ns15="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:ns18="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:ns19="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:pfx91="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:ns13="http://www.siebel.com/xml/MOZ1%20Customer%20Billing%20Profile%20Update%20Res" xmlns:pfx="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns10="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" xmlns:ns11="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx101="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx111="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:ns21="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx221="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx31="http://xmlns.example.com/1450251772456" xmlns:pfx5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:pfx32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/SOAP/XSDs/Fault.xsd" xmlns:pfx34="http://xmlns.zain.com/BSS/ESB/Financial/PaymentPosting" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx35="http://xmlns.zain.com/BSS/ESB/Financial/BillAdjustment" xmlns:pfx8="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx36="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:ns9="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:ns5="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:ns31="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns6="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx211="http://www.siebel.com/xml/CBiO2%20Customer%20Profile%20IO" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns7="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:ns8="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:pfx28="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx29="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx23="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx20="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" xmlns:pfx21="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" xmlns:pfx26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeRequest.xsd" xmlns:pfx27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ModifyOrder/ModifyOrderRequest.xsd" xmlns:pfx24="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx25="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeResponse.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx151="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2PaymentProfileModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/XSD/EOM.COM.orderResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChange/ContractResourceChangeResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ModifyOrder/ModifyOrderRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/ModifyOrder/ModifyOrderRequest.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" schemaLocation="/CDM/ZainKWCustomerOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/Base" schemaLocation="/CDM/ZainKWBaseEntities.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" schemaLocation="/BusinessSchemas/Services/Modification/CustomerModifyOrder/CustomerOrderModify.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery/PaymentQuery.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/SOAP/XSDs/Fault.xsd" schemaLocation="/BusinessSchemas/Services/Common/SOAP/Fault.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1450251772456" location="/BusinessWSDLS/Services/TIBCO/PaymentQueryAbstractWSDL.wsdl"/>
    <wsdl:import namespace="http://xmlns.zain.com/BSS/ESB/Financial/PaymentPosting" location="/BusinessWSDLS/Services/TIBCO/PaymentPostingAbtractWSDL.wsdl"/>
    <wsdl:import namespace="http://xmlns.zain.com/BSS/ESB/Financial/BillAdjustment" location="/BusinessWSDLS/Services/TIBCO/BillAdjustmentAbstractWSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/BillAdjustment/Implementation/CreateBillAdjustment.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx35:CreateBillAdjustmentInput"/>
    <pd:startX>40</pd:startX>
    <pd:startY>412</pd:startY>
    <pd:returnBindings>
        <pfx35:CreateBillAdjustmentOutput>
            <Output>
                <xsl:copy-of select="$Call_BPI_BSCS/pfx36:BillAdjustmentResponse"/>
            </Output>
        </pfx35:CreateBillAdjustmentOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx35:CreateBillAdjustmentOutput"/>
    <pd:endX>1164</pd:endX>
    <pd:endY>382</pd:endY>
    <pd:errorSchemas>
        <faultSchema wsMsgRef="pfx35:BillAdjustmentFault"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <ModPayVar>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="group" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:sequence>
                                    <xsd:element name="DESC_TEXT" type="xsd:string" minOccurs="0"/>
                                </xsd:sequence>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </ModPayVar>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323152787082</pd:targetNamespace>
    <pd:activity name="CLE_To_Native">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>461</pd:x>
        <pd:y>578</pd:y>
        <config>
            <element ref="pfx36:BillAdjustmentResponse"/>
        </config>
        <pd:inputBindings>
            <pfx36:BillAdjustmentResponse>
                <ns12:Response>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <ns12:ResponseCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ns12:ResponseCode>
                    </xsl:if>
                    <xsl:if test="$_error/ns1:ErrorReport/Msg">
                        <ns12:ResponseDescription>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </ns12:ResponseDescription>
                    </xsl:if>
                    <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/ns12:Header/ns12:ExternalTransactionID">
                        <ns12:CorrelationID>
                            <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/ns12:Header/ns12:ExternalTransactionID"/>
                        </ns12:CorrelationID>
                    </xsl:if>
                </ns12:Response>
                <ns17:ErrorResponse>
                    <ns17:Error_SourceSystem>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                    </ns17:Error_SourceSystem>
                    <ns17:Error_SourceErrCode>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                    </ns17:Error_SourceErrCode>
                    <ns17:Error_SourceErrDesc>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                    </ns17:Error_SourceErrDesc>
                    <ns17:Error_Type>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                    </ns17:Error_Type>
                    <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrCode">
                        <ns17:Error_UserErrCode>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                        </ns17:Error_UserErrCode>
                    </xsl:if>
                    <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc">
                        <ns17:Error_UserErrDesc>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                        </ns17:Error_UserErrDesc>
                    </xsl:if>
                    <ns17:Error_Occurance_Time>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorOccuranceTime"/>
                    </ns17:Error_Occurance_Time>
                    <ns17:Error_Additional_Desc1>
                        <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc1"/>
                    </ns17:Error_Additional_Desc1>
                    <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc2">
                        <ns17:Error_Additional_Desc2>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorAdditionalDesc2"/>
                        </ns17:Error_Additional_Desc2>
                    </xsl:if>
                </ns17:ErrorResponse>
            </pfx36:BillAdjustmentResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>132</pd:x>
        <pd:y>576</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="string-length($_error/ns1:ErrorReport)>0">
                    <pfx4:ExceptionRequest>
                        <pfx6:Header>
                            <pfx6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </pfx6:ApplicationID>
                            <pfx6:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                            </pfx6:ComponentName>
                            <pfx6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </pfx6:Hostname>
                            <pfx6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </pfx6:Timestamp>
                            <pfx6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                            </pfx6:TransactionDomain>
                            <pfx6:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                            </pfx6:TransactionType>
                            <pfx6:TransactionID>
                                <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                            </pfx6:TransactionID>
                            <xsl:choose>
                                <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN)>0">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN"/>
                                    </pfx6:InterfaceID>
                                </xsl:when>
                                <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID)>0">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID"/>
                                    </pfx6:InterfaceID>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID">
                                        <pfx6:InterfaceID>
                                            <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID"/>
                                        </pfx6:InterfaceID>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx6:Filename>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Deployment"/>
                            </pfx6:Filename>
                            <pfx6:Message>
                                <xsl:value-of select="tib:render-xml($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest)"/>
                            </pfx6:Message>
                        </pfx6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                        </StackTrace>
                    </pfx4:ExceptionRequest>
                </xsl:when>
                <xsl:otherwise>
                    <pfx4:ExceptionRequest>
                        <pfx6:Header>
                            <pfx6:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </pfx6:ApplicationID>
                            <pfx6:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                            </pfx6:ComponentName>
                            <pfx6:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </pfx6:Hostname>
                            <pfx6:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </pfx6:Timestamp>
                            <pfx6:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                            </pfx6:TransactionDomain>
                            <pfx6:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                            </pfx6:TransactionType>
                            <pfx6:TransactionID>
                                <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                            </pfx6:TransactionID>
                            <xsl:choose>
                                <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN)>0">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN"/>
                                    </pfx6:InterfaceID>
                                </xsl:when>
                                <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID)>0">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID"/>
                                    </pfx6:InterfaceID>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID">
                                        <pfx6:InterfaceID>
                                            <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID"/>
                                        </pfx6:InterfaceID>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx6:Filename>
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Deployment"/>
                            </pfx6:Filename>
                            <pfx6:Message>
                                <xsl:value-of select="tib:render-xml($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest)"/>
                            </pfx6:Message>
                        </pfx6:Header>
                        <ExceptionCode>
                            <xsl:value-of select="'9999'"/>
                        </ExceptionCode>
                        <StackTrace>
                            <xsl:value-of select="'Input data Invalid'"/>
                        </StackTrace>
                    </pfx4:ExceptionRequest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>746</pd:x>
        <pd:y>578</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns2:LogRequest>
                <pfx6:Header>
                    <pfx6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </pfx6:ApplicationID>
                    <pfx6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                    </pfx6:ComponentName>
                    <pfx6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </pfx6:Hostname>
                    <pfx6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx6:Timestamp>
                    <pfx6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </pfx6:TransactionDomain>
                    <pfx6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </pfx6:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <pfx6:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </pfx6:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID">
                        <pfx6:CorrelationID>
                            <xsl:value-of select="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID"/>
                        </pfx6:CorrelationID>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN)>0">
                            <pfx6:InterfaceID>
                                <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN"/>
                            </pfx6:InterfaceID>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID)>0">
                            <pfx6:InterfaceID>
                                <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID"/>
                            </pfx6:InterfaceID>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID">
                                <pfx6:InterfaceID>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID"/>
                                </pfx6:InterfaceID>
                            </xsl:if>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx6:Filename>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Deployment"/>
                    </pfx6:Filename>
                    <pfx6:Message>
                        <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                    </pfx6:Message>
                    <pfx6:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_To_Native/pfx36:BillAdjustmentResponse)"/>
                    </pfx6:Transaction>
                    <pfx6:AltKey>
                        <pfx6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </pfx6:AltKeyName>
                        <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber">
                            <pfx6:AltKeyValue>
                                <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber"/>
                            </pfx6:AltKeyValue>
                        </xsl:if>
                    </pfx6:AltKey>
                    <pfx6:AltKey>
                        <pfx6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </pfx6:AltKeyName>
                        <pfx6:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber, 7,6),'XXXX')"/>
                        </pfx6:AltKeyValue>
                    </pfx6:AltKey>
                </pfx6:Header>
                <xsl:choose>
                    <xsl:when test="string-length($GetTransactionID/GUID/StartTimeStamp)>0">
                        <TimeDuration>
                            <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                        </TimeDuration>
                    </xsl:when>
                    <xsl:otherwise>
                        <TimeDuration>
                            <xsl:value-of select="0"/>
                        </TimeDuration>
                    </xsl:otherwise>
                </xsl:choose>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns2:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>190</pd:x>
        <pd:y>313</pd:y>
        <pd:width>801</pd:width>
        <pd:height>203</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetContext</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>Call_BPI_BSCS</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_BPI_BSCS</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetContext</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_BPI_BSCS</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:xpathDescription>ErrorExists</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Call_BPI_BSCS">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>771</pd:x>
            <pd:y>379</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/BillAdjustment/HelperProcess/BPI_BSCS_Call.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:for-each select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest">
                        <pfx36:BillAdjustmentRequest>
                            <xsl:for-each select="ns12:Header">
                                <ns12:Header>
                                    <xsl:if test="ns12:ExternalTransactionID">
                                        <ns12:ExternalTransactionID>
                                            <xsl:value-of select="ns12:ExternalTransactionID"/>
                                        </ns12:ExternalTransactionID>
                                    </xsl:if>
                                    <xsl:if test="ns12:COName">
                                        <ns12:COName>
                                            <xsl:value-of select="ns12:COName"/>
                                        </ns12:COName>
                                    </xsl:if>
                                    <xsl:if test="ns12:Consumer">
                                        <ns12:Consumer>
                                            <xsl:value-of select="ns12:Consumer"/>
                                        </ns12:Consumer>
                                    </xsl:if>
                                    <xsl:if test="ns12:Provider">
                                        <ns12:Provider>
                                            <xsl:value-of select="ns12:Provider"/>
                                        </ns12:Provider>
                                    </xsl:if>
                                    <xsl:if test="ns12:Timestamp">
                                        <ns12:Timestamp>
                                            <xsl:value-of select="ns12:Timestamp"/>
                                        </ns12:Timestamp>
                                    </xsl:if>
                                    <xsl:if test="ns12:Action">
                                        <ns12:Action>
                                            <xsl:value-of select="ns12:Action"/>
                                        </ns12:Action>
                                    </xsl:if>
                                    <xsl:if test="ns12:ApplicationID">
                                        <ns12:ApplicationID>
                                            <xsl:value-of select="ns12:ApplicationID"/>
                                        </ns12:ApplicationID>
                                    </xsl:if>
                                    <xsl:if test="ns12:ComponentName">
                                        <ns12:ComponentName>
                                            <xsl:value-of select="ns12:ComponentName"/>
                                        </ns12:ComponentName>
                                    </xsl:if>
                                    <xsl:if test="ns12:Hostname">
                                        <ns12:Hostname>
                                            <xsl:value-of select="ns12:Hostname"/>
                                        </ns12:Hostname>
                                    </xsl:if>
                                    <xsl:if test="ns12:TransactionDomain">
                                        <ns12:TransactionDomain>
                                            <xsl:value-of select="ns12:TransactionDomain"/>
                                        </ns12:TransactionDomain>
                                    </xsl:if>
                                    <xsl:if test="ns12:TransactionType">
                                        <ns12:TransactionType>
                                            <xsl:value-of select="ns12:TransactionType"/>
                                        </ns12:TransactionType>
                                    </xsl:if>
                                    <xsl:if test="ns12:TransactionID">
                                        <ns12:TransactionID>
                                            <xsl:value-of select="ns12:TransactionID"/>
                                        </ns12:TransactionID>
                                    </xsl:if>
                                </ns12:Header>
                            </xsl:for-each>
                            <xsl:for-each select="pfx36:BillAdjustment">
                                <pfx36:BillAdjustment>
                                    <xsl:for-each select="pfx36:Identifier">
                                        <pfx36:Identifier>
                                            <xsl:if test="pfx36:CustomerID">
                                                <pfx36:CustomerID>
                                                    <xsl:value-of select="pfx36:CustomerID"/>
                                                </pfx36:CustomerID>
                                            </xsl:if>
                                            <xsl:if test="pfx36:BillingAccountID">
                                                <pfx36:BillingAccountID>
                                                    <xsl:value-of select="pfx36:BillingAccountID"/>
                                                </pfx36:BillingAccountID>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns12:MSISDN)>0">
                                                <ns12:MSISDN>
                                                    <xsl:value-of select="format:FormatMSISDN(ns12:MSISDN, $_globalVariables/ns4:GlobalVariables/MSISDNBaseLength)"/>
                                                </ns12:MSISDN>
                                            </xsl:if>
                                            <xsl:if test="pfx36:ContractID">
                                                <pfx36:ContractID>
                                                    <xsl:value-of select="pfx36:ContractID"/>
                                                </pfx36:ContractID>
                                            </xsl:if>
                                        </pfx36:Identifier>
                                    </xsl:for-each>
                                    <xsl:if test="pfx36:BillId">
                                        <pfx36:BillId>
                                            <xsl:value-of select="pfx36:BillId"/>
                                        </pfx36:BillId>
                                    </xsl:if>
                                    <xsl:for-each select="ns16:Adjustment">
                                        <ns16:Adjustment>
                                            <xsl:for-each select="ns16:AdjustmentId">
                                                <ns16:AdjustmentId>
                                                    <xsl:if test="ns12:systemName">
                                                        <ns12:systemName>
                                                            <xsl:value-of select="ns12:systemName"/>
                                                        </ns12:systemName>
                                                    </xsl:if>
                                                    <xsl:if test="ns12:value">
                                                        <ns12:value>
                                                            <xsl:value-of select="ns12:value"/>
                                                        </ns12:value>
                                                    </xsl:if>
                                                </ns16:AdjustmentId>
                                            </xsl:for-each>
                                            <xsl:if test="ns12:InvoiceNumber">
                                                <ns12:InvoiceNumber>
                                                    <xsl:value-of select="ns12:InvoiceNumber"/>
                                                </ns12:InvoiceNumber>
                                            </xsl:if>
                                            <xsl:if test="ns16:AdjustmentType">
                                                <ns16:AdjustmentType>
                                                    <xsl:value-of select="ns16:AdjustmentType"/>
                                                </ns16:AdjustmentType>
                                            </xsl:if>
                                            <xsl:if test="ns16:CreditOrDebit">
                                                <ns16:CreditOrDebit>
                                                    <xsl:value-of select="ns16:CreditOrDebit"/>
                                                </ns16:CreditOrDebit>
                                            </xsl:if>
                                            <xsl:if test="ns16:InvoiceAmount">
                                                <ns16:InvoiceAmount>
                                                    <xsl:value-of select="ns16:InvoiceAmount"/>
                                                </ns16:InvoiceAmount>
                                            </xsl:if>
                                            <xsl:if test="ns16:AdjustmentAmount">
                                                <ns16:AdjustmentAmount>
                                                    <xsl:value-of select="ns16:AdjustmentAmount"/>
                                                </ns16:AdjustmentAmount>
                                            </xsl:if>
                                            <xsl:if test="ns16:Status">
                                                <ns16:Status>
                                                    <xsl:value-of select="ns16:Status"/>
                                                </ns16:Status>
                                            </xsl:if>
                                            <xsl:if test="ns16:Description">
                                                <ns16:Description>
                                                    <xsl:value-of select="ns16:Description"/>
                                                </ns16:Description>
                                            </xsl:if>
                                            <xsl:if test="ns16:AdjustmentDate">
                                                <ns16:AdjustmentDate>
                                                    <xsl:value-of select="ns16:AdjustmentDate"/>
                                                </ns16:AdjustmentDate>
                                            </xsl:if>
                                        </ns16:Adjustment>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns16:PaymentMethod">
                                        <ns16:PaymentMethod>
                                            <xsl:if test="ns16:description">
                                                <ns16:description>
                                                    <xsl:value-of select="ns16:description"/>
                                                </ns16:description>
                                            </xsl:if>
                                            <xsl:if test="ns16:ID">
                                                <ns16:ID>
                                                    <xsl:value-of select="ns16:ID"/>
                                                </ns16:ID>
                                            </xsl:if>
                                            <xsl:if test="ns16:name">
                                                <ns16:name>
                                                    <xsl:value-of select="ns16:name"/>
                                                </ns16:name>
                                            </xsl:if>
                                            <xsl:if test="ns16:paymentMethodType">
                                                <ns16:paymentMethodType>
                                                    <xsl:value-of select="ns16:paymentMethodType"/>
                                                </ns16:paymentMethodType>
                                            </xsl:if>
                                            <xsl:for-each select="ns16:CreditCardPM">
                                                <ns16:CreditCardPM>
                                                    <xsl:if test="ns16:creditCardNumber">
                                                        <ns16:creditCardNumber>
                                                            <xsl:value-of select="ns16:creditCardNumber"/>
                                                        </ns16:creditCardNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:CreditCardCompanyName">
                                                        <ns16:CreditCardCompanyName>
                                                            <xsl:value-of select="ns16:CreditCardCompanyName"/>
                                                        </ns16:CreditCardCompanyName>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:expirationDate">
                                                        <ns16:expirationDate>
                                                            <xsl:value-of select="ns16:expirationDate"/>
                                                        </ns16:expirationDate>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:ExpirationMonth">
                                                        <ns16:ExpirationMonth>
                                                            <xsl:value-of select="ns16:ExpirationMonth"/>
                                                        </ns16:ExpirationMonth>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:ExpirationYear">
                                                        <ns16:ExpirationYear>
                                                            <xsl:value-of select="ns16:ExpirationYear"/>
                                                        </ns16:ExpirationYear>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:nameOnCard">
                                                        <ns16:nameOnCard>
                                                            <xsl:value-of select="ns16:nameOnCard"/>
                                                        </ns16:nameOnCard>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:authorizationCode">
                                                        <ns16:authorizationCode>
                                                            <xsl:value-of select="ns16:authorizationCode"/>
                                                        </ns16:authorizationCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:creditCardType">
                                                        <ns16:creditCardType>
                                                            <xsl:value-of select="ns16:creditCardType"/>
                                                        </ns16:creditCardType>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:CVV">
                                                        <ns16:CVV>
                                                            <xsl:value-of select="ns16:CVV"/>
                                                        </ns16:CVV>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:ReceiptNumber">
                                                        <ns16:ReceiptNumber>
                                                            <xsl:value-of select="ns16:ReceiptNumber"/>
                                                        </ns16:ReceiptNumber>
                                                    </xsl:if>
                                                </ns16:CreditCardPM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns16:CashPM">
                                                <ns16:CashPM>
                                                    <xsl:if test="ns16:cashierInfo">
                                                        <ns16:cashierInfo>
                                                            <xsl:value-of select="ns16:cashierInfo"/>
                                                        </ns16:cashierInfo>
                                                    </xsl:if>
                                                </ns16:CashPM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns16:ZainBankPM">
                                                <ns16:ZainBankPM>
                                                    <xsl:if test="ns16:accountNumber">
                                                        <ns16:accountNumber>
                                                            <xsl:value-of select="ns16:accountNumber"/>
                                                        </ns16:accountNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:accountowner">
                                                        <ns16:accountowner>
                                                            <xsl:value-of select="ns16:accountowner"/>
                                                        </ns16:accountowner>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankCode">
                                                        <ns16:BankCode>
                                                            <xsl:value-of select="ns16:BankCode"/>
                                                        </ns16:BankCode>
                                                    </xsl:if>
                                                    <xsl:for-each select="ns16:BankCountry">
                                                        <ns16:BankCountry>
                                                            <ns12:countryCode>
                                                                <xsl:value-of select="ns12:countryCode"/>
                                                            </ns12:countryCode>
                                                            <xsl:if test="ns12:Iso2Code">
                                                                <ns12:Iso2Code>
                                                                    <xsl:value-of select="ns12:Iso2Code"/>
                                                                </ns12:Iso2Code>
                                                            </xsl:if>
                                                            <xsl:if test="ns12:Iso3Code">
                                                                <ns12:Iso3Code>
                                                                    <xsl:value-of select="ns12:Iso3Code"/>
                                                                </ns12:Iso3Code>
                                                            </xsl:if>
                                                            <xsl:if test="ns12:name">
                                                                <ns12:name>
                                                                    <xsl:value-of select="ns12:name"/>
                                                                </ns12:name>
                                                            </xsl:if>
                                                            <xsl:if test="ns12:type">
                                                                <ns12:type>
                                                                    <xsl:value-of select="ns12:type"/>
                                                                </ns12:type>
                                                            </xsl:if>
                                                        </ns16:BankCountry>
                                                    </xsl:for-each>
                                                    <xsl:if test="ns16:BankName">
                                                        <ns16:BankName>
                                                            <xsl:value-of select="ns16:BankName"/>
                                                        </ns16:BankName>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankState">
                                                        <ns16:BankState>
                                                            <xsl:value-of select="ns16:BankState"/>
                                                        </ns16:BankState>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankStreetName">
                                                        <ns16:BankStreetName>
                                                            <xsl:value-of select="ns16:BankStreetName"/>
                                                        </ns16:BankStreetName>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankStreetNumber">
                                                        <ns16:BankStreetNumber>
                                                            <xsl:value-of select="ns16:BankStreetNumber"/>
                                                        </ns16:BankStreetNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankZipCode">
                                                        <ns16:BankZipCode>
                                                            <xsl:value-of select="ns16:BankZipCode"/>
                                                        </ns16:BankZipCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:CityOfBank">
                                                        <ns16:CityOfBank>
                                                            <xsl:value-of select="ns16:CityOfBank"/>
                                                        </ns16:CityOfBank>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:lso3Code">
                                                        <ns16:lso3Code>
                                                            <xsl:value-of select="ns16:lso3Code"/>
                                                        </ns16:lso3Code>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:swiftCode">
                                                        <ns16:swiftCode>
                                                            <xsl:value-of select="ns16:swiftCode"/>
                                                        </ns16:swiftCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:verificationCode">
                                                        <ns16:verificationCode>
                                                            <xsl:value-of select="ns16:verificationCode"/>
                                                        </ns16:verificationCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns16:BankBranchName">
                                                        <ns16:BankBranchName>
                                                            <xsl:value-of select="ns16:BankBranchName"/>
                                                        </ns16:BankBranchName>
                                                    </xsl:if>
                                                </ns16:ZainBankPM>
                                            </xsl:for-each>
                                            <xsl:if test="ns16:PreferredPaymentMode">
                                                <ns16:PreferredPaymentMode>
                                                    <xsl:value-of select="ns16:PreferredPaymentMode"/>
                                                </ns16:PreferredPaymentMode>
                                            </xsl:if>
                                            <xsl:for-each select="ns12:ChequeDetails">
                                                <ns12:ChequeDetails>
                                                    <ns12:chequeNumber>
                                                        <xsl:value-of select="ns12:chequeNumber"/>
                                                    </ns12:chequeNumber>
                                                    <xsl:if test="ns12:bankName">
                                                        <ns12:bankName>
                                                            <xsl:value-of select="ns12:bankName"/>
                                                        </ns12:bankName>
                                                    </xsl:if>
                                                </ns12:ChequeDetails>
                                            </xsl:for-each>
                                        </ns16:PaymentMethod>
                                    </xsl:for-each>
                                    <xsl:if test="pfx36:GLCode">
                                        <pfx36:GLCode>
                                            <xsl:value-of select="pfx36:GLCode"/>
                                        </pfx36:GLCode>
                                    </xsl:if>
                                    <xsl:for-each select="ns16:SourceDetails">
                                        <ns16:SourceDetails>
                                            <xsl:if test="ns16:location">
                                                <ns16:location>
                                                    <xsl:value-of select="ns16:location"/>
                                                </ns16:location>
                                            </xsl:if>
                                            <xsl:if test="ns16:merchantId">
                                                <ns16:merchantId>
                                                    <xsl:value-of select="ns16:merchantId"/>
                                                </ns16:merchantId>
                                            </xsl:if>
                                            <xsl:if test="ns16:terminalId">
                                                <ns16:terminalId>
                                                    <xsl:value-of select="ns16:terminalId"/>
                                                </ns16:terminalId>
                                            </xsl:if>
                                        </ns16:SourceDetails>
                                    </xsl:for-each>
                                    <xsl:if test="pfx36:payDesk">
                                        <pfx36:payDesk>
                                            <xsl:value-of select="pfx36:payDesk"/>
                                        </pfx36:payDesk>
                                    </xsl:if>
                                    <xsl:if test="pfx36:workArea">
                                        <pfx36:workArea>
                                            <xsl:value-of select="pfx36:workArea"/>
                                        </pfx36:workArea>
                                    </xsl:if>
                                    <xsl:if test="pfx36:user">
                                        <pfx36:user>
                                            <xsl:value-of select="pfx36:user"/>
                                        </pfx36:user>
                                    </xsl:if>
                                    <xsl:if test="pfx36:modPay">
                                        <pfx36:modPay>
                                            <xsl:value-of select="pfx36:modPay"/>
                                        </pfx36:modPay>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="string-length(tib:trim(current()/ns16:PaymentMethod/ns12:ChequeDetails/ns12:chequeNumber))>0">
                                            <pfx36:remark>
                                                <xsl:value-of select="concat(pfx36:remark,&quot;|&quot;,current()/ns16:PaymentMethod/ns12:ChequeDetails/ns12:chequeNumber)"/>
                                            </pfx36:remark>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:if test="pfx36:remark">
                                                <pfx36:remark>
                                                    <xsl:value-of select="pfx36:remark"/>
                                                </pfx36:remark>
                                            </xsl:if>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:for-each select="pfx36:References">
                                        <pfx36:References>
                                            <xsl:for-each select="pfx36:items">
                                                <pfx36:items>
                                                    <xsl:if test="pfx36:Name">
                                                        <pfx36:Name>
                                                            <xsl:value-of select="pfx36:Name"/>
                                                        </pfx36:Name>
                                                    </xsl:if>
                                                    <xsl:if test="pfx36:Value">
                                                        <pfx36:Value>
                                                            <xsl:value-of select="pfx36:Value"/>
                                                        </pfx36:Value>
                                                    </xsl:if>
                                                </pfx36:items>
                                            </xsl:for-each>
                                        </pfx36:References>
                                    </xsl:for-each>
                                </pfx36:BillAdjustment>
                            </xsl:for-each>
                        </pfx36:BillAdjustmentRequest>
                    </xsl:for-each>
                    <TransactionID>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>371</pd:x>
            <pd:y>378</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>643</pd:x>
            <pd:y>378</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            </config>
            <pd:inputBindings>
                <ns2:LogRequest>
                    <pfx6:Header>
                        <pfx6:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </pfx6:ApplicationID>
                        <pfx6:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                        </pfx6:ComponentName>
                        <pfx6:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </pfx6:Hostname>
                        <pfx6:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </pfx6:Timestamp>
                        <pfx6:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                        </pfx6:TransactionDomain>
                        <pfx6:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </pfx6:TransactionType>
                        <pfx6:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </pfx6:TransactionID>
                        <xsl:if test="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID">
                            <pfx6:CorrelationID>
                                <xsl:value-of select="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID"/>
                            </pfx6:CorrelationID>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN)>0">
                                <pfx6:InterfaceID>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN"/>
                                </pfx6:InterfaceID>
                            </xsl:when>
                            <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID)>0">
                                <pfx6:InterfaceID>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID"/>
                                </pfx6:InterfaceID>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID"/>
                                    </pfx6:InterfaceID>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx6:Filename>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Deployment"/>
                        </pfx6:Filename>
                        <pfx6:Message>
                            <xsl:value-of select="tib:render-xml($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest)"/>
                        </pfx6:Message>
                        <pfx6:AltKey>
                            <pfx6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </pfx6:AltKeyName>
                            <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber">
                                <pfx6:AltKeyValue>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber"/>
                                </pfx6:AltKeyValue>
                            </xsl:if>
                        </pfx6:AltKey>
                        <pfx6:AltKey>
                            <pfx6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </pfx6:AltKeyName>
                            <pfx6:AltKeyValue>
                                <xsl:value-of select="concat('XXXXXX',substring($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber, 7,6),'XXXX')"/>
                            </pfx6:AltKeyValue>
                        </pfx6:AltKey>
                    </pfx6:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns2:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>922</pd:x>
            <pd:y>376</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            </config>
            <pd:inputBindings>
                <ns2:LogRequest>
                    <pfx6:Header>
                        <pfx6:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </pfx6:ApplicationID>
                        <pfx6:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                        </pfx6:ComponentName>
                        <pfx6:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </pfx6:Hostname>
                        <pfx6:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </pfx6:Timestamp>
                        <pfx6:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                        </pfx6:TransactionDomain>
                        <pfx6:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </pfx6:TransactionType>
                        <pfx6:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </pfx6:TransactionID>
                        <xsl:if test="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID">
                            <pfx6:CorrelationID>
                                <xsl:value-of select="$GetContext/ns18:_applicationProperties/ns18:JMSMessageID"/>
                            </pfx6:CorrelationID>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN)>0">
                                <pfx6:InterfaceID>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/ns12:MSISDN"/>
                                </pfx6:InterfaceID>
                            </xsl:when>
                            <xsl:when test="string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID)>0">
                                <pfx6:InterfaceID>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:BillingAccountID"/>
                                </pfx6:InterfaceID>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID">
                                    <pfx6:InterfaceID>
                                        <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:Identifier/pfx36:CustomerID"/>
                                    </pfx6:InterfaceID>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx6:Filename>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Deployment"/>
                        </pfx6:Filename>
                        <pfx6:Message>
                            <xsl:value-of select="tib:render-xml($Start/pfx35:CreateBillAdjustmentInput)"/>
                        </pfx6:Message>
                        <pfx6:Transaction>
                            <xsl:value-of select="tib:render-xml($Call_BPI_BSCS/pfx36:BillAdjustmentResponse)"/>
                        </pfx6:Transaction>
                        <pfx6:AltKey>
                            <pfx6:AltKeyName>
                                <xsl:value-of select="&quot;MaskedValue&quot;"/>
                            </pfx6:AltKeyName>
                            <pfx6:AltKeyValue>
                                <xsl:value-of select="concat('XXXXXX',substring($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber, 7,6),'XXXX')"/>
                            </pfx6:AltKeyValue>
                        </pfx6:AltKey>
                        <pfx6:AltKey>
                            <pfx6:AltKeyName>
                                <xsl:value-of select="&quot;SecretValue&quot;"/>
                            </pfx6:AltKeyName>
                            <xsl:if test="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber">
                                <pfx6:AltKeyValue>
                                    <xsl:value-of select="$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/ns16:PaymentMethod/ns16:CreditCardPM/ns16:creditCardNumber"/>
                                </pfx6:AltKeyValue>
                            </xsl:if>
                        </pfx6:AltKey>
                    </pfx6:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns2:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetContext">
            <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
            <pd:resourceType>service.activity.getContext</pd:resourceType>
            <pd:x>246</pd:x>
            <pd:y>379</pd:y>
            <config>
                <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Generate Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>681</pd:x>
            <pd:y>460</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <pfx9:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </pfx9:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>310</pd:x>
        <pd:y>575</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <SourceSystem>
                    <xsl:value-of select="substring-before($_error/ns1:ErrorReport/Msg, '|')"/>
                </SourceSystem>
                <ChannelType>
                    <xsl:value-of select="'External'"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="substring-after($_error/ns1:ErrorReport/Msg, '|')"/>
                </ResponseDescription>
                <TIBCOServiceName>
                    <xsl:value-of select="'BillAdjustmentService-CreateBillAdjustment'"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="'SINGLE-ERROR-CODE'"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="'BSCS'"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>600</pd:x>
        <pd:y>578</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$CLE_To_Native/pfx36:BillAdjustmentResponse/ns17:ErrorResponse/ns17:Error_UserErrCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$CLE_To_Native/pfx36:BillAdjustmentResponse/ns17:ErrorResponse/ns17:Error_UserErrDesc"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$CLE_To_Native/pfx36:BillAdjustmentResponse/ns17:ErrorResponse/ns17:Error_SourceSystem"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>964</pd:x>
        <pd:y>577</pd:y>
        <config>
            <faultName>faultSchema</faultName>
        </config>
        <pd:inputBindings>
            <pfx9:ActivityInput>
                <data>
                    <pfx35:BillAdjustmentFault>
                        <Fault>
                            <xsl:copy-of select="$CLE_To_Native/pfx36:BillAdjustmentResponse/ns17:ErrorResponse"/>
                        </Fault>
                    </pfx35:BillAdjustmentFault>
                </data>
            </pfx9:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>39</pd:x>
        <pd:y>240</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/LOVs.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate-Error-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>393</pd:x>
        <pd:y>244</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx9:ActivityInput>
                <message>
                    <xsl:value-of select="'Invalid ModPay'"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'TIB-BUS-VAL-ERR-20'"/>
                </messageCode>
            </pfx9:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>166</pd:x>
        <pd:y>240</pd:y>
        <config>
            <variableName>ModPayVar</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$GetVariable/ns19:ListOfValues/ns19:LOV[ns19:TYPE='CBIO2_PAYMENT_MODE' and ns19:DESC_TEXT=$Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:modPay]">
                    <group>
                        <xsl:if test="ns19:DESC_TEXT">
                            <DESC_TEXT>
                                <xsl:value-of select="ns19:DESC_TEXT"/>
                            </DESC_TEXT>
                        </xsl:if>
                    </group>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_To_Native</pd:from>
        <pd:to>SendErrorContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>CLE_To_Native</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorContext</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:xpathDescription>ModPayExists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx35:CreateBillAdjustmentInput/Input/pfx36:BillAdjustmentRequest/pfx36:BillAdjustment/pfx36:modPay)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Generate-Error-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>ValidModPay</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ModPayVar/root/group[1]/DESC_TEXT)&gt;0</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>This service is exposed to handle Bill Adjustment requests.
</pd:description>
        <pd:x>342</pd:x>
        <pd:y>153</pd:y>
        <pd:width>383</pd:width>
        <pd:height>40</pd:height>
        <pd:fontColor>-16777012</pd:fontColor>
        <pd:color>-16711885</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>