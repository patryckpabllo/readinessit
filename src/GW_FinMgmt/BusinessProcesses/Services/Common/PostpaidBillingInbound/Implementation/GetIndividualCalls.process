<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns15="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://xmlns.example.com/1450253296761" xmlns:format="java://MSISDNFormatter" xmlns:ns5="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns6="http://www.zain.com/ZESB/Types/Common" xmlns:ns13="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns7="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:pfx="http://www.zain.com/ZESB/Services/PostpaidBilling" xmlns:ns8="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns3="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Types/Common" schemaLocation="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1450253296761" location="/BusinessWSDLS/Services/TIBCO/GetUsageDetailsAbstract.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/PostpaidBilling" location="/BusinessWSDLS/Services/WSDLS/PostpaidBilling/PostpaidBillingInbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/PostpaidBillingInbound/Implementation/GetIndividualCalls.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:IndividualCallsRequest"/>
    <pd:startX>104</pd:startX>
    <pd:startY>239</pd:startY>
    <pd:returnBindings>
        <pfx:IndividualCallsResponse>
            <parameters>
                <xsl:copy-of select="$CDMToNativeResponse/pfx2:IndividualCallsResponse"/>
            </parameters>
        </pfx:IndividualCallsResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:IndividualCallsResponse"/>
    <pd:endX>1332</pd:endX>
    <pd:endY>196</pd:endY>
    <pd:errorSchemas>
        <Schema1 wsMsgRef="pfx:faultMessage"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1450342523273</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>342</pd:x>
        <pd:y>75</pd:y>
        <pd:width>777</pd:width>
        <pd:height>321</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetContext</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogOut</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetTransactionID</pd:from>
            <pd:to>LogIn</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>GetESBLOV</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_Call</pd:from>
            <pd:to>ErrorESI_Call</pd:to>
            <pd:xpathDescription>ErrorExists</pd:xpathDescription>
            <pd:lineType>Straight</pd:lineType>
            <pd:lineColor>-52429</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>ESI_Call</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CDMToNativeResponse</pd:from>
            <pd:to>LogOut</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetContext</pd:from>
            <pd:to>GetTransactionID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogIn</pd:from>
            <pd:to>Generate-Error-1</pd:to>
            <pd:xpathDescription>Fututre Date</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>tib:compare-dateTime($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate, current-dateTime())=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>GetESBLOV</pd:from>
            <pd:to>CDMToNativeResponse</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="LogIn">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>575</pd:x>
            <pd:y>159</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetIndividualCalls/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <xsl:if test="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID">
                            <ns2:CorrelationID>
                                <xsl:value-of select="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID"/>
                            </ns2:CorrelationID>
                        </xsl:if>
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:ContractId"/>
                        </ns2:InterfaceID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($Start/pfx:IndividualCallsRequest)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogOut">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>995</pd:x>
            <pd:y>159</pd:y>
            <config>
                <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
                <spawn>false</spawn>
            </config>
            <pd:inputBindings>
                <ns12:LogRequest>
                    <ns2:Header>
                        <ns2:ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ns2:ApplicationID>
                        <ns2:ComponentName>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetIndividualCalls/ComponentName"/>
                        </ns2:ComponentName>
                        <ns2:Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </ns2:Hostname>
                        <ns2:Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:Timestamp>
                        <ns2:TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </ns2:TransactionDomain>
                        <ns2:TransactionType>
                            <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                        </ns2:TransactionType>
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                        <xsl:if test="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID">
                            <ns2:CorrelationID>
                                <xsl:value-of select="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID"/>
                            </ns2:CorrelationID>
                        </xsl:if>
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:ContractId"/>
                        </ns2:InterfaceID>
                        <ns2:Filename>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                        </ns2:Filename>
                        <ns2:Message>
                            <xsl:value-of select="tib:render-xml($CDMToNativeResponse/pfx2:IndividualCallsResponse)"/>
                        </ns2:Message>
                    </ns2:Header>
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                    </Category>
                    <Status>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                    </Status>
                    <Audit>
                        <xsl:value-of select="0"/>
                    </Audit>
                </ns12:LogRequest>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ESI_Call">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>707</pd:x>
            <pd:y>160</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/PostpaidBillingInbound/HelperProcess/ESI_Call_GetIndividualCalls.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <TransactionId>
                        <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                    </TransactionId>
                    <StartTimeStamp>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </StartTimeStamp>
                    <ns3:BilledUsageRequest>
                        <ns3:customerID>
                            <xsl:value-of select="$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:ContractId"/>
                        </ns3:customerID>
                        <ns3:subscriberNumber>
                            <xsl:value-of select="if (string-length($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:Msisdn)>0)&#xA;then format:FormatMSISDN($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:Msisdn, $_globalVariables/ns:GlobalVariables/MSISDNBaseLength)&#xA;else ''"/>
                        </ns3:subscriberNumber>
                        <ns3:fromDate>
                            <xsl:value-of select="tib:create-date(tib:get-year-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), '01')"/>
                        </ns3:fromDate>
                        <ns3:toDate>
                            <xsl:value-of select="if(floor(tib:get-year-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate) div 4)=tib:get-year-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate) div 4)&#xA;then&#xA;tib:create-date(tib:get-year-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), &#xA;(&#xA;if ((tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='01')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='03')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='05')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='07')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='08')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='10')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='12')&#xA;)&#xA;then '31'&#xA;else if (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='02')&#xA;then '29'&#xA;else '30' ))&#xA;else&#xA;tib:create-date(tib:get-year-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate), &#xA;(&#xA;if ((tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='01')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='03')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='05')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='07')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='08')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='10')&#xA;or (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='12')&#xA;)&#xA;then '31'&#xA;else if (tib:get-month-from-date($Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:BillDate)='02')&#xA;then '28'&#xA;else '30' ))"/>
                        </ns3:toDate>
                    </ns3:BilledUsageRequest>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetTransactionID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>461</pd:x>
            <pd:y>158</pd:y>
            <config>
                <processName>/CommonProcesses/Utilities/GUID.process</processName>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorESI_Call">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>713</pd:x>
            <pd:y>304</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CDMToNativeResponse">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>898</pd:x>
            <pd:y>159</pd:y>
            <config>
                <element ref="pfx2:IndividualCallsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx2:IndividualCallsResponse>
                    <pfx2:Calls>
                        <xsl:for-each select="$ESI_Call/ns4:BilledUsageResponse/ns4:ResultSet/ns4:Record[ns4:usageCharge>0 and (ns4:ZNCODE_DES='ROAM_IN' or ns4:ZNCODE_DES='ROAM_OUT' or ns4:ZNCODE_DES='ROAM_SMS' )]">
                            <pfx2:Call>
                                <pfx2:CallDate>
                                    <xsl:value-of select="ns4:entryDate"/>
                                </pfx2:CallDate>
                                <pfx2:CallType>
                                    <xsl:choose>
                                        <xsl:when test="exists($GetESBLOV/root/ns8:ESBLOV/ns8:Record[ns8:TRANSKEY=upper-case(concat(current()/ns4:ZNCODE_DES,'-',$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:Language))]/ns8:TRANSVALUE)">
                                            <xsl:value-of select="$GetESBLOV/root/ns8:ESBLOV/ns8:Record[ns8:TRANSKEY=upper-case(concat(current()/ns4:ZNCODE_DES,'-',$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:Language))]/ns8:TRANSVALUE"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx2:CallType>
                                <pfx2:CalledNo>
                                    <xsl:choose>
                                        <xsl:when test="exists(if (starts-with(ns4:PartyB, '965'))&#xA;then (substring-after(ns4:PartyB, &quot;965&quot;))&#xA;else ns4:PartyB)">
                                            <xsl:value-of select="if (starts-with(ns4:PartyB, '965'))&#xA;then (substring-after(ns4:PartyB, &quot;965&quot;))&#xA;else ns4:PartyB"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx2:CalledNo>
                                <pfx2:Country>
                                    <xsl:choose>
                                        <xsl:when test="exists(if (ns4:Country='Any Destination')&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetIndividualCalls/Country&#xA;else ns4:Country)">
                                            <xsl:value-of select="if (ns4:Country='Any Destination')&#xA;then $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetIndividualCalls/Country&#xA;else ns4:Country"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx2:Country>
                                <pfx2:Duration>
                                    <xsl:value-of select="ns4:Duration"/>
                                </pfx2:Duration>
                                <pfx2:Cost>
                                    <xsl:value-of select="ns4:usageCharge"/>
                                </pfx2:Cost>
                            </pfx2:Call>
                        </xsl:for-each>
                    </pfx2:Calls>
                </pfx2:IndividualCallsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetContext">
            <pd:type>com.tibco.ae.tools.palettes.servicepalette.GetContextActivity</pd:type>
            <pd:resourceType>service.activity.getContext</pd:resourceType>
            <pd:x>468</pd:x>
            <pd:y>249</pd:y>
            <config>
                <variableConfig>/BusinessSchemas/Services/Common/JMSSchema/InputContext.contextResource</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Generate-Error-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>577</pd:x>
            <pd:y>304</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns13:ActivityInput>
                    <message>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/BSCSBillDateFromFutureErrDesc"/>
                    </message>
                    <messageCode>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonErrors/BSCSBillDateFromFutureErrCode"/>
                    </messageCode>
                </ns13:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetESBLOV">
            <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
            <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
            <pd:x>798</pd:x>
            <pd:y>162</pd:y>
            <config>
                <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
            </config>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>685</pd:x>
        <pd:y>517</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/GetIndividualCalls/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <xsl:if test="$GetTransactionID/GUID/TransactionID">
                        <ns2:TransactionID>
                            <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                        </ns2:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID">
                        <ns2:CorrelationID>
                            <xsl:value-of select="$GetContext/ns7:_applicationProperties/ns7:JMSMessageID"/>
                        </ns2:CorrelationID>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:ContractId">
                        <ns2:InterfaceID>
                            <xsl:value-of select="$Start/pfx:IndividualCallsRequest/parameters/pfx2:IndividualCallsRequest/pfx2:ContractId"/>
                        </ns2:InterfaceID>
                    </xsl:if>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/pfx:IndividualCallsRequest)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_To_Native/ns6:FaultType)"/>
                    </ns2:Transaction>
                </ns2:Header>
                <xsl:if test="$GetTransactionID/GUID/StartTimeStamp">
                    <TimeDuration>
                        <xsl:value-of select="$GetTransactionID/GUID/StartTimeStamp"/>
                    </TimeDuration>
                </xsl:if>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>513</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="string-length($_error)>0">
                    <ns14:ExceptionRequest>
                        <ns2:Header>
                            <ns2:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns2:ApplicationID>
                            <ns2:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/UsageDetails/BilledUsage/ComponentName"/>
                            </ns2:ComponentName>
                            <ns2:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns2:Hostname>
                            <ns2:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns2:Timestamp>
                            <ns2:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                            </ns2:TransactionDomain>
                            <ns2:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                            </ns2:TransactionType>
                            <xsl:if test="$GetTransactionID/GUID/TransactionID">
                                <ns2:TransactionID>
                                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                                </ns2:TransactionID>
                            </xsl:if>
                        </ns2:Header>
                        <ExceptionCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </ExceptionCode>
                        <StackTrace>
                            <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                        </StackTrace>
                    </ns14:ExceptionRequest>
                </xsl:when>
                <xsl:otherwise>
                    <ns14:ExceptionRequest>
                        <ns2:Header>
                            <ns2:ApplicationID>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </ns2:ApplicationID>
                            <ns2:ComponentName>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/UsageDetails/BilledUsage/ComponentName"/>
                            </ns2:ComponentName>
                            <ns2:Hostname>
                                <xsl:value-of select="BW:getHostName()"/>
                            </ns2:Hostname>
                            <ns2:Timestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns2:Timestamp>
                            <ns2:TransactionDomain>
                                <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                            </ns2:TransactionDomain>
                            <ns2:TransactionType>
                                <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                            </ns2:TransactionType>
                            <xsl:if test="$GetTransactionID/GUID/TransactionID">
                                <ns2:TransactionID>
                                    <xsl:value-of select="$GetTransactionID/GUID/TransactionID"/>
                                </ns2:TransactionID>
                            </xsl:if>
                        </ns2:Header>
                        <ExceptionCode>
                            <xsl:value-of select="'ZESB-1001'"/>
                        </ExceptionCode>
                        <StackTrace>
                            <xsl:value-of select="'Bill Date can not be a future date'"/>
                        </StackTrace>
                    </ns14:ExceptionRequest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>779</pd:x>
        <pd:y>518</pd:y>
        <config>
            <faultName>Schema1</faultName>
        </config>
        <pd:inputBindings>
            <ns13:ActivityInput>
                <data>
                    <pfx:faultMessage>
                        <fault>
                            <xsl:copy-of select="$CLE_To_Native/ns6:FaultType"/>
                        </fault>
                    </pfx:faultMessage>
                </data>
            </ns13:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>281</pd:x>
        <pd:y>593</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns15:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </msgCode>
            </ns15:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendErrorContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>582</pd:x>
        <pd:y>518</pd:y>
        <config>
            <variableConfig>/CommonResources/Context/Internal/EAIFaultContext.contextResource</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$CLE_To_Native/ns6:FaultType/ns6:code"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$CLE_To_Native/ns6:FaultType/ns6:description"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="$CLE_To_Native/ns6:FaultType/ns6:sourceSystem"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_To_Native">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>454</pd:x>
        <pd:y>517</pd:y>
        <config>
            <element ref="ns6:FaultType"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$ErrorResponseMapFromEOM/root/ErrorUserErrCode='ZESB-9999'">
                    <ns6:FaultType>
                        <ns6:type>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                        </ns6:type>
                        <ns6:code>
                            <xsl:value-of select="'ZESB-1001'"/>
                        </ns6:code>
                        <ns6:description>
                            <xsl:value-of select="'Bussiness Error'"/>
                        </ns6:description>
                        <ns6:sourceSystem>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                        </ns6:sourceSystem>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <ns6:extErrorCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </ns6:extErrorCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <ns6:detail>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </ns6:detail>
                        </xsl:if>
                    </ns6:FaultType>
                </xsl:when>
                <xsl:otherwise>
                    <ns6:FaultType>
                        <ns6:type>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorType"/>
                        </ns6:type>
                        <ns6:code>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrCode"/>
                        </ns6:code>
                        <ns6:description>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorUserErrDesc"/>
                        </ns6:description>
                        <ns6:sourceSystem>
                            <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceSystem"/>
                        </ns6:sourceSystem>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode">
                            <ns6:extErrorCode>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrCode"/>
                            </ns6:extErrorCode>
                        </xsl:if>
                        <xsl:if test="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc">
                            <ns6:detail>
                                <xsl:value-of select="$ErrorResponseMapFromEOM/root/ErrorSourceErrDesc"/>
                            </ns6:detail>
                        </xsl:if>
                    </ns6:FaultType>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorResponseMapFromEOM">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>316</pd:x>
        <pd:y>515</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="starts-with($_error/ns1:ErrorReport/MsgCode,'BW')&#xA;or&#xA;starts-with($_error/ns1:ErrorReport/MsgCode,'ZESB')&#xA;or&#xA;starts-with($_error/ns1:ErrorReport/MsgCode,'TIB')">
                        <SourceSystem>
                            <xsl:value-of select="'TIBCO'"/>
                        </SourceSystem>
                    </xsl:when>
                    <xsl:otherwise>
                        <SourceSystem>
                            <xsl:value-of select="substring-before($_error/ns1:ErrorReport/Msg, '|')"/>
                        </SourceSystem>
                    </xsl:otherwise>
                </xsl:choose>
                <ChannelName>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/ChannelName"/>
                </ChannelName>
                <ChannelType>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/ChannelType"/>
                </ChannelType>
                <ResponseCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </ResponseCode>
                <ResponseDescription>
                    <xsl:value-of select="if (contains($_error/ns1:ErrorReport/Msg,'|'))&#xA;then substring-after($_error/ns1:ErrorReport/Msg, '|')&#xA;else $_error/ns1:ErrorReport/Msg"/>
                </ResponseDescription>
                <TIBCOServiceName>
                    <xsl:value-of select="'PostpaidBillingService-getIndividualCalls'"/>
                </TIBCOServiceName>
                <ErrorCategory>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/ErrorCategory"/>
                </ErrorCategory>
                <TargetSystem>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/PostpaidBillingInbound/TargetSystem"/>
                </TargetSystem>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>ErrorResponseMapFromEOM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendErrorContext</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>CLE_To_Native</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_To_Native</pd:from>
        <pd:to>SendErrorContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorResponseMapFromEOM</pd:from>
        <pd:to>CLE_To_Native</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>