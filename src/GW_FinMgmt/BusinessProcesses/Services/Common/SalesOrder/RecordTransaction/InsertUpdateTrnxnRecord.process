<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <pd:name>BusinessProcesses/Services/Common/SalesOrder/RecordTransaction/InsertUpdateTrnxnRecord.process</pd:name>
    <pd:startName>ReceiveTrnxnCords</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="ReceiveTrnxnCords">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>132</pd:x>
        <pd:y>35</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/SalesOrder/InsertTrasanctionRec/RequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <OutDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="TRANSDATE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CONTRACTID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MSISDN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="USERNAME" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANSACTIONID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANS_REFNUM" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANS_REF" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AMOUNT" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="PAY_METHOD" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TRANSACTION_TYPE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="EXECUTION_STATUS" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="REQUEST_STATUS" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="RECEIPTNO" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="VOUCHER_PIN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="VOUCHER_EXPIRY" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="NEW_BALANCE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="NEW_EXPIRY" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="OLD_EXPIRY" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTORIZATION" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_TYPE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MERCHANT_ID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TERMINAL_ID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_CODE_SOURCE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_NUMBER" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CARD_EXPIRY" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ISSUE_BANK" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_RESP_CODE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_ACQ_CODE" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="AUTH_NUMBER" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutDataxsdString>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>742</pd:endX>
    <pd:endY>70</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1478932089381</pd:targetNamespace>
    <pd:activity name="InsertRetryRec">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>475</pd:x>
        <pd:y>35</pd:y>
        <config>
            <timeout>%%CommonResources/Connections/JDBC/Internal/TIBCOAppDB/QueryTimeout%%</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <statement>Insert into SalesOrder_RECORDS (
CONTRACTID,
MSISDN,
USERNAME,
TRANSACTIONID,
TRANS_REFNUM,
AMOUNT,
PAY_METHOD,
TRANSACTION_TYPE,
EXECUTION_STATUS,
REQUEST_STATUS,
RECEIPTNO,
VOUCHER_PIN,
VOUCHER_EXPIRY,
NEW_BALANCE,
NEW_EXPIRY,
OLD_EXPIRY,
AUTORIZATION,
CARD_TYPE,
MERCHANT_ID,
TERMINAL_ID,
AUTH_CODE_SOURCE,
CARD_NUMBER,
CARD_EXPIRY,
ISSUE_BANK,
AUTH_RESP_DESC,
AUTH_ACQ_CODE,
AUTH_NUMBER) values ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>CONTRACTID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>MSISDN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>USERNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANS_REFNUM</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AMOUNT</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PAY_METHOD</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTION_TYPE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>EXECUTION_STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>REQUEST_STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RECEIPTNO</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>VOUCHER_PIN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>VOUCHER_EXPIRY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>NEW_BALANCE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>NEW_EXPIRY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>OLD_EXPIRY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AUTORIZATION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CARD_TYPE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>MERCHANT_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TERMINAL_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AUTH_CODE_SOURCE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CARD_NUMBER</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CARD_EXPIRY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ISSUE_BANK</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AUTH_RESP_DESC</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AUTH_ACQ_CODE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AUTH_NUMBER</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <CONTRACTID>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CONTRACTID)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CONTRACTID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CONTRACTID>
                <MSISDN>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/MSISDN)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/MSISDN"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MSISDN>
                <USERNAME>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/USERNAME)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/USERNAME"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </USERNAME>
                <TRANSACTIONID>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANSACTIONID)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANSACTIONID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONID>
                <TRANS_REFNUM>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANS_REFNUM)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANS_REFNUM"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANS_REFNUM>
                <AMOUNT>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AMOUNT)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AMOUNT"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AMOUNT>
                <PAY_METHOD>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/PAY_METHOD)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/PAY_METHOD"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </PAY_METHOD>
                <TRANSACTION_TYPE>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANSACTION_TYPE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TRANSACTION_TYPE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTION_TYPE>
                <EXECUTION_STATUS>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/EXECUTION_STATUS)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/EXECUTION_STATUS"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </EXECUTION_STATUS>
                <REQUEST_STATUS>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/REQUEST_STATUS)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/REQUEST_STATUS"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </REQUEST_STATUS>
                <RECEIPTNO>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/RECEIPTNO)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/RECEIPTNO"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RECEIPTNO>
                <VOUCHER_PIN>
                    <xsl:choose>
                        <xsl:when test="exists(tib:string-to-base64($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/VOUCHER_PIN))">
                            <xsl:value-of select="tib:string-to-base64($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/VOUCHER_PIN)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </VOUCHER_PIN>
                <VOUCHER_EXPIRY>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/VOUCHER_EXPIRY)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/VOUCHER_EXPIRY"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </VOUCHER_EXPIRY>
                <NEW_BALANCE>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/NEW_BALANCE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/NEW_BALANCE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </NEW_BALANCE>
                <NEW_EXPIRY>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/NEW_EXPIRY)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/NEW_EXPIRY"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </NEW_EXPIRY>
                <OLD_EXPIRY>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/OLD_EXPIRY)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/OLD_EXPIRY"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </OLD_EXPIRY>
                <AUTORIZATION>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTORIZATION)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTORIZATION"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AUTORIZATION>
                <CARD_TYPE>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_TYPE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_TYPE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CARD_TYPE>
                <MERCHANT_ID>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/MERCHANT_ID)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/MERCHANT_ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MERCHANT_ID>
                <TERMINAL_ID>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TERMINAL_ID)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/TERMINAL_ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TERMINAL_ID>
                <AUTH_CODE_SOURCE>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_CODE_SOURCE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_CODE_SOURCE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AUTH_CODE_SOURCE>
                <CARD_NUMBER>
                    <xsl:choose>
                        <xsl:when test="exists(tib:string-to-base64($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_NUMBER))">
                            <xsl:value-of select="tib:string-to-base64($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_NUMBER)"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CARD_NUMBER>
                <CARD_EXPIRY>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_EXPIRY)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/CARD_EXPIRY"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CARD_EXPIRY>
                <ISSUE_BANK>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/ISSUE_BANK)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/ISSUE_BANK"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ISSUE_BANK>
                <AUTH_RESP_DESC>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_RESP_CODE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_RESP_CODE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AUTH_RESP_DESC>
                <AUTH_ACQ_CODE>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_ACQ_CODE)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_ACQ_CODE"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AUTH_ACQ_CODE>
                <AUTH_NUMBER>
                    <xsl:choose>
                        <xsl:when test="exists($ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_NUMBER)">
                            <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/root/AUTH_NUMBER"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AUTH_NUMBER>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>203</pd:x>
        <pd:y>268</pd:y>
        <config>
            <role>User</role>
            <suppressHeader>false</suppressHeader>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Error in Retry Record Insertion or update -- &quot;,&quot;(TransactionId:-&quot;,$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/pfx:CreateSalesTransaction/pfx:RetryDetails/pfx:TransactionID,&quot;) &quot;,tib:render-xml($_error))"/>
                </message>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>98</pd:x>
        <pd:y>266</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>383</pd:x>
        <pd:y>265</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/pfx:CreateSalesTransaction/pfx:RetryDetails/pfx:TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/pfx:CreateSalesTransaction/pfx:MSISDN"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$ReceiveTrnxnCords/pfx2:ActivityOutput/Body/pfx:CreateSalesTransaction/pfx:MSISDN"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($ReceiveTrnxnCords/pfx2:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                </StackTrace>
            </ns12:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>ReceiveTrnxnCords</pd:from>
        <pd:to>InsertRetryRec</pd:to>
        <pd:xpathDescription>Insert</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InsertRetryRec</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>