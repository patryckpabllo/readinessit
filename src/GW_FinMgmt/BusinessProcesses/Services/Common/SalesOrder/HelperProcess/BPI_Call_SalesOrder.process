<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx131="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx201="http://www.siebel.com/xml/CBiO2/20Customer/20Profile/20IO" xmlns:pfx202="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" xmlns:pfx57="http://www.zain.com/ZESB/Services/SalesOrder/Types" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:pfx59="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx341="http://xmlns.zain.com/BSS/ESB/Financial/PaymentPosting" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx54="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:pfx55="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:pfx56="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx52="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:pfx141="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx50="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ModifyOrder/ModifyOrderRequest.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx331="http://www.ericsson.com/Mozaic/BusinessSchemas/SOAP/XSDs/Fault.xsd" xmlns:pfx48="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeResponse.xsd" xmlns:pfx46="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx47="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx44="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx45="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeRequest.xsd" xmlns:pfx42="qqwe" xmlns:pfx43="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" xmlns:pfx41="http://www.tibco.com/schemas/GW/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd" xmlns:pfx40="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" xmlns:ns71="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx39="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:pfx221="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:ns61="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx32="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx36="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx310="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx311="http://xmlns.example.com/1450251772456" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:pfx121="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:ns131="http://www.siebel.com/xml/MOZ1%20Customer%20Billing%20Profile%20Update%20Res" xmlns:ns81="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx510="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:pfx211="http://www.siebel.com/xml/CBiO2%20Customer%20Profile%20IO" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns91="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx241="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:ns16="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:ns17="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:ns14="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns15="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx371="http://www.zain.com/ZESB/Services/SalesOrder" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns22="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:ns23="www.tibco.com/plugin/java/JavaMethodActivityInput" xmlns:ns24="www.tibco.com/plugin/java/JavaMethodActivityOutput" xmlns:pfx361="http://www.zain.com/ZESB/Types/Common" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx161="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:pfx351="http://www.zain.com/ZESB/Services/Payment" xmlns:pfx151="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2AddressModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateBillProcess/CreateBillProcessResponse.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2BillingProfileModificationResIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCBiO2PaymentProfileModificationResIO.xsd"/>
    <xsd:import namespace="qqwe" schemaLocation="/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Modification/XSD/ListOfCbio2CustomerModificationReqIO.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/XSD/EOM.COM.orderResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChange/ContractResourceChangeResponse.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" schemaLocation="/CDM/ZainKWCustomerOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/Base" schemaLocation="/CDM/ZainKWBaseEntities.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" schemaLocation="/BusinessSchemas/Services/Modification/CustomerModifyOrder/CustomerOrderModify.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery/PaymentQuery.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/SalesOrder/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/SalesOrder/SalesOrder.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/SalesOrder/HelperProcess/BPI_Call_SalesOrder.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx57:SalesOrderInput"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                    <xsd:element name="PaymentMethod" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="LOW" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>26</pd:startX>
    <pd:startY>136</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$CDMToNative/pfx57:SalesOrderOutput"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx57:SalesOrderOutput"/>
    <pd:endX>1012</pd:endX>
    <pd:endY>138</pd:endY>
    <pd:errorSchemas>
        <EricErr ref="pfx59:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>577</pd:x>
        <pd:y>139</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CustomerID"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx57:SalesOrderInput)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
                    </ns6:Transaction>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns6:AltKeyName>
                        <xsl:if test="$NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber">
                            <ns6:AltKeyValue>
                                <xsl:value-of select="$NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber"/>
                            </ns6:AltKeyValue>
                        </xsl:if>
                    </ns6:AltKey>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber,6),'XXXXXX',tib:right($NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber,4))"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>287</pd:x>
        <pd:y>139</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:ContractId"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx57:SalesOrderInput)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx58:CreateSalesTransaction)"/>
                    </ns6:Transaction>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns6:AltKeyName>
                        <xsl:if test="$NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber">
                            <ns6:AltKeyValue>
                                <xsl:value-of select="$NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber"/>
                            </ns6:AltKeyValue>
                        </xsl:if>
                    </ns6:AltKey>
                    <ns6:AltKey>
                        <ns6:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns6:AltKeyName>
                        <ns6:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber,6),'XXXXXX',tib:right($NativeToCDM/pfx58:CreateSalesTransaction/pfx58:CardDetails/pfx58:CardNumber,4))"/>
                        </ns6:AltKeyValue>
                    </ns6:AltKey>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>426</pd:x>
        <pd:y>139</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($NativeToCDM/pfx58:CreateSalesTransaction)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/BPI_Request_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestTimeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>731</pd:x>
        <pd:y>35</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <xsl:if test="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msg">
                    <message>
                        <xsl:value-of select="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msgCode">
                    <messageCode>
                        <xsl:value-of select="$_error_ParseResponse/ActivityErrors/ns13:XMLParseException/msgCode"/>
                    </messageCode>
                </xsl:if>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>731</pd:x>
        <pd:y>139</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx58:CreateSalesTransaction" minOccurs="0"/>
                            <xsd:element ref="pfx59:ErrorResponse" minOccurs="0"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>181</pd:x>
        <pd:y>135</pd:y>
        <config>
            <element ref="pfx58:CreateSalesTransaction"/>
        </config>
        <pd:inputBindings>
            <pfx58:CreateSalesTransaction>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:CustomerName">
                    <pfx58:CustomerName>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:CustomerName"/>
                    </pfx58:CustomerName>
                </xsl:if>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:ContractId">
                    <pfx58:CustomerID>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:ContractId"/>
                    </pfx58:CustomerID>
                </xsl:if>
                <pfx58:MSISDN>
                    <xsl:value-of select="format:FormatMSISDN($Start/root/pfx57:SalesOrderInput/pfx57:Msisdn, $_globalVariables/ns8:GlobalVariables/MSISDNBaseLength)"/>
                </pfx58:MSISDN>
                <pfx58:TotalAmount>
                    <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:Amount"/>
                </pfx58:TotalAmount>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:UserName">
                    <pfx58:UserName>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:UserName"/>
                    </pfx58:UserName>
                </xsl:if>
                <pfx58:PaymentMethod>
                    <xsl:value-of select="$Start/root/PaymentMethod"/>
                </pfx58:PaymentMethod>
                <pfx58:TransactionReference>
                    <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:TransactionReference"/>
                </pfx58:TransactionReference>
                <xsl:choose>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:AuthorizeCredit='N'">
                        <pfx58:AuthorizeCredit>
                            <xsl:value-of select="'0'"/>
                        </pfx58:AuthorizeCredit>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx58:AuthorizeCredit>
                            <xsl:value-of select="'1'"/>
                        </pfx58:AuthorizeCredit>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines">
                    <pfx58:OrderLines>
                        <pfx58:ProductCode>
                            <xsl:value-of select="pfx57:ItemCode"/>
                        </pfx58:ProductCode>
                        <pfx58:Amount>
                            <xsl:value-of select="pfx57:Amount"/>
                        </pfx58:Amount>
                        <pfx58:Quantity>
                            <xsl:value-of select="pfx57:Quantity"/>
                        </pfx58:Quantity>
                        <xsl:choose>
                            <xsl:when test="string-length(tib:trim(pfx57:Serial))>0">
                                <pfx58:SerialNumber>
                                    <xsl:value-of select="pfx57:Serial"/>
                                </pfx58:SerialNumber>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx58:SerialNumber>
                                    <xsl:value-of select="concat(../pfx57:Msisdn,tib:timestamp())"/>
                                </pfx58:SerialNumber>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx58:ProductType>
                            <xsl:value-of select="pfx57:ItemType"/>
                        </pfx58:ProductType>
                        <xsl:if test="../pfx57:Notes">
                            <pfx58:Remarks>
                                <xsl:value-of select="../pfx57:Notes"/>
                            </pfx58:Remarks>
                        </xsl:if>
                        <pfx58:Params>
                            <xsl:for-each select="pfx57:Params/pfx57:Param">
                                <pfx58:Param>
                                    <pfx58:Name>
                                        <xsl:value-of select="pfx57:Name"/>
                                    </pfx58:Name>
                                    <pfx58:Value>
                                        <xsl:value-of select="pfx57:Value"/>
                                    </pfx58:Value>
                                </pfx58:Param>
                            </xsl:for-each>
                        </pfx58:Params>
                    </pfx58:OrderLines>
                </xsl:for-each>
                <xsl:for-each select="$Start/root/pfx57:SalesOrderInput/pfx57:CardDetails">
                    <pfx58:CardDetails>
                        <xsl:choose>
                            <xsl:when test="exists(current()/pfx57:CardType)&#xA;and&#xA;string-length(tib:trim(current()/pfx57:CardType))>0">
                                <xsl:if test="current()/pfx57:CardType">
                                    <pfx58:CardType>
                                        <xsl:value-of select="current()/pfx57:CardType"/>
                                    </pfx58:CardType>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx58:CardType>
                                    <xsl:value-of select="$GetCardType/root/ns18:ESBLOV/ns18:Record[ns18:TRANSTYPE = 'PaymentMod-CardType' and ns18:TRANSKEY = $Start/root/pfx57:SalesOrderInput/pfx57:PaymentMethod ]/ns18:TRANSVALUE"/>
                                </pfx58:CardType>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="pfx57:HolderName">
                            <pfx58:HolderName>
                                <xsl:value-of select="pfx57:HolderName"/>
                            </pfx58:HolderName>
                        </xsl:if>
                        <pfx58:MerchantID>
                            <xsl:value-of select="pfx57:MerchantId"/>
                        </pfx58:MerchantID>
                        <pfx58:MerchantPassword>
                            <xsl:value-of select="pfx57:MerchantPassword"/>
                        </pfx58:MerchantPassword>
                        <pfx58:TerminalID>
                            <xsl:value-of select="pfx57:TerminalId"/>
                        </pfx58:TerminalID>
                        <xsl:if test="pfx57:AuthCode">
                            <pfx58:AuthorizationCode>
                                <xsl:value-of select="pfx57:AuthCode"/>
                            </pfx58:AuthorizationCode>
                        </xsl:if>
                        <pfx58:CardNumber>
                            <xsl:value-of select="pfx57:CardNumber"/>
                        </pfx58:CardNumber>
                        <pfx58:ExpiryDate>
                            <xsl:value-of select="pfx57:ExpiryDate"/>
                        </pfx58:ExpiryDate>
                        <xsl:if test="pfx57:CVV">
                            <pfx58:CVV>
                                <xsl:value-of select="pfx57:CVV"/>
                            </pfx58:CVV>
                        </xsl:if>
                        <xsl:if test="pfx57:IssuingBank">
                            <pfx58:IssuingBank>
                                <xsl:value-of select="pfx57:IssuingBank"/>
                            </pfx58:IssuingBank>
                        </xsl:if>
                    </pfx58:CardDetails>
                </xsl:for-each>
                <xsl:for-each select="$Start/root/pfx57:SalesOrderInput/pfx57:NotificationMedia">
                    <pfx58:NotificationMedia>
                        <pfx58:Media>
                            <xsl:value-of select="pfx57:Media"/>
                        </pfx58:Media>
                        <pfx58:Address>
                            <xsl:value-of select="pfx57:Address"/>
                        </pfx58:Address>
                    </pfx58:NotificationMedia>
                </xsl:for-each>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:Notes">
                    <pfx58:Notes>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:Notes"/>
                    </pfx58:Notes>
                </xsl:if>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:Notes">
                    <pfx58:Remarks>
                        <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:Notes"/>
                    </pfx58:Remarks>
                </xsl:if>
                <pfx58:Params>
                    <xsl:for-each select="$Start/root/pfx57:SalesOrderInput/pfx57:Params/pfx57:Param">
                        <pfx58:Param>
                            <pfx58:Name>
                                <xsl:value-of select="pfx57:Name"/>
                            </pfx58:Name>
                            <pfx58:Value>
                                <xsl:value-of select="pfx57:Value"/>
                            </pfx58:Value>
                        </pfx58:Param>
                    </xsl:for-each>
                    <pfx58:Param>
                        <pfx58:Name>
                            <xsl:value-of select="&quot;LOW&quot;"/>
                        </pfx58:Name>
                        <pfx58:Value>
                            <xsl:value-of select="$Start/root/LOW"/>
                        </pfx58:Value>
                    </pfx58:Param>
                </pfx58:Params>
                <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:AuthorizeCredit='Y'">
                    <pfx58:Authorization>
                        <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:MerchantId">
                            <pfx58:MerchantID>
                                <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:MerchantId"/>
                            </pfx58:MerchantID>
                        </xsl:if>
                        <pfx58:TotalAmount>
                            <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:Amount"/>
                        </pfx58:TotalAmount>
                        <pfx58:TransactionReference>
                            <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:TransactionReference"/>
                        </pfx58:TransactionReference>
                        <pfx58:ShoppingTransactionReference>
                            <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:TransactionReference"/>
                        </pfx58:ShoppingTransactionReference>
                        <xsl:if test="$Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:CardType">
                            <pfx58:CardType>
                                <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:CardType"/>
                            </pfx58:CardType>
                        </xsl:if>
                        <pfx58:OrderInfo>
                            <xsl:value-of select="$Start/root/pfx57:SalesOrderInput/pfx57:Msisdn"/>
                        </pfx58:OrderInfo>
                    </pfx58:Authorization>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines[1]/pfx57:ItemType='VOMS'">
                        <pfx58:OperationToDo>
                            <xsl:value-of select="&quot;On Demand Voucher Sales&quot;"/>
                        </pfx58:OperationToDo>
                    </xsl:when>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines[1]/pfx57:ItemType='Recharge'">
                        <pfx58:OperationToDo>
                            <xsl:value-of select="&quot;Topup Refill&quot;"/>
                        </pfx58:OperationToDo>
                    </xsl:when>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines[1]/pfx57:ItemType='Validity'">
                        <pfx58:OperationToDo>
                            <xsl:value-of select="&quot;Topup Refill&quot;"/>
                        </pfx58:OperationToDo>
                    </xsl:when>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines[1]/pfx57:ItemType='Device'">
                        <pfx58:OperationToDo>
                            <xsl:value-of select="&quot;Device Sales&quot;"/>
                        </pfx58:OperationToDo>
                    </xsl:when>
                    <xsl:when test="$Start/root/pfx57:SalesOrderInput/pfx57:OrderLines[1]/pfx57:ItemType='Service'">
                        <pfx58:OperationToDo>
                            <xsl:value-of select="&quot;Service Sales&quot;"/>
                        </pfx58:OperationToDo>
                    </xsl:when>
                </xsl:choose>
                <pfx58:Type>
                    <xsl:value-of select="&quot;POS Issue&quot;"/>
                </pfx58:Type>
            </pfx58:CreateSalesTransaction>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>874</pd:x>
        <pd:y>138</pd:y>
        <config>
            <element ref="pfx57:SalesOrderOutput"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:RequestStatus=($_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strSuccess,&quot;Complete&quot;)">
                    <pfx57:SalesOrderOutput>
                        <pfx57:RequestStatus>
                            <xsl:value-of select="&quot;SUCCESS&quot;"/>
                        </pfx57:RequestStatus>
                        <pfx57:ReceiptNumber>
                            <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:ReceiptNumber"/>
                        </pfx57:ReceiptNumber>
                        <pfx57:Authorization>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID">
                                <pfx57:MerchantId>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID"/>
                                </pfx57:MerchantId>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount">
                                <pfx57:Amount>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount"/>
                                </pfx57:Amount>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference">
                                <pfx57:TransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference"/>
                                </pfx57:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference">
                                <pfx57:ShoppingTransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference"/>
                                </pfx57:ShoppingTransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType">
                                <pfx57:CardType>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType"/>
                                </pfx57:CardType>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo">
                                <pfx57:OrderInfo>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo"/>
                                </pfx57:OrderInfo>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus">
                                <pfx57:AuthorizationStatus>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus"/>
                                </pfx57:AuthorizationStatus>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber">
                                <pfx57:ReceiptNumber>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber"/>
                                </pfx57:ReceiptNumber>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID">
                                <pfx57:AuthorizationID>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID"/>
                                </pfx57:AuthorizationID>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode">
                                <pfx57:AcquirerResponseCode>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode"/>
                                </pfx57:AcquirerResponseCode>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate">
                                <pfx57:SettlmentDate>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate"/>
                                </pfx57:SettlmentDate>
                            </xsl:if>
                        </pfx57:Authorization>
                        <pfx57:Params>
                            <xsl:for-each select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Params/&#xA;pfx58:Param[contains(pfx58:Name,&quot;Recharge_&quot;) or contains(pfx58:Name,&quot;VOMS_&quot;)]">
                                <pfx57:Param>
                                    <pfx57:Name>
                                        <xsl:value-of select="pfx58:Name"/>
                                    </pfx57:Name>
                                    <pfx57:Value>
                                        <xsl:value-of select="pfx58:Value"/>
                                    </pfx57:Value>
                                </pfx57:Param>
                            </xsl:for-each>
                        </pfx57:Params>
                    </pfx57:SalesOrderOutput>
                </xsl:when>
                <xsl:when test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:RequestStatus=$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful">
                    <pfx57:SalesOrderOutput>
                        <pfx57:RequestStatus>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful"/>
                        </pfx57:RequestStatus>
                        <pfx57:ReceiptNumber>
                            <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:ReceiptNumber"/>
                        </pfx57:ReceiptNumber>
                        <pfx57:Authorization>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID">
                                <pfx57:MerchantId>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID"/>
                                </pfx57:MerchantId>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount">
                                <pfx57:Amount>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount"/>
                                </pfx57:Amount>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference">
                                <pfx57:TransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference"/>
                                </pfx57:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference">
                                <pfx57:ShoppingTransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference"/>
                                </pfx57:ShoppingTransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType">
                                <pfx57:CardType>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType"/>
                                </pfx57:CardType>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo">
                                <pfx57:OrderInfo>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo"/>
                                </pfx57:OrderInfo>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus">
                                <pfx57:AuthorizationStatus>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus"/>
                                </pfx57:AuthorizationStatus>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber">
                                <pfx57:ReceiptNumber>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber"/>
                                </pfx57:ReceiptNumber>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID">
                                <pfx57:AuthorizationID>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID"/>
                                </pfx57:AuthorizationID>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode">
                                <pfx57:AcquirerResponseCode>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode"/>
                                </pfx57:AcquirerResponseCode>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate">
                                <pfx57:SettlmentDate>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate"/>
                                </pfx57:SettlmentDate>
                            </xsl:if>
                        </pfx57:Authorization>
                    </pfx57:SalesOrderOutput>
                </xsl:when>
                <xsl:otherwise>
                    <pfx57:SalesOrderOutput>
                        <pfx57:RequestStatus>
                            <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strFailed"/>
                        </pfx57:RequestStatus>
                        <pfx57:Authorization>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID">
                                <pfx57:MerchantId>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:MerchantID"/>
                                </pfx57:MerchantId>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount">
                                <pfx57:Amount>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TotalAmount"/>
                                </pfx57:Amount>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference">
                                <pfx57:TransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:TransactionReference"/>
                                </pfx57:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference">
                                <pfx57:ShoppingTransactionReference>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ShoppingTransactionReference"/>
                                </pfx57:ShoppingTransactionReference>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType">
                                <pfx57:CardType>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:CardType"/>
                                </pfx57:CardType>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo">
                                <pfx57:OrderInfo>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:OrderInfo"/>
                                </pfx57:OrderInfo>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus">
                                <pfx57:AuthorizationStatus>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationStatus"/>
                                </pfx57:AuthorizationStatus>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber">
                                <pfx57:ReceiptNumber>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:ReceiptNumber"/>
                                </pfx57:ReceiptNumber>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID">
                                <pfx57:AuthorizationID>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AuthorizationID"/>
                                </pfx57:AuthorizationID>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode">
                                <pfx57:AcquirerResponseCode>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:AcquirerResponseCode"/>
                                </pfx57:AcquirerResponseCode>
                            </xsl:if>
                            <xsl:if test="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate">
                                <pfx57:SettlmentDate>
                                    <xsl:value-of select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Authorization/pfx58:SettlementDate"/>
                                </pfx57:SettlmentDate>
                            </xsl:if>
                        </pfx57:Authorization>
                        <xsl:for-each select="$ParseResponse/root/pfx58:CreateSalesTransaction/pfx58:Params">
                            <pfx57:Params>
                                <xsl:for-each select="pfx58:Param">
                                    <pfx57:Param>
                                        <pfx57:Name>
                                            <xsl:value-of select="pfx58:Name"/>
                                        </pfx57:Name>
                                        <pfx57:Value>
                                            <xsl:value-of select="pfx58:Value"/>
                                        </pfx57:Value>
                                    </pfx57:Param>
                                </xsl:for-each>
                            </pfx57:Params>
                        </xsl:for-each>
                    </pfx57:SalesOrderOutput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateEricErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>735</pd:x>
        <pd:y>258</pd:y>
        <config>
            <faultName>EricErr</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <data>
                    <xsl:copy-of select="$ParseResponse/root/pfx59:ErrorResponse"/>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetCardType">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>98</pd:x>
        <pd:y>34</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetCardType</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>GenerateEricErr</pd:to>
        <pd:xpathDescription>EricErr</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ParseResponse/root/pfx59:ErrorResponse)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCardType</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:xpathDescription>CardTypeExists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:CardType)
and
string-length(tib:trim($Start/root/pfx57:SalesOrderInput/pfx57:CardDetails/pfx57:CardType))&gt;0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>