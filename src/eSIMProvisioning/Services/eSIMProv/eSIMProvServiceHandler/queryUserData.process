<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.huawei.com/CDM/ES/" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.huawei.com/CDM/ES/" schemaLocation="/Resources/WSDL/EntitleServer/soap.wsdl"/>
    <wsdl:import namespace="http://www.huawei.com/CDM/ES/" location="/Resources/WSDL/EntitleServer/soap.wsdl"/>
    <pd:name>Services/eSIMProv/eSIMProvServiceHandler/queryUserData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:queryUserDataIn"/>
    <pd:startX>39</pd:startX>
    <pd:startY>116</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:queryUserDataOut>
            <parameters>
                <xsl:copy-of select="$MapRes/wsdlPfx:queryUserDataResponse"/>
            </parameters>
        </wsdlPfx:queryUserDataOut>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:queryUserDataOut"/>
    <pd:endX>893</pd:endX>
    <pd:endY>117</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1539161009266</pd:targetNamespace>
    <pd:activity name="GUID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>141</pd:x>
        <pd:y>118</pd:y>
        <config>
            <processName>/LoggingProcess/GUID.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log_Msg-In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>259</pd:x>
        <pd:y>117</pd:y>
        <config>
            <processName>/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:IMSI"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest)"/>
                    </ns2:Message>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>703</pd:x>
        <pd:y>116</pd:y>
        <config>
            <processName>/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:IMSI"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($MapRes/wsdlPfx:queryUserDataResponse)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="concat(tib:render-xml($QueryData),tib:render-xml($MapRes))"/>
                    </ns2:Transaction>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>276</pd:x>
        <pd:y>267</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetContext">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.SetContextActivity</pd:type>
        <pd:resourceType>service.activity.setContext</pd:resourceType>
        <pd:x>411</pd:x>
        <pd:y>267</pd:y>
        <config>
            <variableConfig>/Resources/Context/EAIFaultContext.contextResource</variableConfig>
        </config>
        <pd:inputBindings>
            <Fault>
                <faultcode>
                    <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                </faultstring>
                <faultfactor>
                    <xsl:value-of select="&quot;TIBCO&quot;"/>
                </faultfactor>
            </Fault>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>685</pd:x>
        <pd:y>265</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns4:ActivityInput>
                <xsl:if test="$_error/ns3:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns3:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="QueryData">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>416</pd:x>
        <pd:y>116</pd:y>
        <config>
            <timeout>%%CommonResources/Connections/JDBC/Internal/TIBCOAppDB/LoginTimeout%%</timeout>
            <commit>false</commit>
            <maxRows>%%CommonResources/Connections/JDBC/Internal/TIBCOAppDB/Maxrows%%</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Resources/Connection/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <statement>Select MU.MSISDN,MU.IMSI,MU.ICCID,MU.IMPU,MU.IMPI,
AU.SECONDARY_MSISDN SECONDARY_MSISDN ,
AU.IMSI SECIMSI,
AU.ICCID SECICCD,
AU.EID SECEID,
AU.STATUS SECSTSTUS,
AU.TERMINAL_TYPE SECTERMINAL_TYPE,
AU.IMPU SECIMPU,
AU.IMPI SECIMPI,
AU.NICKNAME SECNICKNAME
 from T_MAIN_USER MU,T_ATTACH_USERS AU where MU.IMSI=? and MU.MSISDN=AU.PRIMARY_MSISDN(+)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>IMSI</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <wizardData/>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>MSISDN</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>IMSI</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ICCID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>IMPU</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>IMPI</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECONDARY_MSISDN</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECIMSI</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECICCD</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECEID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECSTSTUS</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECTERMINAL_TYPE</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECIMPU</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECIMPI</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SECNICKNAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <IMSI>
                    <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:IMSI"/>
                </IMSI>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRes">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>554</pd:x>
        <pd:y>117</pd:y>
        <config>
            <element ref="wsdlPfx:queryUserDataResponse"/>
        </config>
        <pd:inputBindings>
            <wsdlPfx:queryUserDataResponse>
                <wsdlPfx:RESULT_CODE>
                    <xsl:value-of select="0"/>
                </wsdlPfx:RESULT_CODE>
                <wsdlPfx:RESULT_DESC>
                    <xsl:value-of select="&quot;SUCCESS&quot;"/>
                </wsdlPfx:RESULT_DESC>
                <xsl:choose>
                    <xsl:when test="count($QueryData/resultSet/Record[1])>0">
                        <xsl:for-each select="$QueryData/resultSet/Record[1]">
                            <wsdlPfx:MAIN_USER>
                                <wsdlPfx:MSISDN>
                                    <xsl:value-of select="MSISDN"/>
                                </wsdlPfx:MSISDN>
                                <wsdlPfx:IMSI>
                                    <xsl:value-of select="IMSI"/>
                                </wsdlPfx:IMSI>
                                <wsdlPfx:ICCID>
                                    <xsl:value-of select="ICCID"/>
                                </wsdlPfx:ICCID>
                                <xsl:if test="IMPI">
                                    <wsdlPfx:IMPI>
                                        <xsl:value-of select="IMPI"/>
                                    </wsdlPfx:IMPI>
                                </xsl:if>
                                <xsl:if test="IMPU">
                                    <wsdlPfx:IMPU>
                                        <xsl:value-of select="IMPU"/>
                                    </wsdlPfx:IMPU>
                                </xsl:if>
                            </wsdlPfx:MAIN_USER>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <wsdlPfx:MAIN_USER>
                            <wsdlPfx:MSISDN>
                                <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:MSISDN"/>
                            </wsdlPfx:MSISDN>
                            <wsdlPfx:IMSI>
                                <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:IMSI"/>
                            </wsdlPfx:IMSI>
                            <wsdlPfx:ICCID>
                                <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:ICCID"/>
                            </wsdlPfx:ICCID>
                        </wsdlPfx:MAIN_USER>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:for-each select="$QueryData/resultSet/Record[string-length(tib:trim(SECONDARY_MSISDN))>0]">
                    <wsdlPfx:ATTACH_USERS>
                        <wsdlPfx:MSISDN>
                            <xsl:value-of select="SECONDARY_MSISDN"/>
                        </wsdlPfx:MSISDN>
                        <wsdlPfx:IMSI>
                            <xsl:value-of select="SECIMSI"/>
                        </wsdlPfx:IMSI>
                        <wsdlPfx:ICCID>
                            <xsl:value-of select="SECICCD"/>
                        </wsdlPfx:ICCID>
                        <xsl:if test="string-length(tib:trim(SECONDARY_MSISDN))>0">
                            <xsl:if test="SECEID">
                                <wsdlPfx:EID>
                                    <xsl:value-of select="SECEID"/>
                                </wsdlPfx:EID>
                            </xsl:if>
                        </xsl:if>
                        <wsdlPfx:STATUS>
                            <xsl:value-of select="0"/>
                        </wsdlPfx:STATUS>
                        <xsl:if test="string-length(tib:trim(SECONDARY_MSISDN))>0">
                            <xsl:if test="SECTERMINAL_TYPE">
                                <wsdlPfx:TEMINAL_TYPE>
                                    <xsl:value-of select="SECTERMINAL_TYPE"/>
                                </wsdlPfx:TEMINAL_TYPE>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(tib:trim(SECONDARY_MSISDN))>0">
                            <xsl:if test="IMPU">
                                <wsdlPfx:IMPU>
                                    <xsl:value-of select="IMPU"/>
                                </wsdlPfx:IMPU>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length(tib:trim(SECONDARY_MSISDN))>0">
                            <xsl:if test="IMPI">
                                <wsdlPfx:IMPI>
                                    <xsl:value-of select="IMPI"/>
                                </wsdlPfx:IMPI>
                            </xsl:if>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length(tib:trim(SECONDARY_MSISDN))>0">
                                <wsdlPfx:NICKNAME>
                                    <xsl:value-of select="SECNICKNAME"/>
                                </wsdlPfx:NICKNAME>
                            </xsl:when>
                            <xsl:otherwise>
                                <wsdlPfx:NICKNAME>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </wsdlPfx:NICKNAME>
                            </xsl:otherwise>
                        </xsl:choose>
                    </wsdlPfx:ATTACH_USERS>
                </xsl:for-each>
            </wsdlPfx:queryUserDataResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Err">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>522</pd:x>
        <pd:y>266</pd:y>
        <config>
            <processName>/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest/wsdlPfx:IMSI"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/wsdlPfx:queryUserDataIn/parameters/wsdlPfx:queryUserDataRequest)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="concat(tib:render-xml($QueryData),tib:render-xml($MapRes),tib:render-xml($_error))"/>
                    </ns2:Transaction>
                </ns2:Header>
                <xsl:choose>
                    <xsl:when test="string-length($GUID/GUID/StartTimeStamp)>0">
                        <TimeDuration>
                            <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                        </TimeDuration>
                    </xsl:when>
                    <xsl:otherwise>
                        <TimeDuration>
                            <xsl:value-of select="tib:timestamp()"/>
                        </TimeDuration>
                    </xsl:otherwise>
                </xsl:choose>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GUID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GUID</pd:from>
        <pd:to>Log_Msg-In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>SetContext</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetContext</pd:from>
        <pd:to>Log_Msg-Err</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-In</pd:from>
        <pd:to>QueryData</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRes</pd:from>
        <pd:to>Log_Msg-Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>QueryData</pd:from>
        <pd:to>MapRes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Err</pd:from>
        <pd:to>GenerateError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>