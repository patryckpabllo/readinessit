<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx0="http://www.tibco.com/CommonLE2/namespace/Log" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://www.tibco.com/CommonLE2/namespace/LogRequest" xmlns:ns5="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns12="http://www.tibco.com/CommonLE/namespace/Common" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common" xmlns:pfx="http://xmlns.example.com/unique/default/namespace/1163206731086" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/CommonLE2/namespace/Public/Logging" xmlns:ns4="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/CommonLE2/namespace/private/Common" xmlns:pfx2="http://www.tibco.com/CommonLE2/Public/Common">
    <xsd:import namespace="http://www.tibco.com/CommonLE2/Public/Common" schemaLocation="/SharedResources/SchemaDefinitions/Public/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" schemaLocation="/SharedResources/SchemaDefinitions/Public/Logging/LogRequest.xsd"/>
    <wsdl:import namespace="http://www.tibco.com/CommonLE2/namespace/LogRequest" location="/SharedResources/WSDL/Core/Handle_Log_Request.wsdl"/>
    <pd:name>Logging/LogServices/WebServiceChannel.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="wsdlPfx:LogRequest"/>
    <pd:startX>26</pd:startX>
    <pd:startY>55</pd:startY>
    <pd:returnBindings>
        <wsdlPfx:Dummy/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="wsdlPfx:Dummy"/>
    <pd:endX>427</pd:endX>
    <pd:endY>55</pd:endY>
    <pd:errorSchemas>
        <Error wsMsgRef="wsdlPfx:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1284590823470</pd:targetNamespace>
    <pd:activity name="Call Handle Log Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>290</pd:x>
        <pd:y>62</pd:y>
        <config>
            <processName>/Logging/Logic/HandleLogRequest.process</processName>
        </config>
        <pd:inputBindings>
            <LogRequest>
                <xsl:value-of select="$Render-XML/xmlString"/>
            </LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Local Exception Handler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>289</pd:x>
        <pd:y>157</pd:y>
        <config>
            <processName>/Common/Local Exception Handler.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:Exception>
                <ErrorMessage>
                    <xsl:value-of select="substring-before(substring-after(tib:render-xml($Catch-All/exceptiondata), &quot;&lt;msg>&quot;), &quot;&lt;/msg>&quot;)"/>
                </ErrorMessage>
                <ErrorCode>
                    <xsl:value-of select="substring-before(substring-after(tib:render-xml($Catch-All/exceptiondata), &quot;&lt;msgCode>&quot;), &quot;&lt;/msgCode>&quot;)"/>
                </ErrorCode>
                <ns12:Error>
                    <xsl:for-each select="$_error/ns3:ErrorReport">
                        <ns12:ErrorReport>
                            <StackTrace>
                                <xsl:value-of select="StackTrace"/>
                            </StackTrace>
                            <Msg>
                                <xsl:value-of select="substring-before(substring-after(tib:render-xml($Catch-All/exceptiondata), &quot;&lt;msg>&quot;), &quot;&lt;/msg>&quot;)"/>
                            </Msg>
                            <FullClass>
                                <xsl:value-of select="FullClass"/>
                            </FullClass>
                            <Class>
                                <xsl:value-of select="Class"/>
                            </Class>
                            <ProcessStack>
                                <xsl:value-of select="ProcessStack"/>
                            </ProcessStack>
                            <MsgCode>
                                <xsl:value-of select="substring-before(substring-after(tib:render-xml($Catch-All/exceptiondata), &quot;&lt;msgCode>&quot;), &quot;&lt;/msgCode>&quot;)"/>
                            </MsgCode>
                        </ns12:ErrorReport>
                    </xsl:for-each>
                </ns12:Error>
                <ns12:Data>
                    <xsl:value-of select="tib:render-xml($_error/ns3:ErrorReport/Data)"/>
                </ns12:Data>
            </ns12:Exception>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch All">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>120</pd:x>
        <pd:y>149</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Catch ID not Found">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>120</pd:x>
        <pd:y>276</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=IDNotFound namespace=http://www.tibco.com/CommonLE2/namespace/private/Common</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate System Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>450</pd:x>
        <pd:y>157</pd:y>
        <config>
            <faultName>Error</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Exceptions/Common/Messages/InternalError"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Exceptions/Common/Codes/InternalError"/>
                </messageCode>
                <data>
                    <wsdlPfx:Error>
                        <ErrorParam>
                            <pfx2:Error>
                                <pfx2:Message>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Exceptions/Common/Messages/InternalError"/>
                                </pfx2:Message>
                                <pfx2:Code>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Exceptions/Common/Codes/InternalError"/>
                                </pfx2:Code>
                            </pfx2:Error>
                        </ErrorParam>
                    </wsdlPfx:Error>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate ID Not Found Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>289</pd:x>
        <pd:y>284</pd:y>
        <config>
            <faultName>Error</faultName>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound)">
                    <ns2:ActivityInput>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Message">
                            <message>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Message"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Code">
                            <messageCode>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Code"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <wsdlPfx:Error>
                                <ErrorParam>
                                    <pfx2:Error>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Message">
                                            <pfx2:Message>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Message"/>
                                            </pfx2:Message>
                                        </xsl:if>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Code">
                                            <pfx2:Code>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:ApplicationIDNotFound/pfx3:Code"/>
                                            </pfx2:Code>
                                        </xsl:if>
                                    </pfx2:Error>
                                </ErrorParam>
                            </wsdlPfx:Error>
                        </data>
                    </ns2:ActivityInput>
                </xsl:when>
                <xsl:when test="exists($Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound)">
                    <ns2:ActivityInput>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Message">
                            <message>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Message"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Code">
                            <messageCode>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Code"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <wsdlPfx:Error>
                                <ErrorParam>
                                    <pfx2:Error>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Message">
                                            <pfx2:Message>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Message"/>
                                            </pfx2:Message>
                                        </xsl:if>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Code">
                                            <pfx2:Code>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:InterfaceIDNotFound/pfx3:Code"/>
                                            </pfx2:Code>
                                        </xsl:if>
                                    </pfx2:Error>
                                </ErrorParam>
                            </wsdlPfx:Error>
                        </data>
                    </ns2:ActivityInput>
                </xsl:when>
                <xsl:otherwise>
                    <ns2:ActivityInput>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Message">
                            <message>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Message"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Code">
                            <messageCode>
                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Code"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <wsdlPfx:Error>
                                <ErrorParam>
                                    <pfx2:Error>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Message">
                                            <pfx2:Message>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Message"/>
                                            </pfx2:Message>
                                        </xsl:if>
                                        <xsl:if test="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Code">
                                            <pfx2:Code>
                                                <xsl:value-of select="$Catch-ID-not-Found/pfx3:IDNotFound/pfx3:RenderIDNotFound/pfx3:Code"/>
                                            </pfx2:Code>
                                        </xsl:if>
                                    </pfx2:Error>
                                </ErrorParam>
                            </wsdlPfx:Error>
                        </data>
                    </ns2:ActivityInput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>149</pd:x>
        <pd:y>55</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term ref="ns4:LogRequest"/>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Start/wsdlPfx:LogRequest/parameters/ns4:LogRequest"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Handle Log Request</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch All</pd:from>
        <pd:to>Call Local Exception Handler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Local Exception Handler</pd:from>
        <pd:to>Generate System Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch ID not Found</pd:from>
        <pd:to>Generate ID Not Found Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Call Handle Log Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>