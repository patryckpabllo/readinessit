<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx50="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://www.zain.com/ZESB/Services/Inventory/ERPCmnSchema.xsd" xmlns:pfx49="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:pfx46="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" xmlns:pfx47="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryResponse.xsd" xmlns:pfx44="http://www.zain.com/ZESB/Services/Inventory/ReleaseInventoryRequest.xsd" xmlns:pfx45="http://www.zain.com/ZESB/Services/Inventory/ReleaseInventoryResponse.xsd" xmlns:pfx42="http://www.zain.com/ZESB/Services/Inventory/DeductInventoryRequest.xsd" xmlns:pfx43="http://www.zain.com/ZESB/Services/Inventory/DeductInventoryResponse.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumberReservationResponse.xsd" xmlns:pfx40="http://www.zain.com/ZESB/Services/NumberReservation/Types" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumberReservationRequest.xsd" xmlns:pfx31="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx32="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx33="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx34="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx35="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx36="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementInbound/eAccountManagementInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumberReservationRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/NumberReservation/NumberReservationRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/NumberReservation/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/NumberReservation/NumberReservationInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumberReservationResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/NumberReservation/NumberReservationResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ERP/ReserveInventory/ReserveInventoryRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ERP/ReserveInventory/ReserveInventoryResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Inventory/ERPCmnSchema.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ERP/ERPCommon/ERPCmnSchema.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementInbound/eAccountManagementInbound.wsdl"/>
    <pd:name>BusinessProcesses/Services/ERP_REST/ExternalInventoryManagement/HelperProcess/ESI_Call_POSupdate.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx50:CreateSalesTransaction"/>
                    <xsd:element name="TransactionId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>144</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($ParseResponse/root/pfx50:CreateSalesTransaction)">
                    <xsl:for-each select="$ParseResponse/root/pfx50:CreateSalesTransaction">
                        <pfx50:CreateSalesTransaction>
                            <xsl:if test="pfx50:CustomerName">
                                <pfx50:CustomerName>
                                    <xsl:value-of select="pfx50:CustomerName"/>
                                </pfx50:CustomerName>
                            </xsl:if>
                            <xsl:if test="pfx50:CustomerID">
                                <pfx50:CustomerID>
                                    <xsl:value-of select="pfx50:CustomerID"/>
                                </pfx50:CustomerID>
                            </xsl:if>
                            <xsl:if test="pfx50:MSISDN">
                                <pfx50:MSISDN>
                                    <xsl:value-of select="pfx50:MSISDN"/>
                                </pfx50:MSISDN>
                            </xsl:if>
                            <xsl:if test="pfx50:TotalAmount">
                                <pfx50:TotalAmount>
                                    <xsl:value-of select="pfx50:TotalAmount"/>
                                </pfx50:TotalAmount>
                            </xsl:if>
                            <xsl:if test="pfx50:UserName">
                                <pfx50:UserName>
                                    <xsl:value-of select="pfx50:UserName"/>
                                </pfx50:UserName>
                            </xsl:if>
                            <xsl:if test="pfx50:PaymentMethod">
                                <pfx50:PaymentMethod>
                                    <xsl:value-of select="pfx50:PaymentMethod"/>
                                </pfx50:PaymentMethod>
                            </xsl:if>
                            <xsl:if test="pfx50:TransactionReference">
                                <pfx50:TransactionReference>
                                    <xsl:value-of select="pfx50:TransactionReference"/>
                                </pfx50:TransactionReference>
                            </xsl:if>
                            <xsl:if test="pfx50:AuthorizeCredit">
                                <pfx50:AuthorizeCredit>
                                    <xsl:value-of select="pfx50:AuthorizeCredit"/>
                                </pfx50:AuthorizeCredit>
                            </xsl:if>
                            <xsl:for-each select="pfx50:OrderLines">
                                <pfx50:OrderLines>
                                    <xsl:if test="pfx50:ProductCode">
                                        <pfx50:ProductCode>
                                            <xsl:value-of select="pfx50:ProductCode"/>
                                        </pfx50:ProductCode>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Amount">
                                        <pfx50:Amount>
                                            <xsl:value-of select="pfx50:Amount"/>
                                        </pfx50:Amount>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Quantity">
                                        <pfx50:Quantity>
                                            <xsl:value-of select="pfx50:Quantity"/>
                                        </pfx50:Quantity>
                                    </xsl:if>
                                    <xsl:if test="pfx50:SerialNumber">
                                        <pfx50:SerialNumber>
                                            <xsl:value-of select="pfx50:SerialNumber"/>
                                        </pfx50:SerialNumber>
                                    </xsl:if>
                                    <xsl:if test="pfx50:ProductType">
                                        <pfx50:ProductType>
                                            <xsl:value-of select="pfx50:ProductType"/>
                                        </pfx50:ProductType>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Remarks">
                                        <pfx50:Remarks>
                                            <xsl:value-of select="pfx50:Remarks"/>
                                        </pfx50:Remarks>
                                    </xsl:if>
                                    <xsl:for-each select="pfx50:Params">
                                        <pfx50:Params>
                                            <xsl:for-each select="pfx50:Param">
                                                <pfx50:Param>
                                                    <xsl:if test="pfx50:Name">
                                                        <pfx50:Name>
                                                            <xsl:value-of select="pfx50:Name"/>
                                                        </pfx50:Name>
                                                    </xsl:if>
                                                    <xsl:if test="pfx50:Value">
                                                        <pfx50:Value>
                                                            <xsl:value-of select="pfx50:Value"/>
                                                        </pfx50:Value>
                                                    </xsl:if>
                                                </pfx50:Param>
                                            </xsl:for-each>
                                        </pfx50:Params>
                                    </xsl:for-each>
                                    <xsl:if test="pfx50:LineItemId">
                                        <pfx50:LineItemId>
                                            <xsl:value-of select="pfx50:LineItemId"/>
                                        </pfx50:LineItemId>
                                    </xsl:if>
                                </pfx50:OrderLines>
                            </xsl:for-each>
                            <xsl:for-each select="pfx50:CardDetails">
                                <pfx50:CardDetails>
                                    <xsl:if test="pfx50:CardType">
                                        <pfx50:CardType>
                                            <xsl:value-of select="pfx50:CardType"/>
                                        </pfx50:CardType>
                                    </xsl:if>
                                    <xsl:if test="pfx50:HolderName">
                                        <pfx50:HolderName>
                                            <xsl:value-of select="pfx50:HolderName"/>
                                        </pfx50:HolderName>
                                    </xsl:if>
                                    <xsl:if test="pfx50:MerchantID">
                                        <pfx50:MerchantID>
                                            <xsl:value-of select="pfx50:MerchantID"/>
                                        </pfx50:MerchantID>
                                    </xsl:if>
                                    <xsl:if test="pfx50:MerchantPassword">
                                        <pfx50:MerchantPassword>
                                            <xsl:value-of select="pfx50:MerchantPassword"/>
                                        </pfx50:MerchantPassword>
                                    </xsl:if>
                                    <xsl:if test="pfx50:TerminalID">
                                        <pfx50:TerminalID>
                                            <xsl:value-of select="pfx50:TerminalID"/>
                                        </pfx50:TerminalID>
                                    </xsl:if>
                                    <xsl:if test="pfx50:AuthorizationCode">
                                        <pfx50:AuthorizationCode>
                                            <xsl:value-of select="pfx50:AuthorizationCode"/>
                                        </pfx50:AuthorizationCode>
                                    </xsl:if>
                                    <xsl:if test="pfx50:CardNumber">
                                        <pfx50:CardNumber>
                                            <xsl:value-of select="pfx50:CardNumber"/>
                                        </pfx50:CardNumber>
                                    </xsl:if>
                                    <xsl:if test="pfx50:ExpiryDate">
                                        <pfx50:ExpiryDate>
                                            <xsl:value-of select="pfx50:ExpiryDate"/>
                                        </pfx50:ExpiryDate>
                                    </xsl:if>
                                    <xsl:if test="pfx50:CVV">
                                        <pfx50:CVV>
                                            <xsl:value-of select="pfx50:CVV"/>
                                        </pfx50:CVV>
                                    </xsl:if>
                                    <xsl:if test="pfx50:IssuingBank">
                                        <pfx50:IssuingBank>
                                            <xsl:value-of select="pfx50:IssuingBank"/>
                                        </pfx50:IssuingBank>
                                    </xsl:if>
                                </pfx50:CardDetails>
                            </xsl:for-each>
                            <xsl:for-each select="pfx50:NotificationMedia">
                                <pfx50:NotificationMedia>
                                    <xsl:if test="pfx50:Media">
                                        <pfx50:Media>
                                            <xsl:value-of select="pfx50:Media"/>
                                        </pfx50:Media>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Address">
                                        <pfx50:Address>
                                            <xsl:value-of select="pfx50:Address"/>
                                        </pfx50:Address>
                                    </xsl:if>
                                </pfx50:NotificationMedia>
                            </xsl:for-each>
                            <xsl:if test="pfx50:Notes">
                                <pfx50:Notes>
                                    <xsl:value-of select="pfx50:Notes"/>
                                </pfx50:Notes>
                            </xsl:if>
                            <xsl:if test="pfx50:Remarks">
                                <pfx50:Remarks>
                                    <xsl:value-of select="pfx50:Remarks"/>
                                </pfx50:Remarks>
                            </xsl:if>
                            <xsl:for-each select="pfx50:Params">
                                <pfx50:Params>
                                    <xsl:for-each select="pfx50:Param">
                                        <pfx50:Param>
                                            <xsl:if test="pfx50:Name">
                                                <pfx50:Name>
                                                    <xsl:value-of select="pfx50:Name"/>
                                                </pfx50:Name>
                                            </xsl:if>
                                            <xsl:if test="pfx50:Value">
                                                <pfx50:Value>
                                                    <xsl:value-of select="pfx50:Value"/>
                                                </pfx50:Value>
                                            </xsl:if>
                                        </pfx50:Param>
                                    </xsl:for-each>
                                </pfx50:Params>
                            </xsl:for-each>
                            <xsl:if test="pfx50:RequestStatus">
                                <pfx50:RequestStatus>
                                    <xsl:value-of select="pfx50:RequestStatus"/>
                                </pfx50:RequestStatus>
                            </xsl:if>
                            <xsl:if test="pfx50:ReceiptNumber">
                                <pfx50:ReceiptNumber>
                                    <xsl:value-of select="pfx50:ReceiptNumber"/>
                                </pfx50:ReceiptNumber>
                            </xsl:if>
                            <xsl:for-each select="pfx50:Authorization">
                                <pfx50:Authorization>
                                    <xsl:if test="pfx50:MerchantID">
                                        <pfx50:MerchantID>
                                            <xsl:value-of select="pfx50:MerchantID"/>
                                        </pfx50:MerchantID>
                                    </xsl:if>
                                    <xsl:if test="pfx50:TotalAmount">
                                        <pfx50:TotalAmount>
                                            <xsl:value-of select="pfx50:TotalAmount"/>
                                        </pfx50:TotalAmount>
                                    </xsl:if>
                                    <xsl:if test="pfx50:TransactionReference">
                                        <pfx50:TransactionReference>
                                            <xsl:value-of select="pfx50:TransactionReference"/>
                                        </pfx50:TransactionReference>
                                    </xsl:if>
                                    <xsl:if test="pfx50:ShoppingTransactionReference">
                                        <pfx50:ShoppingTransactionReference>
                                            <xsl:value-of select="pfx50:ShoppingTransactionReference"/>
                                        </pfx50:ShoppingTransactionReference>
                                    </xsl:if>
                                    <xsl:if test="pfx50:CardType">
                                        <pfx50:CardType>
                                            <xsl:value-of select="pfx50:CardType"/>
                                        </pfx50:CardType>
                                    </xsl:if>
                                    <xsl:if test="pfx50:OrderInfo">
                                        <pfx50:OrderInfo>
                                            <xsl:value-of select="pfx50:OrderInfo"/>
                                        </pfx50:OrderInfo>
                                    </xsl:if>
                                    <xsl:if test="pfx50:AuthorizationStatus">
                                        <pfx50:AuthorizationStatus>
                                            <xsl:value-of select="pfx50:AuthorizationStatus"/>
                                        </pfx50:AuthorizationStatus>
                                    </xsl:if>
                                    <xsl:if test="pfx50:ReceiptNumber">
                                        <pfx50:ReceiptNumber>
                                            <xsl:value-of select="pfx50:ReceiptNumber"/>
                                        </pfx50:ReceiptNumber>
                                    </xsl:if>
                                    <xsl:if test="pfx50:AuthorizationID">
                                        <pfx50:AuthorizationID>
                                            <xsl:value-of select="pfx50:AuthorizationID"/>
                                        </pfx50:AuthorizationID>
                                    </xsl:if>
                                    <xsl:if test="pfx50:AcquirerResponseCode">
                                        <pfx50:AcquirerResponseCode>
                                            <xsl:value-of select="pfx50:AcquirerResponseCode"/>
                                        </pfx50:AcquirerResponseCode>
                                    </xsl:if>
                                    <xsl:if test="pfx50:SettlementDate">
                                        <pfx50:SettlementDate>
                                            <xsl:value-of select="pfx50:SettlementDate"/>
                                        </pfx50:SettlementDate>
                                    </xsl:if>
                                </pfx50:Authorization>
                            </xsl:for-each>
                            <xsl:if test="pfx50:OriginalUserName">
                                <pfx50:OriginalUserName>
                                    <xsl:value-of select="pfx50:OriginalUserName"/>
                                </pfx50:OriginalUserName>
                            </xsl:if>
                            <xsl:if test="pfx50:OriginalSalesDate">
                                <pfx50:OriginalSalesDate>
                                    <xsl:value-of select="pfx50:OriginalSalesDate"/>
                                </pfx50:OriginalSalesDate>
                            </xsl:if>
                            <xsl:for-each select="pfx50:OrderState">
                                <pfx50:OrderState>
                                    <xsl:if test="pfx50:Code">
                                        <pfx50:Code>
                                            <xsl:value-of select="pfx50:Code"/>
                                        </pfx50:Code>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Description">
                                        <pfx50:Description>
                                            <xsl:value-of select="pfx50:Description"/>
                                        </pfx50:Description>
                                    </xsl:if>
                                </pfx50:OrderState>
                            </xsl:for-each>
                            <xsl:if test="pfx50:OldSTReceiptNumber">
                                <pfx50:OldSTReceiptNumber>
                                    <xsl:value-of select="pfx50:OldSTReceiptNumber"/>
                                </pfx50:OldSTReceiptNumber>
                            </xsl:if>
                            <xsl:if test="pfx50:OperationToDo">
                                <pfx50:OperationToDo>
                                    <xsl:value-of select="pfx50:OperationToDo"/>
                                </pfx50:OperationToDo>
                            </xsl:if>
                            <xsl:if test="pfx50:Type">
                                <pfx50:Type>
                                    <xsl:value-of select="pfx50:Type"/>
                                </pfx50:Type>
                            </xsl:if>
                            <xsl:if test="pfx50:OrderNumber">
                                <pfx50:OrderNumber>
                                    <xsl:value-of select="pfx50:OrderNumber"/>
                                </pfx50:OrderNumber>
                            </xsl:if>
                            <xsl:for-each select="pfx50:RetryDetails">
                                <pfx50:RetryDetails>
                                    <xsl:if test="pfx50:TransactionID">
                                        <pfx50:TransactionID>
                                            <xsl:value-of select="pfx50:TransactionID"/>
                                        </pfx50:TransactionID>
                                    </xsl:if>
                                    <xsl:if test="pfx50:MaxRetryCount">
                                        <pfx50:MaxRetryCount>
                                            <xsl:value-of select="pfx50:MaxRetryCount"/>
                                        </pfx50:MaxRetryCount>
                                    </xsl:if>
                                    <xsl:if test="pfx50:CurrentRetryCount">
                                        <pfx50:CurrentRetryCount>
                                            <xsl:value-of select="pfx50:CurrentRetryCount"/>
                                        </pfx50:CurrentRetryCount>
                                    </xsl:if>
                                    <xsl:if test="pfx50:extRetryTimeStamp">
                                        <pfx50:extRetryTimeStamp>
                                            <xsl:value-of select="pfx50:extRetryTimeStamp"/>
                                        </pfx50:extRetryTimeStamp>
                                    </xsl:if>
                                    <xsl:if test="pfx50:Payload">
                                        <pfx50:Payload>
                                            <xsl:value-of select="pfx50:Payload"/>
                                        </pfx50:Payload>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryStep">
                                        <pfx50:RetryStep>
                                            <xsl:value-of select="pfx50:RetryStep"/>
                                        </pfx50:RetryStep>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryComponentName">
                                        <pfx50:RetryComponentName>
                                            <xsl:value-of select="pfx50:RetryComponentName"/>
                                        </pfx50:RetryComponentName>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryFlag">
                                        <pfx50:RetryFlag>
                                            <xsl:value-of select="pfx50:RetryFlag"/>
                                        </pfx50:RetryFlag>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryListnerQueue">
                                        <pfx50:RetryListnerQueue>
                                            <xsl:value-of select="pfx50:RetryListnerQueue"/>
                                        </pfx50:RetryListnerQueue>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryStatus">
                                        <pfx50:RetryStatus>
                                            <xsl:value-of select="pfx50:RetryStatus"/>
                                        </pfx50:RetryStatus>
                                    </xsl:if>
                                    <xsl:if test="pfx50:RetryErrorDescription">
                                        <pfx50:RetryErrorDescription>
                                            <xsl:value-of select="pfx50:RetryErrorDescription"/>
                                        </pfx50:RetryErrorDescription>
                                    </xsl:if>
                                </pfx50:RetryDetails>
                            </xsl:for-each>
                        </pfx50:CreateSalesTransaction>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:for-each select="$ParseResponse/root/pfx51:ErrorResponse">
                        <pfx51:ErrorResponse>
                            <xsl:if test="pfx51:Error_SourceSystem">
                                <pfx51:Error_SourceSystem>
                                    <xsl:value-of select="pfx51:Error_SourceSystem"/>
                                </pfx51:Error_SourceSystem>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_SourceErrCode">
                                <pfx51:Error_SourceErrCode>
                                    <xsl:value-of select="pfx51:Error_SourceErrCode"/>
                                </pfx51:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_SourceErrDesc">
                                <pfx51:Error_SourceErrDesc>
                                    <xsl:value-of select="pfx51:Error_SourceErrDesc"/>
                                </pfx51:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_Type">
                                <pfx51:Error_Type>
                                    <xsl:value-of select="pfx51:Error_Type"/>
                                </pfx51:Error_Type>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_UserErrCode">
                                <pfx51:Error_UserErrCode>
                                    <xsl:value-of select="pfx51:Error_UserErrCode"/>
                                </pfx51:Error_UserErrCode>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_UserErrDesc">
                                <pfx51:Error_UserErrDesc>
                                    <xsl:value-of select="pfx51:Error_UserErrDesc"/>
                                </pfx51:Error_UserErrDesc>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_Occurance_Time">
                                <pfx51:Error_Occurance_Time>
                                    <xsl:value-of select="pfx51:Error_Occurance_Time"/>
                                </pfx51:Error_Occurance_Time>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_Additional_Desc1">
                                <pfx51:Error_Additional_Desc1>
                                    <xsl:value-of select="pfx51:Error_Additional_Desc1"/>
                                </pfx51:Error_Additional_Desc1>
                            </xsl:if>
                            <xsl:if test="pfx51:Error_Additional_Desc2">
                                <pfx51:Error_Additional_Desc2>
                                    <xsl:value-of select="pfx51:Error_Additional_Desc2"/>
                                </pfx51:Error_Additional_Desc2>
                            </xsl:if>
                        </pfx51:ErrorResponse>
                    </xsl:for-each>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx50:CreateSalesTransaction"/>
                    <xsd:element ref="pfx51:ErrorResponse"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>856</pd:endX>
    <pd:endY>177</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Common_EAI_EMSSendReceive">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>427</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx50:CreateSalesTransaction)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionId"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses_REST/Services/ChannelERP/Reserve/POS_ESI_Req_Queue"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses_REST/Services/ChannelERP/JMS_TimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>258</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses_REST/Services/ChannelERP/Reserve/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>718</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/BusinessProcesses_REST/Services/ChannelERP/Reserve/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($ParseResponse/root)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>548</pd:x>
        <pd:y>177</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx51:ErrorResponse"/>
                            <xsd:element ref="pfx50:CreateSalesTransaction"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSendReceive/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingResponseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>547</pd:x>
        <pd:y>312</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>ParsingResponseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-39322</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSendReceive</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSendReceive</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>