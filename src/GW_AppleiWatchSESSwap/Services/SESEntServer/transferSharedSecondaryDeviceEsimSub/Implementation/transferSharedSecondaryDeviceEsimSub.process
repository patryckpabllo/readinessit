<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryReqSchema.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESTransferPrimaryDevice/transferPrimaryDeviceEsimSubReqSchema.xsd" xmlns:pfx="http://www.tibco.com/schemas/GW_AppleiWatch2/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/Test/SamsungArtifacts/Schema.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" xmlns:ns="http://www.huawei.com/CDM/ES/" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx10="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/RIOTransfer/transferSharedSecondaryDeviceEsimSubReq.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESTransferPrimaryDevice/transferPrimaryDeviceEsimSubReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESTransferPrimaryDevice/transferPrimaryDeviceEsimSubReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Test/SamsungArtifacts/Schema.xsd" schemaLocation="/Test/SamsungArtifacts/Schema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/RIOTransfer/transferSharedSecondaryDeviceEsimSubReq.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/RIOTransfer/transferSharedSecondaryDeviceEsimSubReq.xsd"/>
    <pd:name>Services/SESEntServer/transferSharedSecondaryDeviceEsimSub/Implementation/transferSharedSecondaryDeviceEsimSub.process</pd:name>
    <pd:description>Transfer secondary Device eSIM Subscription Service to Another.</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlIn" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>70</pd:startX>
    <pd:startY>86</pd:startY>
    <pd:returnBindings>
        <root>
            <xmlOut>
                <xsl:value-of select="'&lt;root>&lt;/root>'"/>
            </xmlOut>
            <xsl:copy-of select="$Start/root/NameValuePairs"/>
            <TransactionID>
                <xsl:value-of select="$Start/root/TransactionID"/>
            </TransactionID>
            <StartTimeStamp>
                <xsl:value-of select="$Start/root/StartTimeStamp"/>
            </StartTimeStamp>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlOut" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>749</pd:endX>
    <pd:endY>86</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1594286379235</pd:targetNamespace>
    <pd:activity name="Log_Msg-In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>168</pd:x>
        <pd:y>86</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/xmlIn)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>590</pd:x>
        <pd:y>85</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFICATION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$ParseReq/root/sourceSecondaryDeviceInfo/eid"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($call_Transfer)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseReq">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>300</pd:x>
        <pd:y>86</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx10:root"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/xmlIn"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="call_Transfer">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>430</pd:x>
        <pd:y>85</pd:y>
        <config>
            <processName>/Services/SESEntServer/transferSharedSecondaryDeviceEsimSub/HelperProcesses/transferSharedSecondaryDeviceEsimImpl.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$ParseReq/root">
                    <root>
                        <xsl:for-each select="sourceSecondaryDeviceInfo">
                            <sourceSecondaryDeviceInfo>
                                <xsl:if test="eid">
                                    <eid>
                                        <xsl:value-of select="eid"/>
                                    </eid>
                                </xsl:if>
                                <xsl:if test="deviceType">
                                    <deviceType>
                                        <xsl:value-of select="deviceType"/>
                                    </deviceType>
                                </xsl:if>
                                <xsl:for-each select="subscriptionList">
                                    <subscriptionList>
                                        <xsl:if test="imsi">
                                            <imsi>
                                                <xsl:value-of select="imsi"/>
                                            </imsi>
                                        </xsl:if>
                                        <xsl:if test="msisdn">
                                            <msisdn>
                                                <xsl:value-of select="msisdn"/>
                                            </msisdn>
                                        </xsl:if>
                                        <xsl:if test="primaryImsi">
                                            <primaryImsi>
                                                <xsl:value-of select="primaryImsi"/>
                                            </primaryImsi>
                                        </xsl:if>
                                        <xsl:if test="primaryMsisdn">
                                            <primaryMsisdn>
                                                <xsl:value-of select="primaryMsisdn"/>
                                            </primaryMsisdn>
                                        </xsl:if>
                                        <xsl:for-each select="iccidProfile">
                                            <iccidProfile>
                                                <xsl:if test="imei">
                                                    <imei>
                                                        <xsl:value-of select="imei"/>
                                                    </imei>
                                                </xsl:if>
                                                <xsl:if test="iccid">
                                                    <iccid>
                                                        <xsl:value-of select="iccid"/>
                                                    </iccid>
                                                </xsl:if>
                                                <xsl:if test="meid">
                                                    <meid>
                                                        <xsl:value-of select="meid"/>
                                                    </meid>
                                                </xsl:if>
                                            </iccidProfile>
                                        </xsl:for-each>
                                    </subscriptionList>
                                </xsl:for-each>
                            </sourceSecondaryDeviceInfo>
                        </xsl:for-each>
                        <xsl:for-each select="targetSecondaryDeviceInfo">
                            <targetSecondaryDeviceInfo>
                                <xsl:if test="eid">
                                    <eid>
                                        <xsl:value-of select="eid"/>
                                    </eid>
                                </xsl:if>
                                <xsl:if test="deviceType">
                                    <deviceType>
                                        <xsl:value-of select="deviceType"/>
                                    </deviceType>
                                </xsl:if>
                                <xsl:if test="simAllianceProfileVersion">
                                    <simAllianceProfileVersion>
                                        <xsl:value-of select="simAllianceProfileVersion"/>
                                    </simAllianceProfileVersion>
                                </xsl:if>
                                <xsl:if test="gsmaSgp22Version">
                                    <gsmaSgp22Version>
                                        <xsl:value-of select="gsmaSgp22Version"/>
                                    </gsmaSgp22Version>
                                </xsl:if>
                                <xsl:for-each select="iccidProfile">
                                    <iccidProfile>
                                        <xsl:if test="imei">
                                            <imei>
                                                <xsl:value-of select="imei"/>
                                            </imei>
                                        </xsl:if>
                                        <xsl:if test="iccid">
                                            <iccid>
                                                <xsl:value-of select="iccid"/>
                                            </iccid>
                                        </xsl:if>
                                        <xsl:if test="meid">
                                            <meid>
                                                <xsl:value-of select="meid"/>
                                            </meid>
                                        </xsl:if>
                                    </iccidProfile>
                                </xsl:for-each>
                            </targetSecondaryDeviceInfo>
                        </xsl:for-each>
                        <xsl:if test="anchorImsi">
                            <anchorImsi>
                                <xsl:value-of select="anchorImsi"/>
                            </anchorImsi>
                        </xsl:if>
                        <xsl:if test="anchorMsisdn">
                            <anchorMsisdn>
                                <xsl:value-of select="anchorMsisdn"/>
                            </anchorMsisdn>
                        </xsl:if>
                    </root>
                </xsl:for-each>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_Msg-In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>call_Transfer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-In</pd:from>
        <pd:to>ParseReq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>call_Transfer</pd:from>
        <pd:to>Log_Msg-Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>