<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://www.tibco.com/schemas/GW_AppleiWatch2/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" xmlns:ns="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx3="http://www.Zain.com/schemas/GW_AppleiWatch3/Services/SESEntServer/Resources/XSD/CommonErrSchema.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/SESCommonErrorSchema.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:format="java://MSISDNFormatter" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/SESCommonErrorSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/SESCommonErrorSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd"/>
    <pd:name>Services/SESEntServer/ServiceHandler/SESReceiver.process</pd:name>
    <pd:startName>SESReqRec</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SESReqRec">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>66</pd:x>
        <pd:y>116</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>UTF8</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/CommonResources/Connections/HTTP/External/Common/GW_Common_Provisioning_HTTPConnection.sharedhttp</sharedChannel>
            <customField>
                <row>
                    <attribute>primaryMsisdn</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
                <row>
                    <attribute>plan-id</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
                <row>
                    <attribute>msisdn</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
            </customField>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="x-transaction-id" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="authorization" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-device-auth-mode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-device-type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-nsds-version" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1245</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1594272407097</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>238</pd:x>
        <pd:y>248</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GUID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>159</pd:x>
        <pd:y>118</pd:y>
        <config>
            <processName>/CommonProcesses/Utilities/GUID.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="JSON_XML">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>252</pd:x>
        <pd:y>119</pd:y>
        <config>
            <fileName>SESReceiverJSON_XML</fileName>
            <packageName>Services.SESEntServer.ServiceHandler.SESReceiver</packageName>
            <fullsource>package Services.SESEntServer.ServiceHandler.SESReceiver;
import java.util.*;
import java.io.*;
import org.json.JSONObject;
import org.json.XML;

public class SESReceiverJSON_XML{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String jsonIn = "";
	protected String xmlIn = "";
	protected String xmlOut = "";
	protected String jsonOut = "";
	public String getjsonIn() {
		return jsonIn;
	}
	public void setjsonIn(String val) {
		jsonIn = val;
	}
	public String getxmlIn() {
		return xmlIn;
	}
	public void setxmlIn(String val) {
		xmlIn = val;
	}
	public String getxmlOut() {
		return xmlOut;
	}
	public void setxmlOut(String val) {
		xmlOut = val;
	}
	public String getjsonOut() {
		return jsonOut;
	}
	public void setjsonOut(String val) {
		jsonOut = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public SESReceiverJSON_XML() {
	}
	public void invoke() throws Exception {
	String xmlOt="";
	String jsonOt="";
	if(getjsonIn()!=null)
	{
		JSONObject jObj = new JSONObject(getjsonIn());
		xmlOt=XML.toString(jObj);
                xmlOt="&lt;root&gt;" + xmlOt + "&lt;/root&gt;";
		setxmlOut(xmlOt);
	}

	if(getxmlIn()!=null)
	{
		JSONObject jObj = XML.toJSONObject(getxmlIn());
		setjsonOut(jObj.toString());
	}
/* Available Variables: DO NOT MODIFY
	In  : String jsonIn
	In  : String xmlIn
	Out : String xmlOut
	Out : String jsonOut
* Available Variables: DO NOT MODIFY *****/

}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>jsonIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>xmlIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>xmlOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>jsonOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>SESReceiverJSON_XML</name>
                    <byteCode>yv66vgAAADQAUQkAFgAyCQAWADMJABYANAkAFgA1CgAXADYIADcKABYAOAcAOQoACAA6CgA7ADwHAD0KAAsANggAPgoACwA/CABACgALAEEKABYAQgoAFgBDCgA7AEQKAAgAQQoAFgBFBwBGBwBHAQAGanNvbkluAQASTGphdmEvbGFuZy9TdHJpbmc7AQAFeG1sSW4BAAZ4bWxPdXQBAAdqc29uT3V0AQAJZ2V0anNvbkluAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAJc2V0anNvbkluAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAIZ2V0eG1sSW4BAAhzZXR4bWxJbgEACWdldHhtbE91dAEACXNldHhtbE91dAEACmdldGpzb25PdXQBAApzZXRqc29uT3V0AQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQANU3RhY2tNYXBUYWJsZQcASAEACkV4Y2VwdGlvbnMHAEkBAApTb3VyY2VGaWxlAQAYU0VTUmVjZWl2ZXJKU09OX1hNTC5qYXZhDAAYABkMABoAGQwAGwAZDAAcABkMACkAKgEAAAwAHQAeAQATb3JnL2pzb24vSlNPTk9iamVjdAwAKQAiBwBKDABLAEwBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEABjxyb290PgwATQBOAQAHPC9yb290PgwASwAeDAAmACIMACMAHgwATwBQDAAoACIBAERTZXJ2aWNlcy9TRVNFbnRTZXJ2ZXIvU2VydmljZUhhbmRsZXIvU0VTUmVjZWl2ZXIvU0VTUmVjZWl2ZXJKU09OX1hNTAEAEGphdmEvbGFuZy9PYmplY3QBABBqYXZhL2xhbmcvU3RyaW5nAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEADG9yZy9qc29uL1hNTAEACHRvU3RyaW5nAQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL1N0cmluZzsBAAZhcHBlbmQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBAAx0b0pTT05PYmplY3QBACkoTGphdmEvbGFuZy9TdHJpbmc7KUxvcmcvanNvbi9KU09OT2JqZWN0OwAhABYAFwAAAAQABAAYABkAAAAEABoAGQAAAAQAGwAZAAAABAAcABkAAAAKAAEAHQAeAAEAHwAAAB0AAQABAAAABSq0AAGwAAAAAQAgAAAABgABAAAADgABACEAIgABAB8AAAAiAAIAAgAAAAYqK7UAAbEAAAABACAAAAAKAAIAAAARAAUAEgABACMAHgABAB8AAAAdAAEAAQAAAAUqtAACsAAAAAEAIAAAAAYAAQAAABQAAQAkACIAAQAfAAAAIgACAAIAAAAGKiu1AAKxAAAAAQAgAAAACgACAAAAFwAFABgAAQAlAB4AAQAfAAAAHQABAAEAAAAFKrQAA7AAAAABACAAAAAGAAEAAAAaAAEAJgAiAAEAHwAAACIAAgACAAAABiortQADsQAAAAEAIAAAAAoAAgAAAB0ABQAeAAEAJwAeAAEAHwAAAB0AAQABAAAABSq0AASwAAAAAQAgAAAABgABAAAAIAABACgAIgABAB8AAAAiAAIAAgAAAAYqK7UABLEAAAABACAAAAAKAAIAAAAjAAUAJAABACkAKgABAB8AAABJAAIAAQAAAB0qtwAFKhIGtQABKhIGtQACKhIGtQADKhIGtQAEsQAAAAEAIAAAABoABgAAACYABAAJAAoACgAQAAsAFgAMABwAJwABACsAKgACAB8AAACmAAMABAAAAFQSBkwSBk0qtgAHxgAyuwAIWSq2AAe3AAlOLbgACky7AAtZtwAMEg22AA4rtgAOEg+2AA62ABBMKiu2ABEqtgASxgATKrYAErgAE04qLbYAFLYAFbEAAAACACAAAAAuAAsAAAApAAMAKgAGACsADQAtABkALgAeAC8ANwAwADwAMwBDADUASwA2AFMAPwAsAAAADAAC/QA8BwAtBwAtFgAuAAAABAABAC8AAQAwAAAAAgAx</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <xsl:choose>
                    <xsl:when test="string-length($SESReqRec/ProcessStarterOutput/PostData)>0">
                        <xsl:if test="$SESReqRec/ProcessStarterOutput/PostData">
                            <jsonIn>
                                <xsl:value-of select="$SESReqRec/ProcessStarterOutput/PostData"/>
                            </jsonIn>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <jsonIn>
                            <xsl:value-of select="&quot;{}&quot;"/>
                        </jsonIn>
                    </xsl:otherwise>
                </xsl:choose>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>618</pd:x>
        <pd:y>339</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>368</pd:x>
        <pd:y>118</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($SESReqRec/ProcessStarterOutput)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($JSON_XML/javaCodeActivityOutput/xmlOut)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1042</pd:x>
        <pd:y>107</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($SESReqRec/ProcessStarterOutput/Headers/x-transaction-id)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($ProcessImpl/root/xmlOut)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogErrMsg">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1083</pd:x>
        <pd:y>249</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/eSIMProv/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GUID/GUID/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($SESReqRec/ProcessStarterOutput)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="concat(tib:render-xml($_error),  &quot;JSON Message Sent-->&quot;, $XML_JSON-Err/javaCodeActivityOutput/jsonOut)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <xsl:choose>
                    <xsl:when test="string-length($GUID/GUID/StartTimeStamp) > 0">
                        <TimeDuration>
                            <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                        </TimeDuration>
                    </xsl:when>
                    <xsl:otherwise>
                        <TimeDuration>
                            <xsl:value-of select="0"/>
                        </TimeDuration>
                    </xsl:otherwise>
                </xsl:choose>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapError">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>433</pd:x>
        <pd:y>248</pd:y>
        <config>
            <element ref="pfx5:root"/>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <error>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </error>
                </xsl:if>
                <xsl:if test="$_error/ns1:ErrorReport/Msg">
                    <error_description>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </error_description>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>817</pd:x>
        <pd:y>339</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ProcessImpl">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>58</pd:y>
        <config>
            <processName>/Services/SESEntServer/DefaultHandler/DefaultProcessImpl.process</processName>
            <processNameXPath>if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/RequestURI)
then '/Services/SESEntServer/eSIMCardMgr/Implementation/triggerSubActProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionDeactivation/RequestURI)
then '/Services/SESEntServer/multiSIMMgr/Implementation/triggerSubDeActProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/RequestURI)
then '/Services/SESEntServer/queryServiceStatus/Implementation/getEntitlementProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionResume/RequestURI)
then '/Services/SESEntServer/multiSIMMgr/Implementation/triggerSubResumeProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionSuspend/RequestURI)
then '/Services/SESEntServer/multiSIMMgr/Implementation/triggerSubSuspendProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/factoryReset/ReqURI )
then '/Services/SESEntServer/factoryReset/Implementation/factoryResetProcessImpl.process'
else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/")= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/transferESIMPrimary/ReqURI)
then '/Services/SESEntServer/transferESIMPrimary/Implementation/transferESIMProcessImpl.process'
else if (contains(tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/"), $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/TremblantQueryNumberPool/URI))
then '/Services/SESEntServer/TremblantQueryNumberPool/Implementation/QueryNumberPool.process'
else if (contains(tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/"), $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/QueryPurchasablePlans/RequestURI))
then '/Services/SESEntServer/QueryPurchasablePlans/Implementation/QueryPurchasablePlansImpl.process'
else if (contains(tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/"), $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/QuerySubscribedPlans/RequestURI))
then '/Services/SESEntServer/QueryPurchasablePlans/Implementation/QueryPurchasablePlansImpl.process'
else if (contains(tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/"), $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/RequestURI))
then '/Services/SESEntServer/transferSharedSecondaryDeviceEsimSub/Implementation/transferSharedSecondaryDeviceEsimSub.process'
else if (contains(tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,"/"), $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/RequestURI_TremblantTransfer))
then '/Services/SESEntServer/transferSharedSecondaryDeviceEsimSub/Implementation/transferSharedSecondaryDeviceEsimSub.process'
else if (contains($SESReqRec/ProcessStarterOutput/RequestURI, $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/PACIGW/GetPACIAuthentication/CallBackURI))
then '/Services/SESEntServer/PACIGW/CallBackPACIFinalStatus/CallBackPACIFinalStatus.process'
else if (contains($SESReqRec/ProcessStarterOutput/RequestURI, $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/MSISDN2IMSI/ReqURI))
then '/Services/SESEntServer/MSISDN2IMSI/Implementation/MSISDN2IMSIProcessImpl.process'                         
else
'/Services/SESEntServer/DefaultHandler/DefaultProcessImpl.process'</processNameXPath>
        </config>
        <pd:inputBindings>
            <root>
                <xmlIn>
                    <xsl:value-of select="$JSON_XML/javaCodeActivityOutput/xmlOut"/>
                </xmlIn>
                <NameValuePairs>
                    <NameValue>
                        <Name>
                            <xsl:value-of select="&quot;x-transaction-id&quot;"/>
                        </Name>
                        <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id">
                            <Value>
                                <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                            </Value>
                        </xsl:if>
                    </NameValue>
                    <NameValue>
                        <Name>
                            <xsl:value-of select="&quot;primaryMsisdn&quot;"/>
                        </Name>
                        <Value>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/parameters/primaryMsisdn"/>
                        </Value>
                    </NameValue>
                    <NameValue>
                        <Name>
                            <xsl:value-of select="&quot;planid&quot;"/>
                        </Name>
                        <Value>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/parameters/plan-id"/>
                        </Value>
                    </NameValue>
                    <NameValue>
                        <Name>
                            <xsl:value-of select="&quot;msisdn&quot;"/>
                        </Name>
                        <Value>
                            <xsl:value-of select="format:FormatMSISDN($SESReqRec/ProcessStarterOutput/parameters/msisdn, $_globalVariables/ns2:GlobalVariables/MSISDNBaseLength)"/>
                        </Value>
                    </NameValue>
                </NameValuePairs>
                <TransactionID>
                    <xsl:value-of select="$GUID/GUID/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$GUID/GUID/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-HTTP-Response-1">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>814</pd:x>
        <pd:y>248</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>SESReqRec</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="x-transaction-id" type="xsd:string"/>
                            <xsd:element name="Status" type="xsd:string"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <asciiContent>
                    <xsl:value-of select="$XML_JSON-Err/javaCodeActivityOutput/jsonOut"/>
                </asciiContent>
                <Headers>
                    <x-transaction-id>
                        <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                    </x-transaction-id>
                    <xsl:choose>
                        <xsl:when test="contains($_error/ns1:ErrorReport/MsgCode,&quot;BW&quot;)">
                            <Status>
                                <xsl:value-of select="&quot;HTTP 400 Bad Request&quot;"/>
                            </Status>
                            <StatusLine>
                                <xsl:value-of select="&quot;HTTP 400 Bad Request&quot;"/>
                            </StatusLine>
                        </xsl:when>
                        <xsl:otherwise>
                            <Status>
                                <xsl:value-of select="&quot;HTTP 500&quot;"/>
                            </Status>
                            <StatusLine>
                                <xsl:value-of select="&quot;HTTP 500&quot;"/>
                            </StatusLine>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Content-Type>
                        <xsl:value-of select="&quot;application/json&quot;"/>
                    </Content-Type>
                </Headers>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendSESHTTPRes">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>893</pd:x>
        <pd:y>109</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>SESReqRec</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="x-transaction-id" type="xsd:string"/>
                            <xsd:element name="Status" type="xsd:string"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="authorization" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-device-auth-mode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-device-type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-nsds-version" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:choose>
                    <xsl:when test="string-length($ProcessImpl/root/NameValuePairs/NameValue[Name =&quot;SKIPJSON&quot;]/Value)>0">
                        <asciiContent>
                            <xsl:value-of select="$ProcessImpl/root/NameValuePairs/NameValue[Name =&quot;SKIPJSON&quot;]/Value"/>
                        </asciiContent>
                    </xsl:when>
                    <xsl:otherwise>
                        <asciiContent>
                            <xsl:value-of select="$XML_JSON/javaCodeActivityOutput/jsonOut"/>
                        </asciiContent>
                    </xsl:otherwise>
                </xsl:choose>
                <Headers>
                    <x-transaction-id>
                        <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-transaction-id"/>
                    </x-transaction-id>
                    <Status>
                        <xsl:value-of select="200"/>
                    </Status>
                    <Content-Type>
                        <xsl:value-of select="&quot;application/json&quot;"/>
                    </Content-Type>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/Content-Length">
                        <Content-Length>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/Content-Length"/>
                        </Content-Length>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/Accept">
                        <Accept>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/Accept"/>
                        </Accept>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/authorization">
                        <authorization>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/authorization"/>
                        </authorization>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/x-device-auth-mode">
                        <x-device-auth-mode>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-device-auth-mode"/>
                        </x-device-auth-mode>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/x-device-type">
                        <x-device-type>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-device-type"/>
                        </x-device-type>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/x-nsds-version">
                        <x-nsds-version>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/x-nsds-version"/>
                        </x-nsds-version>
                    </xsl:if>
                    <xsl:if test="$SESReqRec/ProcessStarterOutput/Headers/Pragma">
                        <Pragma>
                            <xsl:value-of select="$SESReqRec/ProcessStarterOutput/Headers/Pragma"/>
                        </Pragma>
                    </xsl:if>
                </Headers>
                <xsl:choose>
                    <xsl:when test="if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/RequestURI)&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionDeactivation/RequestURI)&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionResume/RequestURI)&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)=$_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionSuspend/RequestURI)&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/factoryReset/ReqURI )&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/RequestURI )&#xA;then true()&#xA;else if (tib:substring-after-last($SESReqRec/ProcessStarterOutput/RequestURI,&quot;/&quot;)= $_globalVariables/ns2:GlobalVariables/BusinessProcesses/Services/SES/transferSharedSecondaryDeviceEsimSub/RequestURI_TremblantTransfer )&#xA;then true()&#xA;else&#xA;false()">
                        <DynamicHeaders>
                            <Header>
                                <Name>
                                    <xsl:value-of select="&quot;Status&quot;"/>
                                </Name>
                                <Value>
                                    <xsl:value-of select="206"/>
                                </Value>
                            </Header>
                        </DynamicHeaders>
                    </xsl:when>
                    <xsl:otherwise>
                        <DynamicHeaders>
                            <Header>
                                <Name>
                                    <xsl:value-of select="&quot;Status&quot;"/>
                                </Name>
                                <Value>
                                    <xsl:value-of select="200"/>
                                </Value>
                            </Header>
                        </DynamicHeaders>
                    </xsl:otherwise>
                </xsl:choose>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="XML_JSON-Err">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>617</pd:x>
        <pd:y>248</pd:y>
        <config>
            <fileName>SESReceiverXML_JSONErr</fileName>
            <packageName>Services.SESEntServer.ServiceHandler.SESReceiver</packageName>
            <fullsource>package Services.SESEntServer.ServiceHandler.SESReceiver;
import java.util.*;
import java.io.*;
import org.json.JSONObject;
import org.json.XML;

public class SESReceiverXML_JSONErr{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String jsonIn = "";
	protected String xmlIn = "";
	protected String xmlOut = "";
	protected String jsonOut = "";
	public String getjsonIn() {
		return jsonIn;
	}
	public void setjsonIn(String val) {
		jsonIn = val;
	}
	public String getxmlIn() {
		return xmlIn;
	}
	public void setxmlIn(String val) {
		xmlIn = val;
	}
	public String getxmlOut() {
		return xmlOut;
	}
	public void setxmlOut(String val) {
		xmlOut = val;
	}
	public String getjsonOut() {
		return jsonOut;
	}
	public void setjsonOut(String val) {
		jsonOut = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public SESReceiverXML_JSONErr() {
	}
	public void invoke() throws Exception {
	String xmlOt="";
	String jsonOt="";
	if(getjsonIn()!=null &amp; getjsonIn()!="")
	{
		JSONObject jObj = new JSONObject(getjsonIn());
		xmlOt=XML.toString(jObj);
		setxmlOut(xmlOt);
	}

	if(getxmlIn()!=null &amp; getxmlIn()!="")
	{
		System.out.println("XML to JSON***********************************");
		JSONObject jObj1 = XML.toJSONObject(getxmlIn());
		
		setjsonOut(jObj1.toString());
	}
/* Available Variables: DO NOT MODIFY
	In  : String jsonIn
	In  : String xmlIn
	Out : String xmlOut
	Out : String jsonOut
* Available Variables: DO NOT MODIFY *****/

}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>jsonIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>xmlIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>xmlOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>jsonOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>SESReceiverXML_JSONErr</name>
                    <byteCode>yv66vgAAADQAUwkAEwAwCQATADEJABMAMgkAEwAzCgAUADQIADUKABMANgcANwoACAA4CgA5ADoKABMAOwoAEwA8CQA9AD4IAD8KAEAAQQoAOQBCCgAIAEMKABMARAcARQcARgEABmpzb25JbgEAEkxqYXZhL2xhbmcvU3RyaW5nOwEABXhtbEluAQAGeG1sT3V0AQAHanNvbk91dAEACWdldGpzb25JbgEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACXNldGpzb25JbgEAFShMamF2YS9sYW5nL1N0cmluZzspVgEACGdldHhtbEluAQAIc2V0eG1sSW4BAAlnZXR4bWxPdXQBAAlzZXR4bWxPdXQBAApnZXRqc29uT3V0AQAKc2V0anNvbk91dAEABjxpbml0PgEAAygpVgEABmludm9rZQEADVN0YWNrTWFwVGFibGUHAEcHAEUBAApFeGNlcHRpb25zBwBIAQAKU291cmNlRmlsZQEAG1NFU1JlY2VpdmVyWE1MX0pTT05FcnIuamF2YQwAFQAWDAAXABYMABgAFgwAGQAWDAAmACcBAAAMABoAGwEAE29yZy9qc29uL0pTT05PYmplY3QMACYAHwcASQwASgBLDAAjAB8MACAAGwcATAwATQBOAQAuWE1MIHRvIEpTT04qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgcATwwAUAAfDABRAFIMAEoAGwwAJQAfAQBHU2VydmljZXMvU0VTRW50U2VydmVyL1NlcnZpY2VIYW5kbGVyL1NFU1JlY2VpdmVyL1NFU1JlY2VpdmVyWE1MX0pTT05FcnIBABBqYXZhL2xhbmcvT2JqZWN0AQAQamF2YS9sYW5nL1N0cmluZwEAE2phdmEvbGFuZy9FeGNlcHRpb24BAAxvcmcvanNvbi9YTUwBAAh0b1N0cmluZwEAJihMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9TdHJpbmc7AQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAMdG9KU09OT2JqZWN0AQApKExqYXZhL2xhbmcvU3RyaW5nOylMb3JnL2pzb24vSlNPTk9iamVjdDsAIQATABQAAAAEAAQAFQAWAAAABAAXABYAAAAEABgAFgAAAAQAGQAWAAAACgABABoAGwABABwAAAAdAAEAAQAAAAUqtAABsAAAAAEAHQAAAAYAAQAAAA4AAQAeAB8AAQAcAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAdAAAACgACAAAAEQAFABIAAQAgABsAAQAcAAAAHQABAAEAAAAFKrQAArAAAAABAB0AAAAGAAEAAAAUAAEAIQAfAAEAHAAAACIAAgACAAAABiortQACsQAAAAEAHQAAAAoAAgAAABcABQAYAAEAIgAbAAEAHAAAAB0AAQABAAAABSq0AAOwAAAAAQAdAAAABgABAAAAGgABACMAHwABABwAAAAiAAIAAgAAAAYqK7UAA7EAAAABAB0AAAAKAAIAAAAdAAUAHgABACQAGwABABwAAAAdAAEAAQAAAAUqtAAEsAAAAAEAHQAAAAYAAQAAACAAAQAlAB8AAQAcAAAAIgACAAIAAAAGKiu1AASxAAAAAQAdAAAACgACAAAAIwAFACQAAQAmACcAAQAcAAAASQACAAEAAAAdKrcABSoSBrUAASoSBrUAAioSBrUAAyoSBrUABLEAAAABAB0AAAAaAAYAAAAmAAQACQAKAAoAEAALABYADAAcACcAAQAoACcAAgAcAAAA8QADAAQAAABxEgZMEgZNKrYAB8YABwSnAAQDKrYABxIGpQAHBKcABAN+mQAZuwAIWSq2AAe3AAlOLbgACkwqK7YACyq2AAzGAAcEpwAEAyq2AAwSBqUABwSnAAQDfpkAG7IADRIOtgAPKrYADLgAEE4qLbYAEbYAErEAAAACAB0AAAAuAAsAAAApAAMAKgAGACsAJAAtADAALgA1AC8AOgAyAFgANABgADUAaAA3AHAAQAApAAAAOgAK/QARBwAqBwAqQAFMAf8AAAADBwArBwAqBwAqAAIBARkKQAFMAf8AAAADBwArBwAqBwAqAAIBARsALAAAAAQAAQAtAAEALgAAAAIALw==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <xmlIn>
                    <xsl:value-of select="substring-before(substring-after(tib:render-xml($MapError/root), &quot;&lt;root>&quot;), &quot;&lt;/root>&quot;)"/>
                </xmlIn>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>640</pd:x>
        <pd:y>36</pd:y>
        <pd:width>167</pd:width>
        <pd:height>134</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>XML_JSON</pd:to>
            <pd:xpathDescription>SkipJsonCoversion</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length($ProcessImpl/root/NameValuePairs/NameValue[Name ="SKIPJSON"]/Value)=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>XML_JSON</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="XML_JSON">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>723</pd:x>
            <pd:y>112</pd:y>
            <config>
                <fileName>SESReceiverXML_JSON</fileName>
                <packageName>Services.SESEntServer.ServiceHandler.SESReceiver</packageName>
                <fullsource>package Services.SESEntServer.ServiceHandler.SESReceiver;
import java.util.*;
import java.io.*;
import org.json.JSONObject;
import org.json.XML;

public class SESReceiverXML_JSON{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String jsonIn = "";
	protected String xmlIn = "";
	protected String xmlOut = "";
	protected String jsonOut = "";
	public String getjsonIn() {
		return jsonIn;
	}
	public void setjsonIn(String val) {
		jsonIn = val;
	}
	public String getxmlIn() {
		return xmlIn;
	}
	public void setxmlIn(String val) {
		xmlIn = val;
	}
	public String getxmlOut() {
		return xmlOut;
	}
	public void setxmlOut(String val) {
		xmlOut = val;
	}
	public String getjsonOut() {
		return jsonOut;
	}
	public void setjsonOut(String val) {
		jsonOut = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public SESReceiverXML_JSON() {
	}
	public void invoke() throws Exception {
	String xmlOt="";
	String jsonOt="";
//		System.out.println("XML to JSON***********************************");
		JSONObject jObj1 = XML.toJSONObject(getxmlIn());
		//setjsonOut((jObj1.toString()));
                setjsonOut((jObj1.toString()).replaceAll(" ",""));
/* Available Variables: DO NOT MODIFY
	In  : String jsonIn
	In  : String xmlIn
	Out : String xmlOut
	Out : String jsonOut
* Available Variables: DO NOT MODIFY *****/

}
}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>jsonIn</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>xmlIn</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>xmlOut</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>jsonOut</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>SESReceiverXML_JSON</name>
                        <byteCode>yv66vgAAADQAQQkADQAnCQANACgJAA0AKQkADQAqCgAOACsIACwKAA0ALQoALgAvCgAwADEIADIKADMANAoADQA1BwA2BwA3AQAGanNvbkluAQASTGphdmEvbGFuZy9TdHJpbmc7AQAFeG1sSW4BAAZ4bWxPdXQBAAdqc29uT3V0AQAJZ2V0anNvbkluAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAJc2V0anNvbkluAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAIZ2V0eG1sSW4BAAhzZXR4bWxJbgEACWdldHhtbE91dAEACXNldHhtbE91dAEACmdldGpzb25PdXQBAApzZXRqc29uT3V0AQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQAKRXhjZXB0aW9ucwcAOAEAClNvdXJjZUZpbGUBABhTRVNSZWNlaXZlclhNTF9KU09OLmphdmEMAA8AEAwAEQAQDAASABAMABMAEAwAIAAhAQAADAAaABUHADkMADoAOwcAPAwAPQAVAQACwqAHAD4MAD8AQAwAHwAZAQBEU2VydmljZXMvU0VTRW50U2VydmVyL1NlcnZpY2VIYW5kbGVyL1NFU1JlY2VpdmVyL1NFU1JlY2VpdmVyWE1MX0pTT04BABBqYXZhL2xhbmcvT2JqZWN0AQATamF2YS9sYW5nL0V4Y2VwdGlvbgEADG9yZy9qc29uL1hNTAEADHRvSlNPTk9iamVjdAEAKShMamF2YS9sYW5nL1N0cmluZzspTG9yZy9qc29uL0pTT05PYmplY3Q7AQATb3JnL2pzb24vSlNPTk9iamVjdAEACHRvU3RyaW5nAQAQamF2YS9sYW5nL1N0cmluZwEACnJlcGxhY2VBbGwBADgoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwAhAA0ADgAAAAQABAAPABAAAAAEABEAEAAAAAQAEgAQAAAABAATABAAAAAKAAEAFAAVAAEAFgAAAB0AAQABAAAABSq0AAGwAAAAAQAXAAAABgABAAAADgABABgAGQABABYAAAAiAAIAAgAAAAYqK7UAAbEAAAABABcAAAAKAAIAAAARAAUAEgABABoAFQABABYAAAAdAAEAAQAAAAUqtAACsAAAAAEAFwAAAAYAAQAAABQAAQAbABkAAQAWAAAAIgACAAIAAAAGKiu1AAKxAAAAAQAXAAAACgACAAAAFwAFABgAAQAcABUAAQAWAAAAHQABAAEAAAAFKrQAA7AAAAABABcAAAAGAAEAAAAaAAEAHQAZAAEAFgAAACIAAgACAAAABiortQADsQAAAAEAFwAAAAoAAgAAAB0ABQAeAAEAHgAVAAEAFgAAAB0AAQABAAAABSq0AASwAAAAAQAXAAAABgABAAAAIAABAB8AGQABABYAAAAiAAIAAgAAAAYqK7UABLEAAAABABcAAAAKAAIAAAAjAAUAJAABACAAIQABABYAAABJAAIAAQAAAB0qtwAFKhIGtQABKhIGtQACKhIGtQADKhIGtQAEsQAAAAEAFwAAABoABgAAACYABAAJAAoACgAQAAsAFgAMABwAJwABACIAIQACABYAAABGAAQABAAAAB4SBkwSBk0qtgAHuAAITiottgAJEgoSBrYAC7YADLEAAAABABcAAAAWAAUAAAApAAMAKgAGACwADgAuAB0ANgAjAAAABAABACQAAQAlAAAAAgAm</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <xmlIn>
                        <xsl:value-of select="substring-before(substring-after(($ProcessImpl/root/xmlOut), &quot;&lt;root>&quot;), &quot;&lt;/root>&quot;)"/>
                    </xmlIn>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>SESReqRec</pd:from>
        <pd:to>GUID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JSON_XML</pd:from>
        <pd:to>Log_Msg-In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendSESHTTPRes</pd:from>
        <pd:to>Log_Msg-Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-HTTP-Response-1</pd:from>
        <pd:to>LogErrMsg</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapError</pd:from>
        <pd:to>XML_JSON-Err</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>XML_JSON-Err</pd:from>
        <pd:to>Send-HTTP-Response-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GUID</pd:from>
        <pd:to>JSON_XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-In</pd:from>
        <pd:to>ProcessImpl</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>XML_JSON-Err</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Send-HTTP-Response-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogErrMsg</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>MapError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>SendSESHTTPRes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ProcessImpl</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>