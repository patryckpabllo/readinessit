<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx52="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx50="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns51="www.tibco.com/createcustomer" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx45="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:pfx48="http://ericsson.com/services/ws_CIL_5" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx46="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx47="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx62="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx63="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumReservRequest.xsd" xmlns:pfx60="http://ericsson.com/services/ws_CMI_5/storagemediumdetailsread" xmlns:pfx61="http://www.huawei.com/CDM/ES/" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" xmlns:pfx56="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" xmlns:pfx59="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/StorageMediumDetailsRead.xsd" xmlns:pfx57="http://ericsson.com/services/ws_CIL_5/contractservicesread" xmlns:pfx58="http://ericsson.com/services/ws_CMI_5" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns19="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx64="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumReservResponse.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns24="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:ns23="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:ns22="http://ericsson.com/services/ws_CIL_5/contractserviceswrite" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:ns28="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns27="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns26="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:ns25="http://xmlns.zain.com/BSS/ESB/CDM/Base">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractcreatezain" schemaLocation="/ContractCreatezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" schemaLocation="/BusinessWSDLS/Services/BSCS/ModifyContract/ContractModifyserviceService.wsdl"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" schemaLocation="/BusinessSchemas/Services/Modification/CustomerModifyOrder/CustomerOrderModify.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyOrder/ModifyOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyOrder/ModifyOrderRes.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractservicesread" schemaLocation="/BusinessWSDLS/Services/BSCS/ContractServicesRead/ContractServicesReadService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CMI_5/storagemediumdetailsread" schemaLocation="/Resources/WSDL/BSCS/StorageMediumDetailsReadService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/StorageMediumDetailsRead.xsd" schemaLocation="/BusinessSchemas/Services/Query/StorageMediumDetailsRead/StorageMediumDetailsRead.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumReservRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/NumberReservation/NumReservRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/NumReservResponse.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/NumberReservation/NumReservResponse.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CIL_5" location="/BusinessWSDLS/Services/BSCS/ContractServicesRead/ContractServicesReadService.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CMI_5" location="/Resources/WSDL/BSCS/StorageMediumDetailsReadService.wsdl"/>
    <pd:name>Services/SESEntServer/TremblantQueryNumberPool/HelperProcesses/ESI_QueryNumberPool.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx63:numReservRequest"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>52</pd:startX>
    <pd:startY>56</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$NativeToCDM/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx64:numReservResponse"/>
                    <xsd:element name="Error" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="ErrorCode" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ErrorMsg" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>946</pd:endX>
    <pd:endY>56</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="Common_EAI_EMSSendReceive">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>334</pd:x>
        <pd:y>56</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Start/group/pfx63:numReservRequest)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/group/TrackingId"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SES/TremblantQueryNumberPool/ESI_Request_Queue"/>
                </EMS_DestinationQueue>
                <xsl:if test="$Start/group/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/group/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/storageMediumDetailsRead/SOAPTimeout"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTechnicalError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>439</pd:x>
        <pd:y>180</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="string-length($_error_Common_EAI_EMSSendReceive/pfx4:ExceptionRequest/ExceptionCode)>0">
                    <ns:ActivityInput>
                        <message>
                            <xsl:value-of select="$_error_Common_EAI_EMSSendReceive/pfx4:ExceptionRequest/ns6:Header/ns6:Message"/>
                        </message>
                        <messageCode>
                            <xsl:value-of select="concat(&quot;TIBCO|&quot;,$_error_Common_EAI_EMSSendReceive/pfx4:ExceptionRequest/ExceptionCode)"/>
                        </messageCode>
                    </ns:ActivityInput>
                </xsl:when>
                <xsl:otherwise>
                    <ns:ActivityInput>
                        <message>
                            <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                        </message>
                        <messageCode>
                            <xsl:value-of select="concat(&quot;TIBCO|&quot;,$_error/ns8:ErrorReport/MsgCode)"/>
                        </messageCode>
                    </ns:ActivityInput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>176</pd:x>
        <pd:y>56</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SES/TremblantQueryNumberPool/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/group)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>619</pd:x>
        <pd:y>56</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SES/TremblantQueryNumberPool/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="$Common_EAI_EMSSendReceive/ResponseData"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>767</pd:x>
        <pd:y>55</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx64:numReservResponse"/>
                            <xsd:element name="Error">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="ErrorCode" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="ErrorMsg" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="count($ParseResponse/pfx64:numReservResponse/pfx64:numberList)>0">
                        <xsl:for-each select="$ParseResponse/pfx64:numReservResponse">
                            <pfx64:numReservResponse>
                                <xsl:if test="pfx64:response">
                                    <pfx64:response>
                                        <xsl:value-of select="pfx64:response"/>
                                    </pfx64:response>
                                </xsl:if>
                                <xsl:if test="pfx64:requestStatus">
                                    <pfx64:requestStatus>
                                        <xsl:value-of select="pfx64:requestStatus"/>
                                    </pfx64:requestStatus>
                                </xsl:if>
                                <xsl:if test="pfx64:dnid">
                                    <pfx64:dnid>
                                        <xsl:value-of select="pfx64:dnid"/>
                                    </pfx64:dnid>
                                </xsl:if>
                                <xsl:if test="pfx64:number">
                                    <pfx64:number>
                                        <xsl:value-of select="pfx64:number"/>
                                    </pfx64:number>
                                </xsl:if>
                                <xsl:if test="pfx64:reservationNum">
                                    <pfx64:reservationNum>
                                        <xsl:value-of select="pfx64:reservationNum"/>
                                    </pfx64:reservationNum>
                                </xsl:if>
                                <xsl:if test="pfx64:dnCodepub">
                                    <pfx64:dnCodepub>
                                        <xsl:value-of select="pfx64:dnCodepub"/>
                                    </pfx64:dnCodepub>
                                </xsl:if>
                                <xsl:if test="pfx64:status">
                                    <pfx64:status>
                                        <xsl:value-of select="pfx64:status"/>
                                    </pfx64:status>
                                </xsl:if>
                                <xsl:if test="pfx64:dealerID">
                                    <pfx64:dealerID>
                                        <xsl:value-of select="pfx64:dealerID"/>
                                    </pfx64:dealerID>
                                </xsl:if>
                                <xsl:if test="pfx64:class">
                                    <pfx64:class>
                                        <xsl:value-of select="pfx64:class"/>
                                    </pfx64:class>
                                </xsl:if>
                                <xsl:if test="pfx64:billingType">
                                    <pfx64:billingType>
                                        <xsl:value-of select="pfx64:billingType"/>
                                    </pfx64:billingType>
                                </xsl:if>
                                <xsl:if test="pfx64:bsType">
                                    <pfx64:bsType>
                                        <xsl:value-of select="pfx64:bsType"/>
                                    </pfx64:bsType>
                                </xsl:if>
                                <xsl:if test="pfx64:category">
                                    <pfx64:category>
                                        <xsl:value-of select="pfx64:category"/>
                                    </pfx64:category>
                                </xsl:if>
                                <xsl:for-each select="pfx64:numberList">
                                    <pfx64:numberList>
                                        <xsl:if test="pfx64:number">
                                            <pfx64:number>
                                                <xsl:value-of select="pfx64:number"/>
                                            </pfx64:number>
                                        </xsl:if>
                                        <xsl:if test="pfx64:dnid">
                                            <pfx64:dnid>
                                                <xsl:value-of select="pfx64:dnid"/>
                                            </pfx64:dnid>
                                        </xsl:if>
                                        <xsl:if test="pfx64:category">
                                            <pfx64:category>
                                                <xsl:value-of select="pfx64:category"/>
                                            </pfx64:category>
                                        </xsl:if>
                                        <xsl:if test="pfx64:reservationNum">
                                            <pfx64:reservationNum>
                                                <xsl:value-of select="pfx64:reservationNum"/>
                                            </pfx64:reservationNum>
                                        </xsl:if>
                                        <xsl:if test="pfx64:class">
                                            <pfx64:class>
                                                <xsl:value-of select="pfx64:class"/>
                                            </pfx64:class>
                                        </xsl:if>
                                        <xsl:if test="pfx64:billingType">
                                            <pfx64:billingType>
                                                <xsl:value-of select="pfx64:billingType"/>
                                            </pfx64:billingType>
                                        </xsl:if>
                                        <xsl:if test="pfx64:bsType">
                                            <pfx64:bsType>
                                                <xsl:value-of select="pfx64:bsType"/>
                                            </pfx64:bsType>
                                        </xsl:if>
                                        <xsl:if test="pfx64:dealerid">
                                            <pfx64:dealerid>
                                                <xsl:value-of select="pfx64:dealerid"/>
                                            </pfx64:dealerid>
                                        </xsl:if>
                                        <xsl:if test="pfx64:dealerName">
                                            <pfx64:dealerName>
                                                <xsl:value-of select="pfx64:dealerName"/>
                                            </pfx64:dealerName>
                                        </xsl:if>
                                        <xsl:if test="pfx64:status">
                                            <pfx64:status>
                                                <xsl:value-of select="pfx64:status"/>
                                            </pfx64:status>
                                        </xsl:if>
                                        <xsl:if test="pfx64:Remarks">
                                            <pfx64:Remarks>
                                                <xsl:value-of select="pfx64:Remarks"/>
                                            </pfx64:Remarks>
                                        </xsl:if>
                                        <xsl:if test="pfx64:OriginalNumCategory">
                                            <pfx64:OriginalNumCategory>
                                                <xsl:value-of select="pfx64:OriginalNumCategory"/>
                                            </pfx64:OriginalNumCategory>
                                        </xsl:if>
                                    </pfx64:numberList>
                                </xsl:for-each>
                                <xsl:for-each select="ns28:ErrorResponse">
                                    <ns28:ErrorResponse>
                                        <xsl:if test="ns28:Error_SourceSystem">
                                            <ns28:Error_SourceSystem>
                                                <xsl:value-of select="ns28:Error_SourceSystem"/>
                                            </ns28:Error_SourceSystem>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_SourceErrCode">
                                            <ns28:Error_SourceErrCode>
                                                <xsl:value-of select="ns28:Error_SourceErrCode"/>
                                            </ns28:Error_SourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_SourceErrDesc">
                                            <ns28:Error_SourceErrDesc>
                                                <xsl:value-of select="ns28:Error_SourceErrDesc"/>
                                            </ns28:Error_SourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_Type">
                                            <ns28:Error_Type>
                                                <xsl:value-of select="ns28:Error_Type"/>
                                            </ns28:Error_Type>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_UserErrCode">
                                            <ns28:Error_UserErrCode>
                                                <xsl:value-of select="ns28:Error_UserErrCode"/>
                                            </ns28:Error_UserErrCode>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_UserErrDesc">
                                            <ns28:Error_UserErrDesc>
                                                <xsl:value-of select="ns28:Error_UserErrDesc"/>
                                            </ns28:Error_UserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_Occurance_Time">
                                            <ns28:Error_Occurance_Time>
                                                <xsl:value-of select="ns28:Error_Occurance_Time"/>
                                            </ns28:Error_Occurance_Time>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_Additional_Desc1">
                                            <ns28:Error_Additional_Desc1>
                                                <xsl:value-of select="ns28:Error_Additional_Desc1"/>
                                            </ns28:Error_Additional_Desc1>
                                        </xsl:if>
                                        <xsl:if test="ns28:Error_Additional_Desc2">
                                            <ns28:Error_Additional_Desc2>
                                                <xsl:value-of select="ns28:Error_Additional_Desc2"/>
                                            </ns28:Error_Additional_Desc2>
                                        </xsl:if>
                                    </ns28:ErrorResponse>
                                </xsl:for-each>
                            </pfx64:numReservResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <Error>
                            <ErrorCode>
                                <xsl:value-of select="&quot;BSCS-Err&quot;"/>
                            </ErrorCode>
                            <ErrorMsg>
                                <xsl:value-of select="$ParseResponse/pfx64:numReservResponse/ns28:ErrorResponse/ns28:Error_SourceErrDesc"/>
                            </ErrorMsg>
                        </Error>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>475</pd:x>
        <pd:y>55</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx64:numReservResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSendReceive/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Common_EAI_EMSSendReceive</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSendReceive</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSendReceive</pd:from>
        <pd:to>GenerateTechnicalError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>