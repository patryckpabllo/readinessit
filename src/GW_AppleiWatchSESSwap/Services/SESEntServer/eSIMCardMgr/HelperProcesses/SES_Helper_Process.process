<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd" xmlns:pfx7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/EntitleServer/EOM_NotifySES.xsd" xmlns:pfx8="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/EntitleServer/EOM_NotifyUserDataReq.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryResSchema.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationResSchema.xsd" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESDeActivate/triggerSubscriptionDeactivationResSchema.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESSuspend/triggerSubscriptionSuspendResSchema.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESResume/triggerSubscriptionResumeResSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns3="http://schemas.tibco.com/bw/plugins/http/5.0/cio" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESDeActivate/triggerSubscriptionDeactivationResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESDeActivate/triggerSubscriptionDeactivationResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESSuspend/triggerSubscriptionSuspendResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESSuspend/triggerSubscriptionSuspendResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESResume/triggerSubscriptionResumeResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESResume/triggerSubscriptionResumeResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESCommonError/SESCommonErrorSchema.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/EntitleServer/EOM_NotifySES.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/NotifySES/EOM_NotifySES.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESFactoryReset/triggerSubscriptionRecoveryResSchema.xsd"/>
    <pd:name>Services/SESEntServer/eSIMCardMgr/HelperProcesses/SES_Helper_Process.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx7:NotifyUserDataReq"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="Operation" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                    <xsd:element name="SES_ID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ESB_ID" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>26</pd:startX>
    <pd:startY>239</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$EOMResponseMap/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx7:NotifyUserDataRes"/>
                    <xsd:element ref="pfx7:ErrorResponse"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1307</pd:endX>
    <pd:endY>235</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1595423996423</pd:targetNamespace>
    <pd:activity name="Update-Status">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>982</pd:x>
        <pd:y>396</pd:y>
        <config>
            <timeout>%%CommonResources/Connections/JDBC/Internal/TIBCOAppDB/QueryTimeout%%</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>UPDATE  T_SES_TRANS_REC SET STATUS =?  WHERE ESB_ID=?</statement>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ESB_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <STATUS>
                    <xsl:value-of select="'FAILED'"/>
                </STATUS>
                <ESB_ID>
                    <xsl:choose>
                        <xsl:when test="exists($Start/root/ESB_ID)">
                            <xsl:value-of select="$Start/root/ESB_ID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ESB_ID>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ActivateMapper">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>475</pd:x>
        <pd:y>103</pd:y>
        <config>
            <element ref="pfx2:root"/>
        </config>
        <pd:inputBindings>
            <root>
                <uniqueId>
                    <xsl:value-of select="concat(&quot; &quot;,$Start/root/SES_ID)"/>
                </uniqueId>
                <serviceInfo>
                    <msisdn>
                        <xsl:value-of select="concat(&quot; &quot;,$Start/root/pfx7:NotifyUserDataReq/pfx7:ATTACH_USERS[1]/pfx7:MSISDN)"/>
                    </msisdn>
                    <imsi>
                        <xsl:value-of select="concat(&quot; &quot;,$Start/root/pfx7:NotifyUserDataReq/pfx7:ATTACH_USERS[1]/pfx7:IMSI)"/>
                    </imsi>
                    <subscriptionStatus>
                        <xsl:value-of select="&quot;Active&quot;"/>
                    </subscriptionStatus>
                    <xsl:choose>
                        <xsl:when test="$Start/root/pfx7:NotifyUserDataReq/pfx7:SERVICE=&quot;Multi-SIM&quot; and $Start/root/pfx7:NotifyUserDataReq/pfx7:TRADE_TYPE=1 and $Start/root/pfx7:NotifyUserDataReq/pfx7:ATTACH_USERS/pfx7:STATUS=1">
                            <provisionStatus>
                                <xsl:value-of select="1"/>
                            </provisionStatus>
                        </xsl:when>
                        <xsl:otherwise>
                            <provisionStatus>
                                <xsl:value-of select="3"/>
                            </provisionStatus>
                        </xsl:otherwise>
                    </xsl:choose>
                </serviceInfo>
                <iccidInfo>
                    <iccid>
                        <xsl:value-of select="concat(&quot; &quot;,substring($Start/root/pfx7:NotifyUserDataReq/pfx7:ATTACH_USERS[1]/pfx7:ICCID,1, $_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/callBackSES/iccid_length))"/>
                    </iccid>
                </iccidInfo>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallBackRequest">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>649</pd:x>
        <pd:y>236</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <authScheme>BASIC</authScheme>
            <requireBasicAuth>true</requireBasicAuth>
            <customField/>
            <basicHttpAuthIdentity>/Services/SESEntServer/Resources/Identity/SES_Identity.id</basicHttpAuthIdentity>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/callBackSES/host"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/callBackSES/port_Other"/>
                </Port>
                <Method>
                    <xsl:value-of select="&quot;POST&quot;"/>
                </Method>
                <xsl:choose>
                    <xsl:when test="$Start/root/Operation=&quot;ADD&quot;">
                        <RequestURI>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/CallBackURI"/>
                        </RequestURI>
                    </xsl:when>
                    <xsl:when test="$Start/root/Operation=&quot;DELETE&quot;">
                        <RequestURI>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionDeactivation/CallBackURI"/>
                        </RequestURI>
                    </xsl:when>
                    <xsl:when test="$Start/root/Operation=&quot;SUSPEND&quot;">
                        <RequestURI>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionSuspend/CallBackURI"/>
                        </RequestURI>
                    </xsl:when>
                    <xsl:when test="$Start/root/Operation=&quot;RESUME&quot;">
                        <RequestURI>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionResume/CallBackURI"/>
                        </RequestURI>
                    </xsl:when>
                    <xsl:when test="$Start/root/Operation=&quot;UPDATE&quot;">
                        <RequestURI>
                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/factoryReset/CallBackURI"/>
                        </RequestURI>
                    </xsl:when>
                    <xsl:otherwise>
                        <RequestURI>
                            <xsl:value-of select="&quot;&quot;"/>
                        </RequestURI>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="$XML_JSON/javaCodeActivityOutput/jsonOut">
                    <PostData>
                        <xsl:value-of select="$XML_JSON/javaCodeActivityOutput/jsonOut"/>
                    </PostData>
                </xsl:if>
                <Timeout>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/SES/callBackSES/HTTP_Timeout"/>
                </Timeout>
                <Headers>
                    <Content-Type>
                        <xsl:value-of select="&quot;application/json&quot;"/>
                    </Content-Type>
                </Headers>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EOMResponseMap">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>768</pd:x>
        <pd:y>239</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx7:NotifyUserDataRes"/>
                            <xsd:element ref="pfx7:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx7:NotifyUserDataRes>
                    <xsl:copy-of select="$Start/root/pfx7:NotifyUserDataReq/pfx7:OrderHeader"/>
                    <pfx7:ResponseCode>
                        <xsl:value-of select="if ($CallBackRequest/RequestActivityOutput/statusLine/statusCode=200)&#xA;then 0&#xA;else if(string-length($ParseSESError/root/errorCode)>0)&#xA;then $ParseSESError/root/errorCode&#xA;else&#xA;$_error/ns1:ErrorReport/MsgCode"/>
                    </pfx7:ResponseCode>
                    <pfx7:ResponseMessage>
                        <xsl:value-of select="if ($CallBackRequest/RequestActivityOutput/statusLine/statusCode=200)&#xA;then&#xA;&quot;SUCCESS&quot;&#xA;else if(string-length($ParseSESError/root/errorMsg)>0)&#xA;then $ParseSESError/root/errorMsg&#xA;else&#xA;$_error/ns1:ErrorReport/Msg"/>
                    </pfx7:ResponseMessage>
                    <pfx7:ErrorResponse>
                        <xsl:choose>
                            <xsl:when test="$CallBackRequest/RequestActivityOutput/statusLine/statusCode=200">
                                <pfx7:Error_SourceErrCode>
                                    <xsl:value-of select="0"/>
                                </pfx7:Error_SourceErrCode>
                                <pfx7:Error_SourceErrDesc>
                                    <xsl:value-of select="&quot;SUCCESS&quot;"/>
                                </pfx7:Error_SourceErrDesc>
                            </xsl:when>
                            <xsl:when test="$ParseSESError/root/errorCode">
                                <pfx7:Error_SourceSystem>
                                    <xsl:value-of select="&quot;SES&quot;"/>
                                </pfx7:Error_SourceSystem>
                                <pfx7:Error_SourceErrCode>
                                    <xsl:value-of select="$ParseSESError/root/errorCode"/>
                                </pfx7:Error_SourceErrCode>
                                <pfx7:Error_SourceErrDesc>
                                    <xsl:value-of select="$ParseSESError/root/errorMsg"/>
                                </pfx7:Error_SourceErrDesc>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx7:Error_SourceSystem>
                                    <xsl:value-of select="&quot;SES&quot;"/>
                                </pfx7:Error_SourceSystem>
                                <pfx7:Error_SourceErrCode>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </pfx7:Error_SourceErrCode>
                                <pfx7:Error_SourceErrDesc>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                </pfx7:Error_SourceErrDesc>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx7:ErrorResponse>
                </pfx7:NotifyUserDataRes>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>178</pd:x>
        <pd:y>239</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/EOM/NotifySES/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx7:NotifyUserDataReq/pfx7:MAIN_USER/pfx7:IMSI"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/root)"/>
                    </ns2:Message>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1173</pd:x>
        <pd:y>237</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/EOM/NotifySES/ComponentName"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns2:TransactionID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <xsl:choose>
                        <xsl:when test="string-length($ActivateMapper/root)>0">
                            <ns2:Message>
                                <xsl:value-of select="tib:render-xml($ActivateMapper/root)"/>
                            </ns2:Message>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns2:Message>
                                <xsl:value-of select="&quot;Validation Error,Mandatory fields missing.&quot;"/>
                            </ns2:Message>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns2:Transaction>
                        <xsl:value-of select="if(string-length($_error_CallBackRequest/ActivityErrors/ns4:HttpServerException/ns3:httpMessage/binaryContent)>0)&#xA;then&#xA;concat(&quot;Query Result -->&quot;, tib:render-xml($Start/root/SES_ID),&#xA;&quot;&#xA;&quot;,&#xA;&quot;XML-JSON -->&quot;,$XML_JSON/javaCodeActivityOutput/jsonOut,&#xA;&quot;&#xA;&quot;,&#xA;&quot;SES-Call Response -->&quot;,$CallBackRequest/RequestActivityOutput,&#xA;&quot;&#xA;&quot;,&#xA;&quot;If Error, then-->&quot;,$_error_CallBackRequest,$_error/ns1:ErrorReport,&#xA;&quot;Error String -->&quot;, tib:base64-to-string($_error_CallBackRequest/ActivityErrors/ns4:HttpServerException/ns3:httpMessage/binaryContent))&#xA;&#xA;else if(string-length($_error_CallBackRequest/ActivityErrors/ns4:HttpClientException/ns3:httpMessage/binaryContent)>0)&#xA;then&#xA;concat(&quot;Query Result -->&quot;, tib:render-xml($Start/root/SES_ID),&#xA;&quot;&#xA;&quot;,&#xA;&quot;XML-JSON -->&quot;,$XML_JSON/javaCodeActivityOutput/jsonOut,&#xA;&quot;&#xA;&quot;,&#xA;&quot;SES-Call Response -->&quot;,$CallBackRequest/RequestActivityOutput,&#xA;&quot;&#xA;&quot;,&#xA;&quot;If Error, then-->&quot;,$_error_CallBackRequest,$_error/ns1:ErrorReport,&#xA;&quot;Error String -->&quot;,  tib:base64-to-string($_error_CallBackRequest/ActivityErrors/ns4:HttpClientException/ns3:httpMessage/binaryContent))&#xA;&#xA;else&#xA;concat(&quot;Query Result -->&quot;, tib:render-xml($Start/root/SES_ID),&#xA;&quot;&#xA;&quot;,&#xA;&quot;XML-JSON -->&quot;,$XML_JSON/javaCodeActivityOutput/jsonOut,&#xA;&quot;&#xA;&quot;,&#xA;&quot;SES-Call Response -->&quot;,$CallBackRequest/RequestActivityOutput,&#xA;&quot;&#xA;&quot;,&#xA;&quot;If Error, then-->&quot;,$_error_CallBackRequest,$_error/ns1:ErrorReport)"/>
                    </ns2:Transaction>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RouteReq">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>325</pd:x>
        <pd:y>237</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SESErr">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>782</pd:x>
        <pd:y>478</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="XML_JSON">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>235</pd:y>
        <config>
            <fileName>SES_Helper_ProcessXML_JSON</fileName>
            <packageName>Services.SESEntServer.eSIMCardMgr.HelperProcesses.SES_Helper_Process</packageName>
            <fullsource>package Services.SESEntServer.eSIMCardMgr.HelperProcesses.SES_Helper_Process;
import java.util.*;
import java.io.*;
import org.json.JSONObject;
import org.json.XML;

public class SES_Helper_ProcessXML_JSON{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String jsonIn = "";
	protected String xmlIn = "";
	protected String xmlOut = "";
	protected String jsonOut = "";
	public String getjsonIn() {
		return jsonIn;
	}
	public void setjsonIn(String val) {
		jsonIn = val;
	}
	public String getxmlIn() {
		return xmlIn;
	}
	public void setxmlIn(String val) {
		xmlIn = val;
	}
	public String getxmlOut() {
		return xmlOut;
	}
	public void setxmlOut(String val) {
		xmlOut = val;
	}
	public String getjsonOut() {
		return jsonOut;
	}
	public void setjsonOut(String val) {
		jsonOut = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public SES_Helper_ProcessXML_JSON() {
	}
	public void invoke() throws Exception {
	String xmlOt="";
	String jsonOt="";
	if(getjsonIn()!=null &amp; getjsonIn()!="")
	{
		JSONObject jObj = new JSONObject(getjsonIn());
		xmlOt=XML.toString(jObj);
		setxmlOut(xmlOt);
	}

	if(getxmlIn()!=null &amp; getxmlIn()!="")
	{
		System.out.println("XML to JSON***********************************");
		JSONObject jObj1 = XML.toJSONObject(getxmlIn());
		
		setjsonOut((jObj1.toString()).replaceAll(" ",""));
	}
/* Available Variables: DO NOT MODIFY
	In  : String jsonIn
	In  : String xmlIn
	Out : String xmlOut
	Out : String jsonOut
* Available Variables: DO NOT MODIFY *****/

}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>jsonIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>xmlIn</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>xmlOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>jsonOut</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>SES_Helper_ProcessXML_JSON</name>
                    <byteCode>yv66vgAAADQAWgkAFQAyCQAVADMJABUANAkAFQA1CgAWADYIADcKABUAOAcAOQoACAA6CgA7ADwKABUAPQoAFQA+CQA/AEAIAEEKAEIAQwoAOwBECgAIAEUIAEYKAEcASAoAFQBJBwBKBwBLAQAGanNvbkluAQASTGphdmEvbGFuZy9TdHJpbmc7AQAFeG1sSW4BAAZ4bWxPdXQBAAdqc29uT3V0AQAJZ2V0anNvbkluAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAJc2V0anNvbkluAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAIZ2V0eG1sSW4BAAhzZXR4bWxJbgEACWdldHhtbE91dAEACXNldHhtbE91dAEACmdldGpzb25PdXQBAApzZXRqc29uT3V0AQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQANU3RhY2tNYXBUYWJsZQcATAcASgEACkV4Y2VwdGlvbnMHAE0BAApTb3VyY2VGaWxlAQAfU0VTX0hlbHBlcl9Qcm9jZXNzWE1MX0pTT04uamF2YQwAFwAYDAAZABgMABoAGAwAGwAYDAAoACkBAAAMABwAHQEAE29yZy9qc29uL0pTT05PYmplY3QMACgAIQcATgwATwBQDAAlACEMACIAHQcAUQwAUgBTAQAuWE1MIHRvIEpTT04qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgcAVAwAVQAhDABWAFcMAE8AHQEAAsKgBwBMDABYAFkMACcAIQEAX1NlcnZpY2VzL1NFU0VudFNlcnZlci9lU0lNQ2FyZE1nci9IZWxwZXJQcm9jZXNzZXMvU0VTX0hlbHBlcl9Qcm9jZXNzL1NFU19IZWxwZXJfUHJvY2Vzc1hNTF9KU09OAQAQamF2YS9sYW5nL09iamVjdAEAEGphdmEvbGFuZy9TdHJpbmcBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAMb3JnL2pzb24vWE1MAQAIdG9TdHJpbmcBACYoTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvU3RyaW5nOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEADHRvSlNPTk9iamVjdAEAKShMamF2YS9sYW5nL1N0cmluZzspTG9yZy9qc29uL0pTT05PYmplY3Q7AQAKcmVwbGFjZUFsbAEAOChMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7ACEAFQAWAAAABAAEABcAGAAAAAQAGQAYAAAABAAaABgAAAAEABsAGAAAAAoAAQAcAB0AAQAeAAAAHQABAAEAAAAFKrQAAbAAAAABAB8AAAAGAAEAAAAOAAEAIAAhAAEAHgAAACIAAgACAAAABiortQABsQAAAAEAHwAAAAoAAgAAABEABQASAAEAIgAdAAEAHgAAAB0AAQABAAAABSq0AAKwAAAAAQAfAAAABgABAAAAFAABACMAIQABAB4AAAAiAAIAAgAAAAYqK7UAArEAAAABAB8AAAAKAAIAAAAXAAUAGAABACQAHQABAB4AAAAdAAEAAQAAAAUqtAADsAAAAAEAHwAAAAYAAQAAABoAAQAlACEAAQAeAAAAIgACAAIAAAAGKiu1AAOxAAAAAQAfAAAACgACAAAAHQAFAB4AAQAmAB0AAQAeAAAAHQABAAEAAAAFKrQABLAAAAABAB8AAAAGAAEAAAAgAAEAJwAhAAEAHgAAACIAAgACAAAABiortQAEsQAAAAEAHwAAAAoAAgAAACMABQAkAAEAKAApAAEAHgAAAEkAAgABAAAAHSq3AAUqEga1AAEqEga1AAIqEga1AAMqEga1AASxAAAAAQAfAAAAGgAGAAAAJgAEAAkACgAKABAACwAWAAwAHAAnAAEAKgApAAIAHgAAAPgABAAEAAAAeBIGTBIGTSq2AAfGAAcEpwAEAyq2AAcSBqUABwSnAAQDfpkAGbsACFkqtgAHtwAJTi24AApMKiu2AAsqtgAMxgAHBKcABAMqtgAMEgalAAcEpwAEA36ZACKyAA0SDrYADyq2AAy4ABBOKi22ABESEhIGtgATtgAUsQAAAAIAHwAAAC4ACwAAACkAAwAqAAYAKwAkAC0AMAAuADUALwA6ADIAWAA0AGAANQBoADcAdwBAACsAAAA6AAr9ABEHACwHACxAAUwB/wAAAAMHAC0HACwHACwAAgEBGQpAAUwB/wAAAAMHAC0HACwHACwAAgEBIgAuAAAABAABAC8AAQAwAAAAAgAx</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <xsl:choose>
                    <xsl:when test="string-length($ActivateMapper/root) >0">
                        <xmlIn>
                            <xsl:value-of select="substring-before(substring-after((tib:render-xml($ActivateMapper/root)), &quot;&lt;root>&quot;), &quot;&lt;/root>&quot;)"/>
                        </xmlIn>
                    </xsl:when>
                    <xsl:otherwise>
                        <xmlIn>
                            <xsl:value-of select="&quot;&quot;"/>
                        </xmlIn>
                    </xsl:otherwise>
                </xsl:choose>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>601</pd:x>
        <pd:y>300</pd:y>
        <pd:width>144</pd:width>
        <pd:height>121</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ParseSESError</pd:to>
            <pd:xpathDescription>4XX</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length(tib:trim($_error_CallBackRequest/ActivityErrors/ns4:HttpClientException/ns3:httpMessage/binaryContent))&gt;0
or
string-length(tib:trim($_error_CallBackRequest/ActivityErrors/ns4:HttpServerException/ns3:httpMessage/binaryContent))&gt;0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseSESError</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="ParseSESError">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>674</pd:x>
            <pd:y>366</pd:y>
            <config>
                <processName>/Services/EOM/NotifySES/HelperProcess/ParseSESError.process</processName>
            </config>
            <pd:inputBindings>
                <xsl:choose>
                    <xsl:when test="string-length(tib:trim($_error_CallBackRequest/ActivityErrors/ns4:HttpClientException/ns3:httpMessage/binaryContent))>0">
                        <root>
                            <ErrString>
                                <xsl:value-of select="tib:base64-to-string($_error_CallBackRequest/ActivityErrors/ns4:HttpClientException/ns3:httpMessage/binaryContent)"/>
                            </ErrString>
                        </root>
                    </xsl:when>
                    <xsl:otherwise>
                        <root>
                            <ErrString>
                                <xsl:value-of select="tib:base64-to-string($_error_CallBackRequest/ActivityErrors/ns4:HttpServerException/ns3:httpMessage/binaryContent)"/>
                            </ErrString>
                        </root>
                    </xsl:otherwise>
                </xsl:choose>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>492</pd:x>
        <pd:y>425</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx8:ActivityInput>
                <message>
                    <xsl:value-of select="&quot;Validation Error,Mandatory fields missing.&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;TIB-VAL-ERR&quot;"/>
                </messageCode>
            </pfx8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ActivateMapper</pd:from>
        <pd:to>XML_JSON</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>XML_JSON</pd:from>
        <pd:to>CallBackRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallBackRequest</pd:from>
        <pd:to>EOMResponseMap</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RouteReq</pd:from>
        <pd:to>ActivateMapper</pd:to>
        <pd:xpathDescription>ADD</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/Operation="ADD"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>RouteReq</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SESErr</pd:from>
        <pd:to>EOMResponseMap</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-26368</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallBackRequest</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>SESErr</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52327</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>EOMResponseMap</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_In</pd:from>
        <pd:to>RouteReq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EOMResponseMap</pd:from>
        <pd:to>Update-Status</pd:to>
        <pd:xpathDescription>200</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CallBackRequest/RequestActivityOutput/statusLine/statusCode=200</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Update-Status</pd:from>
        <pd:to>Log_Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EOMResponseMap</pd:from>
        <pd:to>Log_Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>