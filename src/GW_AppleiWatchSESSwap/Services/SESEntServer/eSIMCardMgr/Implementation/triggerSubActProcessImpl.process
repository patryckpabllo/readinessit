<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd" xmlns:pfx7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx="http://www.tibco.com/schemas/GW_AppleiWatch2/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" xmlns:ns="http://www.huawei.com/CDM/ES/" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActforeSIMDeviceResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESActivate/triggerSubscriptionActivationReqSchema.xsd"/>
    <pd:name>Services/SESEntServer/eSIMCardMgr/Implementation/triggerSubActProcessImpl.process</pd:name>
    <pd:description>triggerSubscriptionActivation for eSIMDevice Service with SES Server</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlIn" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>20</pd:startX>
    <pd:startY>169</pd:startY>
    <pd:returnBindings>
        <root>
            <xmlOut>
                <xsl:value-of select="'&lt;root>&lt;/root>'"/>
            </xmlOut>
            <xsl:copy-of select="$Start/root/NameValuePairs"/>
            <TransactionID>
                <xsl:value-of select="$Start/root/TransactionID"/>
            </TransactionID>
            <StartTimeStamp>
                <xsl:value-of select="$Start/root/StartTimeStamp"/>
            </StartTimeStamp>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlOut" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>837</pd:endX>
    <pd:endY>171</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1594286379235</pd:targetNamespace>
    <pd:activity name="eSIMCardMgrImpl">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>472</pd:x>
        <pd:y>170</pd:y>
        <config>
            <processName>/Services/SESEntServer/eSIMCardMgr/HelperProcesses/eSIMCardMgrImpl.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns:eSIMCardMgrRequest>
                    <ns:TRADE_TYPE>
                        <xsl:value-of select="1"/>
                    </ns:TRADE_TYPE>
                    <ns:MAIN_USER>
                        <ns:MSISDN>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn"/>
                        </ns:MSISDN>
                        <ns:IMSI>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi"/>
                        </ns:IMSI>
                        <ns:ICCID>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid"/>
                        </ns:ICCID>
                    </ns:MAIN_USER>
                    <ns:ATTACH_USERS>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn">
                            <ns:MSISDN>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn"/>
                            </ns:MSISDN>
                        </xsl:if>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi">
                            <ns:IMSI>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi"/>
                            </ns:IMSI>
                        </xsl:if>
                        <ns:ICCID>
                            <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/iccid"/>
                        </ns:ICCID>
                        <xsl:if test="$ParseReq/root/deviceInfo/euiccInfo/eid">
                            <ns:EID>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/eid"/>
                            </ns:EID>
                        </xsl:if>
                        <xsl:if test="$ParseReq/root/deviceInfo/displayName">
                            <ns:NICKNAME>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/displayName"/>
                            </ns:NICKNAME>
                        </xsl:if>
                    </ns:ATTACH_USERS>
                </ns:eSIMCardMgrRequest>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseReq">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>228</pd:x>
        <pd:y>169</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx6:root"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/xmlIn"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>118</pd:x>
        <pd:y>168</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/xmlIn)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>728</pd:x>
        <pd:y>170</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($eSIMCardMgrImpl/ns:eSIMCardMgrResponse)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InserSESRecord">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>582</pd:x>
        <pd:y>168</pd:y>
        <config>
            <timeout>%%CommonResources/Connections/JDBC/Internal/TIBCOAppDB/LoginTimeout%%</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <statement>INSERT INTO T_SES_TRANS_REC
(SES_ID,ESB_ID,PRM_MSISDN,PRIM_IMSI,PRIM_ICCID,SEC_MSISDN,SEC_IMSI,SEC_ICCID,SEC_EID,TRX_TYPE,STATUS,TIME_STAMP,RECORD_FLAG)
VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>SES_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ESB_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PRM_MSISDN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PRIM_IMSI</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PRIM_ICCID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SEC_MSISDN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SEC_IMSI</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SEC_ICCID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SEC_EID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRX_TYPE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TIME_STAMP</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>RECORD_FLAG</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($SamsungAndriodAddWatch/ns:eSIMCardMgrResponse)&#xA;and&#xA;string-length($SamsungAndriodAddWatch)>0">
                    <jdbcUpdateActivityInput>
                        <SES_ID>
                            <xsl:value-of select="$ParseReq/root/uniqueId"/>
                        </SES_ID>
                        <ESB_ID>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </ESB_ID>
                        <PRM_MSISDN>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:MSISDN"/>
                        </PRM_MSISDN>
                        <PRIM_IMSI>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:IMSI"/>
                        </PRIM_IMSI>
                        <PRIM_ICCID>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:ICCID"/>
                        </PRIM_ICCID>
                        <SEC_MSISDN>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:MSISDN"/>
                        </SEC_MSISDN>
                        <SEC_IMSI>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:IMSI"/>
                        </SEC_IMSI>
                        <SEC_ICCID>
                            <xsl:value-of select="$SamsungAndriodAddWatch/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:ICCID"/>
                        </SEC_ICCID>
                        <SEC_EID xsi:nil="true"/>
                        <TRX_TYPE>
                            <xsl:value-of select="&quot;ADD&quot;"/>
                        </TRX_TYPE>
                        <STATUS>
                            <xsl:value-of select="&quot;IN-PROGRESS&quot;"/>
                        </STATUS>
                        <TIME_STAMP xsi:nil="true"/>
                        <RECORD_FLAG xsi:nil="true"/>
                    </jdbcUpdateActivityInput>
                </xsl:when>
                <xsl:when test="exists($eSIMCardMgrImpl/ns:eSIMCardMgrResponse)&#xA;and&#xA;string-length($eSIMCardMgrImpl)>0">
                    <jdbcUpdateActivityInput>
                        <SES_ID>
                            <xsl:value-of select="$ParseReq/root/uniqueId"/>
                        </SES_ID>
                        <ESB_ID>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </ESB_ID>
                        <PRM_MSISDN>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:MSISDN"/>
                        </PRM_MSISDN>
                        <PRIM_IMSI>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:IMSI"/>
                        </PRIM_IMSI>
                        <PRIM_ICCID>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:MAIN_USER/ns:ICCID"/>
                        </PRIM_ICCID>
                        <SEC_MSISDN>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:MSISDN"/>
                        </SEC_MSISDN>
                        <SEC_IMSI>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:IMSI"/>
                        </SEC_IMSI>
                        <SEC_ICCID>
                            <xsl:value-of select="$eSIMCardMgrImpl/ns:eSIMCardMgrResponse/ns:ATTACH_USERS/ns:ICCID"/>
                        </SEC_ICCID>
                        <SEC_EID xsi:nil="true"/>
                        <TRX_TYPE>
                            <xsl:value-of select="&quot;ADD&quot;"/>
                        </TRX_TYPE>
                        <STATUS>
                            <xsl:value-of select="&quot;IN-PROGRESS&quot;"/>
                        </STATUS>
                        <TIME_STAMP xsi:nil="true"/>
                        <RECORD_FLAG xsi:nil="true"/>
                    </jdbcUpdateActivityInput>
                </xsl:when>
                <xsl:otherwise>
                    <jdbcUpdateActivityInput>
                        <SES_ID>
                            <xsl:value-of select="$ParseReq/root/uniqueId"/>
                        </SES_ID>
                        <ESB_ID>
                            <xsl:value-of select="$Start/root/TransactionID"/>
                        </ESB_ID>
                        <PRM_MSISDN>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn)">
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </PRM_MSISDN>
                        <PRIM_IMSI>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi)">
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </PRIM_IMSI>
                        <PRIM_ICCID>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid)">
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </PRIM_ICCID>
                        <SEC_MSISDN>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn)">
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </SEC_MSISDN>
                        <SEC_IMSI>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi)">
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </SEC_IMSI>
                        <SEC_ICCID>
                            <xsl:choose>
                                <xsl:when test="exists($ParseReq/root/deviceInfo/euiccInfo/iccid)">
                                    <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/iccid"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </SEC_ICCID>
                        <SEC_EID xsi:nil="true"/>
                        <TRX_TYPE>
                            <xsl:value-of select="&quot;ADD&quot;"/>
                        </TRX_TYPE>
                        <xsl:variable name="var" select="$GetVariable/ns3:ListOfValues/ns3:LOV/ns3:TYPE"/>
                        <xsl:variable name="var2" select="$GetVariable/ns3:ListOfValues/ns3:LOV/ns3:NAME"/>
                        <STATUS>
                            <xsl:value-of select="if($CheckWhiteListFlag/root/ErrorCode='0' and $CheckWhiteListFlag/root/WhiteListFlag='Y')&#xA;then 'IN-PROGRESS'&#xA;else if($GetVariable/ns3:ListOfValues/ns3:LOV[$var='CBIO2_TREMBLANT_SKIP_PACI' and $var2='SKIPFLAG']/ns3:VAL='N' )&#xA;then &quot;PACI-ACK&quot;&#xA;else 'IN-PROGRESS'"/>
                        </STATUS>
                        <TIME_STAMP>
                            <xsl:value-of select="current-dateTime()"/>
                        </TIME_STAMP>
                        <RECORD_FLAG>
                            <xsl:value-of select="'N'"/>
                        </RECORD_FLAG>
                    </jdbcUpdateActivityInput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="TremblantInsertSubscriber">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>720</pd:x>
        <pd:y>337</pd:y>
        <config>
            <processName>/Services/SESEntServer/eSIMCardMgr/HelperProcesses/TremblantInsertSubscriber.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <root>
                    <uniqueId>
                        <xsl:value-of select="$ParseReq/root/uniqueId"/>
                    </uniqueId>
                    <deviceInfo>
                        <deviceClassification>
                            <xsl:value-of select="&quot;&quot;"/>
                        </deviceClassification>
                        <xsl:if test="$ParseReq/root/deviceInfo/displayName">
                            <displayName>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/displayName"/>
                            </displayName>
                        </xsl:if>
                        <euiccInfo>
                            <eid>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/eid"/>
                            </eid>
                            <imei>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/imei"/>
                            </imei>
                            <xsl:if test="$ParseReq/root/deviceInfo/euiccInfo/iccid">
                                <iccid>
                                    <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/iccid"/>
                                </iccid>
                            </xsl:if>
                        </euiccInfo>
                    </deviceInfo>
                    <subscriptionInfo>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/subscriptionType">
                            <subscriptionType>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/subscriptionType"/>
                            </subscriptionType>
                        </xsl:if>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/numberPlanType">
                            <numberPlanType>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/numberPlanType"/>
                            </numberPlanType>
                        </xsl:if>
                        <eSimSubscriptionInfo>
                            <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn">
                                <msisdn>
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn"/>
                                </msisdn>
                            </xsl:if>
                            <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi">
                                <imsi>
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi"/>
                                </imsi>
                            </xsl:if>
                        </eSimSubscriptionInfo>
                        <existingPrimarySubscriptionInfo>
                            <primaryMsisdn>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn"/>
                            </primaryMsisdn>
                            <xsl:if test="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi">
                                <primaryImsi>
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi"/>
                                </primaryImsi>
                            </xsl:if>
                            <xsl:if test="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid">
                                <primaryIccid>
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid"/>
                                </primaryIccid>
                            </xsl:if>
                            <xsl:if test="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImei">
                                <primaryImei>
                                    <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImei"/>
                                </primaryImei>
                            </xsl:if>
                        </existingPrimarySubscriptionInfo>
                    </subscriptionInfo>
                    <planInfo>
                        <planName>
                            <xsl:value-of select="$ParseReq/root/planInfo/planName"/>
                        </planName>
                        <planType>
                            <xsl:value-of select="$ParseReq/root/planInfo/planType"/>
                        </planType>
                    </planInfo>
                </root>
                <TransationId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransationId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <xsl:if test="$CheckWhiteListFlag/root/WhiteListFlag">
                    <MSISDNWhiteListFlag>
                        <xsl:value-of select="$CheckWhiteListFlag/root/WhiteListFlag"/>
                    </MSISDNWhiteListFlag>
                </xsl:if>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>339</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/LOVs.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CheckWhiteListFlag">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>197</pd:x>
        <pd:y>337</pd:y>
        <config>
            <processName>/Services/SESEntServer/eSIMCardMgr/HelperProcesses/WhitelistMSISDNCheck.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn">
                    <MSISDN>
                        <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn"/>
                    </MSISDN>
                </xsl:if>
                <TransationId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransationId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Mandatory param missing">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>309</pd:x>
        <pd:y>447</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx7:ActivityInput>
                <message>
                    <xsl:value-of select="'Mandatory param missing for SP'"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'CRM-Err'"/>
                </messageCode>
            </pfx7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SamsungAndriodAddWatch">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>455</pd:x>
        <pd:y>26</pd:y>
        <config>
            <processName>/Services/SESEntServer/eSIMCardMgr/HelperProcesses/SamsungAndriodAddWatch.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns:eSIMCardMgrRequest>
                    <ns:TRADE_TYPE>
                        <xsl:value-of select="1"/>
                    </ns:TRADE_TYPE>
                    <ns:MAIN_USER>
                        <ns:MSISDN>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryMsisdn"/>
                        </ns:MSISDN>
                        <ns:IMSI>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryImsi"/>
                        </ns:IMSI>
                        <ns:ICCID>
                            <xsl:value-of select="$ParseReq/root/subscriptionInfo/existingPrimarySubscriptionInfo/primaryIccid"/>
                        </ns:ICCID>
                    </ns:MAIN_USER>
                    <ns:ATTACH_USERS>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn">
                            <ns:MSISDN>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/msisdn"/>
                            </ns:MSISDN>
                        </xsl:if>
                        <xsl:if test="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi">
                            <ns:IMSI>
                                <xsl:value-of select="$ParseReq/root/subscriptionInfo/eSimSubscriptionInfo/imsi"/>
                            </ns:IMSI>
                        </xsl:if>
                        <ns:ICCID>
                            <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/iccid"/>
                        </ns:ICCID>
                        <xsl:if test="$ParseReq/root/deviceInfo/euiccInfo/eid">
                            <ns:EID>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/euiccInfo/eid"/>
                            </ns:EID>
                        </xsl:if>
                        <xsl:if test="$ParseReq/root/deviceInfo/displayName">
                            <ns:NICKNAME>
                                <xsl:value-of select="$ParseReq/root/deviceInfo/displayName"/>
                            </ns:NICKNAME>
                        </xsl:if>
                    </ns:ATTACH_USERS>
                </ns:eSIMCardMgrRequest>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
                <xsl:if test="$DecideImplementation/root/DeviceVendor">
                    <DeviceVendorName>
                        <xsl:value-of select="$DecideImplementation/root/DeviceVendor"/>
                    </DeviceVendorName>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NoTransition">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:description>Could not decide which implementation to call.</pd:description>
        <pd:x>234</pd:x>
        <pd:y>62</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx7:ActivityInput>
                <message>
                    <xsl:value-of select="&quot;Mandatory param/Value missing ,Couldn't identify the device for bankend implementation.&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'TIB-Err'"/>
                </messageCode>
            </pfx7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="DecideImplementation">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>336</pd:x>
        <pd:y>168</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="DecideImplementation" type="xsd:string"/>
                            <xsd:element name="DeviceVendor" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$ParseReq/root/subscriptionInfo/numberPlanType=0">
                        <DecideImplementation>
                            <xsl:value-of select="&quot;Tremblant&quot;"/>
                        </DecideImplementation>
                        <DeviceVendor>
                            <xsl:value-of select="&quot;Apple&quot;"/>
                        </DeviceVendor>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="$ParseReq/root/subscriptionInfo/numberPlanType =1&#xA;and &#xA;   (&#xA;    exists($ParseReq/root/deviceInfo/deviceVendorName)&#xA;           and &#xA;          $ParseReq/root/deviceInfo/deviceVendorName=&#xA;            ($_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/Samsung_VendorName)&#xA;   )&#xA;&#xA;{-- Samsung Watch --}">
                                <DecideImplementation>
                                    <xsl:value-of select="&quot;TS43&quot;"/>
                                </DecideImplementation>
                                <DeviceVendor>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/triggerSubscriptionActivation/Samsung_VendorName"/>
                                </DeviceVendor>
                            </xsl:when>
                            <xsl:when test="$ParseReq/root/subscriptionInfo/numberPlanType =1&#xA;and &#xA;not(exists($ParseReq/root/deviceInfo/deviceVendorName))">
                                <DecideImplementation>
                                    <xsl:value-of select="&quot;Rio&quot;"/>
                                </DecideImplementation>
                                <DeviceVendor>
                                    <xsl:value-of select="&quot;Apple&quot;"/>
                                </DeviceVendor>
                            </xsl:when>
                            <xsl:otherwise>
                                <DecideImplementation>
                                    <xsl:value-of select="&quot;NA&quot;"/>
                                </DecideImplementation>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_Msg-In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-In</pd:from>
        <pd:to>ParseReq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>eSIMCardMgrImpl</pd:from>
        <pd:to>InserSESRecord</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InserSESRecord</pd:from>
        <pd:to>Log_Msg-Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TremblantInsertSubscriber</pd:from>
        <pd:to>InserSESRecord</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>TremblantInsertSubscriber</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckWhiteListFlag</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckWhiteListFlag</pd:from>
        <pd:to>Mandatory param missing</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-26317</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckWhiteListFlag/root/ErrorCode='1'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SamsungAndriodAddWatch</pd:from>
        <pd:to>InserSESRecord</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>DecideImplementation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>DecideImplementation</pd:from>
        <pd:to>CheckWhiteListFlag</pd:to>
        <pd:xpathDescription>Tremblant</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$DecideImplementation/root/DecideImplementation="Tremblant"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>DecideImplementation</pd:from>
        <pd:to>SamsungAndriodAddWatch</pd:to>
        <pd:xpathDescription>TS43</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$DecideImplementation/root/DecideImplementation="TS43"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>DecideImplementation</pd:from>
        <pd:to>eSIMCardMgrImpl</pd:to>
        <pd:xpathDescription>Rio</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$DecideImplementation/root/DecideImplementation="Rio"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>DecideImplementation</pd:from>
        <pd:to>NoTransition</pd:to>
        <pd:xpathDescription>NoTransitionPossible</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>1. If WHiteListFlag return from CRM SP as 'Y' then tibco will skip PACI approval flow
2. If WHiteListFlag return from CRM SP as 'N' and CRM return LOV SKIPFLAG value as 'N' then Tibco will execute PACI approval flow
3. If WHiteListFlag return from CRM SP as 'N' and CRM return LOV SKIPFLAG value as 'Y' then Tibco will skip PACI approval flow</pd:description>
        <pd:x>1117</pd:x>
        <pd:y>34</pd:y>
        <pd:width>649</pd:width>
        <pd:height>67</pd:height>
        <pd:fontName>Dialog.plain-plain-9</pd:fontName>
        <pd:fontColor>-16777012</pd:fontColor>
        <pd:color>-16711885</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>