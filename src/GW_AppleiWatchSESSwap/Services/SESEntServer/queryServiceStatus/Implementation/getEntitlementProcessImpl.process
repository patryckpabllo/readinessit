<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESEligibilityCheck/ESIMOperationEligibilityCheckReqSchema.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementResSchema.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementReqSchema.xsd" xmlns:pfx="http://www.tibco.com/schemas/GW_AppleiWatch2/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" xmlns:ns="http://www.huawei.com/CDM/ES/" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckReqSchema.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckResSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.zainKW.com/SESEntServer/TremblantEligibilityCheckReq" xmlns:ns3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/OutboundSubsActDeacforeSIMDeviceResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/ESIMOperationEligibilityCheckResSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESEligibilityCheck/ESIMOperationEligibilityCheckReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESEligibilityCheck/ESIMOperationEligibilityCheckReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementReqSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementReqSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementResSchema.xsd" schemaLocation="/Services/SESEntServer/Resources/XSD/AppleiWatchSESGetEntitlement/getEntitlementResSchema.xsd"/>
    <pd:name>Services/SESEntServer/queryServiceStatus/Implementation/getEntitlementProcessImpl.process</pd:name>
    <pd:description>GetEntitlement Service with SES</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlIn" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>64</pd:startX>
    <pd:startY>333</pd:startY>
    <pd:returnBindings>
        <root>
            <xmlOut>
                <xsl:value-of select="tib:render-xml($Map-Data/root)"/>
            </xmlOut>
            <xsl:copy-of select="$Start/root/NameValuePairs"/>
            <TransactionID>
                <xsl:value-of select="$Start/root/TransactionID"/>
            </TransactionID>
            <StartTimeStamp>
                <xsl:value-of select="$Start/root/StartTimeStamp"/>
            </StartTimeStamp>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="xmlOut" type="xsd:string"/>
                    <xsd:element name="NameValuePairs" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="NameValue" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="Value" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1170</pd:endX>
    <pd:endY>334</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1594286379235</pd:targetNamespace>
    <pd:activity name="EligibilityCheckProcess">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>545</pd:x>
        <pd:y>225</pd:y>
        <config>
            <processName>/Services/EntServer/eSIMProv/eSIMProvOperationImpl/queryServiceStatus/EligibilityCheckProcess.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <ns:queryServiceStatusRequest>
                    <ns:SERVICE>
                        <xsl:value-of select="&quot;Multi-SIM&quot;"/>
                    </ns:SERVICE>
                    <ns:IMSI>
                        <xsl:value-of select="$ParseReq/root/imsi"/>
                    </ns:IMSI>
                    <ns:MSISDN>
                        <xsl:value-of select="$ParseReq/root/msisdn"/>
                    </ns:MSISDN>
                </ns:queryServiceStatusRequest>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-In">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>179</pd:x>
        <pd:y>333</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/xmlIn)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Msg-Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1028</pd:x>
        <pd:y>331</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$ParseReq/root/imsi"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Map-Data)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="concat(&quot;RIO--&quot;,$EligibilityCheckProcess,&quot;TS-43--&quot;,$EligibilityCheckProcess-TS43,&quot;Magnolia--&quot;,$MagnoliaEligibilityCheckProcess,&quot;Tremblant--&quot;,$TremblantEntitlementCheck)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/GW/GW_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseReq">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>295</pd:x>
        <pd:y>333</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx8:root"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/root/xmlIn"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>203</pd:x>
        <pd:y>433</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <message>
                    <xsl:value-of select="&quot;MSISDN missing in the request from SES&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;TIB-Err&quot;"/>
                </messageCode>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MagnoliaEligibilityCheckProcess">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>543</pd:x>
        <pd:y>400</pd:y>
        <config>
            <processName>/Services/EntServer/eSIMProv/eSIMProvOperationImpl/queryServiceStatus/MagnoliaEligibilityCheckProcess.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <MSISDN>
                    <xsl:value-of select="$ParseReq/root/msisdn"/>
                </MSISDN>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="TremblantEntitlementCheck">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>542</pd:x>
        <pd:y>495</pd:y>
        <config>
            <processName>/Services/EntServer/eSIMProv/eSIMProvOperationImpl/queryServiceStatus/TremblantEntitlementCheck.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <ns4:TremblantEligibilityCheckReq>
                    <xsl:if test="$ParseReq/root/msisdn">
                        <ns4:MSISDN>
                            <xsl:value-of select="$ParseReq/root/msisdn"/>
                        </ns4:MSISDN>
                    </xsl:if>
                    <xsl:if test="$ParseReq/root/imsi">
                        <ns4:IMSI>
                            <xsl:value-of select="$ParseReq/root/imsi"/>
                        </ns4:IMSI>
                    </xsl:if>
                    <ns4:ServiceType>
                        <xsl:value-of select="&quot;sa-watch&quot;"/>
                    </ns4:ServiceType>
                </ns4:TremblantEligibilityCheckReq>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>862</pd:x>
        <pd:y>329</pd:y>
        <config>
            <element ref="pfx7:root"/>
        </config>
        <pd:inputBindings>
            <root>
                <status>
                    <xsl:value-of select="&quot;6000&quot;"/>
                </status>
                <xsl:for-each select="$ParseReq/root/entitlement-names">
                    <response>
                        <xsl:choose>
                            <xsl:when test="current()=&quot;Multi-SIM&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$EligibilityCheckProcess/ns:queryServiceStatusResponse/ns:STATUS=(0,1)">
                                        <entitlement-status>
                                            <xsl:value-of select="6100"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                        <error-description>
                                            <xsl:value-of select="if($EligibilityCheckProcess/ns:queryServiceStatusResponse/ns:STATUS=3)&#xA;then $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/OpenOrderErrDescription&#xA;else $EligibilityCheckProcess/ns:queryServiceStatusResponse/ns:RESULT_DESC"/>
                                        </error-description>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="current()=&quot;odsa-companion-sharednum&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$EligibilityCheckProcess-TS43/ns:queryServiceStatusResponse/ns:STATUS=(0,1)">
                                        <entitlement-status>
                                            <xsl:value-of select="6100"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                        <error-description>
                                            <xsl:value-of select="if($EligibilityCheckProcess-TS43/ns:queryServiceStatusResponse/ns:STATUS=3)&#xA;then $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/OpenOrderErrDescription&#xA;else $EligibilityCheckProcess-TS43/ns:queryServiceStatusResponse/ns:RESULT_DESC"/>
                                        </error-description>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="current()=&quot;odsa-companion-diffnum&quot; {--hard coded for TS43 CASE --}">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <entitlement-status>
                                    <xsl:value-of select="6100"/>
                                </entitlement-status>
                            </xsl:when>
                            <xsl:when test="current()=&quot;sa-watch&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$TremblantEntitlementCheck/group/ns:queryServiceStatusResponse/ns:STATUS=(0,1)">
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6100&quot;"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                        <error-description>
                                            <xsl:value-of select="if($TremblantEntitlementCheck/group/ns:queryServiceStatusResponse/ns:STATUS=3)&#xA;then $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/OpenOrderErrDescription&#xA;else $TremblantEntitlementCheck/group/ns:queryServiceStatusResponse/ns:RESULT_DESC"/>
                                        </error-description>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="current()=&quot;sa-watch-transfer&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$MagnoliaEligibilityCheckProcess/root/IsEligible='Y'">
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6100&quot;"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="current()=&quot;MultiSIM-transfer&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$MagnoliaEligibilityCheckProcess/root/IsEligible='Y'">
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6100&quot;"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="current()=&quot;iphone-plan-transfer&quot;">
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <xsl:choose>
                                    <xsl:when test="$MagnoliaEligibilityCheckProcess/root/IsEligible='Y'">
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6100&quot;"/>
                                        </entitlement-status>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <entitlement-status>
                                            <xsl:value-of select="&quot;6101&quot;"/>
                                        </entitlement-status>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <entitlement-name>
                                    <xsl:value-of select="current()"/>
                                </entitlement-name>
                                <entitlement-status>
                                    <xsl:value-of select="&quot;6102&quot;"/>
                                </entitlement-status>
                                <error-description>
                                    <xsl:value-of select="&quot;Entitlement Check Not Avable for Entitlement Name&quot;"/>
                                </error-description>
                            </xsl:otherwise>
                        </xsl:choose>
                    </response>
                </xsl:for-each>
                <xsl:if test="count($ParseReq/root/entitlement-names)=1">
                    <response>
                        <entitlement-name>
                            <xsl:value-of select="&quot;iCloudVoWiFi&quot;"/>
                        </entitlement-name>
                        <entitlement-status>
                            <xsl:value-of select="&quot;6102&quot;"/>
                        </entitlement-status>
                    </response>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EligibilityCheckProcess-TS43">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>545</pd:x>
        <pd:y>122</pd:y>
        <config>
            <processName>/Services/EntServer/eSIMProv/eSIMProvOperationImpl/queryServiceStatus/TS43EligibilityCheckProcess.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <ns:queryServiceStatusRequest>
                    <ns:SERVICE>
                        <xsl:value-of select="&quot;odsa-companion-sharednum&quot;"/>
                    </ns:SERVICE>
                    <ns:IMSI>
                        <xsl:value-of select="$ParseReq/root/imsi"/>
                    </ns:IMSI>
                    <ns:MSISDN>
                        <xsl:value-of select="$ParseReq/root/msisdn"/>
                    </ns:MSISDN>
                </ns:queryServiceStatusRequest>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_Msg-In</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EligibilityCheckProcess</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>EligibilityCheckProcess</pd:to>
        <pd:xpathDescription>Multi-SIM Eligibility</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ParseReq/root/entitlement-names="Multi-SIM"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-In</pd:from>
        <pd:to>ParseReq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>MSISDNValidationCheck</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:trim($ParseReq/root/msisdn))=0
and
$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/SES/getEntitlement/MSISDNValidation="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>MagnoliaEligibilityCheckProcess</pd:to>
        <pd:xpathDescription>Magnolia-EligCheck</pd:xpathDescription>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ParseReq/root/entitlement-names=("iphone-plan-transfer","sa-watch-transfer","MultiSIM-transfer")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MagnoliaEligibilityCheckProcess</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>TremblantEntitlementCheck</pd:to>
        <pd:xpathDescription>TremblantEntitlementCheck</pd:xpathDescription>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ParseReq/root/entitlement-names =("sa-watch")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>TremblantEntitlementCheck</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Log_Msg-Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseReq</pd:from>
        <pd:to>EligibilityCheckProcess-TS43</pd:to>
        <pd:xpathDescription>TS43</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count(($ParseReq/root/entitlement-names=  "odsa-companion-sharednum"))&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>EligibilityCheckProcess-TS43</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Msg-Out</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>MapData is finally being used becuase SES will send multiple Entitlements in one request 

[1]sa-watch  = tremblant

[2]Multi-Sim = RIO

[3]("iphone-plan-transfer","sa-watch-transfer","MultiSIM-transfer") 

[4]osda-companion-sharednum=SAMSUNG/Andriod Watches</pd:description>
        <pd:x>1108</pd:x>
        <pd:y>90</pd:y>
        <pd:width>622</pd:width>
        <pd:height>146</pd:height>
        <pd:fontName>Dialog.bold-plain-11</pd:fontName>
        <pd:fontColor>-16764109</pd:fontColor>
        <pd:color>-154</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>1</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>