<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://ericsson.com/services/ws_CMI_4" xmlns:pfx60="http://ericsson.com/services/ws_CIL_5/cardnoupdate" xmlns:pfx63="http://ericsson.com/services/ws_CMI_5" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx62="http://ericsson.com/services/ws_CMI_5/cardnoupdate" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx57="http://ericsson.com/services/ws_CIL_5/contractwritezain" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://ericsson.com/services/ws_CIL_5/billprocesscreate" xmlns:pfx59="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" xmlns:pfx56="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:pfx52="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://ericsson.com/services/ws_CIL_5" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx46="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx47="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx45="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns29="http://lhsgroup.com/lhsws/money" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns26="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns27="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns28="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/EOMLOV.xsd" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:ns22="http://ericsson.com/services/ws_CIL_5/contractserviceswrite" xmlns:ns23="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:ns24="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns30="http://ericsson.com/services/ws_CIL_5/addresswrite" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns31="http://ericsson.com/services/ws_CIL_5/customerinfowrite" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx64="http://ericsson.com/services/ws_CIL_5/customermodifyzain" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractcreatezain" schemaLocation="/ContractCreatezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" schemaLocation="/BusinessWSDLS/Services/BSCS/ModifyContract/ContractModifyserviceService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyOrder/ModifyOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyOrder/ModifyOrderRes.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractwritezain" schemaLocation="/BusinessWSDLS/Services/BSCS/PrepaidConnectionTerminate/ContractWritezainService.wsdl"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" schemaLocation="/BusinessSchemas/Services/Modification/CustomerModifyOrder/CustomerOrderModify.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/billprocesscreate" schemaLocation="/BusinessWSDLS/Services/BSCS/BillProcessCreate/BillprocessCreateService.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CMI_5/cardnoupdate" schemaLocation="/BusinessWSDLS/Services/BSCS/CardNoUpdate/ws_CIL_5_CardnoUpdateService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customermodifyzain" schemaLocation="/BusinessWSDLS/Services/BSCS/CustomerStatusUpdate/CustomerStatusUpdate.wsdl"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CMI_5" location="/BusinessWSDLS/Services/BSCS/CardNoUpdate/ws_CIL_5_CardnoUpdateService.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CIL_5" location="/BusinessWSDLS/Services/BSCS/CustomerStatusUpdate/CustomerStatusUpdate.wsdl"/>
    <pd:name>BusinessProcesses/Services/Modification/CustomerStatusUpdate/HelperProcess/Call_BSCS_CustomerStatusUpdate.process</pd:name>
    <pd:startName>CustomerStatusUpdate</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx64:customerModifyzainRequest"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>75</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="exists($_error)">
                <pfx59:ErrorResponse>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <pfx59:Error_SourceErrCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </pfx59:Error_SourceErrCode>
                    </xsl:if>
                    <xsl:if test="$_error/ns8:ErrorReport/Msg">
                        <pfx59:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                        </pfx59:Error_SourceErrDesc>
                    </xsl:if>
                </pfx59:ErrorResponse>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="$UpdateCustomer/outputMessage/pfx64:customerModifyzainResponse">
                    <pfx64:customerModifyzainResponse>
                        <xsl:for-each select="pfx64:customerRead">
                            <pfx64:customerRead>
                                <xsl:for-each select="ns19:tbAmount">
                                    <ns19:tbAmount>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:tbAmount>
                                </xsl:for-each>
                                <xsl:if test="ns19:createdByUser">
                                    <ns19:createdByUser>
                                        <xsl:value-of select="ns19:createdByUser"/>
                                    </ns19:createdByUser>
                                </xsl:if>
                                <xsl:if test="ns19:tbMode">
                                    <ns19:tbMode>
                                        <xsl:value-of select="ns19:tbMode"/>
                                    </ns19:tbMode>
                                </xsl:if>
                                <xsl:if test="ns19:tbPurpose">
                                    <ns19:tbPurpose>
                                        <xsl:value-of select="ns19:tbPurpose"/>
                                    </ns19:tbPurpose>
                                </xsl:if>
                                <xsl:if test="ns19:sioActionType">
                                    <ns19:sioActionType>
                                        <xsl:value-of select="ns19:sioActionType"/>
                                    </ns19:sioActionType>
                                </xsl:if>
                                <xsl:for-each select="ns19:sioThresholdAmt">
                                    <ns19:sioThresholdAmt>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:sioThresholdAmt>
                                </xsl:for-each>
                                <xsl:if test="ns19:maxCarryOverLenght">
                                    <ns19:maxCarryOverLenght>
                                        <xsl:value-of select="ns19:maxCarryOverLenght"/>
                                    </ns19:maxCarryOverLenght>
                                </xsl:if>
                                <xsl:if test="ns19:maxCarryOverPeriodType">
                                    <ns19:maxCarryOverPeriodType>
                                        <xsl:value-of select="ns19:maxCarryOverPeriodType"/>
                                    </ns19:maxCarryOverPeriodType>
                                </xsl:if>
                                <xsl:if test="ns19:isIndividualOverdiscDisabled">
                                    <ns19:isIndividualOverdiscDisabled>
                                        <xsl:value-of select="ns19:isIndividualOverdiscDisabled"/>
                                    </ns19:isIndividualOverdiscDisabled>
                                </xsl:if>
                                <xsl:if test="ns19:familyId">
                                    <ns19:familyId>
                                        <xsl:value-of select="ns19:familyId"/>
                                    </ns19:familyId>
                                </xsl:if>
                                <xsl:for-each select="ns19:listOfAssignments">
                                    <ns19:listOfAssignments>
                                        <xsl:for-each select="ns19:item">
                                            <ns19:item>
                                                <xsl:if test="ns19:familyId">
                                                    <ns19:familyId>
                                                        <xsl:value-of select="ns19:familyId"/>
                                                    </ns19:familyId>
                                                </xsl:if>
                                                <xsl:if test="ns19:completionStatus">
                                                    <ns19:completionStatus>
                                                        <xsl:value-of select="ns19:completionStatus"/>
                                                    </ns19:completionStatus>
                                                </xsl:if>
                                                <xsl:if test="ns19:validFrom">
                                                    <ns19:validFrom>
                                                        <xsl:value-of select="ns19:validFrom"/>
                                                    </ns19:validFrom>
                                                </xsl:if>
                                            </ns19:item>
                                        </xsl:for-each>
                                    </ns19:listOfAssignments>
                                </xsl:for-each>
                                <xsl:if test="ns19:csId">
                                    <ns19:csId>
                                        <xsl:value-of select="ns19:csId"/>
                                    </ns19:csId>
                                </xsl:if>
                                <xsl:if test="ns19:csIdPub">
                                    <ns19:csIdPub>
                                        <xsl:value-of select="ns19:csIdPub"/>
                                    </ns19:csIdPub>
                                </xsl:if>
                                <xsl:if test="ns19:csCode">
                                    <ns19:csCode>
                                        <xsl:value-of select="ns19:csCode"/>
                                    </ns19:csCode>
                                </xsl:if>
                                <xsl:if test="ns19:csStatus">
                                    <ns19:csStatus>
                                        <xsl:value-of select="ns19:csStatus"/>
                                    </ns19:csStatus>
                                </xsl:if>
                                <xsl:if test="ns19:csStatusDate">
                                    <ns19:csStatusDate>
                                        <xsl:value-of select="ns19:csStatusDate"/>
                                    </ns19:csStatusDate>
                                </xsl:if>
                                <xsl:if test="ns19:csActivationDate">
                                    <ns19:csActivationDate>
                                        <xsl:value-of select="ns19:csActivationDate"/>
                                    </ns19:csActivationDate>
                                </xsl:if>
                                <xsl:if test="ns19:csIdHigh">
                                    <ns19:csIdHigh>
                                        <xsl:value-of select="ns19:csIdHigh"/>
                                    </ns19:csIdHigh>
                                </xsl:if>
                                <xsl:if test="ns19:csIdHighPub">
                                    <ns19:csIdHighPub>
                                        <xsl:value-of select="ns19:csIdHighPub"/>
                                    </ns19:csIdHighPub>
                                </xsl:if>
                                <xsl:if test="ns19:csLevelCode">
                                    <ns19:csLevelCode>
                                        <xsl:value-of select="ns19:csLevelCode"/>
                                    </ns19:csLevelCode>
                                </xsl:if>
                                <xsl:if test="ns19:paymentResp">
                                    <ns19:paymentResp>
                                        <xsl:value-of select="ns19:paymentResp"/>
                                    </ns19:paymentResp>
                                </xsl:if>
                                <xsl:if test="ns19:prgCode">
                                    <ns19:prgCode>
                                        <xsl:value-of select="ns19:prgCode"/>
                                    </ns19:prgCode>
                                </xsl:if>
                                <xsl:if test="ns19:rpcode">
                                    <ns19:rpcode>
                                        <xsl:value-of select="ns19:rpcode"/>
                                    </ns19:rpcode>
                                </xsl:if>
                                <xsl:if test="ns19:rpcodePub">
                                    <ns19:rpcodePub>
                                        <xsl:value-of select="ns19:rpcodePub"/>
                                    </ns19:rpcodePub>
                                </xsl:if>
                                <xsl:if test="ns19:tradeCode">
                                    <ns19:tradeCode>
                                        <xsl:value-of select="ns19:tradeCode"/>
                                    </ns19:tradeCode>
                                </xsl:if>
                                <xsl:if test="ns19:areaCode">
                                    <ns19:areaCode>
                                        <xsl:value-of select="ns19:areaCode"/>
                                    </ns19:areaCode>
                                </xsl:if>
                                <xsl:if test="ns19:costId">
                                    <ns19:costId>
                                        <xsl:value-of select="ns19:costId"/>
                                    </ns19:costId>
                                </xsl:if>
                                <xsl:if test="ns19:costCodePub">
                                    <ns19:costCodePub>
                                        <xsl:value-of select="ns19:costCodePub"/>
                                    </ns19:costCodePub>
                                </xsl:if>
                                <xsl:if test="ns19:csPassword">
                                    <ns19:csPassword>
                                        <xsl:value-of select="ns19:csPassword"/>
                                    </ns19:csPassword>
                                </xsl:if>
                                <xsl:if test="ns19:rsCode">
                                    <ns19:rsCode>
                                        <xsl:value-of select="ns19:rsCode"/>
                                    </ns19:rsCode>
                                </xsl:if>
                                <xsl:if test="ns19:wpCode">
                                    <ns19:wpCode>
                                        <xsl:value-of select="ns19:wpCode"/>
                                    </ns19:wpCode>
                                </xsl:if>
                                <xsl:if test="ns19:srCode">
                                    <ns19:srCode>
                                        <xsl:value-of select="ns19:srCode"/>
                                    </ns19:srCode>
                                </xsl:if>
                                <xsl:if test="ns19:csRemark1">
                                    <ns19:csRemark1>
                                        <xsl:value-of select="ns19:csRemark1"/>
                                    </ns19:csRemark1>
                                </xsl:if>
                                <xsl:if test="ns19:csRemark2">
                                    <ns19:csRemark2>
                                        <xsl:value-of select="ns19:csRemark2"/>
                                    </ns19:csRemark2>
                                </xsl:if>
                                <xsl:if test="ns19:csBillInformation">
                                    <ns19:csBillInformation>
                                        <xsl:value-of select="ns19:csBillInformation"/>
                                    </ns19:csBillInformation>
                                </xsl:if>
                                <xsl:if test="ns19:expectPayCurrencyId">
                                    <ns19:expectPayCurrencyId>
                                        <xsl:value-of select="ns19:expectPayCurrencyId"/>
                                    </ns19:expectPayCurrencyId>
                                </xsl:if>
                                <xsl:if test="ns19:expectPayCurrencyIdPub">
                                    <ns19:expectPayCurrencyIdPub>
                                        <xsl:value-of select="ns19:expectPayCurrencyIdPub"/>
                                    </ns19:expectPayCurrencyIdPub>
                                </xsl:if>
                                <xsl:if test="ns19:csConvratetypePayment">
                                    <ns19:csConvratetypePayment>
                                        <xsl:value-of select="ns19:csConvratetypePayment"/>
                                    </ns19:csConvratetypePayment>
                                </xsl:if>
                                <xsl:if test="ns19:csConvratetypePaymentPub">
                                    <ns19:csConvratetypePaymentPub>
                                        <xsl:value-of select="ns19:csConvratetypePaymentPub"/>
                                    </ns19:csConvratetypePaymentPub>
                                </xsl:if>
                                <xsl:if test="ns19:refundCurrencyId">
                                    <ns19:refundCurrencyId>
                                        <xsl:value-of select="ns19:refundCurrencyId"/>
                                    </ns19:refundCurrencyId>
                                </xsl:if>
                                <xsl:if test="ns19:refundCurrencyIdPub">
                                    <ns19:refundCurrencyIdPub>
                                        <xsl:value-of select="ns19:refundCurrencyIdPub"/>
                                    </ns19:refundCurrencyIdPub>
                                </xsl:if>
                                <xsl:if test="ns19:csConvratetypeRefund">
                                    <ns19:csConvratetypeRefund>
                                        <xsl:value-of select="ns19:csConvratetypeRefund"/>
                                    </ns19:csConvratetypeRefund>
                                </xsl:if>
                                <xsl:if test="ns19:csConvratetypeRefundPub">
                                    <ns19:csConvratetypeRefundPub>
                                        <xsl:value-of select="ns19:csConvratetypeRefundPub"/>
                                    </ns19:csConvratetypeRefundPub>
                                </xsl:if>
                                <xsl:if test="ns19:csCrcheckAgreed">
                                    <ns19:csCrcheckAgreed>
                                        <xsl:value-of select="ns19:csCrcheckAgreed"/>
                                    </ns19:csCrcheckAgreed>
                                </xsl:if>
                                <xsl:if test="ns19:custcatCode">
                                    <ns19:custcatCode>
                                        <xsl:value-of select="ns19:custcatCode"/>
                                    </ns19:custcatCode>
                                </xsl:if>
                                <xsl:if test="ns19:custcatCodePub">
                                    <ns19:custcatCodePub>
                                        <xsl:value-of select="ns19:custcatCodePub"/>
                                    </ns19:custcatCodePub>
                                </xsl:if>
                                <xsl:if test="ns19:csJurisdictionId">
                                    <ns19:csJurisdictionId>
                                        <xsl:value-of select="ns19:csJurisdictionId"/>
                                    </ns19:csJurisdictionId>
                                </xsl:if>
                                <xsl:if test="ns19:csJurisdictionCode">
                                    <ns19:csJurisdictionCode>
                                        <xsl:value-of select="ns19:csJurisdictionCode"/>
                                    </ns19:csJurisdictionCode>
                                </xsl:if>
                                <xsl:if test="ns19:csIncorporatedInd">
                                    <ns19:csIncorporatedInd>
                                        <xsl:value-of select="ns19:csIncorporatedInd"/>
                                    </ns19:csIncorporatedInd>
                                </xsl:if>
                                <xsl:if test="ns19:csBillcycle">
                                    <ns19:csBillcycle>
                                        <xsl:value-of select="ns19:csBillcycle"/>
                                    </ns19:csBillcycle>
                                </xsl:if>
                                <xsl:if test="ns19:csBillcycleDesc">
                                    <ns19:csBillcycleDesc>
                                        <xsl:value-of select="ns19:csBillcycleDesc"/>
                                    </ns19:csBillcycleDesc>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr1">
                                    <ns19:csLimitTr1>
                                        <xsl:value-of select="ns19:csLimitTr1"/>
                                    </ns19:csLimitTr1>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr1Pub">
                                    <ns19:csLimitTr1Pub>
                                        <xsl:value-of select="ns19:csLimitTr1Pub"/>
                                    </ns19:csLimitTr1Pub>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr2">
                                    <ns19:csLimitTr2>
                                        <xsl:value-of select="ns19:csLimitTr2"/>
                                    </ns19:csLimitTr2>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr2Pub">
                                    <ns19:csLimitTr2Pub>
                                        <xsl:value-of select="ns19:csLimitTr2Pub"/>
                                    </ns19:csLimitTr2Pub>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr3">
                                    <ns19:csLimitTr3>
                                        <xsl:value-of select="ns19:csLimitTr3"/>
                                    </ns19:csLimitTr3>
                                </xsl:if>
                                <xsl:if test="ns19:csLimitTr3Pub">
                                    <ns19:csLimitTr3Pub>
                                        <xsl:value-of select="ns19:csLimitTr3Pub"/>
                                    </ns19:csLimitTr3Pub>
                                </xsl:if>
                                <xsl:for-each select="ns19:csClimit">
                                    <ns19:csClimit>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:csClimit>
                                </xsl:for-each>
                                <xsl:if test="ns19:csContresp">
                                    <ns19:csContresp>
                                        <xsl:value-of select="ns19:csContresp"/>
                                    </ns19:csContresp>
                                </xsl:if>
                                <xsl:if test="ns19:csLastBcDate">
                                    <ns19:csLastBcDate>
                                        <xsl:value-of select="ns19:csLastBcDate"/>
                                    </ns19:csLastBcDate>
                                </xsl:if>
                                <xsl:for-each select="ns19:csDeposit">
                                    <ns19:csDeposit>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:csDeposit>
                                </xsl:for-each>
                                <xsl:if test="ns19:csCreditscore">
                                    <ns19:csCreditscore>
                                        <xsl:value-of select="ns19:csCreditscore"/>
                                    </ns19:csCreditscore>
                                </xsl:if>
                                <xsl:if test="ns19:csCscreditStatus">
                                    <ns19:csCscreditStatus>
                                        <xsl:value-of select="ns19:csCscreditStatus"/>
                                    </ns19:csCscreditStatus>
                                </xsl:if>
                                <xsl:if test="ns19:csCscreditRemark">
                                    <ns19:csCscreditRemark>
                                        <xsl:value-of select="ns19:csCscreditRemark"/>
                                    </ns19:csCscreditRemark>
                                </xsl:if>
                                <xsl:if test="ns19:csCscreditDate">
                                    <ns19:csCscreditDate>
                                        <xsl:value-of select="ns19:csCscreditDate"/>
                                    </ns19:csCscreditDate>
                                </xsl:if>
                                <xsl:if test="ns19:csDunning">
                                    <ns19:csDunning>
                                        <xsl:value-of select="ns19:csDunning"/>
                                    </ns19:csDunning>
                                </xsl:if>
                                <xsl:if test="ns19:csDunningMode">
                                    <ns19:csDunningMode>
                                        <xsl:value-of select="ns19:csDunningMode"/>
                                    </ns19:csDunningMode>
                                </xsl:if>
                                <xsl:if test="ns19:csPrepayment">
                                    <ns19:csPrepayment>
                                        <xsl:value-of select="ns19:csPrepayment"/>
                                    </ns19:csPrepayment>
                                </xsl:if>
                                <xsl:if test="ns19:csCollector">
                                    <ns19:csCollector>
                                        <xsl:value-of select="ns19:csCollector"/>
                                    </ns19:csCollector>
                                </xsl:if>
                                <xsl:if test="ns19:csFcId">
                                    <ns19:csFcId>
                                        <xsl:value-of select="ns19:csFcId"/>
                                    </ns19:csFcId>
                                </xsl:if>
                                <xsl:if test="ns19:csFcIdPub">
                                    <ns19:csFcIdPub>
                                        <xsl:value-of select="ns19:csFcIdPub"/>
                                    </ns19:csFcIdPub>
                                </xsl:if>
                                <xsl:for-each select="ns19:csCscurbalance">
                                    <ns19:csCscurbalance>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:csCscurbalance>
                                </xsl:for-each>
                                <xsl:for-each select="ns19:csPrevbalance">
                                    <ns19:csPrevbalance>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:csPrevbalance>
                                </xsl:for-each>
                                <xsl:for-each select="ns19:csUnbilledAmount">
                                    <ns19:csUnbilledAmount>
                                        <ns29:amount>
                                            <xsl:value-of select="ns29:amount"/>
                                        </ns29:amount>
                                        <ns29:currency>
                                            <xsl:value-of select="ns29:currency"/>
                                        </ns29:currency>
                                    </ns19:csUnbilledAmount>
                                </xsl:for-each>
                                <xsl:if test="ns19:csPaybehaviour">
                                    <ns19:csPaybehaviour>
                                        <xsl:value-of select="ns19:csPaybehaviour"/>
                                    </ns19:csPaybehaviour>
                                </xsl:if>
                                <xsl:if test="ns19:csNoBouncePay">
                                    <ns19:csNoBouncePay>
                                        <xsl:value-of select="ns19:csNoBouncePay"/>
                                    </ns19:csNoBouncePay>
                                </xsl:if>
                                <xsl:if test="ns19:csDealerid">
                                    <ns19:csDealerid>
                                        <xsl:value-of select="ns19:csDealerid"/>
                                    </ns19:csDealerid>
                                </xsl:if>
                                <xsl:if test="ns19:csDealeridPub">
                                    <ns19:csDealeridPub>
                                        <xsl:value-of select="ns19:csDealeridPub"/>
                                    </ns19:csDealeridPub>
                                </xsl:if>
                                <xsl:if test="ns19:csInitPrepaidContrOwner">
                                    <ns19:csInitPrepaidContrOwner>
                                        <xsl:value-of select="ns19:csInitPrepaidContrOwner"/>
                                    </ns19:csInitPrepaidContrOwner>
                                </xsl:if>
                                <xsl:if test="ns19:csCreationDate">
                                    <ns19:csCreationDate>
                                        <xsl:value-of select="ns19:csCreationDate"/>
                                    </ns19:csCreationDate>
                                </xsl:if>
                                <xsl:if test="ns19:csDeactivationDate">
                                    <ns19:csDeactivationDate>
                                        <xsl:value-of select="ns19:csDeactivationDate"/>
                                    </ns19:csDeactivationDate>
                                </xsl:if>
                                <xsl:if test="ns19:csSuspensionDate">
                                    <ns19:csSuspensionDate>
                                        <xsl:value-of select="ns19:csSuspensionDate"/>
                                    </ns19:csSuspensionDate>
                                </xsl:if>
                                <xsl:if test="ns19:csReactivationDate">
                                    <ns19:csReactivationDate>
                                        <xsl:value-of select="ns19:csReactivationDate"/>
                                    </ns19:csReactivationDate>
                                </xsl:if>
                                <xsl:if test="ns19:lastModificationUser">
                                    <ns19:lastModificationUser>
                                        <xsl:value-of select="ns19:lastModificationUser"/>
                                    </ns19:lastModificationUser>
                                </xsl:if>
                                <xsl:if test="ns19:paymentRespId">
                                    <ns19:paymentRespId>
                                        <xsl:value-of select="ns19:paymentRespId"/>
                                    </ns19:paymentRespId>
                                </xsl:if>
                                <xsl:if test="ns19:csPaymntRespCode">
                                    <ns19:csPaymntRespCode>
                                        <xsl:value-of select="ns19:csPaymntRespCode"/>
                                    </ns19:csPaymntRespCode>
                                </xsl:if>
                                <xsl:for-each select="ns19:partyRoleAssignments">
                                    <ns19:partyRoleAssignments>
                                        <xsl:for-each select="ns19:item">
                                            <ns19:item>
                                                <xsl:if test="ns19:partyRoleId">
                                                    <ns19:partyRoleId>
                                                        <xsl:value-of select="ns19:partyRoleId"/>
                                                    </ns19:partyRoleId>
                                                </xsl:if>
                                                <xsl:if test="ns19:partyRoleShname">
                                                    <ns19:partyRoleShname>
                                                        <xsl:value-of select="ns19:partyRoleShname"/>
                                                    </ns19:partyRoleShname>
                                                </xsl:if>
                                                <xsl:if test="ns19:partyRoleName">
                                                    <ns19:partyRoleName>
                                                        <xsl:value-of select="ns19:partyRoleName"/>
                                                    </ns19:partyRoleName>
                                                </xsl:if>
                                                <xsl:if test="ns19:partyRoleDescription">
                                                    <ns19:partyRoleDescription>
                                                        <xsl:value-of select="ns19:partyRoleDescription"/>
                                                    </ns19:partyRoleDescription>
                                                </xsl:if>
                                            </ns19:item>
                                        </xsl:for-each>
                                    </ns19:partyRoleAssignments>
                                </xsl:for-each>
                                <xsl:if test="ns19:partyType">
                                    <ns19:partyType>
                                        <xsl:value-of select="ns19:partyType"/>
                                    </ns19:partyType>
                                </xsl:if>
                                <xsl:if test="ns19:collInd">
                                    <ns19:collInd>
                                        <xsl:value-of select="ns19:collInd"/>
                                    </ns19:collInd>
                                </xsl:if>
                                <xsl:if test="ns19:markedForRerating">
                                    <ns19:markedForRerating>
                                        <xsl:value-of select="ns19:markedForRerating"/>
                                    </ns19:markedForRerating>
                                </xsl:if>
                                <xsl:if test="ns19:externalCustomerId">
                                    <ns19:externalCustomerId>
                                        <xsl:value-of select="ns19:externalCustomerId"/>
                                    </ns19:externalCustomerId>
                                </xsl:if>
                                <xsl:if test="ns19:externalCustomerSetId">
                                    <ns19:externalCustomerSetId>
                                        <xsl:value-of select="ns19:externalCustomerSetId"/>
                                    </ns19:externalCustomerSetId>
                                </xsl:if>
                                <xsl:if test="ns19:maxCsLevel">
                                    <ns19:maxCsLevel>
                                        <xsl:value-of select="ns19:maxCsLevel"/>
                                    </ns19:maxCsLevel>
                                </xsl:if>
                                <xsl:if test="ns19:creditScore">
                                    <ns19:creditScore>
                                        <xsl:value-of select="ns19:creditScore"/>
                                    </ns19:creditScore>
                                </xsl:if>
                                <xsl:if test="ns19:creditScoreProvider">
                                    <ns19:creditScoreProvider>
                                        <xsl:value-of select="ns19:creditScoreProvider"/>
                                    </ns19:creditScoreProvider>
                                </xsl:if>
                                <xsl:if test="ns19:csCscreditUser">
                                    <ns19:csCscreditUser>
                                        <xsl:value-of select="ns19:csCscreditUser"/>
                                    </ns19:csCscreditUser>
                                </xsl:if>
                                <xsl:if test="ns19:performCreditScoring">
                                    <ns19:performCreditScoring>
                                        <xsl:value-of select="ns19:performCreditScoring"/>
                                    </ns19:performCreditScoring>
                                </xsl:if>
                                <xsl:if test="ns19:cslvlname">
                                    <ns19:cslvlname>
                                        <xsl:value-of select="ns19:cslvlname"/>
                                    </ns19:cslvlname>
                                </xsl:if>
                                <xsl:if test="ns19:adrNationality">
                                    <ns19:adrNationality>
                                        <xsl:value-of select="ns19:adrNationality"/>
                                    </ns19:adrNationality>
                                </xsl:if>
                                <xsl:if test="ns19:adrNationalityPub">
                                    <ns19:adrNationalityPub>
                                        <xsl:value-of select="ns19:adrNationalityPub"/>
                                    </ns19:adrNationalityPub>
                                </xsl:if>
                                <xsl:if test="ns19:adrEmployee">
                                    <ns19:adrEmployee>
                                        <xsl:value-of select="ns19:adrEmployee"/>
                                    </ns19:adrEmployee>
                                </xsl:if>
                                <xsl:if test="ns19:csTestbillrun">
                                    <ns19:csTestbillrun>
                                        <xsl:value-of select="ns19:csTestbillrun"/>
                                    </ns19:csTestbillrun>
                                </xsl:if>
                                <xsl:if test="ns19:csProtectionMode">
                                    <ns19:csProtectionMode>
                                        <xsl:value-of select="ns19:csProtectionMode"/>
                                    </ns19:csProtectionMode>
                                </xsl:if>
                            </pfx64:customerRead>
                        </xsl:for-each>
                        <xsl:for-each select="pfx64:addresses">
                            <pfx64:addresses>
                                <xsl:for-each select="pfx64:item">
                                    <pfx64:item>
                                        <xsl:for-each select="pfx64:addressWrite">
                                            <pfx64:addressWrite>
                                                <xsl:if test="ns30:adrSeq">
                                                    <ns30:adrSeq>
                                                        <xsl:value-of select="ns30:adrSeq"/>
                                                    </ns30:adrSeq>
                                                </xsl:if>
                                            </pfx64:addressWrite>
                                        </xsl:for-each>
                                    </pfx64:item>
                                </xsl:for-each>
                            </pfx64:addresses>
                        </xsl:for-each>
                    </pfx64:customerModifyzainResponse>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:choice>
            <xsd:element ref="pfx64:customerModifyzainResponse"/>
            <xsd:element ref="pfx59:ErrorResponse"/>
        </xsd:choice>
    </pd:endType>
    <pd:endX>1005</pd:endX>
    <pd:endY>181</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>257</pd:x>
        <pd:y>181</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Modification/CustomerStatusUpdate/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$CustomerStatusUpdate/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:csIdPub"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CustomerStatusUpdate/group/pfx64:customerModifyzainRequest)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$CustomerStatusUpdate/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>840</pd:x>
        <pd:y>182</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Modification/CustomerStatusUpdate/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/MODIFY_CUSTOMER"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$CustomerStatusUpdate/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:csIdPub"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($UpdateCustomer/outputMessage/pfx64:customerModifyzainResponse)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($UpdateCustomer/outputMessage/pfx64:customerModifyzainResponse)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$CustomerStatusUpdate/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>332</pd:x>
        <pd:y>6</pd:y>
        <pd:width>335</pd:width>
        <pd:height>330</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>UpdateCustomer</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>UpdateCustomer</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>MaxRetry=True</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$ErrorCode_LookUp/root/errorGroup/RETRYFLAG=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>UpdateCustomer</pd:from>
            <pd:to>ErrorCode_LookUp</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechnicalError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ErrorCode_LookUp</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>604</pd:x>
            <pd:y>280</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/CommonSettings/JMSTimeOuts/Timeout_Regular_Wait"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>532</pd:x>
            <pd:y>180</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="UpdateCustomer">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>482</pd:x>
            <pd:y>72</pd:y>
            <config>
                <timeout>%%BusinessProcesses/Services/BSCS/Update/BillProcessCreate/Timeout%%</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <timeoutType>Seconds</timeoutType>
                <service>pfx48:CustomerModifyzainService</service>
                <servicePort>CustomerModifyzainServiceSoap11</servicePort>
                <operation>customerModifyzain</operation>
                <soapAction/>
                <endpointURL>%%CommonResources/Connections/SOAP/External/BSCS/BSCS_HTTP/SoapIP%%</endpointURL>
                <authScheme>BASIC</authScheme>
                <useProxy>false</useProxy>
                <requireBasicAuth>true</requireBasicAuth>
                <basicHttpAuthIdentity>/CommonResources/Identities/BSCS_Identity.id</basicHttpAuthIdentity>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <pfx64:customerModifyzainRequest>
                        <pfx64:inputAttributes>
                            <pfx64:customerRead>
                                <xsl:if test="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:csIdPub">
                                    <ns19:csIdPub>
                                        <xsl:value-of select="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:csIdPub"/>
                                    </ns19:csIdPub>
                                </xsl:if>
                                <xsl:if test="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:syncWithDb">
                                    <ns19:syncWithDb>
                                        <xsl:value-of select="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerRead/ns19:syncWithDb"/>
                                    </ns19:syncWithDb>
                                </xsl:if>
                            </pfx64:customerRead>
                            <pfx64:customerInfoWrite>
                                <xsl:if test="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerInfoWrite/ns31:check02">
                                    <ns31:check02>
                                        <xsl:value-of select="$CustomerStatusUpdate/group/pfx64:customerModifyzainRequest/pfx64:inputAttributes/pfx64:customerInfoWrite/ns31:check02"/>
                                    </ns31:check02>
                                </xsl:if>
                            </pfx64:customerInfoWrite>
                        </pfx64:inputAttributes>
                        <pfx64:sessionChangeRequest>
                            <ns20:values>
                                <ns20:item>
                                    <ns20:key>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Modification/SessionChange/Key"/>
                                    </ns20:key>
                                    <ns20:value>
                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Modification/SessionChange/Value"/>
                                    </ns20:value>
                                </ns20:item>
                            </ns20:values>
                        </pfx64:sessionChangeRequest>
                    </pfx64:customerModifyzainRequest>
                    <ns13:_configData>
                        <endpointURL>
                            <xsl:value-of select="concat($_globalVariables/pfx9:GlobalVariables/CommonResources/Connections/SOAP/External/BSCS/BSCS_HTTP/SoapIP,$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Modification/CustomerStatusUpdate/Endpoint_URL)"/>
                        </endpointURL>
                    </ns13:_configData>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GenerateTechnicalError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>452</pd:x>
            <pd:y>282</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="if  (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultstring&#xA;else&#xA;$_error/ns8:ErrorReport/Msg">
                        <message>
                            <xsl:value-of select="if  (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultstring&#xA;else&#xA;$_error/ns8:ErrorReport/Msg"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="if (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="if (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorCode_LookUp">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>404</pd:x>
            <pd:y>196</pd:y>
            <config>
                <processName>/CommonProcesses/ErrorHandlingProcess/ErrorCode_LookUp.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <MsgCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </MsgCode>
                    </xsl:if>
                    <Msg>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </Msg>
                    <TargetSystem>
                        <xsl:value-of select="'BSCS'"/>
                    </TargetSystem>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>245</pd:x>
        <pd:y>308</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error/ns8:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>833</pd:x>
        <pd:y>298</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="if  (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultstring&#xA;else&#xA;$_error/ns8:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="if  (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultstring&#xA;else&#xA;$_error/ns8:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="if (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="if (string-length($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)>0)&#xA;then&#xA;$_error_UpdateCustomer/ActivityErrors/defaultFaultElement/faultcode&#xA;else&#xA;$_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>OtherScenario</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>ErrorScenario</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_UpdateCustomer/ActivityErrors/defaultFaultElement)
or
exists($_error_UpdateCustomer/ActivityErrors/ns9:HttpClientException)
or
exists($_error_UpdateCustomer/ActivityErrors/ns9:HttpServerException)
or
exists($_error_UpdateCustomer/ActivityErrors/ns9:HttpCommunicationException)
or
exists($_error_UpdateCustomer/ActivityErrors/ns10:ActivityTimedOutException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CustomerStatusUpdate</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>