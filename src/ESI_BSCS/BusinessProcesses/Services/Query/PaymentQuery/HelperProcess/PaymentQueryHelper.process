<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx57="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/BSCS/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd" xmlns:pfx59="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx53="http://www.tibco.com/schemas/ESI/BusinessProcesses/Services/BSCS/Query/PaymentQuery/HelperProcess/Schema.xsd" xmlns:pfx54="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/ParsePaymentQueryOutput.xsd" xmlns:pfx56="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:pfx52="http://schemas.tibco.com/bw/plugins/jdbc/5.0/jdbcExceptions" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.tibco.com/schemas/ESI/BusinessProcesses/Services/BSCS/Query/PaymentProfileRead/HelperProcess/Schema.xsd" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:pfx49="http://ericsson.com/services/ws_CMI_5" xmlns:pfx46="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx47="http://siebel.com/CustomUI" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/paymentarrangementwritezain" xmlns:pfx45="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/paymentarrangementassignmentwritezain" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx35="http://lhsgroup.com/lhsws/money" xmlns:pfx36="http://ericsson.com/services/ws_CIL_5/customercreatezain" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pfx38="http://ericsson.com/services/ws_CIL_5" xmlns:pfx591="http://ericsson.com/services/ws_CMI_5/monthlypaymentinforead" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx581="http://xmlns.example.com/1450425475391" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://ericsson.com/services/ws_CIL_5/customermodifyzain" xmlns:pfx571="http://ericsson.com/services/ws_CMI_5/msisdnbaread" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns26="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetBonusRechargeHistory/GetBonusRechargeHistoryRes.xsd" xmlns:ns27="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/addresswrite" xmlns:ns22="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns23="http://ericsson.com/services/ws_CIL_5/paymentarrangementwrite" xmlns:ns24="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_5/customerinfowrite" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns32="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customercreatezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateCustomer/CustomerCreatezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/customermodifyzain" schemaLocation="/BusinessWSDLS/Services/BSCS/ModifyCustomer/CustomerModifyzainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/paymentarrangementassignmentwritezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementAssignmentWritezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/paymentarrangementwritezain" schemaLocation="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementWritezainService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileResponse.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CMI_5/paymentprofileread" schemaLocation="/BusinessWSDLS/Services/BSCS/PaymentProfileRead/PaymentProfileReadService.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/ESI/BusinessProcesses/Services/BSCS/Query/PaymentProfileRead/HelperProcess/Schema.xsd" schemaLocation="/BusinessProcesses/Services/BSCS/Query/PaymentQuery/HelperProcess/PaymentQuery.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBillingAccID/QueryCutomerID_BAID.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/ParsePaymentQueryOutput.xsd" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery/ParsePaymentQueryOut.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/BSCS/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd" schemaLocation="/BusinessProcesses/Services/BSCS/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd" schemaLocation="/BusinessProcesses/Services/Query/PaymentQuery/HelperProcess/ParsePaymentQueryOut.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery/PaymentQuery.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CIL_5" location="/BusinessWSDLS/Services/BSCS/CreateModifyPaymentProfile/PaymentArrangementWritezainService.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CMI_5" location="/BusinessWSDLS/Services/BSCS/PaymentProfileRead/PaymentProfileReadService.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/PaymentQuery/HelperProcess/PaymentQueryHelper.process</pd:name>
    <pd:startName>PaymentQuery</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="CustomerString" type="xsd:string"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>48</pd:startX>
    <pd:startY>119</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="$Call_PaymentQuery/resultSet/outputSet/P_ERRORCODE_OUT!=1">
                <pfx59:ErrorResponse>
                    <pfx59:Error_SourceSystem>
                        <xsl:value-of select="'BSCS'"/>
                    </pfx59:Error_SourceSystem>
                    <xsl:if test="not(($Call_PaymentQuery/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;true&quot;)) or ($Call_PaymentQuery/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;1&quot;)))">
                        <pfx59:Error_SourceErrCode>
                            <xsl:value-of select="$Call_PaymentQuery/resultSet/outputSet/P_ERRORCODE_OUT"/>
                        </pfx59:Error_SourceErrCode>
                    </xsl:if>
                    <xsl:if test="not(($Call_PaymentQuery/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;true&quot;)) or ($Call_PaymentQuery/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;1&quot;)))">
                        <pfx59:Error_SourceErrDesc>
                            <xsl:value-of select="$Call_PaymentQuery/resultSet/outputSet/P_ERRORMSG_OUT"/>
                        </pfx59:Error_SourceErrDesc>
                    </xsl:if>
                </pfx59:ErrorResponse>
            </xsl:when>
            <xsl:otherwise>
                <pfx54:PaymentQueryOutput>
                    <xsl:for-each select="$ParseRefCursorOutput/Resultsets/ResultSet1/Record1">
                        <pfx54:Payments>
                            <xsl:if test="not((CUSTOMER_ID/@xsi:nil=(&quot;true&quot;)) or (CUSTOMER_ID/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:CustomerID>
                                    <xsl:value-of select="CUSTOMER_ID"/>
                                </pfx54:CustomerID>
                            </xsl:if>
                            <xsl:if test="not((PAYMENT_ID/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_ID/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:PaymentID>
                                    <xsl:value-of select="PAYMENT_ID"/>
                                </pfx54:PaymentID>
                            </xsl:if>
                            <xsl:if test="string-length(current()/PAYMENT_DATE)>0">
                                <xsl:if test="not((PAYMENT_DATE/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_DATE/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:PaymentDate>
                                        <xsl:value-of select="PAYMENT_DATE"/>
                                    </pfx54:PaymentDate>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(current()/PAYMENT_AMNT)>0">
                                <xsl:if test="not((PAYMENT_AMNT/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_AMNT/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:PaymentAmount>
                                        <xsl:value-of select="PAYMENT_AMNT"/>
                                    </pfx54:PaymentAmount>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="not((PAYMENT_INSTRUMENT/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_INSTRUMENT/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:PaymentMethod>
                                    <xsl:value-of select="PAYMENT_INSTRUMENT"/>
                                </pfx54:PaymentMethod>
                            </xsl:if>
                            <xsl:if test="not((PAYMENT_REFNUM/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_REFNUM/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:PaymentReferenceNumber>
                                    <xsl:value-of select="PAYMENT_REFNUM"/>
                                </pfx54:PaymentReferenceNumber>
                            </xsl:if>
                            <xsl:if test="string-length(current()/PAYMENT_POST_DATE)>0">
                                <xsl:if test="not((PAYMENT_POST_DATE/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_POST_DATE/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:PaymentPostDate>
                                        <xsl:value-of select="PAYMENT_POST_DATE"/>
                                    </pfx54:PaymentPostDate>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="not((PAYMENT_AUTH_CODE/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_AUTH_CODE/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:PaymentAuthCode>
                                    <xsl:value-of select="PAYMENT_AUTH_CODE"/>
                                </pfx54:PaymentAuthCode>
                            </xsl:if>
                            <pfx54:Channel>
                                <xsl:value-of select="CHANNEL"/>
                            </pfx54:Channel>
                            <xsl:if test="not((SRC_TRANSACTION_ID/@xsi:nil=(&quot;true&quot;)) or (SRC_TRANSACTION_ID/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:SourceTransactionID>
                                    <xsl:value-of select="SRC_TRANSACTION_ID"/>
                                </pfx54:SourceTransactionID>
                            </xsl:if>
                            <pfx54:UserName>
                                <xsl:value-of select="USERNAME"/>
                            </pfx54:UserName>
                            <xsl:if test="not((CUSTOMER_CATEGORY/@xsi:nil=(&quot;true&quot;)) or (CUSTOMER_CATEGORY/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:CustomerCategory>
                                    <xsl:value-of select="CUSTOMER_CATEGORY"/>
                                </pfx54:CustomerCategory>
                            </xsl:if>
                            <pfx54:Location>
                                <xsl:value-of select="LOCATION"/>
                            </pfx54:Location>
                            <xsl:if test="string-length(current()/MERCHANT_ID)>0">
                                <xsl:if test="not((MERCHANT_ID/@xsi:nil=(&quot;true&quot;)) or (MERCHANT_ID/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:MerchantID>
                                        <xsl:value-of select="MERCHANT_ID"/>
                                    </pfx54:MerchantID>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(current()/TERMINAL_ID)>0">
                                <xsl:if test="not((TERMINAL_ID/@xsi:nil=(&quot;true&quot;)) or (TERMINAL_ID/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:TerminalID>
                                        <xsl:value-of select="TERMINAL_ID"/>
                                    </pfx54:TerminalID>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(current()/CRCARDNO)>0">
                                <xsl:if test="not((CRCARDNO/@xsi:nil=(&quot;true&quot;)) or (CRCARDNO/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:CRCCardNumber>
                                        <xsl:value-of select="CRCARDNO"/>
                                    </pfx54:CRCCardNumber>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="string-length(current()/TOTAL_PAYMENT_AMNT)>0">
                                <xsl:if test="not((TOTAL_PAYMENT_AMNT/@xsi:nil=(&quot;true&quot;)) or (TOTAL_PAYMENT_AMNT/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx54:TotalAmount>
                                        <xsl:value-of select="TOTAL_PAYMENT_AMNT"/>
                                    </pfx54:TotalAmount>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="not((MSISDN/@xsi:nil=(&quot;true&quot;)) or (MSISDN/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:MSISDN>
                                    <xsl:value-of select="MSISDN"/>
                                </pfx54:MSISDN>
                            </xsl:if>
                            <xsl:if test="not((PAYMENT_TYPE/@xsi:nil=(&quot;true&quot;)) or (PAYMENT_TYPE/@xsi:nil=(&quot;1&quot;)))">
                                <pfx54:PaymentType>
                                    <xsl:value-of select="PAYMENT_TYPE"/>
                                </pfx54:PaymentType>
                            </xsl:if>
                        </pfx54:Payments>
                    </xsl:for-each>
                </pfx54:PaymentQueryOutput>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:choice>
            <xsd:element ref="pfx54:PaymentQueryOutput"/>
            <xsd:element ref="pfx59:ErrorResponse"/>
        </xsd:choice>
    </pd:endType>
    <pd:endX>1311</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="ParsePaymentQueryRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>233</pd:x>
        <pd:y>117</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx54:PaymentQueryInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$PaymentQuery/group/CustomerString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>239</pd:x>
        <pd:y>229</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CRM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>440</pd:x>
        <pd:y>116</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Query/PaymentQuery/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$PaymentQuery/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:CustomerID"/>
                    </ns6:InterfaceID>
                    <xsl:if test="$_globalVariables/pfx9:GlobalVariables/Deployment">
                        <ns6:Filename>
                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                        </ns6:Filename>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="$PaymentQuery/group/CustomerString"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($Map-Data/root)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$PaymentQuery/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CRM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1036</pd:x>
        <pd:y>57</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Query/PaymentQuery/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$PaymentQuery/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:MSISDN"/>
                    </ns6:InterfaceID>
                    <xsl:if test="$_globalVariables/pfx9:GlobalVariables/Deployment">
                        <ns6:Filename>
                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                        </ns6:Filename>
                    </xsl:if>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($ParsePaymentQueryRequest/pfx54:PaymentQueryInput)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($Call_PaymentQuery/resultSet)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$PaymentQuery/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRefCursorOutput">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>1191</pd:x>
        <pd:y>59</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx58:Resultsets"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Call_PaymentQuery/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>519</pd:x>
        <pd:y>1</pd:y>
        <pd:width>419</pd:width>
        <pd:height>326</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_PaymentQuery</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_PaymentQuery</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateRetriableError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>MaxRetry=True</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$ErrorCode_LookUp/root/RetryFlag=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_PaymentQuery</pd:from>
            <pd:to>ErrorCode_LookUp</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ErrorCode_LookUp</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="GenerateRetriableError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>650</pd:x>
            <pd:y>273</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>879</pd:x>
            <pd:y>270</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>755</pd:x>
            <pd:y>195</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Call_PaymentQuery">
            <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
            <pd:x>695</pd:x>
            <pd:y>77</pd:y>
            <config>
                <timeout>%%BusinessProcesses/Services/BSCS/Query/PaymentQuery/Timeout%%</timeout>
                <maxRows>%%BusinessProcesses/Services/BSCS/Query/PaymentQuery/MaxRows%%</maxRows>
                <emptyStrAsNil>true</emptyStrAsNil>
                <jdbcSharedConfig>/CommonResources/Connections/JDBC/External/BSCSDBConnection.sharedjdbc</jdbcSharedConfig>
                <ProcedureName>ZAINKW_PAYMENT_QUERY_SP</ProcedureName>
                <catalog>BSCS_FINANCE_QUERY_PKG</catalog>
                <parameterTypes>
                    <parameter>
                        <colName>P_CUSTOMERID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_BILLING_ACCOUNTID_IN</colName>
                        <colType>1</colType>
                        <dataType>2</dataType>
                        <typeName>NUMBER</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_CONTRACTID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_MSISDN_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_FROMDT_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_TODT_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_CHILDCUSTFLAG_IN</colName>
                        <colType>1</colType>
                        <dataType>2</dataType>
                        <typeName>NUMBER</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_LIMIT_IN</colName>
                        <colType>1</colType>
                        <dataType>2</dataType>
                        <typeName>NUMBER</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_RESULT_OUT</colName>
                        <colType>3</colType>
                        <dataType>-10</dataType>
                        <typeName>REF CURSOR</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORCODE_OUT</colName>
                        <colType>4</colType>
                        <dataType>2</dataType>
                        <typeName>NUMBER</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORMSG_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                </parameterTypes>
                <oraObjects/>
                <oraTables/>
            </config>
            <pd:inputBindings>
                <inputs>
                    <inputSet>
                        <P_CUSTOMERID_IN>
                            <xsl:choose>
                                <xsl:when test="exists($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:CustomerID)">
                                    <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:CustomerID"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_CUSTOMERID_IN>
                        <P_BILLING_ACCOUNTID_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/BillingAccountID)">
                                    <xsl:value-of select="$Map-Data/root/BillingAccountID"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_BILLING_ACCOUNTID_IN>
                        <P_CONTRACTID_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/ContractID)">
                                    <xsl:value-of select="$Map-Data/root/ContractID"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_CONTRACTID_IN>
                        <P_MSISDN_IN>
                            <xsl:choose>
                                <xsl:when test="exists($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:MSISDN)">
                                    <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:MSISDN"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_MSISDN_IN>
                        <P_FROMDT_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/FromDt)">
                                    <xsl:value-of select="$Map-Data/root/FromDt"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_FROMDT_IN>
                        <P_TODT_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/ToDt)">
                                    <xsl:value-of select="$Map-Data/root/ToDt"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_TODT_IN>
                        <P_CHILDCUSTFLAG_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/ChildCustomerFlag)">
                                    <xsl:value-of select="$Map-Data/root/ChildCustomerFlag"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_CHILDCUSTFLAG_IN>
                        <P_LIMIT_IN>
                            <xsl:choose>
                                <xsl:when test="exists($Map-Data/root/Limit)">
                                    <xsl:value-of select="$Map-Data/root/Limit"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_LIMIT_IN>
                    </inputSet>
                </inputs>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ErrorCode_LookUp">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>631</pd:x>
            <pd:y>183</pd:y>
            <config>
                <processName>/CommonProcesses/ErrorHandlingProcess/ErrorResponseMapFromEOM.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <SourceSystem>
                        <xsl:value-of select="'BSCS'"/>
                    </SourceSystem>
                    <ResponseCode>
                        <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                    </ResponseCode>
                    <ResponseDescription>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </ResponseDescription>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="GenerateError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>394</pd:x>
        <pd:y>264</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error/ns8:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTechnicalError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1053</pd:x>
        <pd:y>241</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error/ns8:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns8:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>339</pd:x>
        <pd:y>116</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="BillingAccountID" type="xsd:double" minOccurs="0"/>
                            <xsd:element name="ChildCustomerFlag" type="xsd:double" minOccurs="0"/>
                            <xsd:element name="ContractID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="FromDt" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ToDt" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Limit" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:BillingAccountID)>0">
                    <xsl:if test="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:BillingAccountID">
                        <BillingAccountID>
                            <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:BillingAccountID"/>
                        </BillingAccountID>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ChildCustomerFlag)>0">
                    <xsl:if test="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ChildCustomerFlag">
                        <ChildCustomerFlag>
                            <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ChildCustomerFlag"/>
                        </ChildCustomerFlag>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ContractID)>0">
                    <xsl:if test="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ContractID">
                        <ContractID>
                            <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ContractID"/>
                        </ContractID>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:FromDate)>0">
                    <FromDt>
                        <xsl:value-of select="tib:format-date('dd/MM/yyyy', tib:parse-date('MM/dd/yyyy', $ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:FromDate))"/>
                    </FromDt>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ToDate)>0">
                    <ToDt>
                        <xsl:value-of select="tib:format-date('dd/MM/yyyy', tib:parse-date('MM/dd/yyyy', $ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:ToDate))"/>
                    </ToDt>
                </xsl:if>
                <xsl:if test="string-length($ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:Limit)>0">
                    <xsl:if test="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:Limit">
                        <Limit>
                            <xsl:value-of select="$ParsePaymentQueryRequest/pfx54:PaymentQueryInput/pfx54:Limit"/>
                        </Limit>
                    </xsl:if>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetResCodes_Ph2">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>124</pd:x>
        <pd:y>234</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes_Ph2.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Log_CRM_Response</pd:from>
        <pd:to>ParseRefCursorOutput</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PaymentQuery</pd:from>
        <pd:to>GetResCodes_Ph2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParsePaymentQueryRequest</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52480</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParsePaymentQueryRequest</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRefCursorOutput</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CRM_Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateError</pd:to>
        <pd:xpathDescription>UnhandledException</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log_CRM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTechnicalError</pd:to>
        <pd:xpathDescription>ErrorScenarios</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:JDBCDriverLoadingException)
or
exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:JDBCConnectionNotFoundException)
or
exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:InvalidTimeZoneException)
or
exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:JDBCSQLException)
or
exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:JDBCTimedOutException)
or
exists($_error_Call_PaymentQuery/ActivityErrors/pfx52:LoginTimedOutException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Log_CRM_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodes_Ph2</pd:from>
        <pd:to>ParsePaymentQueryRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>This process calls procedure in BSCS database for querying payments.</pd:description>
        <pd:x>219</pd:x>
        <pd:y>32</pd:y>
        <pd:width>427</pd:width>
        <pd:height>37</pd:height>
        <pd:fontColor>-1</pd:fontColor>
        <pd:color>-16777216</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>false</pd:fade>
    </pd:label>
</pd:ProcessDefinition>