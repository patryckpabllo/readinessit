<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" xmlns:pfx60="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx62="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:pfx57="http://schemas.tibco.com/bw/plugins/jdbc/5.0/jdbcExceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx58="http://www.ericsson.com/ZainKW/Services/BSCS/Query/UnBilledUsageOutput.xsd" xmlns:pfx59="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/BSCS/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd" xmlns:pfx53="http://lhsgroup.com/lhsws/money" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/storagemediumsearch" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:pfx56="http://www.ericsson.com/ZainKW/Services/BSCS/Query/BilledUsageOutput.xsd" xmlns:pfx52="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:pfx50="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx48="http://ericsson.com/services/ws_CIL_5" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx46="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx47="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx45="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns19="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:ns22="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns23="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/contractcreatezain" schemaLocation="/ContractCreatezainService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CIL_5/storagemediumsearch" schemaLocation="/BusinessWSDLS/Services/BSCS/StorageMediumSearch/StorageMediumSearchService.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/Services/BSCS/Query/BilledUsageOutput.xsd" schemaLocation="/BusinessProcesses/Services/BSCS/Query/GetBilledUsage/Schema/BilledUsageOutput.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/BSCS/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd" schemaLocation="/BusinessProcesses/Services/BSCS/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessProcesses/Services/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd" schemaLocation="/BusinessProcesses/Services/Query/GetUnBilledUsage/Schema/UnbilledUsageOutput.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/Query/GetUsageDetails/GetUsageDetails.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <wsdl:import namespace="http://ericsson.com/services/ws_CIL_5" location="/BusinessWSDLS/Services/BSCS/StorageMediumSearch/StorageMediumSearchService.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/GetUnBilledUsage/HelperProcess/ESI_Call_SearchUnBilledUsage.process</pd:name>
    <pd:startName>SearchUnBilledUsage</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx61:UnBilledUsageRequest"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>88</pd:startX>
    <pd:startY>179</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$NativeToCDM/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx61:UnBilledUsageResponse"/>
                    <xsd:element ref="pfx62:ErrorResponse"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1523</pd:endX>
    <pd:endY>177</pd:endY>
    <pd:errorSchemas>
        <ErrorSchema ref="pfx55:UnBilledUsageResponse"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>411</pd:x>
        <pd:y>178</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Query/UnbilledUsage/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$SearchUnBilledUsage/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CDMToNative/root)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$SearchUnBilledUsage/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Out">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1040</pd:x>
        <pd:y>180</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/BSCS/Query/UnbilledUsage/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$SearchUnBilledUsage/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CallProcedureUnBilledUsage/resultSet)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$SearchUnBilledUsage/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1368</pd:x>
        <pd:y>181</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx61:UnBilledUsageResponse"/>
                            <xsd:element ref="pfx62:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORCODE_OUT=1">
                        <pfx61:UnBilledUsageResponse>
                            <pfx61:ResultSet>
                                <xsl:for-each select="$ParseQueryOutput/Resultsets/ResultSet1/Record1">
                                    <pfx61:Record>
                                        <pfx61:usageStartTime>
                                            <xsl:value-of select="if(string-length(current()/START_TIME)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',current()/START_TIME)&#xA;else ''"/>
                                        </pfx61:usageStartTime>
                                        <pfx61:usageEndTime>
                                            <xsl:value-of select="if(string-length(current()/END_TIME)>0)&#xA;then tib:format-dateTime('MM/dd/yyyy HH:mm:ss',current()/END_TIME)&#xA;else ''"/>
                                        </pfx61:usageEndTime>
                                        <xsl:if test="current()/CALL_TYPE">
                                            <pfx61:usageType>
                                                <xsl:value-of select="current()/CALL_TYPE"/>
                                            </pfx61:usageType>
                                        </xsl:if>
                                        <pfx61:entryDate>
                                            <xsl:value-of select="if(string-length(current()/ENTRY_DATE)>0)&#xA;then&#xA;tib:format-date('MM/dd/yyyy',substring-before(current()/ENTRY_DATE,'T'))&#xA;else ''"/>
                                        </pfx61:entryDate>
                                        <xsl:if test="current()/TYPE">
                                            <pfx61:serviceDescription>
                                                <xsl:value-of select="current()/TYPE"/>
                                            </pfx61:serviceDescription>
                                        </xsl:if>
                                        <xsl:if test="current()/A_PARTY">
                                            <pfx61:PartyA>
                                                <xsl:value-of select="current()/A_PARTY"/>
                                            </pfx61:PartyA>
                                        </xsl:if>
                                        <xsl:if test="current()/B_PARTY">
                                            <pfx61:PartyB>
                                                <xsl:value-of select="current()/B_PARTY"/>
                                            </pfx61:PartyB>
                                        </xsl:if>
                                        <xsl:if test="current()/AMOUNT">
                                            <pfx61:usageCharge>
                                                <xsl:value-of select="current()/AMOUNT"/>
                                            </pfx61:usageCharge>
                                        </xsl:if>
                                        <xsl:if test="current()/BEFORE_CHRG_AMNT">
                                            <pfx61:Before_Chrg_Amnt>
                                                <xsl:value-of select="current()/BEFORE_CHRG_AMNT"/>
                                            </pfx61:Before_Chrg_Amnt>
                                        </xsl:if>
                                        <xsl:if test="current()/AFTER_CHRG_AMNT">
                                            <pfx61:After_Chrg_Amnt>
                                                <xsl:value-of select="current()/AFTER_CHRG_AMNT"/>
                                            </pfx61:After_Chrg_Amnt>
                                        </xsl:if>
                                        <xsl:if test="current()/ZNCODE_DES">
                                            <pfx61:CallType>
                                                <xsl:value-of select="current()/ZNCODE_DES"/>
                                            </pfx61:CallType>
                                        </xsl:if>
                                        <xsl:if test="current()/BAL_AUDIT_DAT_OFFER_ID">
                                            <pfx61:OfferID>
                                                <xsl:value-of select="current()/BAL_AUDIT_DAT_OFFER_ID"/>
                                            </pfx61:OfferID>
                                        </xsl:if>
                                        <xsl:if test="current()/ACCOUNT_TYPE">
                                            <pfx61:AccountType>
                                                <xsl:value-of select="current()/ACCOUNT_TYPE"/>
                                            </pfx61:AccountType>
                                        </xsl:if>
                                        <xsl:if test="current()/BAL_AUDIT_DATA_ACCOUNT_ID">
                                            <pfx61:AccountID>
                                                <xsl:value-of select="current()/BAL_AUDIT_DATA_ACCOUNT_ID"/>
                                            </pfx61:AccountID>
                                        </xsl:if>
                                        <xsl:if test="current()/BILLCODE">
                                            <pfx61:BillCode>
                                                <xsl:value-of select="current()/BILLCODE"/>
                                            </pfx61:BillCode>
                                        </xsl:if>
                                        <xsl:if test="current()/BILLTEXT">
                                            <pfx61:BillText>
                                                <xsl:value-of select="current()/BILLTEXT"/>
                                            </pfx61:BillText>
                                        </xsl:if>
                                        <xsl:if test="current()/DURATION">
                                            <pfx61:Volume>
                                                <xsl:value-of select="current()/DURATION"/>
                                            </pfx61:Volume>
                                        </xsl:if>
                                        <xsl:if test="current()/DURATION_UNIT">
                                            <pfx61:VolumeUnit>
                                                <xsl:value-of select="current()/DURATION_UNIT"/>
                                            </pfx61:VolumeUnit>
                                        </xsl:if>
                                        <xsl:if test="current()/TTCODE_DES">
                                            <pfx61:PeakStatus>
                                                <xsl:value-of select="current()/TTCODE_DES"/>
                                            </pfx61:PeakStatus>
                                        </xsl:if>
                                        <xsl:if test="current()/CHARGED_DURATION">
                                            <pfx61:ChargedDuration>
                                                <xsl:value-of select="current()/CHARGED_DURATION"/>
                                            </pfx61:ChargedDuration>
                                        </xsl:if>
                                    </pfx61:Record>
                                </xsl:for-each>
                            </pfx61:ResultSet>
                        </pfx61:UnBilledUsageResponse>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx62:ErrorResponse>
                            <pfx62:Error_SourceSystem>
                                <xsl:value-of select="&quot;BSCS&quot;"/>
                            </pfx62:Error_SourceSystem>
                            <xsl:if test="not(($CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;true&quot;)) or ($CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORCODE_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <pfx62:Error_SourceErrCode>
                                    <xsl:value-of select="$CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORCODE_OUT"/>
                                </pfx62:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="not(($CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;true&quot;)) or ($CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORMSG_OUT/@xsi:nil=(&quot;1&quot;)))">
                                <pfx62:Error_SourceErrDesc>
                                    <xsl:value-of select="$CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORMSG_OUT"/>
                                </pfx62:Error_SourceErrDesc>
                            </xsl:if>
                        </pfx62:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>1</pd:y>
        <pd:width>396</pd:width>
        <pd:height>373</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CallProcedureUnBilledUsage</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CallProcedureUnBilledUsage</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Timeout</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length($_error_CallProcedureUnBilledUsage/ActivityErrors/pfx57:JDBCTimedOutException/msgCode)&gt;0
or
string-length($_error_CallProcedureUnBilledUsage/ActivityErrors/pfx57:LoginTimedOutException/msgCode)&gt;0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechnicalError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CallProcedureUnBilledUsage</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>841</pd:x>
            <pd:y>297</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/CommonSettings/JMSTimeOuts/Timeout_Regular_Wait"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>723</pd:x>
            <pd:y>206</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="GenerateTechnicalError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>656</pd:x>
            <pd:y>292</pd:y>
            <config>
                <faultName>ErrorSchema</faultName>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <data>
                        <pfx55:UnBilledUsageResponse>
                            <ns22:Response>
                                <ns22:ResponseCode>
                                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                                </ns22:ResponseCode>
                                <ns22:ResponseDescription>
                                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/CRMTimeOutErrorDesc"/>
                                </ns22:ResponseDescription>
                            </ns22:Response>
                        </pfx55:UnBilledUsageResponse>
                    </data>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CallProcedureUnBilledUsage">
            <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
            <pd:x>739</pd:x>
            <pd:y>83</pd:y>
            <config>
                <timeout>%%BusinessProcesses/Services/BSCS/Query/UnbilledUsage/JDBC_Time_out%%</timeout>
                <maxRows>0</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/CommonResources/Connections/JDBC/External/BSCSDBConnection.sharedjdbc</jdbcSharedConfig>
                <schema/>
                <ProcedureName>ZAINKW_UNBILLED_USAGE_QUERY_SP</ProcedureName>
                <catalog>BSCS_USAGE_QUERY_PKG</catalog>
                <oraObjects/>
                <oraTables/>
                <parameterTypes>
                    <parameter>
                        <colName>P_CUSTOMERID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_MSISDN_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_CONTRACTID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_BILLINGACCOUNTID_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_TYPE_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_FROMDT_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_TODT_IN</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_RESULT_OUT</colName>
                        <colType>3</colType>
                        <dataType>-10</dataType>
                        <typeName>REF CURSOR</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORCODE_OUT</colName>
                        <colType>4</colType>
                        <dataType>2</dataType>
                        <typeName>NUMBER</typeName>
                    </parameter>
                    <parameter>
                        <colName>P_ERRORMSG_OUT</colName>
                        <colType>4</colType>
                        <dataType>12</dataType>
                        <typeName>VARCHAR2</typeName>
                    </parameter>
                </parameterTypes>
            </config>
            <pd:inputBindings>
                <inputs>
                    <inputSet>
                        <P_CUSTOMERID_IN>
                            <xsl:value-of select="$CDMToNative/root/customerId"/>
                        </P_CUSTOMERID_IN>
                        <P_MSISDN_IN>
                            <xsl:choose>
                                <xsl:when test="exists($CDMToNative/root/MSISDN)">
                                    <xsl:value-of select="$CDMToNative/root/MSISDN"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_MSISDN_IN>
                        <P_CONTRACTID_IN>
                            <xsl:choose>
                                <xsl:when test="exists($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:contractID)">
                                    <xsl:value-of select="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:contractID"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_CONTRACTID_IN>
                        <P_BILLINGACCOUNTID_IN>
                            <xsl:choose>
                                <xsl:when test="exists($CDMToNative/root/billingAccountId)">
                                    <xsl:value-of select="$CDMToNative/root/billingAccountId"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_BILLINGACCOUNTID_IN>
                        <P_TYPE_IN>
                            <xsl:choose>
                                <xsl:when test="exists($CDMToNative/root/Type)">
                                    <xsl:value-of select="$CDMToNative/root/Type"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_TYPE_IN>
                        <P_FROMDT_IN>
                            <xsl:value-of select="$CDMToNative/root/fromDate"/>
                        </P_FROMDT_IN>
                        <P_TODT_IN>
                            <xsl:choose>
                                <xsl:when test="exists($CDMToNative/root/toDate)">
                                    <xsl:value-of select="$CDMToNative/root/toDate"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </P_TODT_IN>
                    </inputSet>
                </inputs>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>564</pd:x>
        <pd:y>468</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <pfx55:UnBilledUsageResponse>
                        <ns22:Response>
                            <ns22:ResponseCode>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                            </ns22:ResponseCode>
                            <ns22:ResponseDescription>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorDesc"/>
                            </ns22:ResponseDescription>
                        </ns22:Response>
                    </pfx55:UnBilledUsageResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>284</pd:x>
        <pd:y>176</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="customerId" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="fromDate" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="toDate" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MSISDN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="billingAccountId" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="string-length($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:customerID)>0">
                    <xsl:if test="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:customerID">
                        <customerId>
                            <xsl:value-of select="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:customerID"/>
                        </customerId>
                    </xsl:if>
                </xsl:if>
                <Type>
                    <xsl:value-of select="$GetSiebelLOV/ns23:ListOfValues/ns23:LOV[ns23:VAL=$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:usageType &#xA;and ns23:TYPE='CBIO2_BILLED_UNBILLED_STATUS']/ns23:HIGH"/>
                </Type>
                <fromDate>
                    <xsl:value-of select="if(string-length($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:fromDate)>0)&#xA;then&#xA;tib:format-date('dd/MM/yyyy',tib:parse-date('MM/dd/yyyy',$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:fromDate))&#xA;else ''"/>
                </fromDate>
                <toDate>
                    <xsl:value-of select="if(string-length($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:toDate)>0)&#xA;then&#xA;tib:format-date('dd/MM/yyyy',tib:parse-date('MM/dd/yyyy',$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:toDate))&#xA;else ''"/>
                </toDate>
                <xsl:if test="string-length($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:subscriberNumber)>0">
                    <xsl:if test="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:subscriberNumber">
                        <MSISDN>
                            <xsl:value-of select="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:subscriberNumber"/>
                        </MSISDN>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="string-length($SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:billingAccountId)>0">
                    <xsl:if test="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:billingAccountId">
                        <billingAccountId>
                            <xsl:value-of select="$SearchUnBilledUsage/group/pfx61:UnBilledUsageRequest/pfx61:billingAccountId"/>
                        </billingAccountId>
                    </xsl:if>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseQueryOutput">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>1187</pd:x>
        <pd:y>36</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx60:Resultsets"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$CallProcedureUnBilledUsage/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1397</pd:x>
        <pd:y>35</pd:y>
        <config>
            <faultName>ErrorSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <pfx55:UnBilledUsageResponse>
                        <ns22:Response>
                            <ns22:ResponseCode>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                            </ns22:ResponseCode>
                            <ns22:ResponseDescription>
                                <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                            </ns22:ResponseDescription>
                        </ns22:Response>
                    </pfx55:UnBilledUsageResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetSiebelLOV">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>97</pd:x>
        <pd:y>359</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/LOVs.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Ignore">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>270</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log_Out</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Out</pd:from>
        <pd:to>ParseQueryOutput</pd:to>
        <pd:xpathDescription>RecordExist</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CallProcedureUnBilledUsage/resultSet/outputSet/P_ERRORCODE_OUT=1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>TimeOutError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SearchUnBilledUsage</pd:from>
        <pd:to>GetSiebelLOV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseQueryOutput</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseQueryOutput</pd:from>
        <pd:to>ParseError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSiebelLOV</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSiebelLOV</pd:from>
        <pd:to>Ignore</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Ignore</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Out</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>