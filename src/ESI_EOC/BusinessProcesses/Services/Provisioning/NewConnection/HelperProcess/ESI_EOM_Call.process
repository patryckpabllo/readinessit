<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx7="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx9="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx2="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx4="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx5="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="www.tibco.com/createcustomer" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns7="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:ns13="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns11="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns14="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/EOMLOV.xsd" xmlns:zainesbcustom="java://GenUUID" xmlns:pfx19="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx18="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx11="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx13="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx14="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx29="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx23="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx21="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:pfx27="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:pfx24="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns111="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:pfx39="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderRequest" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:pfx34="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx31="http://www.siebel.com/xml/CBiO2%20Customer%20Profile%20IO" xmlns:pfx32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" xmlns:pfx37="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx38="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" xmlns:pfx35="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx36="http://www.zain.kw.com/BSS/OrderManagement/CreateOrder">
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" schemaLocation="/BusinessSchemas/GW/PROV/XSDs/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" schemaLocation="/SharedResources/XML/AccountCreationRes_12Jan2012.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" schemaLocation="/SharedResources/XML/ErrorLog_20Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" schemaLocation="/SharedResources/XML/AccountCreationReq_13Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" schemaLocation="/BusinessSchemas/GW/CRM/Provisioning/XSDs/AccountCreationRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" schemaLocation="/BusinessSchemas/GW/CRM/Modification/XSDs/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillCycleUpdate/BillCycleUpdateReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetInvoice/GetInvoiceCDMRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" schemaLocation="/BusinessWSDLs/Services/Query/GetInvoice/GetInvoiceRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationIo.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Provisioning/XSD/ListOfCbio2CustomerCreationResIo.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/XSD/EOM.COM.orderResponse.xsd"/>
    <xsd:import namespace="http://www.zain.kw.com/BSS/OrderManagement/CreateOrderRequest" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/XSD/EOM.COM.createOrderService_3_New.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1323156482391/OperationImpl" location="/SharedResources/WSDL/BscsWsdl.wsdl"/>
    <pd:name>BusinessProcesses/Services/Provisioning/NewConnection/HelperProcess/ESI_EOM_Call.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx37:CreateOrderReq"/>
                    <xsd:element name="TransactionID" type="xsd:string"/>
                    <xsd:element name="SourceSystem" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>141</pd:startX>
    <pd:startY>175</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$CDMToNative/pfx35:ListOfCbio2CustomerCreationResIo"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>1003</pd:endX>
    <pd:endY>182</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1318823885551</pd:targetNamespace>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>870</pd:x>
        <pd:y>182</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$Start/root/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$Start/root/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Start/root/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <xsl:if test="$Start/root/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId">
                        <ns6:InterfaceID>
                            <xsl:value-of select="$Start/root/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId"/>
                        </ns6:InterfaceID>
                    </xsl:if>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($NativeToCDM)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>600</pd:x>
        <pd:y>186</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <pfx12:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns9:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId"/>
                    </ns6:InterfaceID>
                    <ns6:Filename>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Deployment"/>
                    </ns6:Filename>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx37:CreateOrderReq)"/>
                    </ns6:Message>
                    <ns6:Transaction>
                        <xsl:value-of select="tib:render-xml($NativeToCDM/pfx39:orderList)"/>
                    </ns6:Transaction>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </pfx12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseRequest">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>143</pd:x>
        <pd:y>298</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx37:CreateOrderReq"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="tib:render-xml($Start/root/pfx37:CreateOrderReq)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NativeToCDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>402</pd:x>
        <pd:y>186</pd:y>
        <config>
            <element ref="pfx39:orderList"/>
        </config>
        <pd:inputBindings>
            <pfx39:orderList>
                <pfx39:orderRequest>
                    <pfx39:subscriptionList>
                        <xsl:for-each select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem/ZainCustomerOrderItem">
                            <pfx39:subscriptionInfo>
                                <xsl:if test="SubscriberNo">
                                    <pfx39:subscriberId>
                                        <xsl:value-of select="SubscriberNo"/>
                                    </pfx39:subscriberId>
                                </xsl:if>
                                <xsl:if test="ns11:IndividualName[1]/ArabicFullName">
                                    <pfx39:subscriberName>
                                        <xsl:value-of select="ns11:IndividualName[1]/ArabicFullName"/>
                                    </pfx39:subscriberName>
                                </xsl:if>
                                <pfx39:sourceBillingProfileId>
                                    <xsl:value-of select="billMediumPublicKey"/>
                                </pfx39:sourceBillingProfileId>
                                <xsl:if test="billingContractId">
                                    <pfx39:billingContractId>
                                        <xsl:value-of select="billingContractId"/>
                                    </pfx39:billingContractId>
                                </xsl:if>
                                <xsl:if test="string-length(Creationdate)>0">
                                    <pfx39:contractStartDate>
                                        <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',Creationdate)"/>
                                    </pfx39:contractStartDate>
                                </xsl:if>
                                <xsl:if test="string-length(contractDate)>0">
                                    <pfx39:contractEndDate>
                                        <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',contractDate)"/>
                                    </pfx39:contractEndDate>
                                </xsl:if>
                                <xsl:if test="BillingAccountNumber">
                                    <pfx39:billingAccountNumber>
                                        <xsl:value-of select="BillingAccountNumber"/>
                                    </pfx39:billingAccountNumber>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/AccountCommunicationLanguage/LanguageCode">
                                    <pfx39:preferredLanguageCode>
                                        <xsl:value-of select="ns11:ZainAddress[1]/AccountCommunicationLanguage/LanguageCode"/>
                                    </pfx39:preferredLanguageCode>
                                </xsl:if>
                                <xsl:if test="Market">
                                    <pfx39:market>
                                        <xsl:value-of select="Market"/>
                                    </pfx39:market>
                                </xsl:if>
                                <xsl:if test="SubMarket">
                                    <pfx39:subMarket>
                                        <xsl:value-of select="SubMarket"/>
                                    </pfx39:subMarket>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/PrefferredCommunication">
                                    <pfx39:communicationMedium>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/PrefferredCommunication"/>
                                    </pfx39:communicationMedium>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/eMailAddress">
                                    <pfx39:email>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/eMailAddress"/>
                                    </pfx39:email>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber">
                                    <pfx39:contactNumber>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber"/>
                                    </pfx39:contactNumber>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber">
                                    <pfx39:alternateNotificationNumber>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber"/>
                                    </pfx39:alternateNotificationNumber>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/startDateTime">
                                    <pfx39:preferredCommStartTime>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/startDateTime"/>
                                    </pfx39:preferredCommStartTime>
                                </xsl:if>
                                <xsl:if test="ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/endDateTime">
                                    <pfx39:preferredCommEndTime>
                                        <xsl:value-of select="ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/endDateTime"/>
                                    </pfx39:preferredCommEndTime>
                                </xsl:if>
                                <xsl:if test="SubscriberStatus">
                                    <pfx39:status>
                                        <xsl:value-of select="SubscriberStatus"/>
                                    </pfx39:status>
                                </xsl:if>
                                <xsl:if test="spendLimit">
                                    <pfx39:spendLimit>
                                        <xsl:value-of select="spendLimit"/>
                                    </pfx39:spendLimit>
                                </xsl:if>
                                <xsl:if test="CreditLimit">
                                    <pfx39:creditLimit>
                                        <xsl:value-of select="CreditLimit"/>
                                    </pfx39:creditLimit>
                                </xsl:if>
                                <xsl:if test="location">
                                    <pfx39:location>
                                        <xsl:value-of select="location"/>
                                    </pfx39:location>
                                </xsl:if>
                                <xsl:if test="salesCallingFlag">
                                    <pfx39:salesPromotionFlag>
                                        <xsl:value-of select="salesCallingFlag"/>
                                    </pfx39:salesPromotionFlag>
                                </xsl:if>
                                <xsl:if test="callDetails">
                                    <pfx39:callDetailFlag>
                                        <xsl:value-of select="callDetails"/>
                                    </pfx39:callDetailFlag>
                                </xsl:if>
                                <pfx39:msisdn>
                                    <xsl:value-of select="serviceId"/>
                                </pfx39:msisdn>
                                <pfx39:oldMSISDN>
                                    <xsl:value-of select="servicePackageCode"/>
                                </pfx39:oldMSISDN>
                                <pfx39:imsi>
                                    <xsl:value-of select="IMSI"/>
                                </pfx39:imsi>
                                <xsl:if test="ICCID">
                                    <pfx39:oldIMSI>
                                        <xsl:value-of select="ICCID"/>
                                    </pfx39:oldIMSI>
                                </xsl:if>
                                <xsl:if test="directoryNumberId">
                                    <pfx39:dnID>
                                        <xsl:value-of select="directoryNumberId"/>
                                    </pfx39:dnID>
                                </xsl:if>
                                <pfx39:simNumber>
                                    <xsl:value-of select="simNumber"/>
                                </pfx39:simNumber>
                                <xsl:if test="oldSimNumber">
                                    <pfx39:oldSIMNumber>
                                        <xsl:value-of select="oldSimNumber"/>
                                    </pfx39:oldSIMNumber>
                                </xsl:if>
                                <pfx39:productList>
                                    <xsl:for-each select="Product[servicePackageID=../SubscriberNo]">
                                        <pfx39:product>
                                            <pfx39:lineID>
                                                <xsl:value-of select="description"/>
                                            </pfx39:lineID>
                                            <xsl:variable name="var" select="current()/ProductType"/>
                                            <xsl:variable name="var2" select="$EOMLOVs/root/ns14:EOMLOV/ns14:Record/ns14:CRMENTITY"/>
                                            <xsl:variable name="var5" select="current()/ProductType "/>
                                            <pfx39:productType>
                                                <xsl:value-of select="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var5 and ns14:CRMELEMENT='productType']/ns14:OMENTITY"/>
                                            </pfx39:productType>
                                            <xsl:variable name="var6" select="current()/ProductType "/>
                                            <xsl:variable name="var7" select="current()/ProductType "/>
                                            <pfx39:productCode>
                                                <xsl:value-of select="if($EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var6 and ns14:CRMELEMENT='productType'] /ns14:OMENTITY='LogicalResourceSpec')&#xA;then&#xA;'LRS_MSISDN'&#xA;else if($EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var7 and ns14:CRMELEMENT='productType'] /ns14:OMENTITY='PhysicalResourceSpec')&#xA;then&#xA;'PRS_SIM'&#xA;else&#xA;current()/ProductCode"/>
                                            </pfx39:productCode>
                                            <pfx39:parentProductCode>
                                                <xsl:value-of select="if(string-length(current()/parentProductcode)>0)&#xA;then&#xA;parentProductcode&#xA;else&#xA;current()/tax"/>
                                            </pfx39:parentProductCode>
                                            <pfx39:action>
                                                <xsl:value-of select="if(current()/action='Add')&#xA;then&#xA;'ADD'&#xA;else if(current()/action='Update')&#xA;then&#xA;'UPDATE'&#xA;else if(current()/action='Delete')&#xA;then&#xA;'DEL'&#xA;else if (current()/action='Suspend')&#xA;then&#xA;'SUSPEND'&#xA;else if (current()/action='Resume')&#xA;then&#xA;'RESUME'&#xA;else if(current()/action='-')&#xA;then&#xA;'NOCHANGE'&#xA;else&#xA;''"/>
                                            </pfx39:action>
                                            <pfx39:productAttributeList>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_SERIALNUMBER&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="serviceStatus"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="upper-case(current()/crmProductSubType)=('APPLEIWATCH','ANDROIDWATCH')">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_SERIALNUMBER&quot;"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ratePlanID">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ratePlanID"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType!='SIM' and current()/ns11:ZainInstallment/inventoryFlag='Y'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_SERIALNUMBER&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="serviceID"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_PREVSERIALNUMBER'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="../oldSimNumber"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="string-length(serviceStatus)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_IMSI&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="sdpServiceClass"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="upper-case(current()/crmProductSubType)=('APPLEIWATCH','ANDROIDWATCH')">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_IMSI&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="sdpServiceClass"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:variable name="var8" select="current()/ProductType "/>
                                                <xsl:if test="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var8 ] /ns14:OMENTITY='LogicalResourceSpec'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_MSISDN&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="../serviceId"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:variable name="var9" select="current()/ProductType "/>
                                                <xsl:if test="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var9 ] /ns14:OMENTITY='LogicalResourceSpec'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_DNID&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="sobBSCS"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="&quot;SP_PREVIMSI&quot;"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="../ICCID"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:for-each select="ListOfServiceParameters/ServiceParameters[not(contains($_globalVariables/ns8:GlobalVariables/BusinessProcesses/Services/OrderManagment/NewConnectionPrepaid/AttributeString, Name))]">
                                                    <pfx39:productAttribute>
                                                        <xsl:if test="Name">
                                                            <pfx39:name>
                                                                <xsl:value-of select="Name"/>
                                                            </pfx39:name>
                                                        </xsl:if>
                                                        <xsl:if test="Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:for-each>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_KIID'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_KIID']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_KIID']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="upper-case(current()/crmProductSubType)=('APPLEIWATCH','ANDROIDWATCH')">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_KIID'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_KIID']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_KIID']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_PIN1'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PIN1']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PIN1']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_PIN2'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PIN2']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PIN2']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_PUK1'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PUK1']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PUK1']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SIM_PUK2'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PUK2']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_SIM_PUK2']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/crmProductSubType='STATIC IP'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_APNID'"/>
                                                        </pfx39:name>
                                                        <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='SP_APNID']/Value">
                                                            <pfx39:value>
                                                                <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_APNID']/Value"/>
                                                            </pfx39:value>
                                                        </xsl:if>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/crmProductSubType='STATIC IP'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_IPADDRESS'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="ratePlanID"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/crmProductSubType='STATIC IP'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_PREVIPADDRESS'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="isChargeable"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_ERP_ITEMCODE'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_ERPITEMCODE']/Value"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Device'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_ERP_ITEMCODE'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='SP_ERPITEMCODE']/Value"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_ICCID'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="ICCID"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="upper-case(current()/crmProductSubType)=('APPLEIWATCH','ANDROIDWATCH')">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_ICCID'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="ICCID"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='SIM'">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_VENDOR'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="vendorCode"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="upper-case(current()/crmProductSubType)=('APPLEIWATCH','ANDROIDWATCH')">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_VENDOR'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="vendorCode"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Service' and current()/dataSharingFlag='Y' and string-length(newSharedValue)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_NEWSHAREDVALUE'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="newSharedValue"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Service' and current()/dataSharingFlag='Y' and string-length(oldSharedValue)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_OLDSHAREDVALUE'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="oldSharedValue"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Service' and current()/dataSharingFlag='Y' and string-length(sharedCfssId)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_SHAREDCFSSID'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="sharedCfssId"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Service' and string-length(volume)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_VOLUME'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="volume"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <xsl:if test="current()/ProductType='Service' and string-length(uom)>0">
                                                    <pfx39:productAttribute>
                                                        <pfx39:name>
                                                            <xsl:value-of select="'SP_UOM'"/>
                                                        </pfx39:name>
                                                        <pfx39:value>
                                                            <xsl:value-of select="uom"/>
                                                        </pfx39:value>
                                                    </pfx39:productAttribute>
                                                </xsl:if>
                                                <pfx39:productAttribute>
                                                    <pfx39:name>
                                                        <xsl:value-of select="'SP_QUANTITY'"/>
                                                    </pfx39:name>
                                                    <xsl:if test="ns11:quantity">
                                                        <pfx39:value>
                                                            <xsl:value-of select="ns11:quantity"/>
                                                        </pfx39:value>
                                                    </xsl:if>
                                                </pfx39:productAttribute>
                                                <pfx39:productAttribute>
                                                    <pfx39:name>
                                                        <xsl:value-of select="'SP_PREVIOUSQUANTITY'"/>
                                                    </pfx39:name>
                                                    <pfx39:value>
                                                        <xsl:value-of select="previousQuantity"/>
                                                    </pfx39:value>
                                                </pfx39:productAttribute>
                                            </pfx39:productAttributeList>
                                            <pfx39:crmIntegrationId>
                                                <xsl:value-of select="name"/>
                                            </pfx39:crmIntegrationId>
                                            <pfx39:chargeList>
                                                <pfx39:charge>
                                                    <xsl:if test="string-length(ns11:ZainCharges/chargeType)>0">
                                                        <xsl:variable name="curr_chargetype" select="ns11:ZainCharges/chargeType"/>
                                                        <xsl:if test="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$curr_chargetype and ns14:CRMELEMENT='priceType']/ns14:OMENTITY">
                                                            <pfx39:chargeType>
                                                                <xsl:value-of select="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$curr_chargetype and ns14:CRMELEMENT='priceType']/ns14:OMENTITY"/>
                                                            </pfx39:chargeType>
                                                        </xsl:if>
                                                    </xsl:if>
                                                    <xsl:if test="string-length(ns11:ZainCharges/baseCharge)>0">
                                                        <xsl:if test="ns11:ZainCharges/baseCharge">
                                                            <pfx39:baseCharge>
                                                                <xsl:value-of select="ns11:ZainCharges/baseCharge"/>
                                                            </pfx39:baseCharge>
                                                        </xsl:if>
                                                    </xsl:if>
                                                    <xsl:if test="string-length(ns11:ZainCharges/netCharge)>0">
                                                        <xsl:if test="ns11:ZainCharges/netCharge">
                                                            <pfx39:netCharge>
                                                                <xsl:value-of select="ns11:ZainCharges/netCharge"/>
                                                            </pfx39:netCharge>
                                                        </xsl:if>
                                                    </xsl:if>
                                                </pfx39:charge>
                                            </pfx39:chargeList>
                                            <xsl:if test="string-length(ns11:ZainInstallment/installmentDescription)>0">
                                                <pfx39:advanceRCAmount>
                                                    <xsl:value-of select="ns11:ZainInstallment/installmentDescription"/>
                                                </pfx39:advanceRCAmount>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/noOfAdvRCBillCycle">
                                                <pfx39:noOfAdvRCBillCycle>
                                                    <xsl:value-of select="ns11:ZainInstallment/noOfAdvRCBillCycle"/>
                                                </pfx39:noOfAdvRCBillCycle>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/installmentFlag">
                                                <pfx39:installmentFlag>
                                                    <xsl:value-of select="ns11:ZainInstallment/installmentFlag"/>
                                                </pfx39:installmentFlag>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/installmentAmount/amount">
                                                <pfx39:installmentAmount>
                                                    <xsl:value-of select="ns11:ZainInstallment/installmentAmount/amount"/>
                                                </pfx39:installmentAmount>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/installmentPeriod">
                                                <pfx39:installmentPeriod>
                                                    <xsl:value-of select="ns11:ZainInstallment/installmentPeriod"/>
                                                </pfx39:installmentPeriod>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/installmentStartDate)>0">
                                                <pfx39:installmentStartDate>
                                                    <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',ns11:ZainInstallment/installmentStartDate)"/>
                                                </pfx39:installmentStartDate>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/installmentReason)>0">
                                                <xsl:if test="ns11:ZainInstallment/installmentReason">
                                                    <pfx39:installmentEndDate>
                                                        <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',ns11:ZainInstallment/installmentReason)"/>
                                                    </pfx39:installmentEndDate>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/posttoInvoiceAmount)>0">
                                                <xsl:if test="ns11:ZainInstallment/posttoInvoiceAmount">
                                                    <pfx39:posttoInvoiceAmount>
                                                        <xsl:value-of select="ns11:ZainInstallment/posttoInvoiceAmount"/>
                                                    </pfx39:posttoInvoiceAmount>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/posttoInvoiceFlag">
                                                <pfx39:posttoInvoiceFlag>
                                                    <xsl:value-of select="ns11:ZainInstallment/posttoInvoiceFlag"/>
                                                </pfx39:posttoInvoiceFlag>
                                            </xsl:if>
                                            <pfx39:inventoryFlag>
                                                <xsl:value-of select="ns11:ZainInstallment/inventoryFlag"/>
                                            </pfx39:inventoryFlag>
                                            <xsl:if test="ns11:ZainInstallment/MSISDNCategory">
                                                <pfx39:MSISDNCategory>
                                                    <xsl:value-of select="ns11:ZainInstallment/MSISDNCategory"/>
                                                </pfx39:MSISDNCategory>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/upfrontPaymentAmount)>0">
                                                <xsl:if test="ns11:ZainInstallment/upfrontPaymentAmount">
                                                    <pfx39:upfrontPaymentAmount>
                                                        <xsl:value-of select="ns11:ZainInstallment/upfrontPaymentAmount"/>
                                                    </pfx39:upfrontPaymentAmount>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/upfrontPaymentFlag">
                                                <pfx39:upfrontPaymentFlag>
                                                    <xsl:value-of select="ns11:ZainInstallment/upfrontPaymentFlag"/>
                                                </pfx39:upfrontPaymentFlag>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/discountAmount)>0">
                                                <xsl:if test="ns11:ZainInstallment/discountAmount">
                                                    <pfx39:discountAmount>
                                                        <xsl:value-of select="ns11:ZainInstallment/discountAmount"/>
                                                    </pfx39:discountAmount>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="ns11:ZainInstallment/discountPercent">
                                                <pfx39:discountPercent>
                                                    <xsl:value-of select="ns11:ZainInstallment/discountPercent"/>
                                                </pfx39:discountPercent>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/mRCCxTotal)>0">
                                                <xsl:if test="ns11:ZainInstallment/mRCCxTotal">
                                                    <pfx39:mRCCxTotal>
                                                        <xsl:value-of select="ns11:ZainInstallment/mRCCxTotal"/>
                                                    </pfx39:mRCCxTotal>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="string-length(ns11:ZainInstallment/nRCCxTotal)>0">
                                                <xsl:if test="ns11:ZainInstallment/nRCCxTotal">
                                                    <pfx39:nRCCxTotal>
                                                        <xsl:value-of select="ns11:ZainInstallment/nRCCxTotal"/>
                                                    </pfx39:nRCCxTotal>
                                                </xsl:if>
                                            </xsl:if>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverMSISDN']/Value">
                                                <pfx39:giftReceiverMSISDN>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverMSISDN']/Value"/>
                                                </pfx39:giftReceiverMSISDN>
                                            </xsl:if>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftingFlag']/Value">
                                                <pfx39:giftingFlag>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftingFlag']/Value"/>
                                                </pfx39:giftingFlag>
                                            </xsl:if>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverIMSI']/Value">
                                                <pfx39:giftReceiverIMSI>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverIMSI']/Value"/>
                                                </pfx39:giftReceiverIMSI>
                                            </xsl:if>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverSIMNumber']/Value">
                                                <pfx39:giftReceiverSIMNumber>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverSIMNumber']/Value"/>
                                                </pfx39:giftReceiverSIMNumber>
                                            </xsl:if>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverContractId']/Value">
                                                <pfx39:giftReceiverContractId>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverContractId']/Value"/>
                                                </pfx39:giftReceiverContractId>
                                            </xsl:if>
                                            <pfx39:giftReceiverLineType>
                                                <xsl:value-of select="upper-case(ListOfServiceParameters/ServiceParameters[Name='cBiO2GiftReceiverLineType']/Value)"/>
                                            </pfx39:giftReceiverLineType>
                                            <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='BSCSBillingAccNumber']/Value">
                                                <pfx39:billingAccountId>
                                                    <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='BSCSBillingAccNumber']/Value"/>
                                                </pfx39:billingAccountId>
                                            </xsl:if>
                                            <xsl:if test="dataSharingFlag">
                                                <pfx39:dataSharingFlag>
                                                    <xsl:value-of select="dataSharingFlag"/>
                                                </pfx39:dataSharingFlag>
                                            </xsl:if>
                                        </pfx39:product>
                                    </xsl:for-each>
                                </pfx39:productList>
                                <xsl:if test="string-length(OrderType)>0">
                                    <pfx39:lineType>
                                        <xsl:value-of select="upper-case(OrderType)"/>
                                    </pfx39:lineType>
                                </xsl:if>
                                <xsl:if test="integrationID">
                                    <pfx39:integrationId>
                                        <xsl:value-of select="integrationID"/>
                                    </pfx39:integrationId>
                                </xsl:if>
                                <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2VPNCommunityId']/Value">
                                    <pfx39:vpnCommunityId>
                                        <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2VPNCommunityId']/Value"/>
                                    </pfx39:vpnCommunityId>
                                </xsl:if>
                                <xsl:if test="ListOfServiceParameters/ServiceParameters[Name='cBiO2VPNShortCode']/Value">
                                    <pfx39:vpnShortCode>
                                        <xsl:value-of select="ListOfServiceParameters/ServiceParameters[Name='cBiO2VPNShortCode']/Value"/>
                                    </pfx39:vpnShortCode>
                                </xsl:if>
                                <xsl:if test="oldBSCSBillingAccountNumber">
                                    <pfx39:oldBillingAccountNumber>
                                        <xsl:value-of select="oldBSCSBillingAccountNumber"/>
                                    </pfx39:oldBillingAccountNumber>
                                </xsl:if>
                                <xsl:if test="oldBillingProfileId">
                                    <pfx39:oldBillingProfileId>
                                        <xsl:value-of select="oldBillingProfileId"/>
                                    </pfx39:oldBillingProfileId>
                                </xsl:if>
                                <xsl:if test="creditExemption">
                                    <pfx39:creditExemption>
                                        <xsl:value-of select="creditExemption"/>
                                    </pfx39:creditExemption>
                                </xsl:if>
                                <xsl:if test="collectionExemption">
                                    <pfx39:collectionExemption>
                                        <xsl:value-of select="collectionExemption"/>
                                    </pfx39:collectionExemption>
                                </xsl:if>
                            </pfx39:subscriptionInfo>
                        </xsl:for-each>
                    </pfx39:subscriptionList>
                    <pfx39:customerInfo>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/crmServiceAccountId">
                            <pfx39:crmCustomerId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/crmServiceAccountId"/>
                            </pfx39:crmCustomerId>
                        </xsl:if>
                        <pfx39:customerType>
                            <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CustomerType"/>
                        </pfx39:customerType>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CustomerCategory">
                            <pfx39:category>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CustomerCategory"/>
                            </pfx39:category>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/AccountCommunicationLanguage/LanguageCode">
                            <pfx39:preferredLanguageCode>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/AccountCommunicationLanguage/LanguageCode"/>
                            </pfx39:preferredLanguageCode>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/customerSegment">
                            <pfx39:segment>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/customerSegment"/>
                            </pfx39:segment>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CorporateSegment">
                            <pfx39:subSegment>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CorporateSegment"/>
                            </pfx39:subSegment>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/StaffId">
                            <pfx39:staffId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/StaffId"/>
                            </pfx39:staffId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:IndividualName[1]/ArabicFullName">
                            <pfx39:name>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:IndividualName[1]/ArabicFullName"/>
                            </pfx39:name>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:IndividualName[1]/fullName">
                            <pfx39:alternateName>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:IndividualName[1]/fullName"/>
                            </pfx39:alternateName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/eMailAddress">
                            <pfx39:email>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/eMailAddress"/>
                            </pfx39:email>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/workContact">
                            <pfx39:contactNumber>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/workContact"/>
                            </pfx39:contactNumber>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber">
                            <pfx39:alternateNotificationNumber>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/Notificationnumber"/>
                            </pfx39:alternateNotificationNumber>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/startDateTime">
                            <pfx39:prefCommStartTime>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/startDateTime"/>
                            </pfx39:prefCommStartTime>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/endDateTime">
                            <pfx39:prefCommEndTime>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/TimePeriod/endDateTime"/>
                            </pfx39:prefCommEndTime>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/PrefferredCommunication">
                            <pfx39:prefCommChannel>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:ZainAddress[1]/ns11:ZainContact/PrefferredCommunication"/>
                            </pfx39:prefCommChannel>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/BillingId">
                            <pfx39:billingCustomerId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/BillingId"/>
                            </pfx39:billingCustomerId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldArabicFullName">
                            <pfx39:oldName>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldArabicFullName"/>
                            </pfx39:oldName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldBSCSCustomerId">
                            <pfx39:oldBillingCustomerId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldBSCSCustomerId"/>
                            </pfx39:oldBillingCustomerId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldCategory">
                            <pfx39:oldCategory>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldCategory"/>
                            </pfx39:oldCategory>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldEnglishFullName">
                            <pfx39:oldAlternateName>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldEnglishFullName"/>
                            </pfx39:oldAlternateName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldNotificationName">
                            <pfx39:oldContactNumber>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldNotificationName"/>
                            </pfx39:oldContactNumber>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldAccountId">
                            <pfx39:oldCRMCustomerId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/oldAccountId"/>
                            </pfx39:oldCRMCustomerId>
                        </xsl:if>
                    </pfx39:customerInfo>
                    <pfx39:orderHeader>
                        <xsl:variable name="var3" select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem/OrderType"/>
                        <xsl:variable name="var4" select="$EOMLOVs/root/ns14:EOMLOV/ns14:Record/ns14:CRMENTITY"/>
                        <xsl:variable name="var10" select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem/OrderType "/>
                        <pfx39:orderType>
                            <xsl:value-of select="$EOMLOVs/root/ns14:EOMLOV/ns14:Record[ns14:CRMENTITY=$var10 and ns14:CRMELEMENT='cBiO2OrderType']/ns14:OMENTITY"/>
                        </pfx39:orderType>
                        <pfx39:orderNumber>
                            <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId"/>
                        </pfx39:orderNumber>
                        <xsl:if test="string-length($ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Creationdate)>0">
                            <pfx39:createdDate>
                                <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Creationdate)"/>
                            </pfx39:createdDate>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/contractDate)>0">
                            <pfx39:requestedDate>
                                <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/contractDate)"/>
                            </pfx39:requestedDate>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderSubtype">
                            <pfx39:orderSubType>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderSubtype"/>
                            </pfx39:orderSubType>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderType">
                            <pfx39:sourceOrderType>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderType"/>
                            </pfx39:sourceOrderType>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId">
                            <pfx39:sourceOrderID>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/orderId"/>
                            </pfx39:sourceOrderID>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Creationdate)>0">
                            <pfx39:sourceOrderCreationDate>
                                <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Creationdate)"/>
                            </pfx39:sourceOrderCreationDate>
                        </xsl:if>
                        <xsl:if test="string-length($ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/AsofDate)>0">
                            <pfx39:fulfilmentDate>
                                <xsl:value-of select="substring-before(tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/AsofDate),'T')"/>
                            </pfx39:fulfilmentDate>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/SalesAgentName">
                            <pfx39:salesAgent>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/SalesAgentName"/>
                            </pfx39:salesAgent>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ChangeReason">
                            <pfx39:reasonCode>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ChangeReason"/>
                            </pfx39:reasonCode>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ShopId">
                            <pfx39:shopId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ShopId"/>
                            </pfx39:shopId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ShopName">
                            <pfx39:shopName>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ShopName"/>
                            </pfx39:shopName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CreatePerson">
                            <pfx39:sourceCreatedBy>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/CreatePerson"/>
                            </pfx39:sourceCreatedBy>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Comments">
                            <pfx39:comment>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Comments"/>
                            </pfx39:comment>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/agreementName">
                            <pfx39:agreementName>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/agreementName"/>
                            </pfx39:agreementName>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainIdentifiers/ns11:UserId[ns11:systemName='UserId']/ns11:value">
                            <pfx39:buID>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainIdentifiers/ns11:UserId[ns11:systemName='UserId']/ns11:value"/>
                            </pfx39:buID>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/nonRecurringChargeTotal">
                            <pfx39:totalNRCAmount>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/nonRecurringChargeTotal"/>
                            </pfx39:totalNRCAmount>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/recurringChargeTotal">
                            <pfx39:totalMRCAmount>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/recurringChargeTotal"/>
                            </pfx39:totalMRCAmount>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/totalNRCUpfront">
                            <pfx39:totalNRCUpfront>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/totalNRCUpfront"/>
                            </pfx39:totalNRCUpfront>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/TotalRCAdvance">
                            <pfx39:totalRCAdvance>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/TotalRCAdvance"/>
                            </pfx39:totalRCAdvance>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderPriority">
                            <pfx39:priority>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/OrderPriority"/>
                            </pfx39:priority>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Batchflag">
                            <pfx39:batchType>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/Batchflag"/>
                            </pfx39:batchType>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/BatchNumber">
                            <pfx39:batchNo>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/BatchNumber"/>
                            </pfx39:batchNo>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/depositAmount">
                            <pfx39:deposit>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/depositAmount"/>
                            </pfx39:deposit>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/SalesChannel">
                            <pfx39:channel>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/SalesChannel"/>
                            </pfx39:channel>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/changingSchedule">
                            <pfx39:revision>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/changingSchedule"/>
                            </pfx39:revision>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:bulkRequestID">
                            <pfx39:bulkRequestId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ns11:bulkRequestID"/>
                            </pfx39:bulkRequestId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/npOrderId">
                            <pfx39:npOrderId>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/npOrderId"/>
                            </pfx39:npOrderId>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/priceType">
                            <pfx39:currencyCode>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/priceType"/>
                            </pfx39:currencyCode>
                        </xsl:if>
                        <xsl:if test="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/warehouseCode">
                            <pfx39:warehouseCode>
                                <xsl:value-of select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerOrderItem[1]/ZainCustomerOrderItem[1]/warehouseCode"/>
                            </pfx39:warehouseCode>
                        </xsl:if>
                    </pfx39:orderHeader>
                    <pfx39:paymentList>
                        <xsl:for-each select="$ParseRequest/pfx37:CreateOrderReq/ns11:ZainCustomerPayment">
                            <pfx39:paymentInfo>
                                <xsl:if test="ID">
                                    <pfx39:paymentId>
                                        <xsl:value-of select="ID"/>
                                    </pfx39:paymentId>
                                </xsl:if>
                                <xsl:if test="ID_Public">
                                    <pfx39:accountNumber>
                                        <xsl:value-of select="ID_Public"/>
                                    </pfx39:accountNumber>
                                </xsl:if>
                                <xsl:if test="cardtype">
                                    <pfx39:authorizationCode>
                                        <xsl:value-of select="cardtype"/>
                                    </pfx39:authorizationCode>
                                </xsl:if>
                                <xsl:if test="Currency">
                                    <pfx39:currencyCode>
                                        <xsl:value-of select="Currency"/>
                                    </pfx39:currencyCode>
                                </xsl:if>
                                <xsl:if test="PaymentMethod[1]/description">
                                    <pfx39:description>
                                        <xsl:value-of select="PaymentMethod[1]/description"/>
                                    </pfx39:description>
                                </xsl:if>
                                <xsl:if test="ns11:ZainBankPM/BankName">
                                    <pfx39:issuingBankName>
                                        <xsl:value-of select="ns11:ZainBankPM/BankName"/>
                                    </pfx39:issuingBankName>
                                </xsl:if>
                                <xsl:if test="ns11:ZainBankPM/BankStreetName">
                                    <pfx39:lineNumber3>
                                        <xsl:value-of select="ns11:ZainBankPM/BankStreetName"/>
                                    </pfx39:lineNumber3>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/CustomerBillingCycle/billFrequency">
                                    <pfx39:orderNumber>
                                        <xsl:value-of select="ns11:CustomerBill/CustomerBillingCycle/billFrequency"/>
                                    </pfx39:orderNumber>
                                </xsl:if>
                                <xsl:if test="PaymentMethod[1]/name">
                                    <pfx39:payment>
                                        <xsl:value-of select="PaymentMethod[1]/name"/>
                                    </pfx39:payment>
                                </xsl:if>
                                <xsl:if test="PaymentMethod[1]/ID">
                                    <pfx39:paymentAccountId>
                                        <xsl:value-of select="PaymentMethod[1]/ID"/>
                                    </pfx39:paymentAccountId>
                                </xsl:if>
                                <xsl:if test="string-length(csConvratetypePaymentPub)>0">
                                    <pfx39:paymentDate>
                                        <xsl:value-of select="tib:parse-dateTime('MM/dd/yyyy HH:mm:ss',csConvratetypePaymentPub)"/>
                                    </pfx39:paymentDate>
                                </xsl:if>
                                <xsl:if test="PaymentMethod[1]/PreferredPaymentMode">
                                    <pfx39:paymentMethod>
                                        <xsl:value-of select="PaymentMethod[1]/PreferredPaymentMode"/>
                                    </pfx39:paymentMethod>
                                </xsl:if>
                                <xsl:if test="PaymentMethod[1]/paymentMethodType">
                                    <pfx39:paymentStatus>
                                        <xsl:value-of select="PaymentMethod[1]/paymentMethodType"/>
                                    </pfx39:paymentStatus>
                                </xsl:if>
                                <xsl:if test="paymentType">
                                    <pfx39:paymentType>
                                        <xsl:value-of select="paymentType"/>
                                    </pfx39:paymentType>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/CustomerBillingCycle/Currency">
                                    <pfx39:transactionAmount>
                                        <xsl:value-of select="ns11:CustomerBill/CustomerBillingCycle/Currency"/>
                                    </pfx39:transactionAmount>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/CustomerBillingCycle/billSource">
                                    <pfx39:transactionType>
                                        <xsl:value-of select="ns11:CustomerBill/CustomerBillingCycle/billSource"/>
                                    </pfx39:transactionType>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/billNo">
                                    <pfx39:bscsBillingAccountNumber>
                                        <xsl:value-of select="ns11:CustomerBill/billNo"/>
                                    </pfx39:bscsBillingAccountNumber>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/ns11:billId/ns11:value">
                                    <pfx39:bscsCustomerId>
                                        <xsl:value-of select="ns11:CustomerBill/ns11:billId/ns11:value"/>
                                    </pfx39:bscsCustomerId>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/ContractTypeId">
                                    <pfx39:merchantId>
                                        <xsl:value-of select="ns11:CustomerBill/ContractTypeId"/>
                                    </pfx39:merchantId>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/RequestType">
                                    <pfx39:receiptNo>
                                        <xsl:value-of select="ns11:CustomerBill/RequestType"/>
                                    </pfx39:receiptNo>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/RequestsubType">
                                    <pfx39:shopId>
                                        <xsl:value-of select="ns11:CustomerBill/RequestsubType"/>
                                    </pfx39:shopId>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/creditLimit">
                                    <pfx39:tabsBillCode>
                                        <xsl:value-of select="ns11:CustomerBill/creditLimit"/>
                                    </pfx39:tabsBillCode>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/relationshipType">
                                    <pfx39:tabsServiceCode>
                                        <xsl:value-of select="ns11:CustomerBill/relationshipType"/>
                                    </pfx39:tabsServiceCode>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/Format">
                                    <pfx39:terminalId>
                                        <xsl:value-of select="ns11:CustomerBill/Format"/>
                                    </pfx39:terminalId>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/nameToPrint">
                                    <pfx39:userName>
                                        <xsl:value-of select="ns11:CustomerBill/nameToPrint"/>
                                    </pfx39:userName>
                                </xsl:if>
                                <xsl:if test="ns11:CustomerBill/CustomerBillingCycle/billCyclechange">
                                    <pfx39:customerCategory>
                                        <xsl:value-of select="ns11:CustomerBill/CustomerBillingCycle/billCyclechange"/>
                                    </pfx39:customerCategory>
                                </xsl:if>
                                <xsl:if test="PaymentChannel">
                                    <pfx39:payDesk>
                                        <xsl:value-of select="PaymentChannel"/>
                                    </pfx39:payDesk>
                                </xsl:if>
                                <pfx39:expiryDate>
                                    <xsl:value-of select="if(string-length(PaymentMethod[1]/CreditCardPM/ExpirationMonth)>0 and string-length(PaymentMethod[1]/CreditCardPM/ExpirationYear)>0)&#xA;then concat(PaymentMethod[1]/CreditCardPM/ExpirationMonth,&quot;/&quot;,PaymentMethod[1]/CreditCardPM/ExpirationYear)&#xA;else ''"/>
                                </pfx39:expiryDate>
                            </pfx39:paymentInfo>
                        </xsl:for-each>
                    </pfx39:paymentList>
                </pfx39:orderRequest>
            </pfx39:orderList>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>739</pd:x>
        <pd:y>187</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/OrderManagment/NewConnectionPrepaid/OM_Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx39:orderList"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <xsl:copy-of select="$NativeToCDM/pfx39:orderList"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EOMLOV's">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>286</pd:x>
        <pd:y>298</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/EOMLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>NativeToCDM</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseRequest</pd:from>
        <pd:to>EOMLOV's</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EOMLOV's</pd:from>
        <pd:to>NativeToCDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>