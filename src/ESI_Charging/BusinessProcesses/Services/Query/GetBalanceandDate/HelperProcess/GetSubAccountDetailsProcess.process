<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:NextPeriodicActivity="java://NextPeriodicActivity" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns17="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns19="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:ns21="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes.xsd" xmlns:ns22="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/IdMapping.xsd" xmlns:ns23="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/DAId.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:ns20="http://www.ericsson.com/CDM/telecom/FAF" xmlns:zainKW="java://com.ZainKW.CurrentNanoSecconds" xmlns:pfx31="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Common/SDP/XSD's/GenericRPCReq.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx32="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/Schema1.xsd" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx33="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsResponse.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx34="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetSubAccountDetailsRequest.xsd" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx35="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesRequest.xsd" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx36="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesResponse.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx37="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/SDP/Modification/GenericRPCReq.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/Schema.xsd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx29="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Transaction/UpdateSubscriberdetails/UpdateSubscriberDetailsResponse.xsd" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetVoucherHistoryRes.xsd" xmlns:pfx23="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/ESI/SDP/XSD/Schema.xsd5" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.tibco.com/schemas/CommonProject/CDM/Schema.xsd" xmlns:pfx27="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" xmlns:pfx24="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd" xmlns:pfx25="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/ESI/SDP/XSD/Schema.xsd6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Modification/WSDLs/AddressWrite.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetVoucherHistoryRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetVoucherHistory/GetVoucherHistoryRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/ESI/SDP/XSD/Schema.xsd5" schemaLocation="/BusinessSchemas/ESI/SDP/XSD/GetSubAccountDetailsRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/ESI/SDP/XSD/Schema.xsd6" schemaLocation="/BusinessSchemas/ESI/SDP/XSD/GetSubAccountDetailsResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CommonProject/CDM/Schema.xsd" schemaLocation="/CDM/EricErrorDetailsType.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Transaction/UpdateSubscriberdetails/UpdateSubscriberDetailsResponse.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/UpdateSubscriberdetails/UpdateSubscriberDetailsResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetSubAccountDetails/GetSubAccountDetailsRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/XSD/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Applications/SDP/Modification/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/Services/Applications/SDP/Modification/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/Services/Common/SDP/XSD's/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/Services/Common/SDP/XSD's/GenericRPCReq.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Modification/WSDLs/AddressWrite.wsdl"/>
    <pd:name>BusinessProcesses/Services/Query/GetBalanceandDate/HelperProcess/GetSubAccountDetailsProcess.process</pd:name>
    <pd:startName>GetSubAccountDetails</pd:startName>
    <pd:startType ref="pfx35:DataInquiriesRequest"/>
    <pd:startX>62</pd:startX>
    <pd:startY>391</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$MapResposne/root"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx36:DataInquiriesResponse"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1367</pd:endX>
    <pd:endY>282</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="pfx4:ExceptionRequest"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>478</pd:x>
        <pd:y>117</pd:y>
        <pd:width>339</pd:width>
        <pd:height>321</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Send HTTP Request</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Send HTTP Request</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateTechError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Timeout</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException)
or
exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Send HTTP Request</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="GenerateTechError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>573</pd:x>
            <pd:y>373</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="$_error/ns8:ErrorReport/Data/*">
                        <message>
                            <xsl:value-of select="$_error/ns8:ErrorReport/Data/*"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>747</pd:x>
            <pd:y>379</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>619</pd:x>
            <pd:y>301</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Send HTTP Request">
            <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
            <pd:resourceType>httppalette.httpRequest</pd:resourceType>
            <pd:x>630</pd:x>
            <pd:y>181</pd:y>
            <config>
                <inputOutputVersion>5.3.0</inputOutputVersion>
                <newMimeSupport>true</newMimeSupport>
                <serverhost>%%CommonResources/Connections/HTTP/External/SDP/ESI_HTTP_Connection/HTTP_IP%%</serverhost>
                <serverport>%%CommonResources/Connections/HTTP/External/SDP/ESI_HTTP_Connection/HTTP_Port%%</serverport>
                <requireBasicAuth>true</requireBasicAuth>
                <basicHttpAuthIdentity>/BusinessProcesses/Services/Query/GetUC-UT/Identity/Identity.id</basicHttpAuthIdentity>
                <useSsl>false</useSsl>
                <ns16:ssl xmlns:ns16="http://www.tibco.com/xmlns/aemeta/services/2002"/>
                <authScheme>BASIC</authScheme>
                <InputHeaders>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="User-Agent" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </InputHeaders>
                <OutputHeaders>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </OutputHeaders>
            </config>
            <pd:inputBindings>
                <RequestActivityInput>
                    <Host>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/AIR_HOST"/>
                    </Host>
                    <Port>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/AIR_PORT"/>
                    </Port>
                    <Method>
                        <xsl:value-of select="&quot;Post&quot;"/>
                    </Method>
                    <RequestURI>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/ReqURI"/>
                    </RequestURI>
                    <PostData>
                        <xsl:value-of select="tib:render-xml($CDMToNative/methodCall)"/>
                    </PostData>
                    <Headers>
                        <User-Agent>
                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/User-Agent"/>
                        </User-Agent>
                        <Content-Type>
                            <xsl:value-of select="'text/xml'"/>
                        </Content-Type>
                    </Headers>
                </RequestActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="AuditLogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>368</pd:x>
        <pd:y>283</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionType"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($CDMToNative/methodCall)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1097</pd:x>
        <pd:y>282</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <xsl:if test="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/ComponentName">
                        <ns6:ComponentName>
                            <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/ComponentName"/>
                        </ns6:ComponentName>
                    </xsl:if>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionDomain"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionType"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader/TransactionID"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Parse-Native/methodResponse)"/>
                    </ns6:Message>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CDMToNative">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>369</pd:x>
        <pd:y>392</pd:y>
        <config>
            <element ref="pfx37:methodCall"/>
        </config>
        <pd:inputBindings>
            <methodCall>
                <methodName>
                    <xsl:value-of select="'GetBalanceAndDate'"/>
                </methodName>
                <params>
                    <param>
                        <value>
                            <struct>
                                <member>
                                    <name>
                                        <xsl:value-of select="'originHostName'"/>
                                    </name>
                                    <value>
                                        <string>
                                            <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/OriginHostname"/>
                                        </string>
                                    </value>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'originNodeType'"/>
                                    </name>
                                    <value>
                                        <string>
                                            <xsl:value-of select="&quot;TIBCO&quot;"/>
                                        </string>
                                    </value>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'originTimeStamp'"/>
                                    </name>
                                    <value>
                                        <dateTime.iso8601>
                                            <xsl:value-of select="concat(tib:format-dateTime('yyyyMMdd',current-dateTime()), concat('T', tib:format-dateTime('HH:mm:ssZ',current-dateTime())))"/>
                                        </dateTime.iso8601>
                                    </value>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'originTransactionID'"/>
                                    </name>
                                    <value>
                                        <string>
                                            <xsl:value-of select="zainKW:getCurrentNanoSecconds()"/>
                                        </string>
                                    </value>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'subscriberNumberNAI'"/>
                                    </name>
                                    <xsl:choose>
                                        <xsl:when test="starts-with($GetSubAccountDetails/pfx35:DataInquiriesRequest/ns16:Subscriber/ServiceNo, '965')&#xA;and string-length($GetSubAccountDetails/pfx35:DataInquiriesRequest/ns16:Subscriber/ServiceNo)>=10 and &#xA;string-length($GetSubAccountDetails/pfx35:DataInquiriesRequest/ns16:Subscriber/ServiceNo)&lt;=11">
                                            <value>
                                                <int>
                                                    <xsl:value-of select="1"/>
                                                </int>
                                            </value>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <value>
                                                <int>
                                                    <xsl:value-of select="2"/>
                                                </int>
                                            </value>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'subscriberNumber'"/>
                                    </name>
                                    <value>
                                        <string>
                                            <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns16:Subscriber/ServiceNo"/>
                                        </string>
                                    </value>
                                </member>
                                <member>
                                    <name>
                                        <xsl:value-of select="'negotiatedCapabilities'"/>
                                    </name>
                                    <value>
                                        <array>
                                            <data>
                                                <value>
                                                    <i4>
                                                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Services/SDP/NegotiatedCapabilitites"/>
                                                    </i4>
                                                </value>
                                            </data>
                                        </array>
                                    </value>
                                </member>
                            </struct>
                        </value>
                    </param>
                </params>
            </methodCall>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateCommunicationException">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>978</pd:x>
        <pd:y>382</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException/msg">
                    <message>
                        <xsl:value-of select="$_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException/msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException/msgCode">
                    <messageCode>
                        <xsl:value-of select="$_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException/msgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>648</pd:x>
        <pd:y>520</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <xsl:if test="$_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException/msg">
                    <message>
                        <xsl:value-of select="$_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException/msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException/msgCode">
                    <messageCode>
                        <xsl:value-of select="$_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException/msgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetResCodesVar">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>191</pd:x>
        <pd:y>391</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ResponseCodes.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="MapResposne">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1231</pd:x>
        <pd:y>282</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx36:DataInquiriesResponse"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx36:DataInquiriesResponse>
                    <xsl:copy-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns18:BusinessMessageHeader"/>
                    <xsl:choose>
                        <xsl:when test="$GetResCodesVar/ns21:ResCodeVar/ns21:paramGroup[CS_CODE=$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4]/COMMON_CODE!='0'">
                            <ns19:Response>
                                <xsl:variable name="var6" select="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4"/>
                                <ResponseCode>
                                    <xsl:value-of select="$GetResCodesVar/ns21:ResCodeVar/ns21:paramGroup[CS_CODE=$var6]/COMMON_CODE"/>
                                </ResponseCode>
                                <xsl:variable name="var7" select="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4"/>
                                <ResponseDescription>
                                    <xsl:value-of select="$GetResCodesVar/ns21:ResCodeVar/ns21:paramGroup[CS_CODE=$var7]/COMMON_DESC"/>
                                </ResponseDescription>
                            </ns19:Response>
                        </xsl:when>
                        <xsl:when test="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4='0'&#xA;or&#xA;$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4='1'&#xA;or&#xA;$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4='2'">
                            <ns19:Response>
                                <xsl:if test="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4">
                                    <ResponseCode>
                                        <xsl:value-of select="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4"/>
                                    </ResponseCode>
                                </xsl:if>
                            </ns19:Response>
                        </xsl:when>
                        <xsl:when test="$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4!='0'&#xA;or&#xA;$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4!='1'&#xA;or&#xA;$Parse-Native/methodResponse/params/param/value/struct/member[name='responseCode']/value/i4!='2'">
                            <ns19:Response>
                                <xsl:if test="$Parse-Native/methodResponse/params/param/value/struct/member[name=&quot;responseCode&quot;]/value/i4">
                                    <ResponseCode>
                                        <xsl:value-of select="$Parse-Native/methodResponse/params/param/value/struct/member[name=&quot;responseCode&quot;]/value/i4"/>
                                    </ResponseCode>
                                </xsl:if>
                                <ResponseDescription>
                                    <xsl:value-of select="$Parse-Native/methodResponse/params/param/value/struct/member[name=&quot;responseCode&quot;]/value/i4"/>
                                </ResponseDescription>
                            </ns19:Response>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns19:Response>
                                <xsl:if test="$Parse-Native/methodResponse/fault/value/struct/member[name='faultCode']/value/i4">
                                    <ResponseCode>
                                        <xsl:value-of select="$Parse-Native/methodResponse/fault/value/struct/member[name='faultCode']/value/i4"/>
                                    </ResponseCode>
                                </xsl:if>
                                <ResponseDescription>
                                    <xsl:value-of select="$Parse-Native/methodResponse/fault/value/struct/member[name='faultString']/value/string"/>
                                </ResponseDescription>
                            </ns19:Response>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns17:SubscriberAssets>
                        <ns17:Subscriber>
                            <ns17:ServiceNo>
                                <xsl:value-of select="$GetSubAccountDetails/pfx35:DataInquiriesRequest/ns16:Subscriber/ServiceNo"/>
                            </ns17:ServiceNo>
                        </ns17:Subscriber>
                        <ns17:ListOfAssets>
                            <xsl:for-each select="$Parse-Native/methodResponse/params/param/value/struct/member[name='dedicatedAccountInformation']/value/array/data/value">
                                <ns17:Asset>
                                    <xsl:if test="current()/struct/member[name='dedicatedAccountID']/value/i4">
                                        <ns17:AssetID>
                                            <xsl:value-of select="current()/struct/member[name='dedicatedAccountID']/value/i4"/>
                                        </ns17:AssetID>
                                    </xsl:if>
                                    <ns17:AssetType>
                                        <xsl:value-of select="if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '1')&#xA;then&#xA;&quot;Money&quot;&#xA;else if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '0')&#xA;then&#xA;&quot;Time&quot;&#xA;else&#xA;&quot;Count&quot;"/>
                                    </ns17:AssetType>
                                    <ns17:AssetsDescription>
                                        <xsl:value-of select="if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '1')&#xA;then&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string div 1000&#xA;else if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '0')&#xA;then&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string div 60&#xA;else&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string"/>
                                    </ns17:AssetsDescription>
                                    <ListOfServices>
                                        <ns17:Service>
                                            <ns17:ServiceID>
                                                <xsl:value-of select="current()/struct/member[name='dedicatedAccountID']/value/i4"/>
                                            </ns17:ServiceID>
                                            <ns17:ServiceVolume>
                                                <xsl:value-of select="if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '1')&#xA;then&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string div 1000&#xA;else if(current()/struct/member[name='dedicatedAccountUnitType']/value/i4 = '0')&#xA;then&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string div 60&#xA;else&#xA;current()/struct/member[name='dedicatedAccountValue1']/value/string"/>
                                            </ns17:ServiceVolume>
                                        </ns17:Service>
                                    </ListOfServices>
                                    <ns17:Product>
                                        <xsl:if test="current()/struct/member[name='productID']/value/i4">
                                            <ns17:ProductID>
                                                <xsl:value-of select="current()/struct/member[name='productID']/value/i4"/>
                                            </ns17:ProductID>
                                        </xsl:if>
                                    </ns17:Product>
                                    <xsl:choose>
                                        <xsl:when test="exists( current()/struct/member[name='startDate']/value/dateTime.iso8601) or string-length( current()/struct/member[name='startDate']/value/dateTime.iso8601)>0">
                                            <ns17:AssetStartDate>
                                                <xsl:value-of select="if (current()/struct/member[name='startDate']/value/dateTime.iso8601='00000101T12:00:00+0000')&#xA;then&#xA;'1970-09-12T13:20:00-05:00'&#xA;else&#xA;substring-before(tib:parse-dateTime(&quot;yyyyMMdd'T'HH:mm:ss&quot;, current()/struct/member[name='startDate']/value/dateTime.iso8601),'+')"/>
                                            </ns17:AssetStartDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns17:AssetStartDate>
                                                <xsl:value-of select="'1970-09-12T13:20:00-05:00'"/>
                                            </ns17:AssetStartDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists( current()/struct/member[name='expiryDate']/value/dateTime.iso8601) or string-length( current()/struct/member[name='expiryDate']/value/dateTime.iso8601)>0">
                                            <ns17:AssetEndDate>
                                                <xsl:value-of select="if (current()/struct/member[name='expiryDate']/value/dateTime.iso8601='00000101T12:00:00+0000')&#xA;then&#xA;'1970-09-12T13:20:00-05:00'&#xA;else&#xA;substring-before(tib:parse-dateTime(&quot;yyyyMMdd'T'HH:mm:ss&quot;, current()/struct/member[name='expiryDate']/value/dateTime.iso8601),'+')"/>
                                            </ns17:AssetEndDate>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns17:AssetEndDate>
                                                <xsl:value-of select="'1970-09-12T13:20:00-05:00'"/>
                                            </ns17:AssetEndDate>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns17:Asset>
                            </xsl:for-each>
                        </ns17:ListOfAssets>
                    </ns17:SubscriberAssets>
                </pfx36:DataInquiriesResponse>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Native">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>960</pd:x>
        <pd:y>282</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx31:methodResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Send-HTTP-Request/RequestActivityOutput/asciiContent"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>193</pd:x>
        <pd:y>499</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:xpathDescription>ExceptTimeout</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateCommunicationException</pd:to>
        <pd:xpathDescription>Communication Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpClientException)
or
exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpServerException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Native</pd:from>
        <pd:to>AuditLogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CDMToNative</pd:from>
        <pd:to>AuditLogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Parse Native</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogIn</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodesVar</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubAccountDetails</pd:from>
        <pd:to>GetResCodesVar</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogOut</pd:from>
        <pd:to>MapResposne</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapResposne</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetResCodesVar</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>CDMToNative</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>