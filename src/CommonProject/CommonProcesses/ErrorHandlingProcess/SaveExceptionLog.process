<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pfx="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <pd:name>CommonProcesses/ErrorHandlingProcess/SaveExceptionLog.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>168</pd:x>
        <pd:y>66</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%CommonProcesses/ErrorHandling/Exception_Message/ExceptionQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <OutDataxsdString ref="pfx:ExceptionRequest"/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>605</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1439906103367</pd:targetNamespace>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>368</pd:x>
        <pd:y>63</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>Insert into Exceptionrec (APPLICATIONID,EXCEPTIONID,EXCEPTIONCODE,COMPONENTNAME,HOSTNAME,TRANSACTIONDOMAIN,
TRANSACTIONID,TRANSACTIONTYPE,FILENAME,INTERFACEID,TIME_STAMP,MESSAGE,TRANSACTIONDATA,TRANSACTIONDATAAFTER,
NOTIFICATIONCHNL,REPLYDESTINATION,STACKTRACE,STATUS,RESOLUTIONDESCRIPTION,DATAENCODING,CORRELATIONID,
RENDERID,RESOLVEDELAYTIME,EVENTTYPE,JMSPROPERTIES,CUSTOM) 
values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
</statement>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/LocalTIBDBServerConnection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>APPLICATIONID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>EXCEPTIONID</parameterName>
                    <dataType>NUMERIC</dataType>
                </parameter>
                <parameter>
                    <parameterName>EXCEPTIONCODE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>COMPONENTNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>HOSTNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONDOMAIN</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONTYPE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>FILENAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>INTERFACEID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TIME_STAMP</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>MESSAGE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONDATA</parameterName>
                    <dataType>CLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONDATAAFTER</parameterName>
                    <dataType>CLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>NOTIFICATIONCHNL</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>REPLYDESTINATION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STACKTRACE</parameterName>
                    <dataType>CLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RESOLUTIONDESCRIPTION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>DATAENCODING</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CORRELATIONID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RENDERID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RESOLVEDELAYTIME</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>EVENTTYPE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>JMSPROPERTIES</parameterName>
                    <dataType>CLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>CUSTOM</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <APPLICATIONID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:ApplicationID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:ApplicationID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </APPLICATIONID>
                <EXCEPTIONID>
                    <xsl:value-of select="0"/>
                </EXCEPTIONID>
                <EXCEPTIONCODE>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ExceptionCode)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ExceptionCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </EXCEPTIONCODE>
                <COMPONENTNAME>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:ComponentName)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:ComponentName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </COMPONENTNAME>
                <HOSTNAME>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Hostname)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Hostname"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </HOSTNAME>
                <TRANSACTIONDOMAIN>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionDomain)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionDomain"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONDOMAIN>
                <TRANSACTIONID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONID>
                <TRANSACTIONTYPE>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionType)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:TransactionType"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONTYPE>
                <FILENAME>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Filename)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Filename"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </FILENAME>
                <INTERFACEID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:InterfaceID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:InterfaceID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </INTERFACEID>
                <TIME_STAMP>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Timestamp)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Timestamp"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TIME_STAMP>
                <MESSAGE>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Message)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Message"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MESSAGE>
                <TRANSACTIONDATA>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Transaction)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Transaction"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONDATA>
                <TRANSACTIONDATAAFTER>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/StackTrace)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/StackTrace"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TRANSACTIONDATAAFTER>
                <NOTIFICATIONCHNL>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/NotificationChannel)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/NotificationChannel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </NOTIFICATIONCHNL>
                <REPLYDESTINATION>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ReplyDestination)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ReplyDestination"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </REPLYDESTINATION>
                <STACKTRACE>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/StackTrace)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/StackTrace"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </STACKTRACE>
                <STATUS>
                    <xsl:value-of select="&quot;Error&quot;"/>
                </STATUS>
                <RESOLUTIONDESCRIPTION>
                    <xsl:value-of select="&quot;&quot;"/>
                </RESOLUTIONDESCRIPTION>
                <DATAENCODING>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:DataEncoding)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:DataEncoding"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </DATAENCODING>
                <CORRELATIONID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:CorrelationID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:CorrelationID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CORRELATIONID>
                <RENDERID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:RenderID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:RenderID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RENDERID>
                <RESOLVEDELAYTIME>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Timestamp)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/ns:Header/ns:Timestamp"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </RESOLVEDELAYTIME>
                <EVENTTYPE>
                    <xsl:value-of select="&quot;&quot;"/>
                </EVENTTYPE>
                <JMSPROPERTIES>
                    <xsl:value-of select="&quot;&quot;"/>
                </JMSPROPERTIES>
                <CUSTOM>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/Custom)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:ExceptionRequest/Custom"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CUSTOM>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>