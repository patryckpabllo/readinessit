<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	 xmlns="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesRes"
	 targetNamespace="http://www.zain.com/ZESB/Services/GetSubscriberEligibleBundlesRes"
	 elementFormDefault="qualified"
	 attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>Dates are in dd-MM-yyyy format
</xs:documentation>
	</xs:annotation>
	<xs:element name="GetSubscriberEligibleBundlesRes">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ResCode" type="xs:string" minOccurs="0"/>
				<xs:element name="ResDesc" type="xs:string" minOccurs="0"/>
				<xs:element name="BundleInfo" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>From this Response Following fields to be sent in MultiOrder API for Provisioning.
1) OrderList/Order/ParamList/Param/name ="BundleId" AND Value = BundleId from SP O/P
2)OrderList/Order/ParamList/Param/name ="ProductType" AND if BundleProdName="Zain Bundle Group Product"(FromSP O/p) then Value="Bundle" else Value="BundleComponent"
3)OrderList/Order/ParamList/Param/name ="PackageType" AND Value=PricePackageType from SP O/P</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="BundleId" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleName" type="xs:string" minOccurs="0"/>
							<xs:element name="OccProductId" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp1ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp1ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp1ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp2ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp2ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp2ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp3ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp3ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp3ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp4ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp4ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp4ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp5ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp5ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp5ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp6ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp6ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp6ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp7ProdId" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp7ProdName" type="xs:string" minOccurs="0"/>
							<xs:element name="Comp7ProdItemCd" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleActiveFlg" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleStartDate" type="xs:string" minOccurs="0"/>
							<xs:element name="BundleEndDate" type="xs:string" minOccurs="0"/>
							<xs:element name="PriceNumber" type="xs:string" minOccurs="0"/>
							<xs:element name="PromotionId" type="xs:string" minOccurs="0"/>
							<xs:element name="PromotionName" type="xs:string" minOccurs="0"/>
							<xs:element name="PricePackageType" type="xs:string" minOccurs="0"/>
							<xs:element name="CommitmentType" type="xs:string" minOccurs="0"/>
							<xs:element name="CommitmentAmount" type="xs:string" minOccurs="0"/>
							<xs:element name="InstallmentPeriod" type="xs:string" minOccurs="0"/>
							<xs:element name="InstallmentAmount" type="xs:string" minOccurs="0"/>
							<xs:element name="BasePlan" type="xs:string" minOccurs="0"/>
							<xs:element name="TotalCost" type="xs:string" minOccurs="0"/>
							<xs:element name="UpfrontAmount" type="xs:string" minOccurs="0"/>
							<xs:element ref="Params" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Params" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Params">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Name" type="xs:string" minOccurs="0"/>
							<xs:element name="Value" type="xs:string" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>