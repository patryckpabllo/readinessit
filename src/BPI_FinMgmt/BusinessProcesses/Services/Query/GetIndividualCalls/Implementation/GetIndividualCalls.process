<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx14="http://www.zain.com/ZESB/Services/PostpaidBilling/Types" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" xmlns:pfx12="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns29="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:ns28="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns21="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" xmlns:ns24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns31="http://www.zain.com/ZESB/Services/Query/GetUsageDetails.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/ContractQueryOutstanding.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/GetChargeHistory/GetChargeHistory.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" schemaLocation="/BusinessSchemas/Services/Query/BalanceQuery/BalanceQuery.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetPostpaidBalance/GetPostpaidBalanceInbound.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <pd:name>BusinessProcesses/Services/Query/GetIndividualCalls/Implementation/GetIndividualCalls.process</pd:name>
    <pd:startName>GetIndividualCallsReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetIndividualCallsReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>60</pd:x>
        <pd:y>184</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Query/GetIndividualCalls/GW_BPI_Request%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1093</pd:endX>
    <pd:endY>184</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="ns21:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <BeforeCutover>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="LineType" type="xsd:string"/>
                        <xsd:element name="ContractStartDate" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </BeforeCutover>
        <CutOverDateCheck>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="AfterOrBefore" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </CutOverDateCheck>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>543</pd:x>
        <pd:y>184</pd:y>
        <config>
            <variableName>BeforeCutover</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <LineType>
                    <xsl:value-of select="if($Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account/ns29:ListOfSubscribers/ns29:SubscriberInformation/ns29:CBiO2LineType=&quot;Postpaid&quot;)&#xA;then&#xA;&quot;Postpaid&quot;&#xA;else&#xA;&quot;Prepaid&quot;"/>
                </LineType>
                <ContractStartDate>
                    <xsl:value-of select="if($Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account/ns29:ListOfSubscribers/ns29:SubscriberInformation/ns29:CBiO2LineType=&quot;Postpaid&quot;)&#xA;then&#xA;$Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account/ns29:ListOfSubscribers/ns29:SubscriberInformation[$Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account/ns29:ListOfSubscribers/ns29:SubscriberInformation/ns29:ProdType=&quot;Service Account&quot;]/ns29:subsFlexField2&#xA;else&#xA;$Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account/ns29:ListOfSubscribers/ns29:SubscriberInformation/ns29:CBiO2FirstCallDate"/>
                </ContractStartDate>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_BSCS_BilledUsageQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>644</pd:x>
        <pd:y>183</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetIndividualCalls/HelperProcess/ESI_BSCS_BilledUsage.process</processName>
        </config>
        <pd:inputBindings>
            <!--if fromDate is earlier than the contract start date then fromDate is  to be replace with the contract start date.-->
            <root>
                <TransactionId>
                    <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionId>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
                <ns31:BilledUsageRequest>
                    <ns31:customerID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns31:customerID>
                    <ns31:subscriberNumber>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:subscriberNumber"/>
                    </ns31:subscriberNumber>
                    <ns31:contractID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:contractID"/>
                    </ns31:contractID>
                    <xsl:choose>
                        <xsl:when test="tib:compare-date($Parse-XML/group/ns28:BilledUsageRequest/ns28:fromDate, &#xA;substring-before( $BeforeCutover/root/ContractStartDate,'T'))= -1">
                            <!--If Contract Start date is in between from date and to Date then only form date is to be modified if not then it means that subsciber was not the owner of the number so no data should be displayed -->
                            <xsl:choose>
                                <xsl:when test="tib:compare-date($Parse-XML/group/ns28:BilledUsageRequest/ns28:fromDate, &#xA;substring-before( $BeforeCutover/root/ContractStartDate,'T'))= -1&#xA;&#xA;and&#xA;&#xA;tib:compare-date($Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate, &#xA;substring-before( $BeforeCutover/root/ContractStartDate,'T'))= 1">
                                    <ns31:fromDate>
                                        <xsl:value-of select="tib:format-date('MM/dd/yyyy',substring-before( $BeforeCutover/root/ContractStartDate,'T'))"/>
                                    </ns31:fromDate>
                                    <ns31:toDate>
                                        <xsl:value-of select="tib:format-date('MM/dd/yyyy',$Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate)"/>
                                    </ns31:toDate>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns31:fromDate>
                                        <xsl:value-of select="&quot;TIB-VAL-INDIVIDUALCALL-4&quot; {--Err--}"/>
                                    </ns31:fromDate>
                                    <ns31:toDate>
                                        <xsl:value-of select="substring-before( $BeforeCutover/root/ContractStartDate,'T')"/>
                                    </ns31:toDate>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns31:fromDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',$Parse-XML/group/ns28:BilledUsageRequest/ns28:fromDate)"/>
                            </ns31:fromDate>
                            <ns31:toDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',$Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate)"/>
                            </ns31:toDate>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns31:usageType>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:usageType"/>
                    </ns31:usageType>
                </ns31:BilledUsageRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_CRMAssetQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>421</pd:x>
        <pd:y>184</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetIndividualCalls/HelperProcess/ESI_CRM_Call_QueryAsset.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns29:queryAssetRequest>
                    <ns29:OperationType>
                        <xsl:value-of select="'QueryAsset'"/>
                    </ns29:OperationType>
                    <xsl:if test="$Parse-XML/group/ns28:BilledUsageRequest/ns28:subscriberNumber">
                        <ns29:MSISDN>
                            <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:subscriberNumber"/>
                        </ns29:MSISDN>
                    </xsl:if>
                </ns29:queryAssetRequest>
                <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TransactionId>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>229</pd:x>
        <pd:y>420</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>495</pd:x>
        <pd:y>425</pd:y>
        <config>
            <element>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="ns21:ErrorResponse"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" type="ns21:error"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <xsl:choose>
                    <xsl:when test="$Call_CRMAssetQuery/ns29:queryAssetResponse/ns19:Response/ns19:Error/ns19:errorCode!=0">
                        <ns21:ErrorResponse>
                            <ns21:Error_SourceSystem>
                                <xsl:value-of select="'CRM'"/>
                            </ns21:Error_SourceSystem>
                            <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                <ns21:Error_SourceErrCode>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                </ns21:Error_SourceErrCode>
                            </xsl:if>
                            <ns21:Error_SourceErrDesc>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </ns21:Error_SourceErrDesc>
                            <ns21:Error_Type>
                                <xsl:value-of select="'Bussiness'"/>
                            </ns21:Error_Type>
                        </ns21:ErrorResponse>
                    </xsl:when>
                    <xsl:when test="$Call_BSCS_BilledUsageQuery/ns28:BilledUsageResponse/ns19:Response/ns19:ResponseCode!=0">
                        <ns21:ErrorResponse>
                            <ns21:Error_SourceSystem>
                                <xsl:value-of select="'BSCS'"/>
                            </ns21:Error_SourceSystem>
                            <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                <ns21:Error_SourceErrCode>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                </ns21:Error_SourceErrCode>
                            </xsl:if>
                            <ns21:Error_SourceErrDesc>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </ns21:Error_SourceErrDesc>
                            <ns21:Error_Type>
                                <xsl:value-of select="'Bussiness'"/>
                            </ns21:Error_Type>
                        </ns21:ErrorResponse>
                    </xsl:when>
                    <xsl:when test="string-length($Catch/exceptiondata/*/ns21:Error_SourceErrCode)>0">
                        <ns21:ErrorResponse>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_SourceSystem">
                                <ns21:Error_SourceSystem>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_SourceSystem"/>
                                </ns21:Error_SourceSystem>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_SourceErrCode">
                                <ns21:Error_SourceErrCode>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_SourceErrCode"/>
                                </ns21:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_SourceErrDesc">
                                <ns21:Error_SourceErrDesc>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_SourceErrDesc"/>
                                </ns21:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_Type">
                                <ns21:Error_Type>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_Type"/>
                                </ns21:Error_Type>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_UserErrCode">
                                <ns21:Error_UserErrCode>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_UserErrCode"/>
                                </ns21:Error_UserErrCode>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_UserErrDesc">
                                <ns21:Error_UserErrDesc>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_UserErrDesc"/>
                                </ns21:Error_UserErrDesc>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_Occurance_Time">
                                <ns21:Error_Occurance_Time>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_Occurance_Time"/>
                                </ns21:Error_Occurance_Time>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_Additional_Desc1">
                                <ns21:Error_Additional_Desc1>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_Additional_Desc1"/>
                                </ns21:Error_Additional_Desc1>
                            </xsl:if>
                            <xsl:if test="$Catch/exceptiondata/*/ns21:Error_Additional_Desc2">
                                <ns21:Error_Additional_Desc2>
                                    <xsl:value-of select="$Catch/exceptiondata/*/ns21:Error_Additional_Desc2"/>
                                </ns21:Error_Additional_Desc2>
                            </xsl:if>
                        </ns21:ErrorResponse>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns21:ErrorResponse>
                            <ns21:Error_SourceSystem>
                                <xsl:value-of select="'Tibco'"/>
                            </ns21:Error_SourceSystem>
                            <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                <ns21:Error_SourceErrCode>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                </ns21:Error_SourceErrCode>
                            </xsl:if>
                            <ns21:Error_SourceErrDesc>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </ns21:Error_SourceErrDesc>
                            <ns21:Error_Type>
                                <xsl:value-of select="'Technical'"/>
                            </ns21:Error_Type>
                        </ns21:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>367</pd:x>
        <pd:y>423</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetIndividualCalls/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>799</pd:x>
        <pd:y>421</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetIndividualCalls/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/group)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>422</pd:x>
        <pd:y>45</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_CRMAssetQuery/ns29:queryAssetResponse/ns19:Response/ns19:Error/ns19:errorDescription"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_CRMAssetQuery/ns29:queryAssetResponse/ns19:Response/ns19:Error/ns19:errorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>300</pd:x>
        <pd:y>44</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="'MSISDN not associated with the provided CustomerId'"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;TIB-VAL-INDIVIDUALCALL-1&quot;"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>62</pd:x>
        <pd:y>291</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>670</pd:x>
        <pd:y>544</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>304</pd:x>
        <pd:y>184</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetIndividualCalls/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($GetIndividualCallsReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>876</pd:x>
        <pd:y>182</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetIndividualCalls/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($Call_BSCS_BilledUsageQuery/ns28:BilledUsageResponse)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>199</pd:x>
        <pd:y>184</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="ns28:BilledUsageRequest"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>202</pd:x>
        <pd:y>299</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>977</pd:x>
        <pd:y>190</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetIndividualCallsReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($Map-Data/group)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>653</pd:x>
        <pd:y>422</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetIndividualCallsReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/group)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>772</pd:x>
        <pd:y>185</pd:y>
        <config>
            <element>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="ns28:BilledUsageResponse"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <group>
                <ns28:BilledUsageResponse>
                    <xsl:copy-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns19:Header"/>
                    <ns28:ResultSet>
                        <xsl:copy-of select="$Call_CallHistory/ns28:BilledUsageResponse/ns28:ResultSet/ns28:Record"/>
                        <xsl:for-each select="$Call_BSCS_BilledUsageQuery/ns28:BilledUsageResponse/ns28:ResultSet/ns28:Record">
                            <ns28:Record>
                                <xsl:if test="ns28:usageStartTime">
                                    <ns28:usageStartTime>
                                        <xsl:value-of select="ns28:usageStartTime"/>
                                    </ns28:usageStartTime>
                                </xsl:if>
                                <xsl:if test="ns28:usageEndTime">
                                    <ns28:usageEndTime>
                                        <xsl:value-of select="ns28:usageEndTime"/>
                                    </ns28:usageEndTime>
                                </xsl:if>
                                <xsl:if test="ns28:usageType">
                                    <ns28:usageType>
                                        <xsl:value-of select="ns28:usageType"/>
                                    </ns28:usageType>
                                </xsl:if>
                                <xsl:if test="ns28:entryDate">
                                    <ns28:entryDate>
                                        <xsl:value-of select="ns28:entryDate"/>
                                    </ns28:entryDate>
                                </xsl:if>
                                <xsl:if test="ns28:serviceDescription">
                                    <ns28:serviceDescription>
                                        <xsl:value-of select="ns28:serviceDescription"/>
                                    </ns28:serviceDescription>
                                </xsl:if>
                                <xsl:if test="ns28:PartyA">
                                    <ns28:PartyA>
                                        <xsl:value-of select="ns28:PartyA"/>
                                    </ns28:PartyA>
                                </xsl:if>
                                <xsl:if test="ns28:PartyB">
                                    <ns28:PartyB>
                                        <xsl:value-of select="ns28:PartyB"/>
                                    </ns28:PartyB>
                                </xsl:if>
                                <xsl:if test="ns28:usageCharge">
                                    <ns28:usageCharge>
                                        <xsl:value-of select="ns28:usageCharge"/>
                                    </ns28:usageCharge>
                                </xsl:if>
                                <xsl:if test="ns28:Duration">
                                    <ns28:Duration>
                                        <xsl:value-of select="ns28:Duration"/>
                                    </ns28:Duration>
                                </xsl:if>
                                <xsl:if test="ns28:Duration_Unit">
                                    <ns28:Duration_Unit>
                                        <xsl:value-of select="ns28:Duration_Unit"/>
                                    </ns28:Duration_Unit>
                                </xsl:if>
                                <xsl:if test="ns28:Data_Volume">
                                    <ns28:Data_Volume>
                                        <xsl:value-of select="ns28:Data_Volume"/>
                                    </ns28:Data_Volume>
                                </xsl:if>
                                <xsl:if test="ns28:Data_Unit">
                                    <ns28:Data_Unit>
                                        <xsl:value-of select="ns28:Data_Unit"/>
                                    </ns28:Data_Unit>
                                </xsl:if>
                                <xsl:if test="ns28:Country">
                                    <ns28:Country>
                                        <xsl:value-of select="ns28:Country"/>
                                    </ns28:Country>
                                </xsl:if>
                                <xsl:if test="ns28:Before_Chrg_Amnt">
                                    <ns28:Before_Chrg_Amnt>
                                        <xsl:value-of select="ns28:Before_Chrg_Amnt"/>
                                    </ns28:Before_Chrg_Amnt>
                                </xsl:if>
                                <xsl:if test="ns28:After_Chrg_Amnt">
                                    <ns28:After_Chrg_Amnt>
                                        <xsl:value-of select="ns28:After_Chrg_Amnt"/>
                                    </ns28:After_Chrg_Amnt>
                                </xsl:if>
                                <xsl:if test="ns28:ZNCODE_DES">
                                    <ns28:ZNCODE_DES>
                                        <xsl:value-of select="ns28:ZNCODE_DES"/>
                                    </ns28:ZNCODE_DES>
                                </xsl:if>
                                <xsl:if test="ns28:OfferID">
                                    <ns28:OfferID>
                                        <xsl:value-of select="ns28:OfferID"/>
                                    </ns28:OfferID>
                                </xsl:if>
                                <xsl:if test="ns28:AccountType">
                                    <ns28:AccountType>
                                        <xsl:value-of select="ns28:AccountType"/>
                                    </ns28:AccountType>
                                </xsl:if>
                                <xsl:if test="ns28:AccountID">
                                    <ns28:AccountID>
                                        <xsl:value-of select="ns28:AccountID"/>
                                    </ns28:AccountID>
                                </xsl:if>
                                <xsl:if test="ns28:BillCode">
                                    <ns28:BillCode>
                                        <xsl:value-of select="ns28:BillCode"/>
                                    </ns28:BillCode>
                                </xsl:if>
                                <xsl:if test="ns28:BillText">
                                    <ns28:BillText>
                                        <xsl:value-of select="ns28:BillText"/>
                                    </ns28:BillText>
                                </xsl:if>
                                <xsl:if test="ns28:PeakStatus">
                                    <ns28:PeakStatus>
                                        <xsl:value-of select="ns28:PeakStatus"/>
                                    </ns28:PeakStatus>
                                </xsl:if>
                                <xsl:if test="ns28:ChargedDuration">
                                    <ns28:ChargedDuration>
                                        <xsl:value-of select="ns28:ChargedDuration"/>
                                    </ns28:ChargedDuration>
                                </xsl:if>
                            </ns28:Record>
                        </xsl:for-each>
                    </ns28:ResultSet>
                    <xsl:copy-of select="$Call_CallHistory/ns28:BilledUsageResponse/ns19:Response"/>
                    <xsl:copy-of select="$Call_BSCS_BilledUsageQuery/ns28:BilledUsageResponse/ns19:Response"/>
                </ns28:BilledUsageResponse>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_CallHistory">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>597</pd:x>
        <pd:y>60</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetIndividualCalls/HelperProcess/GW_CallHistory.process</processName>
        </config>
        <pd:inputBindings>
            <!--if fromDate is earlier than the contract start date then fromDate is  to be replace with the contract start date.-->
            <root>
                <TransactionId>
                    <xsl:value-of select="$GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionId>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetIndividualCallsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
                <ns31:BilledUsageRequest>
                    <ns31:customerID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID"/>
                    </ns31:customerID>
                    <ns31:subscriberNumber>
                        <xsl:value-of select="if (string-length($Parse-XML/group/ns28:BilledUsageRequest/ns28:subscriberNumber)>0)&#xA;then format:FormatMSISDN($Parse-XML/group/ns28:BilledUsageRequest/ns28:subscriberNumber, $_globalVariables/ns1:GlobalVariables/MSISDNBaseLength)&#xA;else ''"/>
                    </ns31:subscriberNumber>
                    <ns31:contractID>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:contractID"/>
                    </ns31:contractID>
                    <xsl:if test="string-length($Parse-XML/group/ns28:BilledUsageRequest/ns28:fromDate)>0">
                        <ns31:fromDate>
                            <xsl:value-of select="tib:parse-dateTime('yyyy-MM-dd',$Parse-XML/group/ns28:BilledUsageRequest/ns28:fromDate)"/>
                        </ns31:fromDate>
                    </xsl:if>
                    <xsl:if test="string-length($Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate)>0">
                        <ns31:toDate>
                            <xsl:value-of select="tib:parse-dateTime('yyyy-MM-dd',$Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate)"/>
                        </ns31:toDate>
                    </xsl:if>
                    <ns31:usageType>
                        <xsl:value-of select="$Parse-XML/group/ns28:BilledUsageRequest/ns28:usageType"/>
                    </ns31:usageType>
                </ns31:BilledUsageRequest>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>767</pd:x>
        <pd:y>61</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:copy-of select="$_error_Call_CallHistory/ns21:ErrorResponse"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Call_CRMAssetQuery</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_BilledUsageQuery</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetIndividualCallsReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetIndividualCallsReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_CRMAssetQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CRMAssetQuery</pd:from>
        <pd:to>Generate-Error</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_CRMAssetQuery/ns29:queryAssetResponse/ns19:Response/ns19:Error/ns19:errorCode!=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CRMAssetQuery</pd:from>
        <pd:to>Generate-Error-2</pd:to>
        <pd:xpathDescription>MSISDN not associated</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_CRMAssetQuery/ns29:queryAssetResponse/ns19:Response/ns19:Error/ns19:errorCode=0
and
$Call_CRMAssetQuery/ns29:queryAssetResponse/ns29:ListOfCbio2QueryAssetIo/ns29:Account[1]/ns29:CustomerId!=$Parse-XML/group/ns28:BilledUsageRequest/ns28:customerID</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Call_BSCS_BilledUsageQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CallHistory</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CallHistory</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Call_CallHistory</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>tib:compare-date($Parse-XML/group/ns28:BilledUsageRequest/ns28:toDate, $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetIndividualCalls/MigrationDate)=-1
and
string-length($BeforeCutover/root)&gt;0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>