<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://siebel.com/CustomUI" xmlns:pfx13="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" xmlns:pfx12="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns29="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:ns28="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns21="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" xmlns:ns24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/CorpCustomerBalance.xsd" xmlns:ns30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns31="http://www.siebel.com/xml/CBiO2%20EAI%20Customer%20Query%20IO" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/ContractQueryOutstanding.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/GetChargeHistory/GetChargeHistory.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetPostpaidBalance/GetPostpaidBalanceInbound.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <pd:name>BusinessProcesses/Services/Query/GetSubscriberBalanceExt/Implementation/GetSubscriberBalanceExt.process</pd:name>
    <pd:startName>GetSubscriberBalanceExtReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetSubscriberBalanceExtReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>59</pd:x>
        <pd:y>44</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Query/GetSubscriberBalanceExt/GW_BPI_Request%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1490</pd:endX>
    <pd:endY>86</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>42</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:getSubscriberBalanceExtInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1351</pd:x>
        <pd:y>94</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetSubscriberBalanceExtReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapRes/pfx13:getSubscriberBalanceExtOutput)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>58</pd:x>
        <pd:y>253</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>151</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>307</pd:x>
        <pd:y>43</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1256</pd:x>
        <pd:y>86</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($MapRes/pfx13:getSubscriberBalanceExtOutput)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>280</pd:x>
        <pd:y>479</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>479</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <StackTrace>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </StackTrace>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>547</pd:x>
        <pd:y>479</pd:y>
        <config>
            <element ref="ns21:ErrorResponse"/>
        </config>
        <pd:inputBindings>
            <ns21:ErrorResponse>
                <xsl:choose>
                    <xsl:when test="$Call_CustomerPenalty/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1&#xA;or&#xA;$Call_SubsBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1">
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'BSCS'"/>
                        </ns21:Error_SourceSystem>
                    </xsl:when>
                    <xsl:when test="$Call_QueryAsset/root/ns21:ErrorResponse/ns21:Error_SourceErrCode!=0">
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'CRM'"/>
                        </ns21:Error_SourceSystem>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'TIBCO'"/>
                        </ns21:Error_SourceSystem>
                    </xsl:otherwise>
                </xsl:choose>
                <ns21:Error_SourceErrCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ns21:Error_SourceErrCode>
                <ns21:Error_SourceErrDesc>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </ns21:Error_SourceErrDesc>
                <xsl:choose>
                    <xsl:when test="$Call_CustomerPenalty/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1&#xA;or&#xA;$Call_SubsBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1&#xA;or&#xA;$Call_QueryAsset/root/ns21:ErrorResponse/ns21:Error_SourceErrCode!=0">
                        <ns21:Error_Type>
                            <xsl:value-of select="'Functional'"/>
                        </ns21:Error_Type>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Technical'"/>
                        </ns21:Error_Type>
                    </xsl:otherwise>
                </xsl:choose>
            </ns21:ErrorResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>875</pd:x>
        <pd:y>479</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>721</pd:x>
        <pd:y>603</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRes">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1136</pd:x>
        <pd:y>87</pd:y>
        <config>
            <element ref="pfx13:getSubscriberBalanceExtOutput"/>
        </config>
        <pd:inputBindings>
            <pfx13:getSubscriberBalanceExtOutput>
                <pfx13:BSType>
                    <xsl:value-of select="if (($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/BSType_VOICE and $Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Language='En')&#xA;then &#xA;($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BSType)]/ns18:TRANSVALUE)&#xA;else&#xA;if (($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/BSType_VOICE and $Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Language='Ar')&#xA;then&#xA;($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/BSType_VOICE]/ns18:TRANSVALUE)&#xA;else&#xA;if(($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Language='Ar') and string-length($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BSType)]/ns18:TRANSVALUE)>0)&#xA;then $GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BSType)]/ns18:TRANSVALUE&#xA;else &#xA;$Call_QueryAsset/root/BSType"/>
                </pfx13:BSType>
                <pfx13:BillingType>
                    <xsl:value-of select="if (($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Language='Ar')and string-length($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BillingType)]/ns18:TRANSVALUE>0))&#xA;then $GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/BillingType)]/ns18:TRANSVALUE&#xA;else $Call_QueryAsset/root/BillingType"/>
                </pfx13:BillingType>
                <pfx13:Status>
                    <xsl:value-of select="if (($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Language='Ar') and  string-length($GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/Status)]/ns18:TRANSVALUE)>0)&#xA;then $GetESBLOV/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_QueryAsset/root/Status)]/ns18:TRANSVALUE&#xA;else $Call_QueryAsset/root/Status"/>
                </pfx13:Status>
                <xsl:copy-of select="$Balances/AccumulatedOutput/pfx13:getSubscriberBalanceExtOutput/pfx13:Balance"/>
            </pfx13:getSubscriberBalanceExtOutput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>701</pd:x>
        <pd:y>479</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetSubscriberBalanceExtReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_QueryAsset">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>313</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/HelperProcess/ESI_CRM_Call_QueryAsset.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns29:queryAssetRequest>
                    <ns29:OperationType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/OperationType"/>
                    </ns29:OperationType>
                    <ns29:MSISDN>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                    </ns29:MSISDN>
                    <ns29:CustomerId>
                        <xsl:value-of select="substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;)"/>
                    </ns29:CustomerId>
                </ns29:queryAssetRequest>
                <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>439</pd:x>
        <pd:y>1</pd:y>
        <pd:width>472</pd:width>
        <pd:height>366</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:OutputSpecs/pfx13:Balance</pd:over>
            <pd:iterationElementSlot>BalanceType</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>Balances</pd:outSlot>
            <pd:activityOutputName>MapBalances</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_BSCS_QueryCorpCustBalance</pd:to>
            <pd:xpathDescription>Corporate/TerminatedNumbersDue</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>($BalanceType/pfx13:Balance='TerminatedNumbersDue'
or
$BalanceType/pfx13:Balance='PastDue'
or
$BalanceType/pfx13:Balance='Unbilled'
or
$BalanceType/pfx13:Balance='Paid')
and
$Call_QueryAsset/root/CustomerLevel='Corporate'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_CustomerPenalty</pd:to>
            <pd:xpathDescription>Penalty</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$BalanceType/pfx13:Balance='Penalty'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_SubsBalanceQuery</pd:to>
            <pd:xpathDescription>Consumer/TerminatedNumbersDue</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>($BalanceType/pfx13:Balance='TerminatedNumbersDue'
or
$BalanceType/pfx13:Balance='PastDue'
or
$BalanceType/pfx13:Balance='Unbilled'
or
$BalanceType/pfx13:Balance='Paid')
and
$Call_QueryAsset/root/CustomerLevel='Consumer'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>MapBalances</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_SubsBalanceQuery</pd:from>
            <pd:to>MapBalances</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_SubsBalanceQuery</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Call_SubsBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_CustomerPenalty</pd:from>
            <pd:to>MapBalances</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_CustomerPenalty</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Call_CustomerPenalty/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_BSCS_QueryCorpCustBalance</pd:from>
            <pd:to>MapBalances</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_BSCS_QueryCorpCustBalance</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Call_CustomerPenalty">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>695</pd:x>
            <pd:y>301</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/HelperProcess/ESI_BSCS_Call_CustomerPenalty.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns26:BalanceRequest>
                        <ns26:CustomerId>
                            <xsl:value-of select="substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;)"/>
                        </ns26:CustomerId>
                        <ns26:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                        </ns26:MSISDN>
                        <ns26:PageSize>
                            <xsl:value-of select="substring-after($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;)"/>
                        </ns26:PageSize>
                    </ns26:BalanceRequest>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_SubsBalanceQuery">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>675</pd:x>
            <pd:y>56</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/HelperProcess/ESI_BSCS_Call_SubscriberBalanceQuery.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns26:BalanceRequest>
                        <xsl:choose>
                            <xsl:when test="string-length(substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;))>0">
                                <ns26:CustomerId>
                                    <xsl:value-of select="substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;)"/>
                                </ns26:CustomerId>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns26:CustomerId>
                                    <xsl:value-of select="$Call_QueryAsset/root/customerId"/>
                                </ns26:CustomerId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns26:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn"/>
                        </ns26:MSISDN>
                    </ns26:BalanceRequest>
                    <xsl:if test="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapBalances">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>850</pd:x>
            <pd:y>103</pd:y>
            <config>
                <element ref="pfx13:getSubscriberBalanceExtOutput"/>
            </config>
            <pd:inputBindings>
                <pfx13:getSubscriberBalanceExtOutput>
                    <pfx13:BSType>
                        <xsl:value-of select="''"/>
                    </pfx13:BSType>
                    <pfx13:BillingType>
                        <xsl:value-of select="''"/>
                    </pfx13:BillingType>
                    <pfx13:Status>
                        <xsl:value-of select="''"/>
                    </pfx13:Status>
                    <xsl:if test="$BalanceType/pfx13:Balance='Paid'">
                        <xsl:choose>
                            <xsl:when test="string-length($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Paid'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns26:PaidAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse)>0&#xA;and&#xA;$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail/ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Paid'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:PaidAmount"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Paid'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="0"/>
                                </pfx13:Balance>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:if test="$BalanceType/pfx13:Balance='PastDue'">
                        <xsl:choose>
                            <xsl:when test="string-length($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'PastDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns26:PastDueAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse)>0&#xA;and&#xA;$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail/ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'PastDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:DueAmount+$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:PaidAmount"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'PastDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="0"/>
                                </pfx13:Balance>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:if test="$BalanceType/pfx13:Balance='Unbilled'">
                        <xsl:choose>
                            <xsl:when test="string-length($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Unbilled'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns26:UnbilledAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse)>0&#xA;and&#xA;$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail/ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Unbilled'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:OutstandingAmount - ($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:DueAmount+$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail[ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn]/ns32:PaidAmount)"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Unbilled'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="0"/>
                                </pfx13:Balance>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:if test="$BalanceType/pfx13:Balance='Penalty'">
                        <xsl:choose>
                            <xsl:when test="string-length($Call_CustomerPenalty/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_CustomerPenalty/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Penalty'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_CustomerPenalty/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[1]/ns26:PenaltyAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Penalty'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_CustomerPenalty/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[1]/ns26:PenaltyAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse)>0&#xA;and&#xA;$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail/ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Penalty'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="$Call_CustomerPenalty/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[1]/ns26:PenaltyAmnt"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'Penalty'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="0"/>
                                </pfx13:Balance>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                    <xsl:if test="$BalanceType/pfx13:Balance='TerminatedNumbersDue'">
                        <xsl:choose>
                            <xsl:when test="string-length($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet)>0&#xA;and $Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record/ns26:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'TerminatedNumbersDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="sum($Call_SubsBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record[ns26:Status='D']/ns26:PastDueAmnt)"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:when test="string-length($Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse)>0&#xA;and&#xA;$Call_BSCS_QueryCorpCustBalance/root/ns32:CorpCustomerBalanceResponse/ns32:Detail/ns32:MSISDN=$Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:Msisdn">
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'TerminatedNumbersDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="sum($Call_BSCS_QueryCorpCustBalance/root/PD[Status='D']/PastDue)"/>
                                </pfx13:Balance>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:Balance>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="'TerminatedNumbersDue'"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="0"/>
                                </pfx13:Balance>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:if>
                </pfx13:getSubscriberBalanceExtOutput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>853</pd:x>
            <pd:y>269</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:choose>
                        <xsl:when test="$BalanceType/pfx13:Balance='TerminatedNumbersDue'&#xA;and&#xA;string-length($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:AsOfDate)>0">
                            <message>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/BSCSTerminatedNumbersQueryWithAsOfDateErrorDesc"/>
                            </message>
                        </xsl:when>
                        <xsl:otherwise>
                            <message>
                                <xsl:value-of select="concat($Call_CustomerPenalty/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrDesc,$Call_SubsBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrDesc,$_error/ns2:ErrorReport/Msg)"/>
                            </message>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$BalanceType/pfx13:Balance='TerminatedNumbersDue'&#xA;and&#xA;string-length($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:AsOfDate)>0">
                            <messageCode>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/BSCSTerminatedNumbersQueryWithAsOfDateErrorCode"/>
                            </messageCode>
                        </xsl:when>
                        <xsl:otherwise>
                            <messageCode>
                                <xsl:value-of select="concat($Call_CustomerPenalty/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode,$Call_SubsBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode,$_error/ns2:ErrorReport/MsgCode)"/>
                            </messageCode>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_BSCS_QueryCorpCustBalance">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>694</pd:x>
            <pd:y>176</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Query/GetSubscriberBalanceExt/HelperProcess/Call_BSCS_QueryCorpCustBalance.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns32:CorpCustomerBalanceRequest>
                        <xsl:choose>
                            <xsl:when test="string-length(substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;))>0">
                                <ns32:CustomerId>
                                    <xsl:value-of select="substring-before($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:ContractId,&quot;|&quot;)"/>
                                </ns32:CustomerId>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns32:CustomerId>
                                    <xsl:value-of select="$Call_QueryAsset/root/customerId"/>
                                </ns32:CustomerId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:AsOfDate)>0">
                                <ns32:ToDate>
                                    <xsl:value-of select="tib:format-date('MM/dd/yyyy', $Parse-XML/pfx13:getSubscriberBalanceExtInput/pfx13:AsOfDate)"/>
                                </ns32:ToDate>
                            </xsl:when>
                            <xsl:when test="contains(current-date(),'+')">
                                <ns32:ToDate>
                                    <xsl:value-of select="tib:format-date('MM/dd/yyyy',substring-before(current-date(),&quot;+&quot;))"/>
                                </ns32:ToDate>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns32:ToDate>
                                    <xsl:value-of select="tib:format-date('MM/dd/yyyy',current-date())"/>
                                </ns32:ToDate>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns32:CorpCustomerBalanceRequest>
                    <TransactionID>
                        <xsl:value-of select="$GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalanceExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Generate-Error-1-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>199</pd:x>
        <pd:y>287</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetESBLOV">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>1000</pd:x>
        <pd:y>85</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>GetSubscriberBalanceExtReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubscriberBalanceExtReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRes</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GetESBLOV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_QueryAsset</pd:from>
        <pd:to>Generate-Error-1-1</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_QueryAsset</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_QueryAsset</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetESBLOV</pd:from>
        <pd:to>MapRes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>