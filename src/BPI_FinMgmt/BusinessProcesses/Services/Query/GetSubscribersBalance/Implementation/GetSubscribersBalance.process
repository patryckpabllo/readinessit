<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns29="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" xmlns:ns25="http://www.ericsson.com/CDM/telecom/Response" xmlns:pfx12="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" xmlns:ns26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns28="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns21="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" xmlns:ns24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/CorpCustomerBalance.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/ContractQueryOutstanding.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/GetChargeHistory/GetChargeHistory.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" schemaLocation="/BusinessSchemas/Services/Query/BalanceQuery/BalanceQuery.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetPostpaidBalance/GetPostpaidBalanceInbound.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <pd:name>BusinessProcesses/Services/Query/GetSubscribersBalance/Implementation/GetSubscribersBalance.process</pd:name>
    <pd:startName>GetSubscriberBalancesReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetSubscriberBalancesReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>89</pd:x>
        <pd:y>160</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Query/GetSubscribersBalance/BPI_Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1353</pd:endX>
    <pd:endY>164</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>176</pd:x>
        <pd:y>160</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:getSubscribersBalanceInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1241</pd:x>
        <pd:y>170</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetSubscriberBalancesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapBalances/pfx13:getSubscribersBalanceOutput)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>155</pd:x>
        <pd:y>271</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>241</pd:x>
        <pd:y>268</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>161</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($GetSubscriberBalancesReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1123</pd:x>
        <pd:y>165</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($MapBalances/pfx13:getSubscribersBalanceOutput)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>508</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>362</pd:x>
        <pd:y>511</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>490</pd:x>
        <pd:y>513</pd:y>
        <config>
            <element ref="ns21:ErrorResponse"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$Call_CRMAssetQuery/group/ns21:ErrorResponse/ns21:Error_SourceErrCode!=0">
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'CRM'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Bussiness'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:when>
                <xsl:when test="$Call_BSCS_SubscribersBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=0">
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'BSCS'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Bussiness'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:when>
                <xsl:otherwise>
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'Tibco'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Technical'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>794</pd:x>
        <pd:y>509</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>665</pd:x>
        <pd:y>632</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>648</pd:x>
        <pd:y>510</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetSubscriberBalancesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_CRMAssetQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>598</pd:x>
        <pd:y>158</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetSubscribersBalance/HelperProcess/ESI_CRM_Call_QueryAsset.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns29:queryAssetRequest>
                    <xsl:choose>
                        <xsl:when test="$Call_BSCS_QueryCustLevel/QueryCustomerLevelOutput/Level=1">
                            <ns29:OperationType>
                                <xsl:value-of select="'QuerySubscriberList'"/>
                            </ns29:OperationType>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns29:OperationType>
                                <xsl:value-of select="'QueryAsset'"/>
                            </ns29:OperationType>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns29:CustomerId>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns29:CustomerId>
                    <xsl:if test="$Call_BSCS_QueryCustLevel/QueryCustomerLevelOutput/Level">
                        <ns29:HierarchyFlag>
                            <xsl:value-of select="$Call_BSCS_QueryCustLevel/QueryCustomerLevelOutput/Level"/>
                        </ns29:HierarchyFlag>
                    </xsl:if>
                </ns29:queryAssetRequest>
                <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_BSCS_SubscribersBalanceQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>597</pd:x>
        <pd:y>50</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetSubscribersBalance/HelperProcess/ESI_BSCS_Call_SubscribersBalance.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns26:BalanceRequest>
                    <ns26:CustomerId>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns26:CustomerId>
                    <ns26:ToDate>
                        <xsl:value-of select="if(string-length($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:AsOfDate)>0)&#xA;then&#xA;tib:format-date('dd-MM-yyyy', $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:AsOfDate)&#xA;else ''"/>
                    </ns26:ToDate>
                    <xsl:if test="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:PageSize">
                        <ns26:PageSize>
                            <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:PageSize"/>
                        </ns26:PageSize>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:PageNo">
                        <ns26:PageNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:PageNo"/>
                        </ns26:PageNumber>
                    </xsl:if>
                    <ns26:Language>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language"/>
                    </ns26:Language>
                </ns26:BalanceRequest>
                <xsl:if test="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapBalances">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>989</pd:x>
        <pd:y>164</pd:y>
        <config>
            <element ref="pfx13:getSubscribersBalanceOutput"/>
        </config>
        <pd:inputBindings>
            <pfx13:getSubscribersBalanceOutput>
                <pfx13:BalanceInfoList>
                    <xsl:for-each select="$Call_BSCS_SubscribersBalanceQuery/ns26:BalanceResponse/ns26:ResultSet/ns26:Record">
                        <pfx13:Item>
                            <pfx13:Msisdn>
                                <xsl:value-of select="current()/ns26:MSISDN"/>
                            </pfx13:Msisdn>
                            <pfx13:BSType>
                                <xsl:value-of select="if (($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE and $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='En')&#xA;then &#xA;($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)&#xA;else&#xA;if (($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE and $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar')&#xA;then&#xA;($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE]/ns18:TRANSVALUE)&#xA;else&#xA;if(($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE&#xA;else &#xA;$Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BSType"/>
                            </pfx13:BSType>
                            <pfx13:BillingType>
                                <xsl:value-of select="if(($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BillingType)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BillingType)]/ns18:TRANSVALUE&#xA;else $Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/BillingType"/>
                            </pfx13:BillingType>
                            <pfx13:Status>
                                <xsl:value-of select="if (($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/Status)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/Status)]/ns18:TRANSVALUE&#xA;else $Call_CRMAssetQuery/group/root[current()/ns26:MSISDN=MSISDN]/Status"/>
                            </pfx13:Status>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns26:PastDueAmnt)>0">
                                    <pfx13:Due>
                                        <xsl:value-of select="current()/ns26:PastDueAmnt"/>
                                    </pfx13:Due>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Due>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Due>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns26:PaidAmnt)>0">
                                    <pfx13:Paid>
                                        <xsl:value-of select="current()/ns26:PaidAmnt"/>
                                    </pfx13:Paid>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Paid>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Paid>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns26:OutstandingAmnt)>0 and string-length(current()/ns26:PastDueAmnt)>0">
                                    <pfx13:Curr>
                                        <xsl:value-of select="(current()/ns26:OutstandingAmnt)-(current()/ns26:PastDueAmnt)"/>
                                    </pfx13:Curr>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Curr>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Curr>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx13:Item>
                    </xsl:for-each>
                    <xsl:for-each select="$Call_BSCS_QueryCorpCustBalance/root/ns31:CorpCustomerBalanceResponse/ns31:Detail">
                        <pfx13:Item>
                            <pfx13:Msisdn>
                                <xsl:value-of select="current()/ns31:MSISDN"/>
                            </pfx13:Msisdn>
                            <pfx13:BSType>
                                <xsl:value-of select="if (($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE and $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='En')&#xA;then &#xA;($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)&#xA;else&#xA;if (($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE and $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar')&#xA;then&#xA;($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/BSType_VOICE]/ns18:TRANSVALUE)&#xA;else&#xA;if(($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType)]/ns18:TRANSVALUE&#xA;else &#xA;$Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BSType"/>
                            </pfx13:BSType>
                            <pfx13:BillingType>
                                <xsl:value-of select="if(($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BillingType)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BillingType)]/ns18:TRANSVALUE&#xA;else $Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/BillingType"/>
                            </pfx13:BillingType>
                            <pfx13:Status>
                                <xsl:value-of select="if (($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:Language='Ar') and string-length($GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/Status)]/ns18:TRANSVALUE)>0)&#xA;then $GetVariable/root/ns18:ESBLOV/ns18:Record[ns18:TRANSKEY=upper-case($Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/Status)]/ns18:TRANSVALUE&#xA;else $Call_CRMAssetQuery/group/root[current()/ns31:MSISDN=MSISDN]/Status"/>
                            </pfx13:Status>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns31:DueAmount)>0">
                                    <pfx13:Due>
                                        <xsl:value-of select="current()/ns31:DueAmount"/>
                                    </pfx13:Due>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Due>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Due>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns31:PaidAmount)>0">
                                    <pfx13:Paid>
                                        <xsl:value-of select="current()/ns31:PaidAmount"/>
                                    </pfx13:Paid>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Paid>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Paid>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length(current()/ns31:OutstandingAmount)>0 and string-length(current()/ns31:DueAmount)>0">
                                    <pfx13:Curr>
                                        <xsl:value-of select="(current()/ns31:OutstandingAmount)-(current()/ns31:DueAmount)"/>
                                    </pfx13:Curr>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:Curr>
                                        <xsl:value-of select="'0'"/>
                                    </pfx13:Curr>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx13:Item>
                    </xsl:for-each>
                </pfx13:BalanceInfoList>
            </pfx13:getSubscribersBalanceOutput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>828</pd:x>
        <pd:y>75</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_CRMAssetQuery/group/ns21:ErrorResponse/ns21:Error_SourceErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_CRMAssetQuery/group/ns21:ErrorResponse/ns21:Error_SourceErrCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>816</pd:x>
        <pd:y>35</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_BSCS_SubscribersBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_BSCS_SubscribersBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>879</pd:x>
        <pd:y>158</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBLOV.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Call_BSCS_QueryCorpCustBalance">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>611</pd:x>
        <pd:y>270</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetSubscribersBalance/HelperProcess/Call_BSCS_QueryCorpCustBalance.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns31:CorpCustomerBalanceRequest>
                    <ns31:CustomerId>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </ns31:CustomerId>
                    <xsl:choose>
                        <xsl:when test="string-length($Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:AsOfDate)>0">
                            <ns31:ToDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy', $Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:AsOfDate)"/>
                            </ns31:ToDate>
                        </xsl:when>
                        <xsl:when test="contains(current-date(),'+')">
                            <ns31:ToDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',substring-before(current-date(),&quot;+&quot;))"/>
                            </ns31:ToDate>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns31:ToDate>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy',current-date())"/>
                            </ns31:ToDate>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns31:CorpCustomerBalanceRequest>
                <TransactionID>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>848</pd:x>
        <pd:y>271</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_BSCS_QueryCustLevel">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>391</pd:x>
        <pd:y>164</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetSubscribersBalance/HelperProcess/Call_BSCS_QueryCustLevel.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <QueryCustomerLevelInput>
                    <CRMCustomerId>
                        <xsl:value-of select="$Parse-XML/pfx13:getSubscribersBalanceInput/pfx13:ContractId"/>
                    </CRMCustomerId>
                </QueryCustomerLevelInput>
                <TransactionID>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$GetSubscriberBalancesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>337</pd:x>
        <pd:y>50</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>790</pd:x>
        <pd:y>159</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Call_BSCS_SubscribersBalanceQuery</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubscriberBalancesReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubscriberBalancesReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_BSCS_QueryCustLevel</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapBalances</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CRMAssetQuery</pd:from>
        <pd:to>Generate-Error</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_CRMAssetQuery/group/ns21:ErrorResponse/ns21:Error_SourceErrCode!=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_SubscribersBalanceQuery</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_BSCS_SubscribersBalanceQuery/ns26:BalanceResponse/ns21:ErrorResponse/ns21:Error_SourceErrCode!=1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>MapBalances</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCorpCustBalance</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCorpCustBalance</pd:from>
        <pd:to>Generate-Error-1-2</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCustLevel</pd:from>
        <pd:to>Call_CRMAssetQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCustLevel</pd:from>
        <pd:to>Generate-Error-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCustLevel</pd:from>
        <pd:to>Call_BSCS_QueryCorpCustBalance</pd:to>
        <pd:xpathDescription>Corporate</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_BSCS_QueryCustLevel/QueryCustomerLevelOutput/Level &gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_BSCS_QueryCustLevel</pd:from>
        <pd:to>Call_BSCS_SubscribersBalanceQuery</pd:to>
        <pd:xpathDescription>Invidual</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_BSCS_QueryCustLevel/QueryCustomerLevelOutput/Level=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_CRMAssetQuery</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>