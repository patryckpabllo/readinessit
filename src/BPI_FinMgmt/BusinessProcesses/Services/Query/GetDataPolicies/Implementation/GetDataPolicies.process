<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" xmlns:pfx15="http://www.Zain.com/schemas/BusinessSchemas/Services/Query/GetUsage.xsd" xmlns:pfx14="http://www.zain.com/ZESB/Services/GetUsage/Types" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" xmlns:pfx12="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns29="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Query/CustomerAssetQueryInbound.xsd" xmlns:ns25="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:ns28="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetUsageDetails.xsd" xmlns:ns21="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryReq.xsd" xmlns:ns24="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/GetRechargeHistory/GetRechargeHistoryRes.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns34="http://www.ericsson.com/CDM/telecom/SubscriberAssets" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns35="http://www.Zain.com/schemas/CommonResources/SharedVariables/ESBOfferMapping.xsd" xmlns:ns32="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesRequest.xsd" xmlns:ns33="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Query/DataInquiries/DataInquiriesResponse.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/ContractQueryOutstanding.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/GetChargeHistory" schemaLocation="/BusinessSchemas/Services/Applications/CRM/Query/GetChargeHistory/GetChargeHistory.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/BalanceQuery.xsd" schemaLocation="/BusinessSchemas/Services/Query/BalanceQuery/BalanceQuery.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/PostpaidBalance/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetPostpaidBalance/GetPostpaidBalanceInbound.wsdl"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.Zain.com/schemas/BusinessSchemas/Services/Query/GetUsage.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetUsage/GetUsage.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOffersRequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOffersRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/GetUsage/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/GetUsage/GetUsage.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/GetOfferResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetOffers/GetOfferResponse.xsd"/>
    <pd:name>BusinessProcesses/Services/Query/GetDataPolicies/Implementation/GetDataPolicies.process</pd:name>
    <pd:startName>GetDataPoliciesReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetDataPoliciesReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>57</pd:x>
        <pd:y>161</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Query/GetDataPolicies/BPI_RequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1266</pd:endX>
    <pd:endY>151</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>164</pd:x>
        <pd:y>162</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx16:GetOfferRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1159</pd:x>
        <pd:y>161</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetDataPoliciesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($Map-Data/ns33:DataInquiriesResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>58</pd:x>
        <pd:y>273</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>168</pd:x>
        <pd:y>271</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>259</pd:x>
        <pd:y>165</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetDataPolicies/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($GetDataPoliciesReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1048</pd:x>
        <pd:y>152</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetDataPolicies/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Map-Data/ns33:DataInquiriesResponse)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>508</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>362</pd:x>
        <pd:y>511</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>490</pd:x>
        <pd:y>513</pd:y>
        <config>
            <element ref="ns21:ErrorResponse"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="$Call_GetOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:Response/ResponseCode!=0">
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'CRM'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Bussiness'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:when>
                <xsl:when test="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns25:Response/ResponseCode!=0">
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'CS'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Bussiness'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:when>
                <xsl:otherwise>
                    <ns21:ErrorResponse>
                        <ns21:Error_SourceSystem>
                            <xsl:value-of select="'Tibco'"/>
                        </ns21:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns21:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns21:Error_SourceErrCode>
                        </xsl:if>
                        <ns21:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns21:Error_SourceErrDesc>
                        <ns21:Error_Type>
                            <xsl:value-of select="'Technical'"/>
                        </ns21:Error_Type>
                    </ns21:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>890</pd:x>
        <pd:y>508</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetSubscribersBalance/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>665</pd:x>
        <pd:y>632</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>651</pd:x>
        <pd:y>511</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>GetDataPoliciesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns21:ErrorResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_GetOffer">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>372</pd:x>
        <pd:y>166</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetDataPolicies/HelperProcess/ESI_SDP_Call_GetOffer.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:copy-of select="$Parse-XML/pfx16:GetOfferRequest"/>
                <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_Get_UCUT">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>767</pd:x>
        <pd:y>149</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetDataPolicies/HelperProcess/ESI_SDP_Call_GetUCUT.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns32:DataInquiriesRequest>
                    <ns11:BusinessMessageHeader>
                        <Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </Timestamp>
                        <ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ApplicationID>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetDataPolicies/ComponentName">
                            <ComponentName>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetDataPolicies/ComponentName"/>
                            </ComponentName>
                        </xsl:if>
                        <Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </Hostname>
                        <TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </TransactionDomain>
                        <TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </TransactionType>
                        <TransactionID>
                            <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TransactionID>
                    </ns11:BusinessMessageHeader>
                    <pfx6:Subscriber>
                        <ServiceNo>
                            <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                        </ServiceNo>
                    </pfx6:Subscriber>
                </ns32:DataInquiriesRequest>
                <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>376</pd:x>
        <pd:y>46</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_GetOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:Response/ResponseDescription"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_GetOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:Response/ResponseCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>769</pd:x>
        <pd:y>37</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns25:Response/ResponseDescription"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns25:Response/ResponseCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>370</pd:x>
        <pd:y>285</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESBOfferMapping.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetBalanceAndDate">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>770</pd:x>
        <pd:y>272</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Query/GetDataPolicies/HelperProcess/ESI_GetBalanceAndDate.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns32:DataInquiriesRequest>
                    <ns11:BusinessMessageHeader>
                        <Timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </Timestamp>
                        <ApplicationID>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                        </ApplicationID>
                        <ComponentName>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Query/GetDataPolicies/ComponentName"/>
                        </ComponentName>
                        <Hostname>
                            <xsl:value-of select="BW:getHostName()"/>
                        </Hostname>
                        <TransactionDomain>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/QUERY"/>
                        </TransactionDomain>
                        <TransactionType>
                            <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                        </TransactionType>
                        <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                            <TransactionID>
                                <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                            </TransactionID>
                        </xsl:if>
                    </ns11:BusinessMessageHeader>
                    <pfx6:Subscriber>
                        <ServiceNo>
                            <xsl:value-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber/ServiceNo"/>
                        </ServiceNo>
                    </pfx6:Subscriber>
                </ns32:DataInquiriesRequest>
                <xsl:if test="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $GetDataPoliciesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESB_DA_LOVMapping">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>511</pd:x>
        <pd:y>166</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/ESB_DAMapping.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>913</pd:x>
        <pd:y>148</pd:y>
        <config>
            <element ref="ns33:DataInquiriesResponse"/>
        </config>
        <pd:inputBindings>
            <ns33:DataInquiriesResponse>
                <xsl:for-each select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:BusinessMessageHeader">
                    <ns11:BusinessMessageHeader>
                        <xsl:if test="ExternalTransactionID">
                            <ExternalTransactionID>
                                <xsl:value-of select="ExternalTransactionID"/>
                            </ExternalTransactionID>
                        </xsl:if>
                        <xsl:if test="COName">
                            <COName>
                                <xsl:value-of select="COName"/>
                            </COName>
                        </xsl:if>
                        <xsl:if test="Consumer">
                            <Consumer>
                                <xsl:value-of select="Consumer"/>
                            </Consumer>
                        </xsl:if>
                        <xsl:if test="Provider">
                            <Provider>
                                <xsl:value-of select="Provider"/>
                            </Provider>
                        </xsl:if>
                        <xsl:if test="Timestamp">
                            <Timestamp>
                                <xsl:value-of select="Timestamp"/>
                            </Timestamp>
                        </xsl:if>
                        <xsl:if test="Action">
                            <Action>
                                <xsl:value-of select="Action"/>
                            </Action>
                        </xsl:if>
                        <xsl:if test="ApplicationID">
                            <ApplicationID>
                                <xsl:value-of select="ApplicationID"/>
                            </ApplicationID>
                        </xsl:if>
                        <xsl:if test="ComponentName">
                            <ComponentName>
                                <xsl:value-of select="ComponentName"/>
                            </ComponentName>
                        </xsl:if>
                        <xsl:if test="Hostname">
                            <Hostname>
                                <xsl:value-of select="Hostname"/>
                            </Hostname>
                        </xsl:if>
                        <xsl:if test="TransactionDomain">
                            <TransactionDomain>
                                <xsl:value-of select="TransactionDomain"/>
                            </TransactionDomain>
                        </xsl:if>
                        <xsl:if test="TransactionType">
                            <TransactionType>
                                <xsl:value-of select="TransactionType"/>
                            </TransactionType>
                        </xsl:if>
                        <xsl:if test="TransactionID">
                            <TransactionID>
                                <xsl:value-of select="TransactionID"/>
                            </TransactionID>
                        </xsl:if>
                        <xsl:if test="Version">
                            <Version>
                                <xsl:value-of select="Version"/>
                            </Version>
                        </xsl:if>
                        <xsl:for-each select="SourceSystemInfo">
                            <SourceSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </SourceSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TargetSystemInfo">
                            <TargetSystemInfo>
                                <xsl:if test="@SystemVersion">
                                    <xsl:attribute name="SystemVersion">
                                        <xsl:value-of select="@SystemVersion"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <SystemtId>
                                    <xsl:value-of select="SystemtId"/>
                                </SystemtId>
                                <SystemAddress>
                                    <xsl:value-of select="SystemAddress"/>
                                </SystemAddress>
                            </TargetSystemInfo>
                        </xsl:for-each>
                        <xsl:for-each select="TrackingInfo">
                            <TrackingInfo>
                                <xsl:if test="SourceMessageId">
                                    <SourceMessageId>
                                        <xsl:value-of select="SourceMessageId"/>
                                    </SourceMessageId>
                                </xsl:if>
                                <xsl:if test="PointOfFailure">
                                    <PointOfFailure>
                                        <xsl:value-of select="PointOfFailure"/>
                                    </PointOfFailure>
                                </xsl:if>
                                <xsl:if test="RetryCount">
                                    <RetryCount>
                                        <xsl:value-of select="RetryCount"/>
                                    </RetryCount>
                                </xsl:if>
                            </TrackingInfo>
                        </xsl:for-each>
                    </ns11:BusinessMessageHeader>
                </xsl:for-each>
                <xsl:choose>
                    <xsl:when test="string-length($GetBalanceAndDate/ns33:DataInquiriesResponse/ns25:Response)>0">
                        <xsl:copy-of select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns25:Response"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:copy-of select="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns25:Response"/>
                    </xsl:otherwise>
                </xsl:choose>
                <ns34:SubscriberAssets>
                    <ns34:ListOfAssets>
                        <xsl:for-each select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset">
                            <xsl:if test="contains($GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=current()/AssetID]/ns35:OFFER_TYPE,'Data')">
                                <ns34:Asset>
                                    <xsl:variable name="CurrentId" select="current()/AssetID"/>
                                    <ns34:AssetID>
                                        <xsl:value-of select="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[current()/AssetID=ns35:OFFERID]/ns35:OFFER_NAME"/>
                                    </ns34:AssetID>
                                    <xsl:if test="AssetType">
                                        <ns34:AssetType>
                                            <xsl:value-of select="AssetType"/>
                                        </ns34:AssetType>
                                    </xsl:if>
                                    <xsl:if test="AssetsDescription">
                                        <ns34:AssetsDescription>
                                            <xsl:value-of select="AssetsDescription"/>
                                        </ns34:AssetsDescription>
                                    </xsl:if>
                                    <ns34:AssetAutoRenewalFlag>
                                        <xsl:value-of select="current()/AssetID"/>
                                    </ns34:AssetAutoRenewalFlag>
                                    <ListOfServices>
                                        <xsl:for-each select="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                                            <xsl:if test="(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)">
                                                <ns34:Service>
                                                    <ns34:ServiceID>
                                                        <xsl:value-of select="$CurrentId"/>
                                                    </ns34:ServiceID>
                                                    <xsl:if test="if(starts-with(current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceType,'-'))&#xA;then&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceUnit&#xA;else&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceType">
                                                        <ns34:ServiceType>
                                                            <xsl:value-of select="if(starts-with(current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceType,'-'))&#xA;then&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceUnit&#xA;else&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceType"/>
                                                        </ns34:ServiceType>
                                                    </xsl:if>
                                                    <xsl:if test="if(string-length( current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceVolume)>0)&#xA;then&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceVolume&#xA;else&#xA;$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=(tib:left(current()/ns34:AssetID,4))]/ns35:THRESHOLD">
                                                        <ns34:ServiceVolume>
                                                            <xsl:value-of select="if(string-length( current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceVolume)>0)&#xA;then&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceVolume&#xA;else&#xA;$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=(tib:left(current()/ns34:AssetID,4))]/ns35:THRESHOLD"/>
                                                        </ns34:ServiceVolume>
                                                    </xsl:if>
                                                    <ns34:ServiceUnit>
                                                        <xsl:value-of select="if(string-length(current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceUnit)>0)&#xA;then&#xA;current()/ListOfServices/ns34:Service[(current()/ns34:AssetID=$CurrentId) or (tib:left(current()/ns34:AssetID,4)=$CurrentId)]/ns34:ServiceUnit&#xA;else&#xA;&#xA;$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=current()/ns34:AssetID]/ns35:THRESHOLD"/>
                                                    </ns34:ServiceUnit>
                                                </ns34:Service>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </ListOfServices>
                                    <xsl:for-each select="product">
                                        <ns34:Product>
                                            <xsl:if test="ProductName">
                                                <ns34:ProductName>
                                                    <xsl:value-of select="ProductName"/>
                                                </ns34:ProductName>
                                            </xsl:if>
                                            <xsl:if test="ProductID">
                                                <ns34:ProductID>
                                                    <xsl:value-of select="ProductID"/>
                                                </ns34:ProductID>
                                            </xsl:if>
                                        </ns34:Product>
                                    </xsl:for-each>
                                    <xsl:for-each select="Price">
                                        <ns34:Price>
                                            <xsl:if test="One-Time">
                                                <ns34:One-Time>
                                                    <xsl:value-of select="One-Time"/>
                                                </ns34:One-Time>
                                            </xsl:if>
                                            <xsl:if test="Recurring">
                                                <ns34:Recurring>
                                                    <xsl:value-of select="Recurring"/>
                                                </ns34:Recurring>
                                            </xsl:if>
                                            <xsl:if test="Unit">
                                                <ns34:Unit>
                                                    <xsl:value-of select="Unit"/>
                                                </ns34:Unit>
                                            </xsl:if>
                                            <xsl:if test="RecurringFrequency">
                                                <ns34:RecurringFrequency>
                                                    <xsl:value-of select="RecurringFrequency"/>
                                                </ns34:RecurringFrequency>
                                            </xsl:if>
                                        </ns34:Price>
                                    </xsl:for-each>
                                    <xsl:if test="AssetStartDate">
                                        <ns34:AssetStartDate>
                                            <xsl:value-of select="AssetStartDate"/>
                                        </ns34:AssetStartDate>
                                    </xsl:if>
                                    <xsl:if test="AssetEndDate">
                                        <ns34:AssetEndDate>
                                            <xsl:value-of select="AssetEndDate"/>
                                        </ns34:AssetEndDate>
                                    </xsl:if>
                                    <xsl:if test="AssetActionCode">
                                        <ns34:AssetActionCode>
                                            <xsl:value-of select="AssetActionCode"/>
                                        </ns34:AssetActionCode>
                                    </xsl:if>
                                    <xsl:if test="AssetActionCommand">
                                        <ns34:AssetActionCommand>
                                            <xsl:value-of select="AssetActionCommand"/>
                                        </ns34:AssetActionCommand>
                                    </xsl:if>
                                    <xsl:if test="AssetStatus">
                                        <ns34:AssetStatus>
                                            <xsl:value-of select="AssetStatus"/>
                                        </ns34:AssetStatus>
                                    </xsl:if>
                                    <xsl:if test="AssetStatusDescription">
                                        <AssetStatusDescription>
                                            <xsl:value-of select="AssetStatusDescription"/>
                                        </AssetStatusDescription>
                                    </xsl:if>
                                </ns34:Asset>
                            </xsl:if>
                        </xsl:for-each>
                        <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                            <xsl:if test="lower-case($GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=current()/ns34:AssetID]/ns35:OFFER_TYPE)!='data' and&#xA;current()/ns34:AssetID !='500'">
                                <xsl:if test="tib:left(current()/ns34:AssetID,4)=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID and&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[tib:left(current()/ns34:AssetID,4)=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID]/AssetsDescription!='Data'">
                                    <ns34:Asset>
                                        <ns34:AssetID>
                                            <xsl:value-of select="if(tib:left(current()/ns34:AssetID,4) >= '9201' and (tib:left(current()/ns34:AssetID,4) &lt;= '9800'))&#xA;then&#xA;concat($GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=tib:left(current()/ns34:AssetID,4)]/ns35:OFFER_NAME,'-',$ESB_DA_LOVMapping/root/Records[DA_ID=concat('ZZZZ',tib:right(current()/ns34:AssetID,2))]/DA_INSTANCE)&#xA;else&#xA;concat($GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=tib:left(current()/ns34:AssetID,4)]/ns35:OFFER_NAME,'-',$ESB_DA_LOVMapping/root/Records[DA_ID=concat('XXXX',tib:right(current()/ns34:AssetID,2))]/DA_INSTANCE)"/>
                                        </ns34:AssetID>
                                        <ns34:AssetType>
                                            <xsl:value-of select="&quot;Test&quot;"/>
                                        </ns34:AssetType>
                                        <ns34:AssetsDescription>
                                            <xsl:value-of select="ns34:AssetsDescription"/>
                                        </ns34:AssetsDescription>
                                        <ns34:AssetAutoRenewalFlag>
                                            <xsl:value-of select="current()/ns34:AssetID"/>
                                        </ns34:AssetAutoRenewalFlag>
                                        <ListOfServices>
                                            <xsl:for-each select=".">
                                                <ns34:Service>
                                                    <ns34:ServiceID>
                                                        <xsl:value-of select="ns34:AssetID"/>
                                                    </ns34:ServiceID>
                                                    <ns34:ServiceType>
                                                        <xsl:value-of select="if((string-length(current()/ns34:AssetID)>4) and current()/ns34:AssetType='Time')&#xA;then&#xA;(($ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold div 60) - ns34:AssetsDescription)&#xA;else if((string-length(current()/ns34:AssetID)>4))&#xA;then&#xA;$ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold - ns34:AssetsDescription&#xA;else&#xA;0"/>
                                                    </ns34:ServiceType>
                                                    <ns34:ServiceVolume>
                                                        <xsl:value-of select="current()/ListOfServices/ns34:Service[1]/ns34:ServiceVolume"/>
                                                    </ns34:ServiceVolume>
                                                    <ns34:ServiceUnit>
                                                        <xsl:value-of select="if(string-length(current()/ns34:AssetID)>4  and current()/ns34:AssetType='Time')&#xA;then&#xA;        (if(string-length($ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold)>0)&#xA;&#x9;then &#xA;&#x9;$ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold  div 60&#xA;&#x9;else&#xA;&#x9;0)&#xA;else if(string-length(current()/ns34:AssetID)>4)&#xA;then&#xA;$ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold&#xA;else&#xA;0"/>
                                                    </ns34:ServiceUnit>
                                                </ns34:Service>
                                            </xsl:for-each>
                                        </ListOfServices>
                                        <xsl:for-each select="ns34:Product">
                                            <ns34:Product>
                                                <ns34:ProductName>
                                                    <xsl:value-of select="ns34:ProductName"/>
                                                </ns34:ProductName>
                                                <ns34:ProductID>
                                                    <xsl:value-of select="ns34:ProductID"/>
                                                </ns34:ProductID>
                                            </ns34:Product>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns34:Price">
                                            <ns34:Price>
                                                <ns34:One-Time>
                                                    <xsl:value-of select="ns34:One-Time"/>
                                                </ns34:One-Time>
                                                <ns34:Recurring>
                                                    <xsl:value-of select="ns34:Recurring"/>
                                                </ns34:Recurring>
                                                <ns34:Unit>
                                                    <xsl:value-of select="ns34:Unit"/>
                                                </ns34:Unit>
                                                <ns34:RecurringFrequency>
                                                    <xsl:value-of select="ns34:RecurringFrequency"/>
                                                </ns34:RecurringFrequency>
                                            </ns34:Price>
                                        </xsl:for-each>
                                        <ns34:AssetStartDate>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[tib:left(current()/ns34:AssetID,4)=AssetID]/AssetStartDate"/>
                                        </ns34:AssetStartDate>
                                        <ns34:AssetEndDate>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[tib:left(current()/ns34:AssetID,4)=AssetID]/AssetEndDate"/>
                                        </ns34:AssetEndDate>
                                        <ns34:AssetActionCode>
                                            <xsl:value-of select="ns34:AssetActionCode"/>
                                        </ns34:AssetActionCode>
                                        <ns34:AssetActionCommand>
                                            <xsl:value-of select="ns34:AssetActionCommand"/>
                                        </ns34:AssetActionCommand>
                                        <ns34:AssetStatus>
                                            <xsl:value-of select="ns34:AssetStatus"/>
                                        </ns34:AssetStatus>
                                        <xsl:if test="AssetStatusDescription">
                                            <AssetStatusDescription>
                                                <xsl:value-of select="AssetStatusDescription"/>
                                            </AssetStatusDescription>
                                        </xsl:if>
                                    </ns34:Asset>
                                </xsl:if>
                            </xsl:if>
                        </xsl:for-each>
                        <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                            <xsl:if test="(current()/ns34:Product/ns34:ProductID = $FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/product/ProductID or&#xA;current()/ns34:AssetStartDate = $FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetStartDate) and&#xA;current()/ns34:AssetID = $DA_OFFER_MAP/root/group[OFFERID=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID]/DA_ID">
                                <ns34:Asset>
                                    <xsl:if test="current()/ns34:AssetID">
                                        <ns34:AssetID>
                                            <xsl:value-of select="current()/ns34:AssetID"/>
                                        </ns34:AssetID>
                                    </xsl:if>
                                    <ns34:AssetType>
                                        <xsl:value-of select="&quot;Test123&quot;"/>
                                    </ns34:AssetType>
                                    <xsl:variable name="OfferId" select="ns34:AssetID"/>
                                    <xsl:variable name="AssetId" select="&#xA;&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID  and product/ProductID=current()/ns34:Product/ns34:ProductID ]/AssetID&#xA;"/>
                                    <xsl:if test="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID]/AssetID">
                                        <ns34:AssetsDescription>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID]/AssetID"/>
                                        </ns34:AssetsDescription>
                                    </xsl:if>
                                    <ns34:AssetAutoRenewalFlag>
                                        <xsl:value-of select="if($DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID and&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID = $DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID)&#xA;then&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID  and product/ProductID=current()/ns34:Product/ns34:ProductID ]/AssetID&#xA;else&#xA;0"/>
                                    </ns34:AssetAutoRenewalFlag>
                                    <xsl:for-each select="ListOfServices">
                                        <ListOfServices>
                                            <xsl:for-each select="ns34:Service">
                                                <ns34:Service>
                                                    <ns34:ServiceID>
                                                        <xsl:value-of select="$AssetId"/>
                                                    </ns34:ServiceID>
                                                    <xsl:if test="ns34:ServiceType">
                                                        <ns34:ServiceType>
                                                            <xsl:value-of select="ns34:ServiceType"/>
                                                        </ns34:ServiceType>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:ServiceVolume">
                                                        <ns34:ServiceVolume>
                                                            <xsl:value-of select="ns34:ServiceVolume"/>
                                                        </ns34:ServiceVolume>
                                                    </xsl:if>
                                                    <ns34:ServiceUnit>
                                                        <xsl:value-of select="$DA_OFFER_MAP/root/group[OFFERID=$AssetId and DA_ID=$OfferId]/DA_VALUES"/>
                                                    </ns34:ServiceUnit>
                                                </ns34:Service>
                                            </xsl:for-each>
                                        </ListOfServices>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns34:Product">
                                        <ns34:Product>
                                            <xsl:if test="ns34:ProductName">
                                                <ns34:ProductName>
                                                    <xsl:value-of select="ns34:ProductName"/>
                                                </ns34:ProductName>
                                            </xsl:if>
                                            <xsl:if test="ns34:ProductID">
                                                <ns34:ProductID>
                                                    <xsl:value-of select="ns34:ProductID"/>
                                                </ns34:ProductID>
                                            </xsl:if>
                                        </ns34:Product>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns34:Price">
                                        <ns34:Price>
                                            <xsl:if test="ns34:One-Time">
                                                <ns34:One-Time>
                                                    <xsl:value-of select="ns34:One-Time"/>
                                                </ns34:One-Time>
                                            </xsl:if>
                                            <xsl:if test="ns34:Recurring">
                                                <ns34:Recurring>
                                                    <xsl:value-of select="ns34:Recurring"/>
                                                </ns34:Recurring>
                                            </xsl:if>
                                            <xsl:if test="ns34:Unit">
                                                <ns34:Unit>
                                                    <xsl:value-of select="ns34:Unit"/>
                                                </ns34:Unit>
                                            </xsl:if>
                                            <xsl:if test="ns34:RecurringFrequency">
                                                <ns34:RecurringFrequency>
                                                    <xsl:value-of select="ns34:RecurringFrequency"/>
                                                </ns34:RecurringFrequency>
                                            </xsl:if>
                                        </ns34:Price>
                                    </xsl:for-each>
                                    <xsl:if test="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[$AssetId=AssetID]/AssetStartDate">
                                        <ns34:AssetStartDate>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[$AssetId=AssetID]/AssetStartDate"/>
                                        </ns34:AssetStartDate>
                                    </xsl:if>
                                    <xsl:if test="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[$AssetId=AssetID]/AssetEndDate">
                                        <ns34:AssetEndDate>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[$AssetId=AssetID]/AssetEndDate"/>
                                        </ns34:AssetEndDate>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetActionCode">
                                        <ns34:AssetActionCode>
                                            <xsl:value-of select="ns34:AssetActionCode"/>
                                        </ns34:AssetActionCode>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetActionCommand">
                                        <ns34:AssetActionCommand>
                                            <xsl:value-of select="ns34:AssetActionCommand"/>
                                        </ns34:AssetActionCommand>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetStatus">
                                        <ns34:AssetStatus>
                                            <xsl:value-of select="ns34:AssetStatus"/>
                                        </ns34:AssetStatus>
                                    </xsl:if>
                                    <xsl:if test="AssetStatusDescription">
                                        <AssetStatusDescription>
                                            <xsl:value-of select="AssetStatusDescription"/>
                                        </AssetStatusDescription>
                                    </xsl:if>
                                </ns34:Asset>
                            </xsl:if>
                        </xsl:for-each>
                        <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                            <xsl:if test="current()/ns34:AssetID=$DA_OFFER_MAP/root/group/DA_ID and&#xA;$DA_OFFER_MAP/root/group[current()/ns34:AssetID=$DA_OFFER_MAP/root/group/DA_ID]/OFFERID=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID">
                                <xsl:for-each select=".">
                                    <xsl:if test="string-length(current()/ns34:Product/ns34:ProductID)=0">
                                        <ns34:Asset>
                                            <xsl:if test="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/ns35:OFFER_NAME">
                                                <ns34:AssetID>
                                                    <xsl:value-of select="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/ns35:OFFER_NAME"/>
                                                </ns34:AssetID>
                                            </xsl:if>
                                            <ns34:AssetType>
                                                <xsl:value-of select="&quot;test122334&quot;"/>
                                            </ns34:AssetType>
                                            <ns34:AssetsDescription>
                                                <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/AssetsDescription"/>
                                            </ns34:AssetsDescription>
                                            <xsl:if test="$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID">
                                                <ns34:AssetAutoRenewalFlag>
                                                    <xsl:value-of select="$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID"/>
                                                </ns34:AssetAutoRenewalFlag>
                                            </xsl:if>
                                            <xsl:for-each select="ListOfServices">
                                                <ListOfServices>
                                                    <xsl:for-each select="ns34:Service">
                                                        <ns34:Service>
                                                            <ns34:ServiceID>
                                                                <xsl:value-of select="ns34:ServiceID"/>
                                                            </ns34:ServiceID>
                                                            <xsl:if test="ns34:ServiceType">
                                                                <ns34:ServiceType>
                                                                    <xsl:value-of select="ns34:ServiceType"/>
                                                                </ns34:ServiceType>
                                                            </xsl:if>
                                                            <xsl:if test="ns34:ServiceVolume">
                                                                <ns34:ServiceVolume>
                                                                    <xsl:value-of select="ns34:ServiceVolume"/>
                                                                </ns34:ServiceVolume>
                                                            </xsl:if>
                                                            <xsl:if test="if($DA_OFFER_MAP/root/group/DA_ID=current()/ns34:ServiceID)&#xA;then&#xA;$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:ServiceID]/DA_VALUES&#xA;else&#xA;ns34:ServiceUnit">
                                                                <ns34:ServiceUnit>
                                                                    <xsl:value-of select="if($DA_OFFER_MAP/root/group/DA_ID=current()/ns34:ServiceID)&#xA;then&#xA;$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:ServiceID]/DA_VALUES&#xA;else&#xA;ns34:ServiceUnit"/>
                                                                </ns34:ServiceUnit>
                                                            </xsl:if>
                                                        </ns34:Service>
                                                    </xsl:for-each>
                                                </ListOfServices>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns34:Product">
                                                <ns34:Product>
                                                    <xsl:if test="ns34:ProductName">
                                                        <ns34:ProductName>
                                                            <xsl:value-of select="ns34:ProductName"/>
                                                        </ns34:ProductName>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:ProductID">
                                                        <ns34:ProductID>
                                                            <xsl:value-of select="ns34:ProductID"/>
                                                        </ns34:ProductID>
                                                    </xsl:if>
                                                </ns34:Product>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns34:Price">
                                                <ns34:Price>
                                                    <xsl:if test="ns34:One-Time">
                                                        <ns34:One-Time>
                                                            <xsl:value-of select="ns34:One-Time"/>
                                                        </ns34:One-Time>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:Recurring">
                                                        <ns34:Recurring>
                                                            <xsl:value-of select="ns34:Recurring"/>
                                                        </ns34:Recurring>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:Unit">
                                                        <ns34:Unit>
                                                            <xsl:value-of select="ns34:Unit"/>
                                                        </ns34:Unit>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:RecurringFrequency">
                                                        <ns34:RecurringFrequency>
                                                            <xsl:value-of select="ns34:RecurringFrequency"/>
                                                        </ns34:RecurringFrequency>
                                                    </xsl:if>
                                                </ns34:Price>
                                            </xsl:for-each>
                                            <xsl:if test="ns34:AssetStartDate">
                                                <ns34:AssetStartDate>
                                                    <xsl:value-of select="ns34:AssetStartDate"/>
                                                </ns34:AssetStartDate>
                                            </xsl:if>
                                            <xsl:if test="ns34:AssetEndDate">
                                                <ns34:AssetEndDate>
                                                    <xsl:value-of select="ns34:AssetEndDate"/>
                                                </ns34:AssetEndDate>
                                            </xsl:if>
                                            <ns34:AssetActionCode>
                                                <xsl:value-of select="ns34:AssetActionCode"/>
                                            </ns34:AssetActionCode>
                                            <xsl:if test="ns34:AssetActionCommand">
                                                <ns34:AssetActionCommand>
                                                    <xsl:value-of select="ns34:AssetActionCommand"/>
                                                </ns34:AssetActionCommand>
                                            </xsl:if>
                                            <xsl:if test="ns34:AssetStatus">
                                                <ns34:AssetStatus>
                                                    <xsl:value-of select="ns34:AssetStatus"/>
                                                </ns34:AssetStatus>
                                            </xsl:if>
                                            <xsl:if test="AssetStatusDescription">
                                                <AssetStatusDescription>
                                                    <xsl:value-of select="AssetStatusDescription"/>
                                                </AssetStatusDescription>
                                            </xsl:if>
                                        </ns34:Asset>
                                    </xsl:if>
                                </xsl:for-each>
                            </xsl:if>
                        </xsl:for-each>
                    </ns34:ListOfAssets>
                </ns34:SubscriberAssets>
                <ns33:Quotas>
                    <xsl:for-each select="$Call_Get_UCUT/ns33:DataInquiriesResponse/ns33:Quotas/ns33:Quota">
                        <ns33:Quota>
                            <ns33:ID>
                                <xsl:value-of select="ns33:ID"/>
                            </ns33:ID>
                            <ns33:Remaining>
                                <xsl:value-of select="ns33:Threshold - ns33:Used"/>
                            </ns33:Remaining>
                            <ns33:Used>
                                <xsl:value-of select="ns33:Used"/>
                            </ns33:Used>
                            <ns33:Threshold>
                                <xsl:value-of select="ns33:Threshold"/>
                            </ns33:Threshold>
                        </ns33:Quota>
                    </xsl:for-each>
                    <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                        <ns33:Quota>
                            <ns33:ID>
                                <xsl:value-of select="tib:left(ns34:AssetID, 4)"/>
                            </ns33:ID>
                            <ns33:Remaining>
                                <xsl:value-of select="0"/>
                            </ns33:Remaining>
                            <ns33:Used>
                                <xsl:value-of select="round(current()/ns34:AssetsDescription)"/>
                            </ns33:Used>
                            <ns33:Threshold>
                                <xsl:value-of select="if(string-length(current()/ns34:AssetID)>4)&#xA;then&#xA;   ( if(string-length($ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold)>0)&#xA;&#x9;&#x9;then&#xA;&#x9;&#x9;$ESB_DAThreshold/ESB_DAThresholdMapping/Record[DA_ID=current()/ns34:AssetID]/DA_Threshold&#xA;&#x9;&#x9;else &#xA;0)&#xA;else&#xA;0"/>
                            </ns33:Threshold>
                        </ns33:Quota>
                    </xsl:for-each>
                </ns33:Quotas>
            </ns33:DataInquiriesResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FilteringOffer">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>659</pd:x>
        <pd:y>273</pd:y>
        <config>
            <element ref="ns31:GetOfferResponse"/>
        </config>
        <pd:inputBindings>
            <ns31:GetOfferResponse>
                <ns31:GetOfferRes>
                    <xsl:copy-of select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:BusinessMessageHeader"/>
                    <ns4:SubscriberAssets>
                        <xsl:for-each select="$Parse-XML/pfx16:GetOfferRequest/pfx16:GetOfferReq/ns4:Subscriber">
                            <Subscriber>
                                <ServiceNo>
                                    <xsl:value-of select="ServiceNo"/>
                                </ServiceNo>
                                <xsl:if test="ns4:IMSI">
                                    <ns4:IMSI>
                                        <xsl:value-of select="ns4:IMSI"/>
                                    </ns4:IMSI>
                                </xsl:if>
                                <xsl:if test="SubscriberType">
                                    <SubscriberType>
                                        <xsl:value-of select="SubscriberType"/>
                                    </SubscriberType>
                                </xsl:if>
                            </Subscriber>
                        </xsl:for-each>
                        <xsl:for-each select="$Call_GetOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets">
                            <ListOfAssets>
                                <xsl:for-each select="Asset">
                                    <xsl:if test="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records/ns35:OFFERID=current()/AssetID and&#xA;$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=current()/AssetID]/ns35:SHOW_OFFER_FLAG='Y'">
                                        <Asset>
                                            <xsl:if test="AssetID">
                                                <AssetID>
                                                    <xsl:value-of select="AssetID"/>
                                                </AssetID>
                                            </xsl:if>
                                            <xsl:if test="AssetType">
                                                <AssetType>
                                                    <xsl:value-of select="AssetType"/>
                                                </AssetType>
                                            </xsl:if>
                                            <xsl:if test="AssetsDescription">
                                                <AssetsDescription>
                                                    <xsl:value-of select="AssetsDescription"/>
                                                </AssetsDescription>
                                            </xsl:if>
                                            <xsl:if test="AssetAutoRenewalFlag">
                                                <AssetAutoRenewalFlag>
                                                    <xsl:value-of select="AssetAutoRenewalFlag"/>
                                                </AssetAutoRenewalFlag>
                                            </xsl:if>
                                            <xsl:for-each select="ListOfServices">
                                                <ListOfServices>
                                                    <xsl:for-each select="Service">
                                                        <Service>
                                                            <ServiceID>
                                                                <xsl:value-of select="ServiceID"/>
                                                            </ServiceID>
                                                            <xsl:if test="ServiceType">
                                                                <ServiceType>
                                                                    <xsl:value-of select="ServiceType"/>
                                                                </ServiceType>
                                                            </xsl:if>
                                                            <xsl:if test="ServiceVolume">
                                                                <ServiceVolume>
                                                                    <xsl:value-of select="ServiceVolume"/>
                                                                </ServiceVolume>
                                                            </xsl:if>
                                                            <xsl:if test="ServiceUnit">
                                                                <ServiceUnit>
                                                                    <xsl:value-of select="ServiceUnit"/>
                                                                </ServiceUnit>
                                                            </xsl:if>
                                                        </Service>
                                                    </xsl:for-each>
                                                </ListOfServices>
                                            </xsl:for-each>
                                            <xsl:for-each select="product">
                                                <product>
                                                    <xsl:if test="ProductName">
                                                        <ProductName>
                                                            <xsl:value-of select="ProductName"/>
                                                        </ProductName>
                                                    </xsl:if>
                                                    <xsl:if test="ProductID">
                                                        <ProductID>
                                                            <xsl:value-of select="ProductID"/>
                                                        </ProductID>
                                                    </xsl:if>
                                                </product>
                                            </xsl:for-each>
                                            <xsl:for-each select="Price">
                                                <Price>
                                                    <xsl:if test="One-Time">
                                                        <One-Time>
                                                            <xsl:value-of select="One-Time"/>
                                                        </One-Time>
                                                    </xsl:if>
                                                    <xsl:if test="Recurring">
                                                        <Recurring>
                                                            <xsl:value-of select="Recurring"/>
                                                        </Recurring>
                                                    </xsl:if>
                                                    <xsl:if test="Unit">
                                                        <Unit>
                                                            <xsl:value-of select="Unit"/>
                                                        </Unit>
                                                    </xsl:if>
                                                    <xsl:if test="RecurringFrequency">
                                                        <RecurringFrequency>
                                                            <xsl:value-of select="RecurringFrequency"/>
                                                        </RecurringFrequency>
                                                    </xsl:if>
                                                </Price>
                                            </xsl:for-each>
                                            <xsl:if test="AssetStartDate">
                                                <AssetStartDate>
                                                    <xsl:value-of select="AssetStartDate"/>
                                                </AssetStartDate>
                                            </xsl:if>
                                            <xsl:if test="AssetEndDate">
                                                <AssetEndDate>
                                                    <xsl:value-of select="AssetEndDate"/>
                                                </AssetEndDate>
                                            </xsl:if>
                                            <xsl:if test="AssetActionCode">
                                                <AssetActionCode>
                                                    <xsl:value-of select="AssetActionCode"/>
                                                </AssetActionCode>
                                            </xsl:if>
                                            <xsl:if test="AssetActionCommand">
                                                <AssetActionCommand>
                                                    <xsl:value-of select="AssetActionCommand"/>
                                                </AssetActionCommand>
                                            </xsl:if>
                                            <xsl:if test="AssetStatus">
                                                <AssetStatus>
                                                    <xsl:value-of select="AssetStatus"/>
                                                </AssetStatus>
                                            </xsl:if>
                                            <xsl:if test="AssetStatusDescription">
                                                <AssetStatusDescription>
                                                    <xsl:value-of select="AssetStatusDescription"/>
                                                </AssetStatusDescription>
                                            </xsl:if>
                                        </Asset>
                                    </xsl:if>
                                </xsl:for-each>
                            </ListOfAssets>
                        </xsl:for-each>
                    </ns4:SubscriberAssets>
                </ns31:GetOfferRes>
            </ns31:GetOfferResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESB_DAThreshold">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>514</pd:x>
        <pd:y>284</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/DA_THRESHOLD.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="DA_OFFER_MAP">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>660</pd:x>
        <pd:y>155</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/Internal/Shared Variable.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="MapPrepaidOffer">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>912</pd:x>
        <pd:y>271</pd:y>
        <config>
            <element ref="ns33:DataInquiriesResponse"/>
        </config>
        <pd:inputBindings>
            <ns33:DataInquiriesResponse>
                <xsl:copy-of select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns11:BusinessMessageHeader"/>
                <xsl:copy-of select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns25:Response"/>
                <ns34:SubscriberAssets>
                    <xsl:copy-of select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:Subscriber"/>
                    <ns34:ListOfAssets>
                        <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                            <xsl:if test="(current()/ns34:Product/ns34:ProductID = $FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/product/ProductID or&#xA;current()/ns34:AssetStartDate = $FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetStartDate) and&#xA;current()/ns34:AssetID = $DA_OFFER_MAP/root/group[OFFERID=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID]/DA_ID">
                                <ns34:Asset>
                                    <xsl:if test="current()/ns34:AssetID">
                                        <ns34:AssetID>
                                            <xsl:value-of select="current()/ns34:AssetID"/>
                                        </ns34:AssetID>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetType">
                                        <ns34:AssetType>
                                            <xsl:value-of select="ns34:AssetType"/>
                                        </ns34:AssetType>
                                    </xsl:if>
                                    <xsl:variable name="OfferId" select="ns34:AssetID"/>
                                    <xsl:variable name="AssetId" select="&#xA;&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID  and product/ProductID=current()/ns34:Product/ns34:ProductID ]/AssetID&#xA;"/>
                                    <xsl:if test="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID]/AssetID">
                                        <ns34:AssetsDescription>
                                            <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID]/AssetID"/>
                                        </ns34:AssetsDescription>
                                    </xsl:if>
                                    <ns34:AssetAutoRenewalFlag>
                                        <xsl:value-of select="if($DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID and&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID = $DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID)&#xA;then&#xA;$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[$DA_OFFER_MAP/root/group/DA_ID=current()/ns34:AssetID]/OFFERID  and product/ProductID=current()/ns34:Product/ns34:ProductID ]/AssetID&#xA;else&#xA;0"/>
                                    </ns34:AssetAutoRenewalFlag>
                                    <xsl:for-each select="ListOfServices">
                                        <ListOfServices>
                                            <xsl:for-each select="ns34:Service">
                                                <ns34:Service>
                                                    <ns34:ServiceID>
                                                        <xsl:value-of select="$AssetId"/>
                                                    </ns34:ServiceID>
                                                    <xsl:if test="ns34:ServiceType">
                                                        <ns34:ServiceType>
                                                            <xsl:value-of select="ns34:ServiceType"/>
                                                        </ns34:ServiceType>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:ServiceVolume">
                                                        <ns34:ServiceVolume>
                                                            <xsl:value-of select="ns34:ServiceVolume"/>
                                                        </ns34:ServiceVolume>
                                                    </xsl:if>
                                                    <ns34:ServiceUnit>
                                                        <xsl:value-of select="$DA_OFFER_MAP/root/group[OFFERID=$AssetId and DA_ID=$OfferId]/DA_VALUES"/>
                                                    </ns34:ServiceUnit>
                                                </ns34:Service>
                                            </xsl:for-each>
                                        </ListOfServices>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns34:Product">
                                        <ns34:Product>
                                            <xsl:if test="ns34:ProductName">
                                                <ns34:ProductName>
                                                    <xsl:value-of select="ns34:ProductName"/>
                                                </ns34:ProductName>
                                            </xsl:if>
                                            <xsl:if test="ns34:ProductID">
                                                <ns34:ProductID>
                                                    <xsl:value-of select="ns34:ProductID"/>
                                                </ns34:ProductID>
                                            </xsl:if>
                                        </ns34:Product>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns34:Price">
                                        <ns34:Price>
                                            <xsl:if test="ns34:One-Time">
                                                <ns34:One-Time>
                                                    <xsl:value-of select="ns34:One-Time"/>
                                                </ns34:One-Time>
                                            </xsl:if>
                                            <xsl:if test="ns34:Recurring">
                                                <ns34:Recurring>
                                                    <xsl:value-of select="ns34:Recurring"/>
                                                </ns34:Recurring>
                                            </xsl:if>
                                            <xsl:if test="ns34:Unit">
                                                <ns34:Unit>
                                                    <xsl:value-of select="ns34:Unit"/>
                                                </ns34:Unit>
                                            </xsl:if>
                                            <xsl:if test="ns34:RecurringFrequency">
                                                <ns34:RecurringFrequency>
                                                    <xsl:value-of select="ns34:RecurringFrequency"/>
                                                </ns34:RecurringFrequency>
                                            </xsl:if>
                                        </ns34:Price>
                                    </xsl:for-each>
                                    <xsl:if test="ns34:AssetStartDate">
                                        <ns34:AssetStartDate>
                                            <xsl:value-of select="ns34:AssetStartDate"/>
                                        </ns34:AssetStartDate>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetEndDate">
                                        <ns34:AssetEndDate>
                                            <xsl:value-of select="ns34:AssetEndDate"/>
                                        </ns34:AssetEndDate>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetActionCode">
                                        <ns34:AssetActionCode>
                                            <xsl:value-of select="ns34:AssetActionCode"/>
                                        </ns34:AssetActionCode>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetActionCommand">
                                        <ns34:AssetActionCommand>
                                            <xsl:value-of select="ns34:AssetActionCommand"/>
                                        </ns34:AssetActionCommand>
                                    </xsl:if>
                                    <xsl:if test="ns34:AssetStatus">
                                        <ns34:AssetStatus>
                                            <xsl:value-of select="ns34:AssetStatus"/>
                                        </ns34:AssetStatus>
                                    </xsl:if>
                                    <xsl:if test="AssetStatusDescription">
                                        <AssetStatusDescription>
                                            <xsl:value-of select="AssetStatusDescription"/>
                                        </AssetStatusDescription>
                                    </xsl:if>
                                </ns34:Asset>
                            </xsl:if>
                        </xsl:for-each>
                        <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns34:SubscriberAssets/ns34:ListOfAssets/ns34:Asset">
                            <xsl:if test="current()/ns34:AssetID=$DA_OFFER_MAP/root/group/DA_ID and&#xA;$DA_OFFER_MAP/root/group[current()/ns34:AssetID=$DA_OFFER_MAP/root/group/DA_ID]/OFFERID=$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset/AssetID">
                                <xsl:for-each select=".">
                                    <xsl:if test="string-length(current()/ns34:Product/ns34:ProductID)=0">
                                        <ns34:Asset>
                                            <xsl:if test="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/ns35:OFFER_NAME">
                                                <ns34:AssetID>
                                                    <xsl:value-of select="$GetVariable/ns35:ESBOfferMapping/ns35:Record/ns35:Records[ns35:OFFERID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/ns35:OFFER_NAME"/>
                                                </ns34:AssetID>
                                            </xsl:if>
                                            <xsl:if test="ns34:AssetType">
                                                <ns34:AssetType>
                                                    <xsl:value-of select="ns34:AssetType"/>
                                                </ns34:AssetType>
                                            </xsl:if>
                                            <ns34:AssetsDescription>
                                                <xsl:value-of select="$FilteringOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:SubscriberAssets/ListOfAssets/Asset[AssetID=$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID]/AssetsDescription"/>
                                            </ns34:AssetsDescription>
                                            <xsl:if test="$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID">
                                                <ns34:AssetAutoRenewalFlag>
                                                    <xsl:value-of select="$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:AssetID]/OFFERID"/>
                                                </ns34:AssetAutoRenewalFlag>
                                            </xsl:if>
                                            <xsl:for-each select="ListOfServices">
                                                <ListOfServices>
                                                    <xsl:for-each select="ns34:Service">
                                                        <ns34:Service>
                                                            <ns34:ServiceID>
                                                                <xsl:value-of select="ns34:ServiceID"/>
                                                            </ns34:ServiceID>
                                                            <xsl:if test="ns34:ServiceType">
                                                                <ns34:ServiceType>
                                                                    <xsl:value-of select="ns34:ServiceType"/>
                                                                </ns34:ServiceType>
                                                            </xsl:if>
                                                            <xsl:if test="ns34:ServiceVolume">
                                                                <ns34:ServiceVolume>
                                                                    <xsl:value-of select="ns34:ServiceVolume"/>
                                                                </ns34:ServiceVolume>
                                                            </xsl:if>
                                                            <xsl:if test="if($DA_OFFER_MAP/root/group/DA_ID=current()/ns34:ServiceID)&#xA;then&#xA;$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:ServiceID]/DA_VALUES&#xA;else&#xA;ns34:ServiceUnit">
                                                                <ns34:ServiceUnit>
                                                                    <xsl:value-of select="if($DA_OFFER_MAP/root/group/DA_ID=current()/ns34:ServiceID)&#xA;then&#xA;$DA_OFFER_MAP/root/group[DA_ID=current()/ns34:ServiceID]/DA_VALUES&#xA;else&#xA;ns34:ServiceUnit"/>
                                                                </ns34:ServiceUnit>
                                                            </xsl:if>
                                                        </ns34:Service>
                                                    </xsl:for-each>
                                                </ListOfServices>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns34:Product">
                                                <ns34:Product>
                                                    <xsl:if test="ns34:ProductName">
                                                        <ns34:ProductName>
                                                            <xsl:value-of select="ns34:ProductName"/>
                                                        </ns34:ProductName>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:ProductID">
                                                        <ns34:ProductID>
                                                            <xsl:value-of select="ns34:ProductID"/>
                                                        </ns34:ProductID>
                                                    </xsl:if>
                                                </ns34:Product>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns34:Price">
                                                <ns34:Price>
                                                    <xsl:if test="ns34:One-Time">
                                                        <ns34:One-Time>
                                                            <xsl:value-of select="ns34:One-Time"/>
                                                        </ns34:One-Time>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:Recurring">
                                                        <ns34:Recurring>
                                                            <xsl:value-of select="ns34:Recurring"/>
                                                        </ns34:Recurring>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:Unit">
                                                        <ns34:Unit>
                                                            <xsl:value-of select="ns34:Unit"/>
                                                        </ns34:Unit>
                                                    </xsl:if>
                                                    <xsl:if test="ns34:RecurringFrequency">
                                                        <ns34:RecurringFrequency>
                                                            <xsl:value-of select="ns34:RecurringFrequency"/>
                                                        </ns34:RecurringFrequency>
                                                    </xsl:if>
                                                </ns34:Price>
                                            </xsl:for-each>
                                            <xsl:if test="ns34:AssetStartDate">
                                                <ns34:AssetStartDate>
                                                    <xsl:value-of select="ns34:AssetStartDate"/>
                                                </ns34:AssetStartDate>
                                            </xsl:if>
                                            <xsl:if test="ns34:AssetEndDate">
                                                <ns34:AssetEndDate>
                                                    <xsl:value-of select="ns34:AssetEndDate"/>
                                                </ns34:AssetEndDate>
                                            </xsl:if>
                                            <ns34:AssetActionCode>
                                                <xsl:value-of select="ns34:AssetActionCode"/>
                                            </ns34:AssetActionCode>
                                            <xsl:if test="ns34:AssetActionCommand">
                                                <ns34:AssetActionCommand>
                                                    <xsl:value-of select="ns34:AssetActionCommand"/>
                                                </ns34:AssetActionCommand>
                                            </xsl:if>
                                            <xsl:if test="ns34:AssetStatus">
                                                <ns34:AssetStatus>
                                                    <xsl:value-of select="ns34:AssetStatus"/>
                                                </ns34:AssetStatus>
                                            </xsl:if>
                                            <xsl:if test="AssetStatusDescription">
                                                <AssetStatusDescription>
                                                    <xsl:value-of select="AssetStatusDescription"/>
                                                </AssetStatusDescription>
                                            </xsl:if>
                                        </ns34:Asset>
                                    </xsl:if>
                                </xsl:for-each>
                            </xsl:if>
                        </xsl:for-each>
                    </ns34:ListOfAssets>
                </ns34:SubscriberAssets>
                <ns33:Quotas>
                    <xsl:for-each select="$GetBalanceAndDate/ns33:DataInquiriesResponse/ns33:Quotas/ns33:Quota">
                        <ns33:Quota>
                            <ns33:ID>
                                <xsl:value-of select="ns33:ID"/>
                            </ns33:ID>
                            <ns33:Remaining>
                                <xsl:value-of select="ns33:Remaining"/>
                            </ns33:Remaining>
                            <ns33:Used>
                                <xsl:value-of select="ns33:Used"/>
                            </ns33:Used>
                            <ns33:Threshold>
                                <xsl:value-of select="ns33:Threshold"/>
                            </ns33:Threshold>
                        </ns33:Quota>
                    </xsl:for-each>
                </ns33:Quotas>
            </ns33:DataInquiriesResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Call_GetOffer</pd:from>
        <pd:to>ESB_DA_LOVMapping</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Get_UCUT</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetDataPoliciesReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetDataPoliciesReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_GetOffer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_GetOffer</pd:from>
        <pd:to>Generate-Error</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_GetOffer/ns31:GetOfferResponse/ns31:GetOfferRes/ns4:Response/ResponseCode!=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Get_UCUT</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_Get_UCUT/ns33:DataInquiriesResponse/ns25:Response/ResponseCode!=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetBalanceAndDate</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESB_DA_LOVMapping</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>ESB_DAThreshold</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FilteringOffer</pd:from>
        <pd:to>Call_Get_UCUT</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESB_DAThreshold</pd:from>
        <pd:to>DA_OFFER_MAP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>DA_OFFER_MAP</pd:from>
        <pd:to>FilteringOffer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetBalanceAndDate</pd:from>
        <pd:to>MapPrepaidOffer</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>1=2</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapPrepaidOffer</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FilteringOffer</pd:from>
        <pd:to>GetBalanceAndDate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Please note that there are some irrelevant mappings in the code, as this was inhenced with respect to accomodate preaid scenarios.</pd:description>
        <pd:x>178</pd:x>
        <pd:y>50</pd:y>
        <pd:width>291</pd:width>
        <pd:height>69</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>