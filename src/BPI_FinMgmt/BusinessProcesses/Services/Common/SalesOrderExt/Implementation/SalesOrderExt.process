<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx131="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:pfx272="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx271="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:ns1611="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns271="http://www.siebel.com/xml/CBiO2AutoPayRegistration" xmlns:ns181="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns1411="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:pfx57="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayExecutionResponse.xsd" xmlns:zainesbcustom11="java://GenUUID" xmlns:pfx59="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayTransactionResponse.xsd" xmlns:ns1511="http://xmlns.tibco.com/encodings/mime" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" xmlns:pfx52="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://www.zain.com/ZESB/Services/Voucher" xmlns:pfx141="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx281="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceReq.xsd" xmlns:ns191="http://www.ericsson.com/BusinessSchemas/Services/Common/JMSSchema/JMSHeader.xsd" xmlns:ns51="www.tibco.com/createcustomer" xmlns:ns52="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx48="http://ericsson.com/services/ws_CIL_5" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx46="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx47="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx45="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:pfx42="qqwe" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:ns1311="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:pfx292="http://siebel.com/GetRTAAPI" xmlns:pfx291="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetInvoiceRes.xsd" xmlns:pfx111="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx41="http://www.zain.com/ZESB/Services/ExecuteRecharge" xmlns:pfx421="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:ns71="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx391="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx39="http://www.siebel.com/xmlCBiO2%20Billing%20Profile%20Modification%20Res%20IO" xmlns:zainKW="java://com.ZainKW.CurrentNanoSecconds" xmlns:ns61="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:pfx31="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetPrepaidBalance/GetPrepaidBalRes.xsd" xmlns:pfx32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/CRM/Query/PaymentQuery.xsd" xmlns:pfx33="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx34="http://xmlns.zain.com/BSS/ESB/Financial/PaymentPosting" xmlns:pfx35="http://www.zain.com/ZESB/Services/Payment" xmlns:pfx37="http://www.zain.com/ZESB/Services/SalesOrder" xmlns:pfx38="http://www.zain.com/ZESB/Services/SalesOrder/Types" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessWSDLs/Query/GetPaymentRes.xsd" xmlns:pfx412="http://www.tibco.com/schemas/GW/BusinessProcesses/Services/CRM/Modification/ModifyCustomer/PaymentProfileUpdate/HelperProcess/Schema.xsd" xmlns:pfx121="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx411="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:ns81="http://www.ericsson.com/ZainKW/CommonProject/BusinessWSDLS/Services/Query/GetSubAccountDetails/GetSubAccountDetailsResponse.xsd" xmlns:pfx511="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns82="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx28="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:pfx29="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:pfx22="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20IO" xmlns:pfx20="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/CreateOrderResponse.xsd" xmlns:pfx21="http://www.tibco.com/schemas/GW/tester-2/Schema.xsd" xmlns:pfx26="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeRequest.xsd" xmlns:pfx27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ModifyOrder/ModifyOrderRequest.xsd" xmlns:pfx24="http://www.siebel.com/xml/CBiO2%20Customer%20Creation%20Res%20IO" xmlns:pfx25="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/ContractResourceChangeResponse.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns91="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:ns231="www.tibco.com/plugin/java/JavaMethodActivityInput" xmlns:pfx711="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:pfx91="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:ns221="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariable/Internal/ResponseCodes_Ph2.xsd" xmlns:pfx101="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdlPfx="http://www.zain.com/ZESB/Services/PrepaidBalance" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx82="http://www.siebel.com/xml/MOZ1%20Serv%20Account%20Creation%20Res" xmlns:ns1911="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:ns2111="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx1011="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns2211="http://ericsson.com/services/ws_CIL_5/contractserviceswrite" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx71="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns241="www.tibco.com/plugin/java/JavaMethodActivityOutput" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:ns321="http://www.zain.com/ZESB/Services/Inventory/posTransactionsRequest.xsd" xmlns:pfx1411="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx201="http://www.siebel.com/xml/CBiO2/20Customer/20Profile/20IO" xmlns:ns102="http://www.siebel.com/xml/CBiO2%20Payment%20Profile%20Modification%20Res%20IO" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx341="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:ns2011="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx332="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:ns111="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:ns110="http://www.zain.com/ZESB/Services/PrepaidBalance/Types" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx331="http://www.ericsson.com/Mozaic/BusinessSchemas/SOAP/XSDs/Fault.xsd" xmlns:pfx321="http://siebel.com/BillDeliveryMethodAPI" xmlns:ns301="http://www.siebel.com/xml/ListQuery" xmlns:ns201="http://www.ericsson.com/BusinessSchemas/Common/JMSHeader/Header.xsd" xmlns:ns121="http://www.zain.com/ZESB/Services/ExecuteRecharge/Types" xmlns:ns202="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:pfx222="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx223="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceRes.xsd" xmlns:pfx224="http://tempuri.org/ZainWS/Service1" xmlns:pfx221="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateCustomerRes.xsd" xmlns:ns911="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns302="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" xmlns:pfx311="http://xmlns.example.com/1450251772456" xmlns:ns311="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns312="http://www.zain.com/ZESB/Services/Inventory/ERPCmnSchema.xsd" xmlns:ns131="http://www.siebel.com/xml/MOZ1%20Customer%20Billing%20Profile%20Update%20Res" xmlns:ns210="http://www.zain.com/ZESB/Types/Common" xmlns:ns211="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:pfx213="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq.xsd" xmlns:pfx211="http://www.siebel.com/xml/CBiO2%20Customer%20Profile%20IO" xmlns:pfx212="http://www.zain.kw.com/BSS/OrderManagement/orderResponse" xmlns:pfx192="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx191="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx16="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx15="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx14="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx13="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:ns141="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/ChargeRefundRes.xsd" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns142="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:pfx19="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeResponse.xsd" xmlns:ns01="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx18="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/AddressChangeRequest.xsd" xmlns:pfx17="http://www.siebel.com/xml/CBiO2%20Address%20Modification%20Res%20IO" xmlns:pfx381="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessResponse.xsd" xmlns:pfx382="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx181="http://schemas.tibco.com/bw/plugins/jms/5.0/jmsExceptions" xmlns:pfx182="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx241="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillCycleUpdateReq.xsd" xmlns:pfx242="http://siebel.com/ArabKurmalakPoint" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns151="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:ns19="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pfx371="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateBillProcessRequest.xsd" xmlns:pfx231="http://www.siebel.com/xml/MOZ1%20Customer%20Bill%20Cycle%20Update%20Req" xmlns:pfx232="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:ns29="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns25="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandReq.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns26="http://www.ericsson.com/CDM/telecom/Voucher" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandRes.xsd" xmlns:ns28="http://www.ericsson.com/CDM/telecom/Resource" xmlns:ns21="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://mastercard.zain.com/" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:ns161="http://www.zain.com/ZESB/Services/Voucher/Types" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx262="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx161="http://www.zain.com/ZESB/Services/Inventory/posTransactionsResponse.xsd" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:pfx261="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMReq.xsd" xmlns:ns34="http://www.siebel.com/xml/CBiO2CashSalesIO" xmlns:ns35="http://www.siebel.com/xml/Order%20Entry%20(Sales)" xmlns:ns32="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns33="http://siebel.com/CustomUI" xmlns:ns30="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" xmlns:ns31="http://www.tibco.com/pe/CheckpointSchema" xmlns:ns171="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:pfx351="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx152="http://www.zain.com/ZESB/Services/CashSales/Types" xmlns:pfx251="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceReq1.xsd" xmlns:pfx151="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <pd:name>BusinessProcesses/Services/Common/SalesOrderExt/Implementation/SalesOrderExt.process</pd:name>
    <pd:startName>SalesOrderExtReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SalesOrderExtReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>64</pd:x>
        <pd:y>202</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/SalesOrderExt/BPIRequestQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1131</pd:endX>
    <pd:endY>205</pd:endY>
    <pd:errorSchemas>
        <ErrSchema ref="pfx14:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>683</pd:x>
        <pd:y>474</pd:y>
        <pd:width>174</pd:width>
        <pd:height>121</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_CRM_UpdateSalesTransaction-1</pd:to>
            <pd:xpathDescription>Valisres</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length(tib:trim($_error_Call_AuthorizeCredit))=0
and
string-length(tib:trim($_error_AuthCedErrTechErr))=0
and
string-length(tib:trim($_error_Call_Validations))=0
and
string-length(tib:trim($_error_AuthCedErr))=0
and
string-length(tib:trim($_error_ErrorFromCRM))=0
and
string-length(tib:trim($_error_GenerateErrorCRM))=0</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_CRM_UpdateSalesTransaction-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Call_CRM_UpdateSalesTransaction-1">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>765</pd:x>
            <pd:y>540</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/ESI_CRM_UpdateSalesTransaction.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode!=0&#xA;{-- Authorize Credit Failed after create sales Transaction Status to be failed --}">
                            <pfx13:CreateSalesTransaction>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                    <pfx13:CustomerName>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                    </pfx13:CustomerName>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                    <pfx13:CustomerID>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                    </pfx13:CustomerID>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                    <pfx13:MSISDN>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                    </pfx13:MSISDN>
                                </xsl:if>
                                <pfx13:TotalAmount>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                                </pfx13:TotalAmount>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                    <pfx13:UserName>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                    </pfx13:UserName>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                    <pfx13:PaymentMethod>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                    </pfx13:PaymentMethod>
                                </xsl:if>
                                <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                                    <pfx13:TransactionReference>
                                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                                    </pfx13:TransactionReference>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                                    <pfx13:AuthorizeCredit>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                                    </pfx13:AuthorizeCredit>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                                        <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                                    <pfx13:Notes>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                                    </pfx13:Notes>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                    <pfx13:Remarks>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                    </pfx13:Remarks>
                                </xsl:if>
                                <pfx13:Params>
                                    <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                                </pfx13:Params>
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed"/>
                                </pfx13:RequestStatus>
                                <xsl:choose>
                                    <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:RetryDetails">
                                        <pfx13:ReceiptNumber>
                                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                        </pfx13:ReceiptNumber>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber">
                                            <pfx13:ReceiptNumber>
                                                <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                            </pfx13:ReceiptNumber>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="string-length(tib:trim($Call_AuthorizeCredit/root/ns19:AuthorizationOutput))>0">
                                        <pfx13:Authorization>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                                <pfx13:MerchantID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                                </pfx13:MerchantID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                                <pfx13:TotalAmount>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                                </pfx13:TotalAmount>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference">
                                                <pfx13:TransactionReference>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                                </pfx13:TransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                                <pfx13:ShoppingTransactionReference>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                                </pfx13:ShoppingTransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType">
                                                <pfx13:CardType>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType"/>
                                                </pfx13:CardType>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo">
                                                <pfx13:OrderInfo>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                                </pfx13:OrderInfo>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                                <pfx13:AuthorizationStatus>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                                </pfx13:AuthorizationStatus>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                                <pfx13:ReceiptNumber>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                                </pfx13:ReceiptNumber>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                                <pfx13:AuthorizationID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                                </pfx13:AuthorizationID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                                <pfx13:AcquirerResponseCode>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                                </pfx13:AcquirerResponseCode>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                                <pfx13:SettlementDate>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                                </pfx13:SettlementDate>
                                            </xsl:if>
                                        </pfx13:Authorization>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel">
                                    <pfx13:PaySalesChannel>
                                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel"/>
                                    </pfx13:PaySalesChannel>
                                </xsl:if>
                            </pfx13:CreateSalesTransaction>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx13:CreateSalesTransaction>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                    <pfx13:CustomerName>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                    </pfx13:CustomerName>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                    <pfx13:CustomerID>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                    </pfx13:CustomerID>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                    <pfx13:MSISDN>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                    </pfx13:MSISDN>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount">
                                    <pfx13:TotalAmount>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                                    </pfx13:TotalAmount>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                    <pfx13:UserName>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                    </pfx13:UserName>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                    <pfx13:PaymentMethod>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                    </pfx13:PaymentMethod>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                                    <pfx13:TransactionReference>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                                    </pfx13:TransactionReference>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                                    <pfx13:AuthorizeCredit>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                                    </pfx13:AuthorizeCredit>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                                        <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                    <pfx13:Remarks>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                    </pfx13:Remarks>
                                </xsl:if>
                                <pfx13:Params>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                        </pfx13:Name>
                                        <xsl:if test="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode">
                                            <pfx13:Value>
                                                <xsl:value-of select="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                                            </pfx13:Value>
                                        </xsl:if>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                        </pfx13:Name>
                                        <xsl:if test="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode">
                                            <pfx13:Value>
                                                <xsl:value-of select="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                                            </pfx13:Value>
                                        </xsl:if>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                        </pfx13:Name>
                                        <xsl:if test="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc">
                                            <pfx13:Value>
                                                <xsl:value-of select="$CLE_to_CDM/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc"/>
                                            </pfx13:Value>
                                        </xsl:if>
                                    </pfx13:Param>
                                    <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                                </pfx13:Params>
                                <xsl:choose>
                                    <xsl:when test="$_error_ERPGenErr/pfx14:ErrorResponse">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed"/>
                                        </pfx13:RequestStatus>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:RetryDetails">
                                        <pfx13:ReceiptNumber>
                                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                        </pfx13:ReceiptNumber>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber">
                                            <pfx13:ReceiptNumber>
                                                <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                            </pfx13:ReceiptNumber>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="string-length($Call_AuthorizeCredit/root/ns19:AuthorizationOutput)>0">
                                        <pfx13:Authorization>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                                <pfx13:MerchantID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                                </pfx13:MerchantID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                                <pfx13:TotalAmount>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                                </pfx13:TotalAmount>
                                            </xsl:if>
                                            <pfx13:TransactionReference>
                                                <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                            </pfx13:TransactionReference>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                                <pfx13:ShoppingTransactionReference>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                                </pfx13:ShoppingTransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType">
                                                <pfx13:CardType>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType"/>
                                                </pfx13:CardType>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo">
                                                <pfx13:OrderInfo>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo"/>
                                                </pfx13:OrderInfo>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                                <pfx13:AuthorizationStatus>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                                </pfx13:AuthorizationStatus>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                                <pfx13:ReceiptNumber>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                                </pfx13:ReceiptNumber>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                                <pfx13:AuthorizationID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                                </pfx13:AuthorizationID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                                <pfx13:AcquirerResponseCode>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                                </pfx13:AcquirerResponseCode>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                                <pfx13:SettlementDate>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                                </pfx13:SettlementDate>
                                            </xsl:if>
                                        </pfx13:Authorization>
                                    </xsl:when>
                                    <xsl:when test="exists($Call_AuthorizeCredit/root/pfx14:ErrorResponse)&#xA;or&#xA;$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode !=0&#xA;or&#xA;exists($_error_Call_AuthorizeCredit/root)&#xA;or&#xA;exists($_error_AuthCedErrTechErr/pfx14:ErrorResponse)&#xA;or&#xA;exists($_error_AuthCedErr/pfx14:ErrorResponse)">
                                        <pfx13:Authorization>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                                <pfx13:MerchantID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                                </pfx13:MerchantID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                                <pfx13:TotalAmount>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                                </pfx13:TotalAmount>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference">
                                                <pfx13:TransactionReference>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                                </pfx13:TransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                                <pfx13:ShoppingTransactionReference>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                                </pfx13:ShoppingTransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType">
                                                <pfx13:CardType>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType"/>
                                                </pfx13:CardType>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo">
                                                <pfx13:OrderInfo>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                                </pfx13:OrderInfo>
                                            </xsl:if>
                                            <pfx13:AuthorizationStatus>
                                                <xsl:value-of select="&quot;Failed&quot;"/>
                                            </pfx13:AuthorizationStatus>
                                            <pfx13:ReceiptNumber>
                                                <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                            </pfx13:ReceiptNumber>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                                <pfx13:AuthorizationID>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                                </pfx13:AuthorizationID>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                                <pfx13:AcquirerResponseCode>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                                </pfx13:AcquirerResponseCode>
                                            </xsl:if>
                                            <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                                <pfx13:SettlementDate>
                                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                                </pfx13:SettlementDate>
                                            </xsl:if>
                                        </pfx13:Authorization>
                                    </xsl:when>
                                    <xsl:when test="string-length(tib:trim($Call_AuthorizeCredit/root/ns19:AuthorizationOutput))>0"/>
                                    <xsl:when test="not(exists($Parse-XML/pfx13:CreateSalesTransaction/pfx13:RetryDetails))">
                                        <pfx13:Authorization>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:MerchantID">
                                                <pfx13:MerchantID>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:MerchantID"/>
                                                </pfx13:MerchantID>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TotalAmount">
                                                <pfx13:TotalAmount>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TotalAmount"/>
                                                </pfx13:TotalAmount>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TransactionReference">
                                                <pfx13:TransactionReference>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TransactionReference"/>
                                                </pfx13:TransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:ShoppingTransactionReference">
                                                <pfx13:ShoppingTransactionReference>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:ShoppingTransactionReference"/>
                                                </pfx13:ShoppingTransactionReference>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType">
                                                <pfx13:CardType>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType"/>
                                                </pfx13:CardType>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo">
                                                <pfx13:OrderInfo>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo"/>
                                                </pfx13:OrderInfo>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AuthorizationStatus">
                                                <pfx13:AuthorizationStatus>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AuthorizationStatus"/>
                                                </pfx13:AuthorizationStatus>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:ReceiptNumber">
                                                <pfx13:ReceiptNumber>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:ReceiptNumber"/>
                                                </pfx13:ReceiptNumber>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AuthorizationID">
                                                <pfx13:AuthorizationID>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AuthorizationID"/>
                                                </pfx13:AuthorizationID>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AcquirerResponseCode">
                                                <pfx13:AcquirerResponseCode>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:AcquirerResponseCode"/>
                                                </pfx13:AcquirerResponseCode>
                                            </xsl:if>
                                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:SettlementDate">
                                                <pfx13:SettlementDate>
                                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:SettlementDate"/>
                                                </pfx13:SettlementDate>
                                            </xsl:if>
                                        </pfx13:Authorization>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName">
                                    <pfx13:OriginalUserName>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName"/>
                                    </pfx13:OriginalUserName>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate">
                                    <pfx13:OriginalSalesDate>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate"/>
                                    </pfx13:OriginalSalesDate>
                                </xsl:if>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderState"/>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OldSTReceiptNumber">
                                    <pfx13:OldSTReceiptNumber>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OldSTReceiptNumber"/>
                                    </pfx13:OldSTReceiptNumber>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo">
                                    <pfx13:OperationToDo>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo"/>
                                    </pfx13:OperationToDo>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type">
                                    <pfx13:Type>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type"/>
                                    </pfx13:Type>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="string-length($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderNumber)>0">
                                        <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                                            <pfx13:OrderNumber>
                                                <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                                            </pfx13:OrderNumber>
                                        </xsl:if>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                                            <pfx13:OrderNumber>
                                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                                            </pfx13:OrderNumber>
                                        </xsl:if>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <pfx13:PaySalesChannel>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel"/>
                                </pfx13:PaySalesChannel>
                            </pfx13:CreateSalesTransaction>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <Destination>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ESI_Req_Queue_CRMCreateJMS"/>
                    </Destination>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="+">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>482</pd:x>
        <pd:y>203</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="AuthCedErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>221</pd:x>
        <pd:y>406</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="$_error/ns2:ErrorReport/Data">
                            <pfx14:ErrorResponse>
                                <pfx14:Error_SourceSystem>
                                    <xsl:value-of select="&quot;TIBCO&quot;"/>
                                </pfx14:Error_SourceSystem>
                                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <pfx14:Error_SourceErrDesc>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                </pfx14:Error_SourceErrDesc>
                                <pfx14:Error_Type>
                                    <xsl:value-of select="&quot;TechnicalL&quot;"/>
                                </pfx14:Error_Type>
                                <pfx14:Error_Additional_Desc2>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                </pfx14:Error_Additional_Desc2>
                            </pfx14:ErrorResponse>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:copy-of select="$_error_Call_AuthorizeCredit/root/pfx14:ErrorResponse"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuthCedErrTechErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>565</pd:x>
        <pd:y>482</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <pfx14:ErrorResponse>
                        <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID">
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                            </pfx14:Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$Call_AuthorizeCredit/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode">
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$Call_AuthorizeCredit/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                            </pfx14:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="$Call_AuthorizeCredit/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc">
                            <pfx14:Error_SourceErrDesc>
                                <xsl:value-of select="$Call_AuthorizeCredit/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc"/>
                            </pfx14:Error_SourceErrDesc>
                        </xsl:if>
                        <pfx14:Error_Additional_Desc1>
                            <xsl:value-of select="&quot;AuthorizeCreditInbound-AuthorizeCredit&quot;"/>
                        </pfx14:Error_Additional_Desc1>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_AuthorizeCredit">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>380</pd:x>
        <pd:y>412</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/ESI_Call_AuthorizeCredit.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns19:AuthorizationInput>
                    <ns19:MerchantId>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:MerchantID"/>
                    </ns19:MerchantId>
                    <ns19:AccessCode>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:MerchantPassword"/>
                    </ns19:AccessCode>
                    <ns19:Amount>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TotalAmount"/>
                    </ns19:Amount>
                    <ns19:TransactionReference>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns19:TransactionReference>
                    <ns19:CardDetails>
                        <ns19:CardNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                        </ns19:CardNumber>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate)>0">
                                <ns19:ExpiryDate>
                                    <xsl:value-of select="tib:format-date('yyMM',tib:parse-date(&quot;MMyyyy&quot;,$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate))"/>
                                </ns19:ExpiryDate>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns19:ExpiryDate>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns19:ExpiryDate>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CVV">
                            <ns19:CVV>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CVV"/>
                            </ns19:CVV>
                        </xsl:if>
                    </ns19:CardDetails>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo">
                        <ns19:OrderInfo>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo"/>
                        </ns19:OrderInfo>
                    </xsl:if>
                </ns19:AuthorizationInput>
                <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_Validations">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:description>Calling for Validation and Receipt Number</pd:description>
        <pd:x>378</pd:x>
        <pd:y>202</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/Validations.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx13:CreateSalesTransaction>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                        <pfx13:CustomerName>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                        </pfx13:CustomerName>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                        <pfx13:CustomerID>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                        </pfx13:CustomerID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                        <pfx13:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                        </pfx13:MSISDN>
                    </xsl:if>
                    <pfx13:TotalAmount>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                    </pfx13:TotalAmount>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                        <pfx13:UserName>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                        </pfx13:UserName>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                        <pfx13:PaymentMethod>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                        </pfx13:PaymentMethod>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                        <pfx13:TransactionReference>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                        </pfx13:TransactionReference>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                        <pfx13:AuthorizeCredit>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                        </pfx13:AuthorizeCredit>
                    </xsl:if>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                        <pfx13:Notes>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                        </pfx13:Notes>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                        <pfx13:Remarks>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                        </pfx13:Remarks>
                    </xsl:if>
                    <pfx13:Params>
                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo !='Topup Refill'&#xA;or&#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo !='On Demand Voucher Sales'">
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;STSTATUS&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:Value>
                            </pfx13:Param>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit='false'&#xA;and&#xA;($Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Device Sales'&#xA;or&#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo ='Service Sales'&#xA;&#xA;)">
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;CallFrom&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="&quot;SalesOrder&quot;"/>
                                </pfx13:Value>
                            </pfx13:Param>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Device Sales'&#xA;and&#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit='true'">
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:Value>
                            </pfx13:Param>
                        </xsl:if>
                    </pfx13:Params>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:RequestStatus">
                        <pfx13:RequestStatus>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:RequestStatus"/>
                        </pfx13:RequestStatus>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber">
                        <pfx13:ReceiptNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                        </pfx13:ReceiptNumber>
                    </xsl:if>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName">
                        <pfx13:OriginalUserName>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName"/>
                        </pfx13:OriginalUserName>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate">
                        <pfx13:OriginalSalesDate>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate"/>
                        </pfx13:OriginalSalesDate>
                    </xsl:if>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderState"/>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OldSTReceiptNumber">
                        <pfx13:OldSTReceiptNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OldSTReceiptNumber"/>
                        </pfx13:OldSTReceiptNumber>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo">
                        <pfx13:OperationToDo>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo"/>
                        </pfx13:OperationToDo>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type">
                        <pfx13:Type>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type"/>
                        </pfx13:Type>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                        <pfx13:OrderNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                        </pfx13:OrderNumber>
                    </xsl:if>
                </pfx13:CreateSalesTransaction>
                <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>30</pd:x>
        <pd:y>533</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>237</pd:x>
        <pd:y>533</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx13:CreateSalesTransaction" minOccurs="0"/>
                            <xsd:element ref="pfx14:ErrorResponse" minOccurs="0"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" element="pfx2:ExceptionRequest"/>
        </pd:coercions>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$_error_AuthCedErrTechErr/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_AuthCedErrTechErr/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error_AuthCedErr/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_AuthCedErr/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <pfx14:Error_SourceErrCode>
                                    <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                </pfx14:Error_SourceErrCode>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <pfx14:Error_Additional_Desc2>
                                    <xsl:value-of select="$Catch/exceptiondata/pfx2:ExceptionRequest/StackTrace"/>
                                </pfx14:Error_Additional_Desc2>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error_ErrorFromCRM/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_ErrorFromCRM/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <pfx14:Error_SourceErrCode>
                                    <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                </pfx14:Error_SourceErrCode>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <pfx14:Error_Additional_Desc2>
                                    <xsl:value-of select="$Catch/exceptiondata/pfx2:ExceptionRequest/StackTrace"/>
                                </pfx14:Error_Additional_Desc2>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error_Call_Validations/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_Call_Validations/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error_GenerateErrorCRM/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_ErrorFromCRM/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$_error_ERPGenErr/pfx14:ErrorResponse">
                        <xsl:for-each select="$_error_ERPGenErr/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx14:ErrorResponse>
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="&quot;TIBCO&quot;"/>
                            </pfx14:Error_SourceSystem>
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$Catch/exceptiondata/pfx2:ExceptionRequest/ExceptionCode"/>
                            </pfx14:Error_SourceErrCode>
                            <pfx14:Error_Additional_Desc2>
                                <xsl:value-of select="$Catch/exceptiondata/pfx2:ExceptionRequest/StackTrace"/>
                            </pfx14:Error_Additional_Desc2>
                        </pfx14:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ERPGenErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>654</pd:x>
        <pd:y>381</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <pfx14:ErrorResponse>
                        <pfx14:Error_SourceSystem>
                            <xsl:value-of select="&quot;ERP&quot;"/>
                        </pfx14:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </pfx14:Error_SourceErrCode>
                        </xsl:if>
                        <pfx14:Error_SourceErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </pfx14:Error_SourceErrDesc>
                        <pfx14:Error_Type>
                            <xsl:value-of select="&quot;Technical&quot;"/>
                        </pfx14:Error_Type>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <pfx14:Error_UserErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </pfx14:Error_UserErrCode>
                        </xsl:if>
                        <pfx14:Error_UserErrDesc>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </pfx14:Error_UserErrDesc>
                        <pfx14:Error_Additional_Desc2>
                            <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                        </pfx14:Error_Additional_Desc2>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorFromCRM">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>481</pd:x>
        <pd:y>47</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_UserErrCode"/>
                </messageCode>
                <data>
                    <pfx14:ErrorResponse>
                        <xsl:if test="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_SourceSystem">
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_SourceSystem"/>
                            </pfx14:Error_SourceSystem>
                        </xsl:if>
                        <pfx14:Error_SourceErrCode>
                            <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                        </pfx14:Error_SourceErrCode>
                        <xsl:if test="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc">
                            <pfx14:Error_SourceErrDesc>
                                <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc"/>
                            </pfx14:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_Type">
                            <pfx14:Error_Type>
                                <xsl:value-of select="$Call_Validations/root/pfx14:ErrorResponse/pfx14:Error_Type"/>
                            </pfx14:Error_Type>
                        </xsl:if>
                        <pfx14:Error_Additional_Desc1>
                            <xsl:value-of select="&quot;SalesOrderInbound-SalesOrder&quot;"/>
                        </pfx14:Error_Additional_Desc1>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>131</pd:x>
        <pd:y>533</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ComponentNAme"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1059</pd:x>
        <pd:y>544</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ComponentNAme"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/root)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_CRM_CreateSalesTransaction">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>620</pd:x>
        <pd:y>120</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/ESI_CRM_UpdateSalesTransaction.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$Parse-XML/pfx13:CreateSalesTransaction">
                    <pfx13:CreateSalesTransaction>
                        <xsl:if test="pfx13:CustomerName">
                            <pfx13:CustomerName>
                                <xsl:value-of select="pfx13:CustomerName"/>
                            </pfx13:CustomerName>
                        </xsl:if>
                        <xsl:if test="pfx13:CustomerID">
                            <pfx13:CustomerID>
                                <xsl:value-of select="pfx13:CustomerID"/>
                            </pfx13:CustomerID>
                        </xsl:if>
                        <xsl:if test="pfx13:MSISDN">
                            <pfx13:MSISDN>
                                <xsl:value-of select="pfx13:MSISDN"/>
                            </pfx13:MSISDN>
                        </xsl:if>
                        <xsl:if test="pfx13:TotalAmount">
                            <pfx13:TotalAmount>
                                <xsl:value-of select="pfx13:TotalAmount"/>
                            </pfx13:TotalAmount>
                        </xsl:if>
                        <xsl:if test="pfx13:UserName">
                            <pfx13:UserName>
                                <xsl:value-of select="pfx13:UserName"/>
                            </pfx13:UserName>
                        </xsl:if>
                        <xsl:if test="pfx13:PaymentMethod">
                            <pfx13:PaymentMethod>
                                <xsl:value-of select="pfx13:PaymentMethod"/>
                            </pfx13:PaymentMethod>
                        </xsl:if>
                        <xsl:if test="pfx13:TransactionReference">
                            <pfx13:TransactionReference>
                                <xsl:value-of select="pfx13:TransactionReference"/>
                            </pfx13:TransactionReference>
                        </xsl:if>
                        <xsl:if test="pfx13:AuthorizeCredit">
                            <pfx13:AuthorizeCredit>
                                <xsl:value-of select="pfx13:AuthorizeCredit"/>
                            </pfx13:AuthorizeCredit>
                        </xsl:if>
                        <xsl:for-each select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                            <pfx13:OrderLines>
                                <xsl:if test="pfx13:ProductCode">
                                    <pfx13:ProductCode>
                                        <xsl:value-of select="pfx13:ProductCode"/>
                                    </pfx13:ProductCode>
                                </xsl:if>
                                <xsl:if test="pfx13:Amount">
                                    <pfx13:Amount>
                                        <xsl:value-of select="pfx13:Amount"/>
                                    </pfx13:Amount>
                                </xsl:if>
                                <xsl:if test="pfx13:Quantity">
                                    <pfx13:Quantity>
                                        <xsl:value-of select="pfx13:Quantity"/>
                                    </pfx13:Quantity>
                                </xsl:if>
                                <xsl:if test="pfx13:SerialNumber">
                                    <pfx13:SerialNumber>
                                        <xsl:value-of select="pfx13:SerialNumber"/>
                                    </pfx13:SerialNumber>
                                </xsl:if>
                                <xsl:if test="pfx13:ProductType">
                                    <pfx13:ProductType>
                                        <xsl:value-of select="pfx13:ProductType"/>
                                    </pfx13:ProductType>
                                </xsl:if>
                                <xsl:if test="pfx13:Remarks">
                                    <pfx13:Remarks>
                                        <xsl:value-of select="pfx13:Remarks"/>
                                    </pfx13:Remarks>
                                </xsl:if>
                                <xsl:for-each select="pfx13:Params">
                                    <pfx13:Params>
                                        <xsl:for-each select="pfx13:Param">
                                            <pfx13:Param>
                                                <xsl:if test="pfx13:Name">
                                                    <pfx13:Name>
                                                        <xsl:value-of select="pfx13:Name"/>
                                                    </pfx13:Name>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Value">
                                                    <pfx13:Value>
                                                        <xsl:value-of select="pfx13:Value"/>
                                                    </pfx13:Value>
                                                </xsl:if>
                                            </pfx13:Param>
                                        </xsl:for-each>
                                    </pfx13:Params>
                                </xsl:for-each>
                                <xsl:if test="pfx13:LineItemId">
                                    <pfx13:LineItemId>
                                        <xsl:value-of select="pfx13:LineItemId"/>
                                    </pfx13:LineItemId>
                                </xsl:if>
                            </pfx13:OrderLines>
                        </xsl:for-each>
                        <xsl:for-each select="pfx13:CardDetails">
                            <pfx13:CardDetails>
                                <xsl:if test="pfx13:CardType">
                                    <pfx13:CardType>
                                        <xsl:value-of select="pfx13:CardType"/>
                                    </pfx13:CardType>
                                </xsl:if>
                                <xsl:if test="pfx13:HolderName">
                                    <pfx13:HolderName>
                                        <xsl:value-of select="pfx13:HolderName"/>
                                    </pfx13:HolderName>
                                </xsl:if>
                                <xsl:if test="pfx13:MerchantID">
                                    <pfx13:MerchantID>
                                        <xsl:value-of select="pfx13:MerchantID"/>
                                    </pfx13:MerchantID>
                                </xsl:if>
                                <xsl:if test="pfx13:MerchantPassword">
                                    <pfx13:MerchantPassword>
                                        <xsl:value-of select="pfx13:MerchantPassword"/>
                                    </pfx13:MerchantPassword>
                                </xsl:if>
                                <xsl:if test="pfx13:TerminalID">
                                    <pfx13:TerminalID>
                                        <xsl:value-of select="pfx13:TerminalID"/>
                                    </pfx13:TerminalID>
                                </xsl:if>
                                <xsl:if test="pfx13:AuthorizationCode">
                                    <pfx13:AuthorizationCode>
                                        <xsl:value-of select="pfx13:AuthorizationCode"/>
                                    </pfx13:AuthorizationCode>
                                </xsl:if>
                                <xsl:if test="pfx13:CardNumber">
                                    <pfx13:CardNumber>
                                        <xsl:value-of select="pfx13:CardNumber"/>
                                    </pfx13:CardNumber>
                                </xsl:if>
                                <xsl:if test="pfx13:ExpiryDate">
                                    <pfx13:ExpiryDate>
                                        <xsl:value-of select="pfx13:ExpiryDate"/>
                                    </pfx13:ExpiryDate>
                                </xsl:if>
                                <xsl:if test="pfx13:CVV">
                                    <pfx13:CVV>
                                        <xsl:value-of select="pfx13:CVV"/>
                                    </pfx13:CVV>
                                </xsl:if>
                                <xsl:if test="pfx13:IssuingBank">
                                    <pfx13:IssuingBank>
                                        <xsl:value-of select="pfx13:IssuingBank"/>
                                    </pfx13:IssuingBank>
                                </xsl:if>
                            </pfx13:CardDetails>
                        </xsl:for-each>
                        <xsl:for-each select="pfx13:NotificationMedia">
                            <pfx13:NotificationMedia>
                                <xsl:if test="pfx13:Media">
                                    <pfx13:Media>
                                        <xsl:value-of select="pfx13:Media"/>
                                    </pfx13:Media>
                                </xsl:if>
                                <xsl:if test="pfx13:Address">
                                    <pfx13:Address>
                                        <xsl:value-of select="pfx13:Address"/>
                                    </pfx13:Address>
                                </xsl:if>
                            </pfx13:NotificationMedia>
                        </xsl:for-each>
                        <xsl:if test="pfx13:Notes">
                            <pfx13:Notes>
                                <xsl:value-of select="pfx13:Notes"/>
                            </pfx13:Notes>
                        </xsl:if>
                        <xsl:if test="pfx13:Remarks">
                            <pfx13:Remarks>
                                <xsl:value-of select="pfx13:Remarks"/>
                            </pfx13:Remarks>
                        </xsl:if>
                        <pfx13:Params>
                            <xsl:copy-of select="pfx13:Params/pfx13:Param"/>
                            <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;SalesOrderEXT&quot;"/>
                                </pfx13:Name>
                            </pfx13:Param>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorSource&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="&quot;ERP&quot;"/>
                                </pfx13:Value>
                            </pfx13:Param>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="$ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                </pfx13:Value>
                            </pfx13:Param>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="$ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                </pfx13:Value>
                            </pfx13:Param>
                        </pfx13:Params>
                        <xsl:choose>
                            <xsl:when test="pfx13:OperationToDo='Service Sales' and &#xA;string-length(tib:trim($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))>0">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="pfx13:OperationToDo='Device Sales' and &#xA;string-length(tib:trim($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))>0&#xA;and &#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns312:Result='Y'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="'Complete'"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="pfx13:OperationToDo='Device Sales' and &#xA;string-length(tib:trim($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))>0&#xA;and &#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorCode='N'&#xA;and &#xA;upper-case($ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorType)='BUSINESS'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="'Failed'"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="pfx13:OperationToDo='Device Sales' and &#xA;string-length(tib:trim($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))>0&#xA;and &#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorCode='N'&#xA;and &#xA;upper-case($ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="'PartialSucessfull'"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="'Failed'"/>
                                </pfx13:RequestStatus>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx13:ReceiptNumber>
                            <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                        </pfx13:ReceiptNumber>
                        <xsl:if test="pfx13:AuthorizeCredit='true'">
                            <pfx13:Authorization>
                                <pfx13:MerchantID>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                </pfx13:MerchantID>
                                <xsl:if test="pfx13:TotalAmount">
                                    <pfx13:TotalAmount>
                                        <xsl:value-of select="pfx13:TotalAmount"/>
                                    </pfx13:TotalAmount>
                                </xsl:if>
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                </pfx13:TransactionReference>
                                <pfx13:ShoppingTransactionReference>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                </pfx13:ShoppingTransactionReference>
                                <pfx13:CardType>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType"/>
                                </pfx13:CardType>
                                <pfx13:OrderInfo>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                </pfx13:OrderInfo>
                                <pfx13:AuthorizationStatus>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                </pfx13:AuthorizationStatus>
                                <pfx13:ReceiptNumber>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                </pfx13:ReceiptNumber>
                                <pfx13:AuthorizationID>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                </pfx13:AuthorizationID>
                                <pfx13:AcquirerResponseCode>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                </pfx13:AcquirerResponseCode>
                                <pfx13:SettlementDate>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                </pfx13:SettlementDate>
                            </pfx13:Authorization>
                        </xsl:if>
                        <xsl:if test="pfx13:OriginalUserName">
                            <pfx13:OriginalUserName>
                                <xsl:value-of select="pfx13:OriginalUserName"/>
                            </pfx13:OriginalUserName>
                        </xsl:if>
                        <xsl:if test="pfx13:OriginalSalesDate">
                            <pfx13:OriginalSalesDate>
                                <xsl:value-of select="pfx13:OriginalSalesDate"/>
                            </pfx13:OriginalSalesDate>
                        </xsl:if>
                        <xsl:for-each select="pfx13:OrderState">
                            <pfx13:OrderState>
                                <xsl:if test="pfx13:Code">
                                    <pfx13:Code>
                                        <xsl:value-of select="pfx13:Code"/>
                                    </pfx13:Code>
                                </xsl:if>
                                <xsl:if test="pfx13:Description">
                                    <pfx13:Description>
                                        <xsl:value-of select="pfx13:Description"/>
                                    </pfx13:Description>
                                </xsl:if>
                            </pfx13:OrderState>
                        </xsl:for-each>
                        <xsl:if test="pfx13:OldSTReceiptNumber">
                            <pfx13:OldSTReceiptNumber>
                                <xsl:value-of select="pfx13:OldSTReceiptNumber"/>
                            </pfx13:OldSTReceiptNumber>
                        </xsl:if>
                        <xsl:if test="pfx13:OperationToDo">
                            <pfx13:OperationToDo>
                                <xsl:value-of select="pfx13:OperationToDo"/>
                            </pfx13:OperationToDo>
                        </xsl:if>
                        <xsl:if test="pfx13:Type">
                            <pfx13:Type>
                                <xsl:value-of select="pfx13:Type"/>
                            </pfx13:Type>
                        </xsl:if>
                        <xsl:if test="pfx13:OrderNumber">
                            <pfx13:OrderNumber>
                                <xsl:value-of select="pfx13:OrderNumber"/>
                            </pfx13:OrderNumber>
                        </xsl:if>
                        <xsl:for-each select="pfx13:RetryDetails">
                            <pfx13:RetryDetails>
                                <xsl:if test="pfx13:TransactionID">
                                    <pfx13:TransactionID>
                                        <xsl:value-of select="pfx13:TransactionID"/>
                                    </pfx13:TransactionID>
                                </xsl:if>
                                <xsl:if test="pfx13:MaxRetryCount">
                                    <pfx13:MaxRetryCount>
                                        <xsl:value-of select="pfx13:MaxRetryCount"/>
                                    </pfx13:MaxRetryCount>
                                </xsl:if>
                                <xsl:if test="pfx13:CurrentRetryCount">
                                    <pfx13:CurrentRetryCount>
                                        <xsl:value-of select="pfx13:CurrentRetryCount"/>
                                    </pfx13:CurrentRetryCount>
                                </xsl:if>
                                <xsl:if test="pfx13:extRetryTimeStamp">
                                    <pfx13:extRetryTimeStamp>
                                        <xsl:value-of select="pfx13:extRetryTimeStamp"/>
                                    </pfx13:extRetryTimeStamp>
                                </xsl:if>
                                <xsl:if test="pfx13:Payload">
                                    <pfx13:Payload>
                                        <xsl:value-of select="pfx13:Payload"/>
                                    </pfx13:Payload>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryStep">
                                    <pfx13:RetryStep>
                                        <xsl:value-of select="pfx13:RetryStep"/>
                                    </pfx13:RetryStep>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryComponentName">
                                    <pfx13:RetryComponentName>
                                        <xsl:value-of select="pfx13:RetryComponentName"/>
                                    </pfx13:RetryComponentName>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryFlag">
                                    <pfx13:RetryFlag>
                                        <xsl:value-of select="pfx13:RetryFlag"/>
                                    </pfx13:RetryFlag>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryListnerQueue">
                                    <pfx13:RetryListnerQueue>
                                        <xsl:value-of select="pfx13:RetryListnerQueue"/>
                                    </pfx13:RetryListnerQueue>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryStatus">
                                    <pfx13:RetryStatus>
                                        <xsl:value-of select="pfx13:RetryStatus"/>
                                    </pfx13:RetryStatus>
                                </xsl:if>
                                <xsl:if test="pfx13:RetryErrorDescription">
                                    <pfx13:RetryErrorDescription>
                                        <xsl:value-of select="pfx13:RetryErrorDescription"/>
                                    </pfx13:RetryErrorDescription>
                                </xsl:if>
                            </pfx13:RetryDetails>
                        </xsl:for-each>
                        <pfx13:PaySalesChannel>
                            <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel"/>
                        </pfx13:PaySalesChannel>
                    </pfx13:CreateSalesTransaction>
                </xsl:for-each>
                <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <Destination>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ESI_Req_Queue_CRMCreateJMS"/>
                </Destination>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_ERP_POSTransaction">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>617</pd:x>
        <pd:y>276</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/ESI_ERP_POSTransaction.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns321:posTransactionsRequest>
                    <ns321:orgCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/OrgCode"/>
                    </ns321:orgCode>
                    <ns321:storeCode>
                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name=&quot;ERPSTORECODE&quot;]/pfx13:Value"/>
                    </ns321:storeCode>
                    <ns321:userCode>
                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                    </ns321:userCode>
                    <ns321:orderId>
                        <xsl:value-of select="zainKW:getCurrentNanoSecconds(){--Unique Order Id Generated for ERP --}"/>
                    </ns321:orderId>
                    <ns321:type>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ERPTransactionType"/>
                    </ns321:type>
                    <ns321:remarks>
                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines[1]/pfx13:Remarks"/>
                    </ns321:remarks>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name='RESERVATION_ID']/pfx13:Value">
                        <ns321:reservationID>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name='RESERVATION_ID']/pfx13:Value"/>
                        </ns321:reservationID>
                    </xsl:if>
                    <xsl:for-each select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                        <ns321:itemList>
                            <ns321:itemCode>
                                <xsl:value-of select="current()/pfx13:Params/pfx13:Param[pfx13:Name=&quot;ERPPRODUCTID&quot;]/pfx13:Value"/>
                            </ns321:itemCode>
                            <ns321:serialNumberFrom>
                                <xsl:value-of select="pfx13:SerialNumber"/>
                            </ns321:serialNumberFrom>
                            <ns321:serialNumberTo>
                                <xsl:value-of select="pfx13:SerialNumber"/>
                            </ns321:serialNumberTo>
                            <ns321:quantity>
                                <xsl:value-of select="pfx13:Quantity"/>
                            </ns321:quantity>
                            <ns321:unitPrice>
                                <xsl:value-of select="pfx13:Amount"/>
                            </ns321:unitPrice>
                            <ns321:orderLineItemId>
                                <xsl:value-of select="pfx13:LineItemId"/>
                            </ns321:orderLineItemId>
                        </ns321:itemList>
                    </xsl:for-each>
                </ns321:posTransactionsRequest>
                <TrackingId>
                    <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TrackingId>
                <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <ReservationID>
                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name='RESERVATION_ID']/pfx13:Value"/>
                </ReservationID>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateErrorCRM">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>380</pd:x>
        <pd:y>36</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="string-length(tib:trim($_error_Call_Validations/pfx14:ErrorResponse))>0">
                            <xsl:copy-of select="$_error_Call_Validations/pfx14:ErrorResponse"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx14:ErrorResponse>
                                <pfx14:Error_SourceSystem>
                                    <xsl:value-of select="&quot;TIBCO&quot;"/>
                                </pfx14:Error_SourceSystem>
                                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <pfx14:Error_SourceErrDesc>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                </pfx14:Error_SourceErrDesc>
                                <pfx14:Error_Type>
                                    <xsl:value-of select="&quot;Technical&quot;"/>
                                </pfx14:Error_Type>
                            </pfx14:ErrorResponse>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>120</pd:x>
        <pd:y>335</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
                <data>
                    <pfx14:ErrorResponse>
                        <pfx14:Error_SourceErrCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                        </pfx14:Error_SourceErrCode>
                        <pfx14:Error_SourceErrDesc>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                        </pfx14:Error_SourceErrDesc>
                        <pfx14:Error_Additional_Desc2>
                            <xsl:value-of select="tib:render-xml($_error)"/>
                        </pfx14:Error_Additional_Desc2>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>891</pd:x>
        <pd:y>680</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>262</pd:x>
        <pd:y>103</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ComponentNAme"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($SalesOrderExtReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx13:CreateSalesTransaction)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>993</pd:x>
        <pd:y>103</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($MapResponse)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRes">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>382</pd:x>
        <pd:y>536</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx13:CreateSalesTransaction"/>
                            <xsd:element ref="pfx14:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <pfx13:CreateSalesTransaction>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                        <pfx13:CustomerName>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                        </pfx13:CustomerName>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                        <pfx13:CustomerID>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                        </pfx13:CustomerID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                        <pfx13:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                        </pfx13:MSISDN>
                    </xsl:if>
                    <pfx13:TotalAmount>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                    </pfx13:TotalAmount>
                    <pfx13:UserName>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                    </pfx13:UserName>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                        <pfx13:PaymentMethod>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                        </pfx13:PaymentMethod>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                        <pfx13:TransactionReference>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                        </pfx13:TransactionReference>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                        <pfx13:AuthorizeCredit>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                        </pfx13:AuthorizeCredit>
                    </xsl:if>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                    <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                        <pfx13:Notes>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                        </pfx13:Notes>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                        <pfx13:Remarks>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                        </pfx13:Remarks>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="string-length($_error_Parse-XML/ActivityErrors)>0&#xA;or&#xA;string-length($Call_Validations/root/pfx14:ErrorResponse)>0&#xA;or&#xA;string-length($Call_Validations/root/pfx14:ErrorResponse)>0&#xA;or&#xA;string-length($Call_AuthorizeCredit/root/pfx14:ErrorResponse )>0&#xA;or&#xA;string-length($_error_Call_AuthorizeCredit/root)>0&#xA;or&#xA;string-length($_error_AuthCedErrTechErr/pfx14:ErrorResponse)>0&#xA;or&#xA;string-length($_error_AuthCedErr/pfx14:ErrorResponse)>0&#xA;or&#xA;string-length($_error_ErrorFromCRM/pfx14:ErrorResponse)>0">
                            <pfx13:RequestStatus>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed"/>
                            </pfx13:RequestStatus>
                        </xsl:when>
                        <xsl:when test="$_error_ERPGenErr/pfx14:ErrorResponse">
                            <pfx13:RequestStatus>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful"/>
                            </pfx13:RequestStatus>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx13:RequestStatus>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed&#xA;{--$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful--}"/>
                            </pfx13:RequestStatus>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber">
                        <pfx13:ReceiptNumber>
                            <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                        </pfx13:ReceiptNumber>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                            <pfx13:Authorization>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                    <pfx13:MerchantID>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                    </pfx13:MerchantID>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                    <pfx13:TotalAmount>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                    </pfx13:TotalAmount>
                                </xsl:if>
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                </pfx13:TransactionReference>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                    <pfx13:ShoppingTransactionReference>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                    </pfx13:ShoppingTransactionReference>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType">
                                    <pfx13:CardType>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType"/>
                                    </pfx13:CardType>
                                </xsl:if>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo">
                                    <pfx13:OrderInfo>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:OrderInfo"/>
                                    </pfx13:OrderInfo>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                    <pfx13:AuthorizationStatus>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                    </pfx13:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                    <pfx13:AuthorizationID>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                    </pfx13:AuthorizationID>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                    <pfx13:AcquirerResponseCode>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                    </pfx13:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                    <pfx13:SettlementDate>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                    </pfx13:SettlementDate>
                                </xsl:if>
                            </pfx13:Authorization>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx13:Authorization/>
                        </xsl:otherwise>
                    </xsl:choose>
                </pfx13:CreateSalesTransaction>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>724</pd:x>
        <pd:y>205</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx13:CreateSalesTransaction" minOccurs="0"/>
                            <xsd:element ref="pfx14:ErrorResponse" minOccurs="0"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="($Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Device Sales' or &#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo ='Service Sales')&#xA;and &#xA;string-length($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber)>0">
                        <pfx13:CreateSalesTransaction>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                <pfx13:CustomerName>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                <pfx13:CustomerID>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TotalAmount">
                                <pfx13:TotalAmount>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                                </pfx13:TotalAmount>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:UserName">
                                <pfx13:UserName>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                </pfx13:UserName>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                                </pfx13:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                                <pfx13:AuthorizeCredit>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                                </pfx13:AuthorizeCredit>
                            </xsl:if>
                            <xsl:for-each select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                                <pfx13:OrderLines/>
                            </xsl:for-each>
                            <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                            <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Notes">
                                <pfx13:Notes>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                                </pfx13:Notes>
                            </xsl:if>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                <pfx13:Remarks>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                </pfx13:Remarks>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Device Sales'">
                                    <xsl:choose>
                                        <xsl:when test="exists($ESI_ERP_POSTransaction/root/ns312:erp)&#xA;and&#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns312:Result='N'&#xA;and &#xA;upper-case($ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorType)='BUSINESS'">
                                            <pfx13:RequestStatus>
                                                <xsl:value-of select="&quot;Failed&quot;"/>
                                            </pfx13:RequestStatus>
                                        </xsl:when>
                                        <xsl:when test="exists($ESI_ERP_POSTransaction/root/ns312:erp)&#xA;and&#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns312:Result='N'&#xA;and &#xA;upper-case($ESI_ERP_POSTransaction/root/ns312:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                            <pfx13:RequestStatus>
                                                <xsl:value-of select="&quot;PartialSuccessful&quot;"/>
                                            </pfx13:RequestStatus>
                                        </xsl:when>
                                        <xsl:when test="exists($ESI_ERP_POSTransaction/root/ns312:erp)&#xA;and&#xA;$ESI_ERP_POSTransaction/root/ns312:erp/ns312:Result='Y'">
                                            <pfx13:RequestStatus>
                                                <xsl:value-of select="&quot;Complete&quot;"/>
                                            </pfx13:RequestStatus>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx13:RequestStatus>
                                                <xsl:value-of select="&quot;Failed&quot;"/>
                                            </pfx13:RequestStatus>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:when>
                                <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Service Sales'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="if(string-length(tib:trim($Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))>0)&#xA;then&#xA;&quot;Complete&quot;&#xA;else&#xA;&quot;Failed&quot;"/>
                                    </pfx13:RequestStatus>
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit='true'">
                                <pfx13:Authorization>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                        <pfx13:MerchantID>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                        </pfx13:MerchantID>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                        <pfx13:TotalAmount>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                        </pfx13:TotalAmount>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference">
                                        <pfx13:TransactionReference>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                        </pfx13:TransactionReference>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                        <pfx13:ShoppingTransactionReference>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                        </pfx13:ShoppingTransactionReference>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType">
                                        <pfx13:CardType>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType"/>
                                        </pfx13:CardType>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo">
                                        <pfx13:OrderInfo>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                        </pfx13:OrderInfo>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                        <pfx13:AuthorizationStatus>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                        </pfx13:AuthorizationStatus>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                        <pfx13:ReceiptNumber>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                        </pfx13:ReceiptNumber>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                        <pfx13:AuthorizationID>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                        </pfx13:AuthorizationID>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                        <pfx13:AcquirerResponseCode>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                        </pfx13:AcquirerResponseCode>
                                    </xsl:if>
                                    <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                        <pfx13:SettlementDate>
                                            <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                        </pfx13:SettlementDate>
                                    </xsl:if>
                                </pfx13:Authorization>
                            </xsl:if>
                        </pfx13:CreateSalesTransaction>
                    </xsl:when>
                    <xsl:when test="$Call_AuthorizeCredit">
                        <pfx13:CreateSalesTransaction>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                <pfx13:CustomerName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                <pfx13:CustomerID>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <pfx13:TotalAmount>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                            </pfx13:TotalAmount>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                <pfx13:UserName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                </pfx13:UserName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                            </xsl:if>
                            <pfx13:TransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                            </pfx13:TransactionReference>
                            <pfx13:AuthorizeCredit>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                            </pfx13:AuthorizeCredit>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                                <pfx13:Notes>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                                </pfx13:Notes>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                <pfx13:Remarks>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                </pfx13:Remarks>
                            </xsl:if>
                            <pfx13:RequestStatus>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed"/>
                            </pfx13:RequestStatus>
                            <pfx13:ReceiptNumber>
                                <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                            </pfx13:ReceiptNumber>
                            <pfx13:Authorization>
                                <pfx13:MerchantID>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:MerchantID"/>
                                </pfx13:MerchantID>
                                <pfx13:TotalAmount>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:TotalAmount"/>
                                </pfx13:TotalAmount>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference">
                                    <pfx13:TransactionReference>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                    </pfx13:TransactionReference>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                    <pfx13:ShoppingTransactionReference>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                    </pfx13:ShoppingTransactionReference>
                                </xsl:if>
                                <pfx13:CardType>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization/pfx13:CardType"/>
                                </pfx13:CardType>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo">
                                    <pfx13:OrderInfo>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                    </pfx13:OrderInfo>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                    <pfx13:AuthorizationStatus>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                    </pfx13:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                    <pfx13:AuthorizationID>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                    </pfx13:AuthorizationID>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                    <pfx13:AcquirerResponseCode>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                    </pfx13:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                    <pfx13:SettlementDate>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                    </pfx13:SettlementDate>
                                </xsl:if>
                            </pfx13:Authorization>
                        </pfx13:CreateSalesTransaction>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx13:CreateSalesTransaction>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                <pfx13:CustomerName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                <pfx13:CustomerID>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <pfx13:TotalAmount>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                            </pfx13:TotalAmount>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                <pfx13:UserName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                </pfx13:UserName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                            </xsl:if>
                            <pfx13:TransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                            </pfx13:TransactionReference>
                            <xsl:copy-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                            <pfx13:OrderLines/>
                            <pfx13:RequestStatus>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/RequestStatusFailed"/>
                            </pfx13:RequestStatus>
                            <pfx13:ReceiptNumber>
                                <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                            </pfx13:ReceiptNumber>
                            <pfx13:Authorization>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId">
                                    <pfx13:MerchantID>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:MerchantId"/>
                                    </pfx13:MerchantID>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount">
                                    <pfx13:TotalAmount>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:Amount"/>
                                    </pfx13:TotalAmount>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference">
                                    <pfx13:TransactionReference>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:TransactionReference"/>
                                    </pfx13:TransactionReference>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference">
                                    <pfx13:ShoppingTransactionReference>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ShoppingTransactionReference"/>
                                    </pfx13:ShoppingTransactionReference>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType">
                                    <pfx13:CardType>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:CardType"/>
                                    </pfx13:CardType>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo">
                                    <pfx13:OrderInfo>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:OrderInfo"/>
                                    </pfx13:OrderInfo>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus">
                                    <pfx13:AuthorizationStatus>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationStatus"/>
                                    </pfx13:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber">
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID">
                                    <pfx13:AuthorizationID>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AuthorizationID"/>
                                    </pfx13:AuthorizationID>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode">
                                    <pfx13:AcquirerResponseCode>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode"/>
                                    </pfx13:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate">
                                    <pfx13:SettlementDate>
                                        <xsl:value-of select="$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:SettlmentDate"/>
                                    </pfx13:SettlementDate>
                                </xsl:if>
                            </pfx13:Authorization>
                            <xsl:if test="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel">
                                <pfx13:PaySalesChannel>
                                    <xsl:value-of select="$Call_Validations/root/pfx13:CreateSalesTransaction/pfx13:PaySalesChannel"/>
                                </pfx13:PaySalesChannel>
                            </xsl:if>
                        </pfx13:CreateSalesTransaction>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>157</pd:x>
        <pd:y>202</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:CreateSalesTransaction"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>212</pd:x>
        <pd:y>335</pd:y>
        <config>
            <faultName>ErrSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
                <data>
                    <pfx14:ErrorResponse>
                        <pfx14:Error_SourceSystem>
                            <xsl:value-of select="&quot;TIBCO&quot;"/>
                        </pfx14:Error_SourceSystem>
                        <pfx14:Error_SourceErrCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                        </pfx14:Error_SourceErrCode>
                        <pfx14:Error_SourceErrDesc>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                        </pfx14:Error_SourceErrDesc>
                        <pfx14:Error_Additional_Desc1>
                            <xsl:value-of select="tib:render-xml($_error_Parse-XML)"/>
                        </pfx14:Error_Additional_Desc1>
                        <pfx14:Error_Additional_Desc2>
                            <xsl:value-of select="tib:render-xml($_error)"/>
                        </pfx14:Error_Additional_Desc2>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>543</pd:x>
        <pd:y>536</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>SalesOrderExtReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties"/>
                <xsl:choose>
                    <xsl:when test="$MapRes/root/pfx13:CreateSalesTransaction/pfx13:RequestStatus&#xA;=&#xA;$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/strPartiallySuccessful">
                        <Body>
                            <xsl:value-of select="tib:render-xml($MapRes/root)"/>
                        </Body>
                    </xsl:when>
                    <xsl:otherwise>
                        <Body>
                            <xsl:value-of select="tib:render-xml($CLE_to_CDM/root)"/>
                        </Body>
                    </xsl:otherwise>
                </xsl:choose>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ReplyGW">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>863</pd:x>
        <pd:y>204</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>SalesOrderExtReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$SalesOrderExtReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapResponse/root)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SalesOrderExtReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SalesOrderExtReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_AuthorizeCredit</pd:from>
        <pd:to>+</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-6697984</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_AuthorizeCredit</pd:from>
        <pd:to>MapResponse</pd:to>
        <pd:xpathDescription>FailedAuthorizeCredit</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-13261</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_AuthorizeCredit/root/ns19:AuthorizationOutput/ns19:AcquirerResponseCode!=0
or
exists($Call_AuthorizeCredit/root/pfx14:ErrorResponse)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_Validations</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Validations</pd:from>
        <pd:to>+</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-6684928</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Validations</pd:from>
        <pd:to>ErrorFromCRM</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Call_Validations/root/pfx14:ErrorResponse)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:xpathDescription>log</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/log_flag='true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Validations</pd:from>
        <pd:to>GenerateErrorCRM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_AuthorizeCredit</pd:from>
        <pd:to>AuthCedErr</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>MapRes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_AuthorizeCredit</pd:from>
        <pd:to>AuthCedErrTechErr</pd:to>
        <pd:xpathDescription>EricError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:trim($Call_AuthorizeCredit/root/pfx14:ErrorResponse))&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Validations</pd:from>
        <pd:to>Call_AuthorizeCredit</pd:to>
        <pd:xpathDescription>Authorize</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit='true'
and
not(exists($Call_Validations/root/pfx14:ErrorResponse))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>+</pd:from>
        <pd:to>ESI_CRM_CreateSalesTransaction</pd:to>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapResponse</pd:from>
        <pd:to>ReplyGW</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReplyGW</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:xpathDescription>log</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/log_flag='true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRes</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_CRM_CreateSalesTransaction</pd:from>
        <pd:to>MapResponse</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>+</pd:from>
        <pd:to>ESI_ERP_POSTransaction</pd:to>
        <pd:xpathDescription>DeviceSales</pd:xpathDescription>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo='Device Sales'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_ERP_POSTransaction</pd:from>
        <pd:to>ESI_CRM_CreateSalesTransaction</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Call_Validations</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReplyGW</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:description>if Error Occured after CRM Sales Transaction Creation then we need to udpate the 
Sales Transacion with failed status , if error occured at any place.
</pd:description>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>UpdateReq</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_ERP_POSTransaction</pd:from>
        <pd:to>ERPGenErr</pd:to>
        <pd:xpathDescription>ERPError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label (1) (2)</pd:name>
        <pd:description>Insert the record in Retry table Asynchronously !! Saves Time and Gives more 
Control !!</pd:description>
        <pd:x>1468</pd:x>
        <pd:y>45</pd:y>
        <pd:width>404</pd:width>
        <pd:height>28</pd:height>
        <pd:fontName>Dialog.bold-plain-10</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>