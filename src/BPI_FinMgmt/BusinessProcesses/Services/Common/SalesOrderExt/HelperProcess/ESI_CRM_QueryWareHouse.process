<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:pfx15="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:pfx14="http://siebel.com/CustomUI" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx13="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx12="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" xmlns:pfx11="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:pfx10="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" xmlns:pfx5="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:pfx2="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:pfx9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:pfx8="http://mastercard.zain.com/" xmlns:pfx7="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:pfx6="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns6="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns3="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/UpdatePaymentProfileResponse.xsd"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CMI_5/paymentprofileread" schemaLocation="/BusinessWSDLS/Services/BSCS/PaymentProfileRead/PaymentProfileReadService.wsdl"/>
    <xsd:import namespace="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" schemaLocation="/BusinessWSDLS/Services/BSCS/ExtPaymentDetailsWrite/ws_CMI_5_ExtPaymentDetailsWriteService.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <xsd:import namespace="http://mastercard.zain.com/" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/MasterCardWS_schema1.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeRes.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/PrepaidRecharge/RechargeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ERP/ReserveInventory/ReserveInventoryRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/QueryUserWarehouseDetails_v1.WSDL.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" schemaLocation="/BusinessSchemas/Services/Query/EmpOrgDetails/EmpOrgDetails.xsd"/>
    <pd:name>BusinessProcesses/Services/Common/SalesOrderExt/HelperProcess/ESI_CRM_QueryWareHouse.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx15:GetEmpOrg_Input"/>
                    <xsd:element name="TrackingId" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>129</pd:startX>
    <pd:startY>109</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorSourceErrCode=0">
                    <xsl:for-each select="$ParseResponse/pfx15:GetEmpOrg_Output">
                        <pfx15:GetEmpOrg_Output>
                            <xsl:if test="pfx15:ErrorAdditionalDesc1">
                                <pfx15:ErrorAdditionalDesc1>
                                    <xsl:value-of select="pfx15:ErrorAdditionalDesc1"/>
                                </pfx15:ErrorAdditionalDesc1>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorAdditionalDesc2">
                                <pfx15:ErrorAdditionalDesc2>
                                    <xsl:value-of select="pfx15:ErrorAdditionalDesc2"/>
                                </pfx15:ErrorAdditionalDesc2>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorOccuranceTime">
                                <pfx15:ErrorOccuranceTime>
                                    <xsl:value-of select="pfx15:ErrorOccuranceTime"/>
                                </pfx15:ErrorOccuranceTime>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorSourceErrCode">
                                <pfx15:ErrorSourceErrCode>
                                    <xsl:value-of select="pfx15:ErrorSourceErrCode"/>
                                </pfx15:ErrorSourceErrCode>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorSourceErrDesc">
                                <pfx15:ErrorSourceErrDesc>
                                    <xsl:value-of select="pfx15:ErrorSourceErrDesc"/>
                                </pfx15:ErrorSourceErrDesc>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorSourceSystem">
                                <pfx15:ErrorSourceSystem>
                                    <xsl:value-of select="pfx15:ErrorSourceSystem"/>
                                </pfx15:ErrorSourceSystem>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorType">
                                <pfx15:ErrorType>
                                    <xsl:value-of select="pfx15:ErrorType"/>
                                </pfx15:ErrorType>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorUserErrCode">
                                <pfx15:ErrorUserErrCode>
                                    <xsl:value-of select="pfx15:ErrorUserErrCode"/>
                                </pfx15:ErrorUserErrCode>
                            </xsl:if>
                            <xsl:if test="pfx15:ErrorUserErrDesc">
                                <pfx15:ErrorUserErrDesc>
                                    <xsl:value-of select="pfx15:ErrorUserErrDesc"/>
                                </pfx15:ErrorUserErrDesc>
                            </xsl:if>
                            <xsl:if test="pfx15:PayDesk">
                                <pfx15:PayDesk>
                                    <xsl:value-of select="pfx15:PayDesk"/>
                                </pfx15:PayDesk>
                            </xsl:if>
                            <xsl:if test="pfx15:Retailer">
                                <pfx15:Retailer>
                                    <xsl:value-of select="pfx15:Retailer"/>
                                </pfx15:Retailer>
                            </xsl:if>
                            <xsl:if test="pfx15:RetailerDescription">
                                <pfx15:RetailerDescription>
                                    <xsl:value-of select="pfx15:RetailerDescription"/>
                                </pfx15:RetailerDescription>
                            </xsl:if>
                            <xsl:if test="pfx15:WhCategory">
                                <pfx15:WhCategory>
                                    <xsl:value-of select="pfx15:WhCategory"/>
                                </pfx15:WhCategory>
                            </xsl:if>
                            <xsl:if test="pfx15:WhCode">
                                <pfx15:WhCode>
                                    <xsl:value-of select="pfx15:WhCode"/>
                                </pfx15:WhCode>
                            </xsl:if>
                            <xsl:if test="pfx15:WhDescription">
                                <pfx15:WhDescription>
                                    <xsl:value-of select="pfx15:WhDescription"/>
                                </pfx15:WhDescription>
                            </xsl:if>
                            <xsl:if test="pfx15:WorkArea">
                                <pfx15:WorkArea>
                                    <xsl:value-of select="pfx15:WorkArea"/>
                                </pfx15:WorkArea>
                            </xsl:if>
                            <xsl:if test="pfx15:ReceiptNo">
                                <pfx15:ReceiptNo>
                                    <xsl:value-of select="pfx15:ReceiptNo"/>
                                </pfx15:ReceiptNo>
                            </xsl:if>
                            <xsl:if test="pfx15:Channel">
                                <pfx15:Channel>
                                    <xsl:value-of select="pfx15:Channel"/>
                                </pfx15:Channel>
                            </xsl:if>
                        </pfx15:GetEmpOrg_Output>
                    </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                    <pfx13:ErrorResponse>
                        <pfx13:Error_SourceSystem>
                            <xsl:value-of select="&quot;CRM&quot;"/>
                        </pfx13:Error_SourceSystem>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorSourceErrCode">
                            <pfx13:Error_SourceErrCode>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorSourceErrCode"/>
                            </pfx13:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorSourceErrDesc">
                            <pfx13:Error_SourceErrDesc>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorSourceErrDesc"/>
                            </pfx13:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorType">
                            <pfx13:Error_Type>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorType"/>
                            </pfx13:Error_Type>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorUserErrCode">
                            <pfx13:Error_UserErrCode>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorUserErrCode"/>
                            </pfx13:Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorUserErrDesc">
                            <pfx13:Error_UserErrDesc>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorUserErrDesc"/>
                            </pfx13:Error_UserErrDesc>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorOccuranceTime">
                            <pfx13:Error_Occurance_Time>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorOccuranceTime"/>
                            </pfx13:Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorAdditionalDesc1">
                            <pfx13:Error_Additional_Desc1>
                                <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorAdditionalDesc1"/>
                            </pfx13:Error_Additional_Desc1>
                        </xsl:if>
                        <pfx13:Error_Additional_Desc2>
                            <xsl:value-of select="$ParseResponse/pfx15:GetEmpOrg_Output/pfx15:ErrorAdditionalDesc2"/>
                        </pfx13:Error_Additional_Desc2>
                    </pfx13:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:choice>
                    <xsd:element ref="pfx15:GetEmpOrg_Output"/>
                    <xsd:element ref="pfx13:ErrorResponse"/>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>780</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397719743</pd:targetNamespace>
    <pd:activity name="Common_EAI_EMSSender_WithRetry">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>390</pd:x>
        <pd:y>107</pd:y>
        <config>
            <processName>/CommonProcesses/HelperProcesses/Common_EAI_EMSSendReceive.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Start/root/pfx15:GetEmpOrg_Input)"/>
                </MessageBody>
                <TransactionID>
                    <xsl:value-of select="$Start/root/TrackingId"/>
                </TransactionID>
                <EMS_DestinationQueue>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ESI_Queue_QueryWareHouse_SPESI"/>
                </EMS_DestinationQueue>
                <TransactionDomain>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                </TransactionDomain>
                <TransactionType>
                    <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                </TransactionType>
                <ReplyToEngineID>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EngineID"/>
                </ReplyToEngineID>
                <ReplyToDeployment>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                </ReplyToDeployment>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <RequestTimeOut>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/CashSales/CRMTimeOut"/>
                </RequestTimeOut>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ComponentNAme"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$Start/root/TrackingId"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx15:GetEmpOrg_Input/pfx15:UserId"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Start/root)"/>
                    </ns2:Message>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_CDM_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>631</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns2:Header>
                    <ns2:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns2:ApplicationID>
                    <ns2:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/SalesOrderExt/ComponentNAme"/>
                    </ns2:ComponentName>
                    <ns2:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns2:Hostname>
                    <ns2:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:Timestamp>
                    <ns2:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns2:TransactionDomain>
                    <ns2:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns1:ProcessContext/ProcessId))"/>
                    </ns2:TransactionType>
                    <ns2:TransactionID>
                        <xsl:value-of select="$Start/root/TrackingId"/>
                    </ns2:TransactionID>
                    <ns2:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx15:GetEmpOrg_Input/pfx15:UserId"/>
                    </ns2:InterfaceID>
                    <ns2:Filename>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Deployment"/>
                    </ns2:Filename>
                    <ns2:Message>
                        <xsl:value-of select="tib:render-xml($Common_EAI_EMSSender_WithRetry/ResponseData)"/>
                    </ns2:Message>
                    <ns2:Transaction>
                        <xsl:value-of select="tib:render-xml($ParseResponse)"/>
                    </ns2:Transaction>
                </ns2:Header>
                <TimeDuration>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParseResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>516</pd:x>
        <pd:y>109</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx15:GetEmpOrg_Output"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Common_EAI_EMSSender_WithRetry/ResponseData"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Log_CDM_Request</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Common_EAI_EMSSender_WithRetry</pd:from>
        <pd:to>ParseResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_CDM_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>Log_CDM_Response</pd:to>
        <pd:xpathDescription>Log</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/CashSales/log_flag='true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log_CDM_Request</pd:to>
        <pd:xpathDescription>Log</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns:GlobalVariables/BusinessProcesses/Services/Common/CashSales/log_flag='true'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Common_EAI_EMSSender_WithRetry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>