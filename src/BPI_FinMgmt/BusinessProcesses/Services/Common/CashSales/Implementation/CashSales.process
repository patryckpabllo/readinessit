<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx61="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns102="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns42="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:ns181="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns271="http://www.siebel.com/xml/CBiO2AutoPayRegistration" xmlns:pfx57="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayExecutionResponse.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx59="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/AutopayTransactionResponse.xsd" xmlns:pfx53="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderReq.xsd" xmlns:pfx54="http://ericsson.com/services/ws_CIL_5/contractmodifyservice" xmlns:pfx55="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ModifyOrderRes.xsd" xmlns:pfx56="http://xmlns.zain.com/BSS/ESB/CDM/ModifyCustomerOrder" xmlns:pfx52="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx141="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns110="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns191="http://ericsson.com/services/ws_CIL_5/customerread" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns51="www.tibco.com/createcustomer" xmlns:ns52="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:pfx48="http://ericsson.com/services/ws_CIL_5" xmlns:pfx49="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Response.xsd" xmlns:pfx46="http://ericsson.com/services/ws_CIL_5/contractserviceresourceswrite" xmlns:pfx47="http://ericsson.com/services/ws_CIL_5/contractwrite" xmlns:pfx44="http://ericsson.com/services/ws_CIL_5/contractdeviceadd" xmlns:pfx45="http://ericsson.com/services/ws_CIL_5/contractservicesadd" xmlns:pfx42="http://ericsson.com/services/ws_CIL_5/contractcreatezain" xmlns:ns261="http://xmlns.zain.com/BSS/ESB/CDM/Products" xmlns:pfx43="http://ericsson.com/services/ws_CIL_5/contractnew" xmlns:pfx111="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/CreateOrder/Request.xsd" xmlns:ns301="http://www.siebel.com/xml/ListQuery" xmlns:ns201="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx310="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:pfx121="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:ns131="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns210="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns211="http://ericsson.com/services/ws_CIL_5/fafnumberwrite" xmlns:pfx210="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx16="http://www.zain.com/ZESB/Services/Inventory/posTransactionsResponse.xsd" xmlns:pfx15="http://www.zain.com/ZESB/Services/CashSales/Types" xmlns:pfx14="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx13="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" xmlns:ns141="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:ns91="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:pfx17="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns231="http://xmlns.zain.com/BSS/ESB/CDM/Customer" xmlns:pfx711="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns151="http://xmlns.tibco.com/encodings/mime" xmlns:ns19="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns221="http://ericsson.com/services/ws_CIL_5/contractserviceswrite" xmlns:pfx101="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:pfx171="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns29="http://www.ericsson.com/CDM/telecom/Response" xmlns:ns25="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandReq.xsd" xmlns:pfx1="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns26="http://www.ericsson.com/CDM/telecom/Voucher" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns27="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/VoucherOnDemandRes.xsd" xmlns:ns28="http://www.ericsson.com/CDM/telecom/Resource" xmlns:ns21="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://mastercard.zain.com/" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/RechargeReq.xsd" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx82="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:ns161="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx161="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns36="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns34="http://www.siebel.com/xml/CBiO2CashSalesIO" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns35="http://www.siebel.com/xml/Order%20Entry%20(Sales)" xmlns:ns32="http://www.zain.com/ZESB/Services/Inventory/posTransactionsRequest.xsd" xmlns:ns33="http://siebel.com/CustomUI" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns30="http://www.zain.com/ZESB/Services/Inventory/ReserveInventoryRequest.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns31="http://www.zain.com/ZESB/Services/Inventory/ERPCmnSchema.xsd" xmlns:ns171="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:pfx71="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns241="http://xmlns.zain.com/BSS/ESB/CDM/CustomerOrder" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx151="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/SalesTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/SalesTransaction/SalesTransaction.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <pd:name>BusinessProcesses/Services/Common/CashSales/Implementation/CashSales.process</pd:name>
    <pd:startName>CashSalesReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="CashSalesReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>53</pd:x>
        <pd:y>289</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/CashSales/BPI_Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1732</pd:endX>
    <pd:endY>281</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="pfx14:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Call_ERP_ReserveInventory">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>817</pd:x>
        <pd:y>288</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/CashSales/HelperProcess/ESI_ERP_POSTransaction.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns32:posTransactionsRequest>
                    <ns32:orgCode>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/OrgCode"/>
                    </ns32:orgCode>
                    <ns32:storeCode>
                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode"/>
                    </ns32:storeCode>
                    <ns32:userCode>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                    </ns32:userCode>
                    <xsl:choose>
                        <xsl:when test="string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)>0">
                            <ns32:orderId>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                            </ns32:orderId>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns32:orderId>
                                <xsl:value-of select="tib:timestamp()"/>
                            </ns32:orderId>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns32:type>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ERPTransactionType"/>
                    </ns32:type>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines[1]/pfx13:Remarks">
                        <ns32:remarks>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines[1]/pfx13:Remarks"/>
                        </ns32:remarks>
                    </xsl:if>
                    <xsl:for-each select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines">
                        <xsl:if test="string-length(pfx13:SerialNumber)>0">
                            <ns32:itemList>
                                <ns32:itemCode>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines[pfx13:SerialNumber=current()/pfx13:SerialNumber]/pfx13:ProductCode"/>
                                </ns32:itemCode>
                                <xsl:if test="pfx13:SerialNumber">
                                    <ns32:serialNumberFrom>
                                        <xsl:value-of select="pfx13:SerialNumber"/>
                                    </ns32:serialNumberFrom>
                                </xsl:if>
                                <xsl:if test="pfx13:SerialNumber">
                                    <ns32:serialNumberTo>
                                        <xsl:value-of select="pfx13:SerialNumber"/>
                                    </ns32:serialNumberTo>
                                </xsl:if>
                                <ns32:quantity>
                                    <xsl:value-of select="pfx13:Quantity"/>
                                </ns32:quantity>
                                <xsl:if test="pfx13:Amount">
                                    <ns32:unitPrice>
                                        <xsl:value-of select="pfx13:Amount"/>
                                    </ns32:unitPrice>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)>0">
                                        <ns32:orderLineItemId>
                                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                                        </ns32:orderLineItemId>
                                    </xsl:when>
                                    <xsl:when test="../pfx13:ReceiptNumber">
                                        <ns32:orderLineItemId>
                                            <xsl:value-of select="../pfx13:ReceiptNumber"/>
                                        </ns32:orderLineItemId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns32:orderLineItemId>
                                            <xsl:value-of select="tib:timestamp()"/>
                                        </ns32:orderLineItemId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </ns32:itemList>
                        </xsl:if>
                    </xsl:for-each>
                </ns32:posTransactionsRequest>
                <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>161</pd:x>
        <pd:y>580</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>427</pd:x>
        <pd:y>585</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx13:CreateSalesTransaction" minOccurs="0"/>
                            <xsd:element ref="pfx14:ErrorResponse" minOccurs="0"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Catch/exceptiondata/*" element="pfx2:ExceptionRequest"/>
        </pd:coercions>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="exists($_error_WareHouseNotFoundErr/pfx14:ErrorResponse)">
                        <xsl:for-each select="$_error_WareHouseNotFoundErr/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <pfx14:Error_SourceSystem>
                                    <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                </pfx14:Error_SourceSystem>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse)">
                        <xsl:for-each select="$ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse">
                            <pfx14:ErrorResponse>
                                <xsl:if test="pfx14:Error_SourceSystem">
                                    <pfx14:Error_SourceSystem>
                                        <xsl:value-of select="pfx14:Error_SourceSystem"/>
                                    </pfx14:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrCode">
                                    <pfx14:Error_SourceErrCode>
                                        <xsl:value-of select="pfx14:Error_SourceErrCode"/>
                                    </pfx14:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_SourceErrDesc">
                                    <pfx14:Error_SourceErrDesc>
                                        <xsl:value-of select="pfx14:Error_SourceErrDesc"/>
                                    </pfx14:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Type">
                                    <pfx14:Error_Type>
                                        <xsl:value-of select="pfx14:Error_Type"/>
                                    </pfx14:Error_Type>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrCode">
                                    <pfx14:Error_UserErrCode>
                                        <xsl:value-of select="pfx14:Error_UserErrCode"/>
                                    </pfx14:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_UserErrDesc">
                                    <pfx14:Error_UserErrDesc>
                                        <xsl:value-of select="pfx14:Error_UserErrDesc"/>
                                    </pfx14:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Occurance_Time">
                                    <pfx14:Error_Occurance_Time>
                                        <xsl:value-of select="pfx14:Error_Occurance_Time"/>
                                    </pfx14:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc1">
                                    <pfx14:Error_Additional_Desc1>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc1"/>
                                    </pfx14:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="pfx14:Error_Additional_Desc2">
                                    <pfx14:Error_Additional_Desc2>
                                        <xsl:value-of select="pfx14:Error_Additional_Desc2"/>
                                    </pfx14:Error_Additional_Desc2>
                                </xsl:if>
                            </pfx14:ErrorResponse>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($_error/ns2:ErrorReport/MsgCode) and $_error/ns2:ErrorReport/MsgCode !=&quot;-&quot;">
                        <pfx14:ErrorResponse>
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="&quot;TIBCO&quot;"/>
                            </pfx14:Error_SourceSystem>
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </pfx14:Error_SourceErrCode>
                            <xsl:if test="$_error/ns2:ErrorReport/Msg">
                                <pfx14:Error_SourceErrDesc>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                </pfx14:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                                <pfx14:Error_Additional_Desc2>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                </pfx14:Error_Additional_Desc2>
                            </xsl:if>
                        </pfx14:ErrorResponse>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx14:ErrorResponse>
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="&quot;TIBCO&quot;"/>
                            </pfx14:Error_SourceSystem>
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$Catch/exceptiondata/pfx2:ExceptionRequest/ExceptionCode"/>
                            </pfx14:Error_SourceErrCode>
                            <xsl:if test="$_error/ns2:ErrorReport/Msg">
                                <pfx14:Error_SourceErrDesc>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                </pfx14:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                                <pfx14:Error_Additional_Desc2>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                </pfx14:Error_Additional_Desc2>
                            </xsl:if>
                        </pfx14:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>299</pd:x>
        <pd:y>583</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>731</pd:x>
        <pd:y>580</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/root)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>159</pd:x>
        <pd:y>405</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>591</pd:x>
        <pd:y>708</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>369</pd:x>
        <pd:y>289</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx13:CreateSalesTransaction)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1263</pd:x>
        <pd:y>290</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx13:CreateSalesTransaction)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($MapResponse/root)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapResponse">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1085</pd:x>
        <pd:y>289</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx13:CreateSalesTransaction"/>
                            <xsd:element ref="pfx14:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="exists($Call_ERP_ReserveInventory)&#xA;and&#xA;upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                        <pfx13:CreateSalesTransaction>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                <pfx13:CustomerName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                <pfx13:CustomerID>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <pfx13:TotalAmount>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                            </pfx13:TotalAmount>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                <pfx13:UserName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                </pfx13:UserName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                                </pfx13:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                                <pfx13:AuthorizeCredit>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                                </pfx13:AuthorizeCredit>
                            </xsl:if>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                                <pfx13:Notes>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                                </pfx13:Notes>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                <pfx13:Remarks>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                </pfx13:Remarks>
                            </xsl:if>
                            <pfx13:Params>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;ErrorSource&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="&quot;ERP&quot;"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WHCODE&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;PAYDESK&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:PayDesk"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;CRMPRODUCTID&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WORKAREA&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WorkArea"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                            </pfx13:Params>
                            <xsl:choose>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='Y'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Complete&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;PartiallySuccessful&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='N'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Failed&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="not(exists($Call_ERP_ReserveInventory/root/ns31:erp))and&#xA;string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo) > 0">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Complete&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Failed&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)>0">
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                                <pfx13:OrderNumber>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                                </pfx13:OrderNumber>
                            </xsl:if>
                            <pfx13:RetryDetails>
                                <pfx13:RetryErrorDescription>
                                    <xsl:value-of select="tib:render-xml($Call_ERP_ReserveInventory/root/ns31:erp)"/>
                                </pfx13:RetryErrorDescription>
                            </pfx13:RetryDetails>
                            <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel">
                                <pfx13:PaySalesChannel>
                                    <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel"/>
                                </pfx13:PaySalesChannel>
                            </xsl:if>
                        </pfx13:CreateSalesTransaction>
                    </xsl:when>
                    <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error)">
                        <pfx14:ErrorResponse>
                            <xsl:if test="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorSource">
                                <pfx14:Error_SourceSystem>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorSource"/>
                                </pfx14:Error_SourceSystem>
                            </xsl:if>
                            <xsl:if test="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode">
                                <pfx14:Error_SourceErrCode>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                </pfx14:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription">
                                <pfx14:Error_SourceErrDesc>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                </pfx14:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType">
                                <pfx14:Error_Type>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType"/>
                                </pfx14:Error_Type>
                            </xsl:if>
                            <pfx14:Error_Additional_Desc2>
                                <xsl:value-of select="tib:render-xml($Call_ERP_ReserveInventory/root/ns31:erp)"/>
                            </pfx14:Error_Additional_Desc2>
                        </pfx14:ErrorResponse>
                    </xsl:when>
                    <xsl:when test="exists($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)">
                        <pfx13:CreateSalesTransaction>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                                <pfx13:CustomerName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                                <pfx13:CustomerID>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <pfx13:TotalAmount>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                            </pfx13:TotalAmount>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                                <pfx13:UserName>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                                </pfx13:UserName>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                                </pfx13:TransactionReference>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                                <pfx13:AuthorizeCredit>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                                </pfx13:AuthorizeCredit>
                            </xsl:if>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                                <pfx13:Notes>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                                </pfx13:Notes>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                                <pfx13:Remarks>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                                </pfx13:Remarks>
                            </xsl:if>
                            <pfx13:Params>
                                <xsl:if test="$Call_ERP_ReserveInventory">
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorSource&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="&quot;ERP&quot;"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                </xsl:if>
                                <xsl:if test="$Call_ERP_ReserveInventory">
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                </xsl:if>
                                <xsl:if test="$Call_ERP_ReserveInventory">
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                </xsl:if>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WHCODE&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;PAYDESK&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:PayDesk"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WORKAREA&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WorkArea"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;CRMPRODUCTID&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                                <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                            </pfx13:Params>
                            <xsl:choose>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='Y'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Complete&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;PartiallySuccessful&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='N'">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Failed&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:when test="not(exists($Call_ERP_ReserveInventory/root/ns31:erp))and&#xA;string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo) > 0">
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Complete&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx13:RequestStatus>
                                        <xsl:value-of select="&quot;Failed&quot;"/>
                                    </pfx13:RequestStatus>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx13:ReceiptNumber>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                            </pfx13:ReceiptNumber>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                            <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                                <pfx13:OrderNumber>
                                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                                </pfx13:OrderNumber>
                            </xsl:if>
                            <pfx13:RetryDetails>
                                <pfx13:RetryErrorDescription>
                                    <xsl:value-of select="tib:render-xml($Call_ERP_ReserveInventory/root/ns31:erp)"/>
                                </pfx13:RetryErrorDescription>
                            </pfx13:RetryDetails>
                            <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel">
                                <pfx13:PaySalesChannel>
                                    <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel"/>
                                </pfx13:PaySalesChannel>
                            </xsl:if>
                        </pfx13:CreateSalesTransaction>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name=&quot;IGNOREVALIDATION&quot;]/pfx13:Value='Y'">
                        <xsl:for-each select="$Parse-XML/pfx13:CreateSalesTransaction">
                            <pfx13:CreateSalesTransaction>
                                <pfx13:CustomerName>
                                    <xsl:value-of select="pfx13:CustomerName"/>
                                </pfx13:CustomerName>
                                <pfx13:CustomerID>
                                    <xsl:value-of select="pfx13:CustomerID"/>
                                </pfx13:CustomerID>
                                <pfx13:MSISDN>
                                    <xsl:value-of select="pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                                <pfx13:TotalAmount>
                                    <xsl:value-of select="pfx13:TotalAmount"/>
                                </pfx13:TotalAmount>
                                <pfx13:UserName>
                                    <xsl:value-of select="pfx13:UserName"/>
                                </pfx13:UserName>
                                <pfx13:PaymentMethod>
                                    <xsl:value-of select="pfx13:PaymentMethod"/>
                                </pfx13:PaymentMethod>
                                <pfx13:TransactionReference>
                                    <xsl:value-of select="pfx13:TransactionReference"/>
                                </pfx13:TransactionReference>
                                <pfx13:AuthorizeCredit>
                                    <xsl:value-of select="pfx13:AuthorizeCredit"/>
                                </pfx13:AuthorizeCredit>
                                <xsl:copy-of select="pfx13:OrderLines"/>
                                <xsl:copy-of select="pfx13:CardDetails"/>
                                <xsl:copy-of select="pfx13:NotificationMedia"/>
                                <pfx13:Notes>
                                    <xsl:value-of select="pfx13:Notes"/>
                                </pfx13:Notes>
                                <pfx13:Remarks>
                                    <xsl:value-of select="pfx13:Remarks"/>
                                </pfx13:Remarks>
                                <pfx13:Params>
                                    <xsl:copy-of select="pfx13:Params/pfx13:Param"/>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorSource&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="&quot;ERP&quot;"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;WHCODE&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;PAYDESK&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:PayDesk"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;WORKAREA&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WorkArea"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                    <pfx13:Param>
                                        <pfx13:Name>
                                            <xsl:value-of select="&quot;CRMPRODUCTID&quot;"/>
                                        </pfx13:Name>
                                        <pfx13:Value>
                                            <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2"/>
                                        </pfx13:Value>
                                    </pfx13:Param>
                                </pfx13:Params>
                                <xsl:choose>
                                    <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='Y'">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;Complete&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;PartiallySuccessful&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='N'">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;Failed&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:when test="not(exists($Call_ERP_ReserveInventory/root/ns31:erp))and&#xA;string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo) > 0">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;Complete&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:when test="(exists($Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))and&#xA;string-length(pfx13:ReceiptNumber) > 0">
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;Complete&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx13:RequestStatus>
                                            <xsl:value-of select="&quot;Failed&quot;"/>
                                        </pfx13:RequestStatus>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)>0">
                                        <pfx13:ReceiptNumber>
                                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                                        </pfx13:ReceiptNumber>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx13:ReceiptNumber>
                                            <xsl:value-of select="pfx13:ReceiptNumber"/>
                                        </pfx13:ReceiptNumber>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:copy-of select="pfx13:Authorization"/>
                                <xsl:if test="pfx13:OriginalUserName">
                                    <pfx13:OriginalUserName>
                                        <xsl:value-of select="pfx13:OriginalUserName"/>
                                    </pfx13:OriginalUserName>
                                </xsl:if>
                                <xsl:if test="pfx13:OriginalSalesDate">
                                    <pfx13:OriginalSalesDate>
                                        <xsl:value-of select="pfx13:OriginalSalesDate"/>
                                    </pfx13:OriginalSalesDate>
                                </xsl:if>
                                <xsl:for-each select="pfx13:OrderState">
                                    <pfx13:OrderState>
                                        <xsl:if test="pfx13:Code">
                                            <pfx13:Code>
                                                <xsl:value-of select="pfx13:Code"/>
                                            </pfx13:Code>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Description">
                                            <pfx13:Description>
                                                <xsl:value-of select="pfx13:Description"/>
                                            </pfx13:Description>
                                        </xsl:if>
                                    </pfx13:OrderState>
                                </xsl:for-each>
                                <xsl:if test="pfx13:OldSTReceiptNumber">
                                    <pfx13:OldSTReceiptNumber>
                                        <xsl:value-of select="pfx13:OldSTReceiptNumber"/>
                                    </pfx13:OldSTReceiptNumber>
                                </xsl:if>
                                <xsl:if test="pfx13:OperationToDo">
                                    <pfx13:OperationToDo>
                                        <xsl:value-of select="pfx13:OperationToDo"/>
                                    </pfx13:OperationToDo>
                                </xsl:if>
                                <xsl:if test="pfx13:Type">
                                    <pfx13:Type>
                                        <xsl:value-of select="pfx13:Type"/>
                                    </pfx13:Type>
                                </xsl:if>
                                <pfx13:OrderNumber>
                                    <xsl:value-of select="pfx13:OrderNumber"/>
                                </pfx13:OrderNumber>
                                <pfx13:RetryDetails>
                                    <pfx13:RetryErrorDescription>
                                        <xsl:value-of select="tib:render-xml($Call_ERP_ReserveInventory/root/ns31:erp)"/>
                                    </pfx13:RetryErrorDescription>
                                </pfx13:RetryDetails>
                                <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel">
                                    <pfx13:PaySalesChannel>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel"/>
                                    </pfx13:PaySalesChannel>
                                </xsl:if>
                            </pfx13:CreateSalesTransaction>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx14:ErrorResponse>
                            <pfx14:Error_SourceSystem>
                                <xsl:value-of select="&quot;CRM&quot;"/>
                            </pfx14:Error_SourceSystem>
                            <pfx14:Error_SourceErrCode>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorSourceErrCode"/>
                            </pfx14:Error_SourceErrCode>
                            <pfx14:Error_SourceErrDesc>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorSourceErrDesc"/>
                            </pfx14:Error_SourceErrDesc>
                            <pfx14:Error_Type>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorType"/>
                            </pfx14:Error_Type>
                            <pfx14:Error_UserErrCode>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorUserErrCode"/>
                            </pfx14:Error_UserErrCode>
                            <pfx14:Error_UserErrDesc>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorUserErrDesc"/>
                            </pfx14:Error_UserErrDesc>
                            <pfx14:Error_Occurance_Time>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorOccuranceTime"/>
                            </pfx14:Error_Occurance_Time>
                            <pfx14:Error_Additional_Desc1>
                                <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ErrorAdditionalDesc1"/>
                            </pfx14:Error_Additional_Desc1>
                            <pfx14:Error_Additional_Desc2>
                                <xsl:value-of select="tib:render-xml($Call_ERP_ReserveInventory/root/ns31:erp)"/>
                            </pfx14:Error_Additional_Desc2>
                        </pfx14:ErrorResponse>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>184</pd:x>
        <pd:y>288</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:CreateSalesTransaction"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>399</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1181</pd:x>
        <pd:y>298</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>CashSalesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapResponse/root)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>585</pd:x>
        <pd:y>582</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>CashSalesReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/root)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:description>Update CRM , in the call from Sales Order this should be avoided as 
update is done from the sales Order Orchestration.</pd:description>
        <pd:x>1460</pd:x>
        <pd:y>209</pd:y>
        <pd:width>204</pd:width>
        <pd:height>136</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ESI_CRM_CreateSalesTransaction</pd:to>
            <pd:xpathDescription>CreateSalesTransactionCashSalesOnly</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$CallCRMOrnot/root/goNoGo='true'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_CRM_CreateSalesTransaction</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="ESI_CRM_CreateSalesTransaction">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>Receipt Number we already have we , have to update the sales TRansaction with that.</pd:description>
            <pd:x>1570</pd:x>
            <pd:y>281</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/CashSales/HelperProcess/ESI_CRM_UpdateSalesTransaction.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx13:CreateSalesTransaction>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName">
                            <pfx13:CustomerName>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerName"/>
                            </pfx13:CustomerName>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID">
                            <pfx13:CustomerID>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CustomerID"/>
                            </pfx13:CustomerID>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN">
                            <pfx13:MSISDN>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:MSISDN"/>
                            </pfx13:MSISDN>
                        </xsl:if>
                        <pfx13:TotalAmount>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                        </pfx13:TotalAmount>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                            <pfx13:UserName>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                            </pfx13:UserName>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod">
                            <pfx13:PaymentMethod>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:PaymentMethod"/>
                            </pfx13:PaymentMethod>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference">
                            <pfx13:TransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TransactionReference"/>
                            </pfx13:TransactionReference>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit">
                            <pfx13:AuthorizeCredit>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit"/>
                            </pfx13:AuthorizeCredit>
                        </xsl:if>
                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines"/>
                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails"/>
                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:NotificationMedia"/>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes">
                            <pfx13:Notes>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Notes"/>
                            </pfx13:Notes>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks">
                            <pfx13:Remarks>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Remarks"/>
                            </pfx13:Remarks>
                        </xsl:if>
                        <pfx13:Params>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorSource&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="&quot;ERP&quot;"/>
                                </pfx13:Value>
                            </pfx13:Param>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorCode&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorCode"/>
                                </pfx13:Value>
                            </pfx13:Param>
                            <pfx13:Param>
                                <pfx13:Name>
                                    <xsl:value-of select="&quot;ErrorDesc&quot;"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorDescription"/>
                                </pfx13:Value>
                            </pfx13:Param>
                            <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode">
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WHCODE&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                            </xsl:if>
                            <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode">
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;PAYDESK&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:PayDesk"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                            </xsl:if>
                            <xsl:if test="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WorkArea">
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;WORKAREA&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WorkArea"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                            </xsl:if>
                            <xsl:if test="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2">
                                <pfx13:Param>
                                    <pfx13:Name>
                                        <xsl:value-of select="&quot;CRMPRODUCTID&quot;"/>
                                    </pfx13:Name>
                                    <pfx13:Value>
                                        <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_Additional_Desc2"/>
                                    </pfx13:Value>
                                </pfx13:Param>
                            </xsl:if>
                            <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param"/>
                        </pfx13:Params>
                        <xsl:choose>
                            <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='Y'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)='TECHNICAL'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;PartiallySuccessful&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="exists($Call_ERP_ReserveInventory/root/ns31:erp) &#xA;and $Call_ERP_ReserveInventory/root/ns31:erp/ns31:Result='N'">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Failed&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="not(exists($Call_ERP_ReserveInventory/root/ns31:erp))and&#xA;string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo) > 0">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:when test="(exists($Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber))and&#xA;string-length($Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber) > 0">
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Complete&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx13:RequestStatus>
                                    <xsl:value-of select="&quot;Failed&quot;"/>
                                </pfx13:RequestStatus>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo)>0">
                                <pfx13:ReceiptNumber>
                                    <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:ReceiptNo"/>
                                </pfx13:ReceiptNumber>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber">
                                    <pfx13:ReceiptNumber>
                                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:ReceiptNumber"/>
                                    </pfx13:ReceiptNumber>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:copy-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Authorization"/>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName">
                            <pfx13:OriginalUserName>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalUserName"/>
                            </pfx13:OriginalUserName>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate">
                            <pfx13:OriginalSalesDate>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OriginalSalesDate"/>
                            </pfx13:OriginalSalesDate>
                        </xsl:if>
                        <pfx13:OldSTReceiptNumber>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OldSTReceiptNumber"/>
                        </pfx13:OldSTReceiptNumber>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo">
                            <pfx13:OperationToDo>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo"/>
                            </pfx13:OperationToDo>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type">
                            <pfx13:Type>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Type"/>
                            </pfx13:Type>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber">
                            <pfx13:OrderNumber>
                                <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderNumber"/>
                            </pfx13:OrderNumber>
                        </xsl:if>
                        <xsl:copy-of select="$MapResponse/root/pfx13:CreateSalesTransaction/pfx13:RetryDetails"/>
                        <pfx13:PaySalesChannel>
                            <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:Channel"/>
                        </pfx13:PaySalesChannel>
                    </pfx13:CreateSalesTransaction>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <Destination>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/SalesOrder/ESI_Req_Queue_CRMCreateJMS"/>
                    </Destination>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ESI_CRM_QueryWareHouse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>198</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/CashSales/HelperProcess/ESI_CRM_QueryWareHouse.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx17:GetEmpOrg_Input>
                    <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName">
                        <pfx17:UserId>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:UserName"/>
                        </pfx17:UserId>
                    </xsl:if>
                </pfx17:GetEmpOrg_Input>
                <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="WareHouseNotFoundErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>379</pd:x>
        <pd:y>114</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx14:ErrorResponse/pfx14:Error_UserErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$ESI_CRM_QueryWareHouse/root/pfx14:ErrorResponse/pfx14:Error_UserErrCode"/>
                </messageCode>
                <data>
                    <xsl:copy-of select="$ESI_CRM_QueryWareHouse/root/pfx14:ErrorResponse"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CheckPriceValidationFailed">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>410</pd:x>
        <pd:y>465</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                </messageCode>
                <data>
                    <pfx14:ErrorResponse>
                        <pfx14:Error_SourceSystem>
                            <xsl:value-of select="&quot;CRM&quot;"/>
                        </pfx14:Error_SourceSystem>
                        <pfx14:Error_SourceErrCode>
                            <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrCode"/>
                        </pfx14:Error_SourceErrCode>
                        <pfx14:Error_SourceErrDesc>
                            <xsl:value-of select="$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrDesc"/>
                        </pfx14:Error_SourceErrDesc>
                        <pfx14:Error_Type>
                            <xsl:value-of select="&quot;Business&quot;"/>
                        </pfx14:Error_Type>
                    </pfx14:ErrorResponse>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="IgnoreCRMCall">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:description>business Error Occurred in ERP call. Ignore CRM call</pd:description>
        <pd:x>963</pd:x>
        <pd:y>287</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>744</pd:x>
        <pd:y>285</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LunCheckErr">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>348</pd:x>
        <pd:y>395</pd:y>
        <config>
            <faultName>Schema0</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse/pfx14:Error_UserErrDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse/pfx14:Error_UserErrCode"/>
                </messageCode>
                <data>
                    <xsl:copy-of select="$ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse"/>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Join">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>962</pd:x>
        <pd:y>199</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CheckProductAndPrice">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>621</pd:x>
        <pd:y>383</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/CashSales/HelperProcess/CheckProductAndPrice.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Checkprice>
                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name = 'CheckPrice' ]/pfx13:Value"/>
                </Checkprice>
                <xsl:if test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount">
                    <Amount>
                        <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:TotalAmount"/>
                    </Amount>
                </xsl:if>
                <ProductCode>
                    <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines[1]/pfx13:ProductCode"/>
                </ProductCode>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ValidCheck">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>295</pd:x>
        <pd:y>291</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Valign">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:description>Validation Ignore as Validation was performed Already</pd:description>
        <pd:x>287</pd:x>
        <pd:y>34</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>700</pd:x>
        <pd:y>103</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CallCRMOrnot">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1340</pd:x>
        <pd:y>289</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="goNoGo" type="xsd:boolean"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name=&quot;CallFrom&quot;]/pfx13:Value='CashSales'">
                        <xsl:choose>
                            <xsl:when test="upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)=&quot;BUSINESS&quot;">
                                <goNoGo>
                                    <xsl:value-of select="&quot;false&quot;"/>
                                </goNoGo>
                            </xsl:when>
                            <xsl:otherwise>
                                <goNoGo>
                                    <xsl:value-of select="&quot;true&quot;"/>
                                </goNoGo>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="($Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo = &quot;Device Sales&quot;&#xA;or&#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo =&quot;Service Sales&quot;)&#xA;&#xA;and &#xA;$Parse-XML/pfx13:CreateSalesTransaction/pfx13:AuthorizeCredit!=&quot;true&quot;">
                                <goNoGo>
                                    <xsl:value-of select="&quot;true&quot;"/>
                                </goNoGo>
                            </xsl:when>
                            <xsl:when test="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name=&quot;CALLCRM&quot;]/pfx13:Value='true'">
                                <goNoGo>
                                    <xsl:value-of select="&quot;true&quot;"/>
                                </goNoGo>
                            </xsl:when>
                            <xsl:otherwise>
                                <goNoGo>
                                    <xsl:value-of select="&quot;false&quot;"/>
                                </goNoGo>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="ifLuhnCheckReq">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>493</pd:x>
        <pd:y>215</pd:y>
        <pd:width>173</pd:width>
        <pd:height>133</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>ifThenElse</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ESI_CRM_QueryLunCheck</pd:to>
            <pd:xpathDescription>LuhnCheckReqorNot</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/CashSales/LuhnCheckRq='true'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>ESI_CRM_QueryLunCheck</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="ESI_CRM_QueryLunCheck">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>586</pd:x>
            <pd:y>288</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/CashSales/HelperProcess/ESI_CRM_QueryLunCheck.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns33:CBiO2LuhnCheckWS_Input>
                        <ns33:CardType>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardType"/>
                        </ns33:CardType>
                        <ns33:AuthCode>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:AuthorizationCode"/>
                        </ns33:AuthCode>
                        <ns33:CardHolderName>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:HolderName"/>
                        </ns33:CardHolderName>
                        <ns33:CBiO2_spcPay_spcMethod>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name=&quot;LOW&quot;]/pfx13:Value"/>
                        </ns33:CBiO2_spcPay_spcMethod>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate)&#xA;and &#xA;string-length(tib:trim($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate))>0">
                                <ns33:CCExpirationYear>
                                    <xsl:value-of select="tib:get-year-from-date(tib:parse-date(&quot;MMyyyy&quot;,$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate))"/>
                                </ns33:CCExpirationYear>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns33:CCExpirationYear>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns33:CCExpirationYear>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate)&#xA;and &#xA;string-length(tib:trim($Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate))>0">
                                <ns33:CCExpirationMonth>
                                    <xsl:value-of select="tib:pad-front(tib:get-month-from-date(tib:parse-date(&quot;MMyyyy&quot;,$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:ExpiryDate)), '2', '0')"/>
                                </ns33:CCExpirationMonth>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns33:CCExpirationMonth>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns33:CCExpirationMonth>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns33:CreditCardNo>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CardNumber"/>
                        </ns33:CreditCardNo>
                        <ns33:AuthDate>
                            <xsl:value-of select="&quot;&quot;"/>
                        </ns33:AuthDate>
                        <ns33:CVV>
                            <xsl:value-of select="$Parse-XML/pfx13:CreateSalesTransaction/pfx13:CardDetails/pfx13:CVV"/>
                        </ns33:CVV>
                    </ns33:CBiO2LuhnCheckWS_Input>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <xsl:if test="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$CashSalesReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>CashSalesReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CashSalesReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ERP_ReserveInventory</pd:from>
        <pd:to>Join</pd:to>
        <pd:xpathDescription>Suc or Technical Err</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:ResponseCode=0
or
upper-case($Call_ERP_ReserveInventory/root/ns31:erp/ns21:Response/ns21:Error/ns21:errorType)="TECHNICAL"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapResponse</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>ESI_CRM_QueryWareHouse</pd:to>
        <pd:xpathDescription>QueryUser</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ValidCheck</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>CallCRMOrnot</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:description>Device Sales Where check price is not required.</pd:description>
        <pd:from>ESI_CRM_QueryWareHouse</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>CheckPriceNo</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length(tib:if-absent($Parse-XML/pfx13:CreateSalesTransaction/pfx13:OrderLines/pfx13:SerialNumber,""))&gt;0
and
$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name = 'CheckPrice' ]/pfx13:Value!='Y'
and
$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo="Device Sales"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_CRM_QueryWareHouse</pd:from>
        <pd:to>WareHouseNotFoundErr</pd:to>
        <pd:xpathDescription>EricErr</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($ESI_CRM_QueryWareHouse/root/pfx14:ErrorResponse)&gt;0
or
string-length($ESI_CRM_QueryWareHouse/root/pfx17:GetEmpOrg_Output/pfx17:WhCode)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:description>Calls Coming from sales Order Transactions.</pd:description>
        <pd:from>ESI_CRM_QueryWareHouse</pd:from>
        <pd:to>Join</pd:to>
        <pd:xpathDescription>no Device</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ERP_ReserveInventory</pd:from>
        <pd:to>IgnoreCRMCall</pd:to>
        <pd:lineType>Curved</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IgnoreCRMCall</pd:from>
        <pd:to>MapResponse</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>CheckProductAndPrice</pd:to>
        <pd:xpathDescription>ProductDetails and CheckPrice</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Call_ERP_ReserveInventory</pd:to>
        <pd:xpathDescription>Device</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo="Device Sales"
and 
(
$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name="CallFrom"]/pfx13:Value='SalesOrder'
or
$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name="CallFrom"]/pfx13:Value='CashSales'
)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Join</pd:from>
        <pd:to>MapResponse</pd:to>
        <pd:lineType>S-Shaped</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckProductAndPrice</pd:from>
        <pd:to>CheckPriceValidationFailed</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckProductAndPrice</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>PriceOk</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo="Device Sales"
and 
$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrCode=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckProductAndPrice</pd:from>
        <pd:to>Join</pd:to>
        <pd:xpathDescription>ProductExists</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo!="Device Sales"
and
$CheckProductAndPrice/pfx14:ErrorResponse/pfx14:Error_SourceErrCode=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Join</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidCheck</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ValidCheck</pd:from>
        <pd:to>Valign</pd:to>
        <pd:xpathDescription>NoValidReq</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name="IGNOREVALIDATION"]/pfx13:Value='Y'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Valign</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:xpathDescription>Device</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:OperationToDo="Device Sales"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Valign</pd:from>
        <pd:to>Join</pd:to>
        <pd:xpathDescription>Service</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallCRMOrnot</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>ifLuhnCheckReq</pd:to>
        <pd:xpathDescription>LunCheckRequired</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name = "LOW"]/pfx13:Value="Credit Card"
or
$Parse-XML/pfx13:CreateSalesTransaction/pfx13:Params/pfx13:Param[pfx13:Name = "LOW"]/pfx13:Value="Debit Card"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ifLuhnCheckReq</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ifLuhnCheckReq</pd:from>
        <pd:to>LunCheckErr</pd:to>
        <pd:xpathDescription>EricErr</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode) and string-length($ESI_CRM_QueryLunCheck/root/pfx14:ErrorResponse/pfx14:Error_SourceErrCode)&gt;0</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Update CRM , in the call from Sales Order this should be avoided as 
update is done from the sales Order Orchestration.</pd:description>
        <pd:x>1214</pd:x>
        <pd:y>173</pd:y>
        <pd:width>422</pd:width>
        <pd:height>67</pd:height>
        <pd:fontName>Dialog.bold-plain-9</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3355444</pd:color>
        <pd:type>dash</pd:type>
        <pd:thickness>2</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
    <pd:label>
        <pd:name>Label (1)</pd:name>
        <pd:description>POS Transaction is done in ERP in case of Device Sales</pd:description>
        <pd:x>1056</pd:x>
        <pd:y>114</pd:y>
        <pd:width>330</pd:width>
        <pd:height>40</pd:height>
        <pd:fontName>Dialog.bold-plain-9</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-3355444</pd:color>
        <pd:type>dash</pd:type>
        <pd:thickness>2</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>