<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns5="http://www.tibco.com/namespaces/tnt/plugins/mail" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns6="http://www.zain.com/ZESB/Services/EmailService/Types" xmlns:pfx="http://siebel.com/CustomUI" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://xmlns.tibco.com/body" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>BusinessProcesses/Services/Common/EPDErrorDBEntry/Implementation/EPDErrorDBEntry.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>83</pd:x>
        <pd:y>91</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/EPDErrorDBEntry/EPD_Error_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>895</pd:endX>
    <pd:endY>98</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1486454461318</pd:targetNamespace>
    <pd:activity name="Log_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>347</pd:x>
        <pd:y>92</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,6),'XXXXXX',tib:right($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>730</pd:x>
        <pd:y>97</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="'Data Inserted successfully'"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>458</pd:x>
        <pd:y>92</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
            <statement>insert into EPD_DATA
(SEQNUMBER,STATUS,CREATIONDATE,CREATEDBY,DATEOFLASTUPDATE,LASTUPDATEBY,crcardno,payAuthCode,channel,sourceTransactionId,merchantId,paymentAmount,caxact,payDate,user_name,terminalId,expiryDate,IssuerBank,PayMethod,remarks,transactionRefNum,location,customerCategory)
values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>SEQNUMBER</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CREATIONDATE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CREATEDBY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>DATEOFLASTUPDATE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>LASTUPDATEBY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>crcardno</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>payAuthCode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>channel</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>sourceTransactionId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>merchantId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>paymentAmount</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>caxact</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>payDate</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>user</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>terminalId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>expiryDate</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>IssuerBank</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PayMethod</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>remarks</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>transactionRefNum</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>location</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>customerCategory</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <SEQNUMBER>
                    <xsl:value-of select="''"/>
                </SEQNUMBER>
                <STATUS>
                    <xsl:value-of select="'NEW'"/>
                </STATUS>
                <CREATIONDATE>
                    <xsl:value-of select="current-dateTime()"/>
                </CREATIONDATE>
                <CREATEDBY>
                    <xsl:value-of select="'TIBCOUSER'"/>
                </CREATEDBY>
                <DATEOFLASTUPDATE>
                    <xsl:value-of select="''"/>
                </DATEOFLASTUPDATE>
                <LASTUPDATEBY>
                    <xsl:value-of select="''"/>
                </LASTUPDATEBY>
                <crcardno>
                    <xsl:choose>
                        <xsl:when test="exists(if(string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber)>0)&#xA;then concat(tib:left($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,6),'XXXXXX',tib:right($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,4))&#xA;else '')">
                            <xsl:value-of select="if(string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber)>0)&#xA;then concat(tib:left($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,6),'XXXXXX',tib:right($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AccountNumber,4))&#xA;else ''"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </crcardno>
                <payAuthCode>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AuthorizationCode)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:AuthorizationCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </payAuthCode>
                <channel>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:Channel)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:Channel"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </channel>
                <sourceTransactionId>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExtTransactionRef)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExtTransactionRef"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </sourceTransactionId>
                <merchantId>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchantId)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchantId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </merchantId>
                <paymentAmount>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchantAmount)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchantAmount"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </paymentAmount>
                <caxact>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchTxnRef)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:MerchTxnRef"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </caxact>
                <xsl:choose>
                    <xsl:when test="string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CBiO2PaymentDateTime)>0">
                        <payDate>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CBiO2PaymentDateTime)">
                                    <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CBiO2PaymentDateTime"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </payDate>
                    </xsl:when>
                    <xsl:otherwise>
                        <payDate>
                            <xsl:value-of select="''"/>
                        </payDate>
                    </xsl:otherwise>
                </xsl:choose>
                <user>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:UserName)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:UserName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </user>
                <terminalId>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:TerminalId)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:TerminalId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </terminalId>
                <expiryDate>
                    <xsl:choose>
                        <xsl:when test="exists(if(string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationMonth)>0 and string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationYear)>0)&#xA;then concat($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationMonth,$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationYear)&#xA;else $Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationDate)">
                            <xsl:value-of select="if(string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationMonth)>0 and string-length($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationYear)>0)&#xA;then concat($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationMonth,$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationYear)&#xA;else $Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ExpirationDate"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </expiryDate>
                <IssuerBank>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:IssuingBankName)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:IssuingBankName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </IssuerBank>
                <PayMethod>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:PaymentMethod)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:PaymentMethod"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </PayMethod>
                <remarks>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ChequeNum)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:ChequeNum"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </remarks>
                <transactionRefNum>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CRMReceiptNo)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CRMReceiptNo"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </transactionRefNum>
                <location>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CBiO2WorkArea)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CBiO2WorkArea"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </location>
                <customerCategory>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CardHolder)">
                            <xsl:value-of select="$Parse-XML/pfx:ExternalPaymentPosting_Input/ns4:ListOfCbio2paymenttransactionpostingio/ns4:Payments[1]/ns4:CardHolder"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </customerCategory>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>209</pd:x>
        <pd:y>93</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx:ExternalPaymentPosting_Input"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_Email">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>595</pd:x>
        <pd:y>93</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/EPDErrorDBEntry/HelperProcess/Call_Email.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns6:SendEmailInput>
                    <ns6:From>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/From"/>
                    </ns6:From>
                    <ns6:To>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/To"/>
                    </ns6:To>
                    <ns6:Subject>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/Subject"/>
                    </ns6:Subject>
                    <ns6:Body>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/Msg"/>
                    </ns6:Body>
                    <ns6:ContentType>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/ContentType"/>
                    </ns6:ContentType>
                </ns6:SendEmailInput>
                <TransactionID>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>583</pd:x>
        <pd:y>223</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>752</pd:x>
        <pd:y>227</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/EPDErrorDBEntry/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($_error/ns3:ErrorReport)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Request</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>Call_Email</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Log_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_Email</pd:from>
        <pd:to>Log_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>