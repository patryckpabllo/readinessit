<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pfx="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>BusinessProcesses/Services/Common/Payment/HelperProcess/WriteAuthorizationToDB.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>83</pd:x>
        <pd:y>91</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/Payments/Authorization_data_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
            <OutDataxsdString>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:choice>
                            <xsd:element ref="pfx:AuthorizationOutput"/>
                            <xsd:element ref="pfx2:ErrorResponse"/>
                        </xsd:choice>
                    </xsd:complexType>
                </xsd:element>
            </OutDataxsdString>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>695</pd:endX>
    <pd:endY>91</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1486454461318</pd:targetNamespace>
    <pd:activity name="Log_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>247</pd:x>
        <pd:y>92</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns:ActivityOutput/Body/root)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>548</pd:x>
        <pd:y>90</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns3:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Transaction>
                        <xsl:value-of select="$JDBC-Update/jdbcUpdateActivityOutput/noOfUpdates"/>
                    </ns22:Transaction>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$JMS-Queue-Receiver/ns:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>404</pd:x>
        <pd:y>88</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>insert into AUTHORIZATION_DATA (MerchantId,Amount,TransactionReference,ShoppingTransactionReference,CardType,OrderInfo,AuthorizationStatus,ReceiptNumber,AuthorizationID,AcquirerResponseCode,SettlmentDate,Error_SourceSystem,Error_SourceErrCode,Error_SourceErrDesc,Error_Type,Error_UserErrCode,Error_UserErrDesc,Error_Occurance_Time,Error_Additional_Desc1,Error_Additional_Desc2)
values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>MerchantId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Amount</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TransactionReference</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ShoppingTransactionReference</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CardType</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>OrderInfo</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AuthorizationStatus</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ReceiptNumber</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AuthorizationID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>AcquirerResponseCode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SettlmentDate</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_SourceSystem</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_SourceErrCode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_SourceErrDesc</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_Type</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_UserErrCode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_UserErrDesc</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_Occurance_Time</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_Additional_Desc1</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Error_Additional_Desc2</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <jdbcSharedConfig>/CommonResources/Connections/JDBC/Internal/TIBCOAppDB.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <MerchantId>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:MerchantId)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:MerchantId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MerchantId>
                <Amount>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:Amount)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:Amount"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Amount>
                <TransactionReference>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:TransactionReference)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:TransactionReference"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TransactionReference>
                <ShoppingTransactionReference>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:ShoppingTransactionReference)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:ShoppingTransactionReference"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ShoppingTransactionReference>
                <CardType>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:CardType)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:CardType"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CardType>
                <OrderInfo>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:OrderInfo)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:OrderInfo"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </OrderInfo>
                <AuthorizationStatus>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AuthorizationStatus)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AuthorizationStatus"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AuthorizationStatus>
                <ReceiptNumber>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:ReceiptNumber)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:ReceiptNumber"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ReceiptNumber>
                <AuthorizationID>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AuthorizationID)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AuthorizationID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AuthorizationID>
                <AcquirerResponseCode>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AcquirerResponseCode)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:AcquirerResponseCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </AcquirerResponseCode>
                <SettlmentDate>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:SettlmentDate)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx:AuthorizationOutput/pfx:SettlmentDate"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SettlmentDate>
                <Error_SourceSystem>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceSystem)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceSystem"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_SourceSystem>
                <Error_SourceErrCode>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceErrCode)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceErrCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_SourceErrCode>
                <Error_SourceErrDesc>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceErrDesc)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_SourceErrDesc"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_SourceErrDesc>
                <Error_Type>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Type)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Type"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_Type>
                <Error_UserErrCode>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_UserErrCode)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_UserErrCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_UserErrCode>
                <Error_UserErrDesc>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_UserErrDesc)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_UserErrDesc"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_UserErrDesc>
                <Error_Occurance_Time>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Occurance_Time)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Occurance_Time"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_Occurance_Time>
                <Error_Additional_Desc1>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Additional_Desc1)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Additional_Desc1"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_Additional_Desc1>
                <Error_Additional_Desc2>
                    <xsl:choose>
                        <xsl:when test="exists($JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Additional_Desc2)">
                            <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body/root/pfx2:ErrorResponse/pfx2:Error_Additional_Desc2"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Error_Additional_Desc2>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Log_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Request</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>Log_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>