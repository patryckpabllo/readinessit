<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://ericsson.com/services/ws_CMI_5/customerread" xmlns:pfx15="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:pfx13="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:pfx17="http://www.ericsson.com/ZainKW/BusinessSchemas/AuthoriseDetails.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns110="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns26="http://siebel.com/CustomUI" xmlns:ns27="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:ns28="http://www.siebel.com/xml/CBiO2%20External%20Pmt%20Posting%20IO" xmlns:ns21="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://mastercard.zain.com/" xmlns:ns24="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx161="http://www.ericsson.com/ZainKW/BusinessSchemas/ChequeDetails.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalPaymentPostingWS_0301.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/Payment/Implementation/PaymentTransactions.process</pd:name>
    <pd:startName>PaymentTransactionsReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="PaymentTransactionsReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>176</pd:x>
        <pd:y>248</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/Payments/TransactionQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>653</pd:endX>
    <pd:endY>604</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="ns25:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>424</pd:x>
        <pd:y>251</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>476</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx12:PaymentInboundInput)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="if (string-length($Map-Error/pfx12:PaymentInboundOutput)>0)&#xA;then &#xA;tib:render-xml($Map-Error/pfx12:PaymentInboundOutput)&#xA;else&#xA;tib:render-xml($Map-Data/pfx12:PaymentInboundOutput)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,6),'XXXXXX',tib:right($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>546</pd:x>
        <pd:y>411</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx12:PaymentInboundOutput"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($ContractPayment/ns25:ErrorResponse)&#xA;and&#xA;$Parse-XML/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='N'">
                    <xsl:for-each select="$ContractPayment/ns25:ErrorResponse">
                        <ns25:ErrorResponse>
                            <xsl:if test="ns25:Error_SourceSystem">
                                <ns25:Error_SourceSystem>
                                    <xsl:value-of select="ns25:Error_SourceSystem"/>
                                </ns25:Error_SourceSystem>
                            </xsl:if>
                            <xsl:if test="ns25:Error_SourceErrCode">
                                <ns25:Error_SourceErrCode>
                                    <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                </ns25:Error_SourceErrCode>
                            </xsl:if>
                            <xsl:if test="ns25:Error_SourceErrDesc">
                                <ns25:Error_SourceErrDesc>
                                    <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                </ns25:Error_SourceErrDesc>
                            </xsl:if>
                            <xsl:if test="ns25:Error_Type">
                                <ns25:Error_Type>
                                    <xsl:value-of select="ns25:Error_Type"/>
                                </ns25:Error_Type>
                            </xsl:if>
                            <xsl:if test="ns25:Error_UserErrCode">
                                <ns25:Error_UserErrCode>
                                    <xsl:value-of select="ns25:Error_UserErrCode"/>
                                </ns25:Error_UserErrCode>
                            </xsl:if>
                            <xsl:if test="ns25:Error_UserErrDesc">
                                <ns25:Error_UserErrDesc>
                                    <xsl:value-of select="ns25:Error_UserErrDesc"/>
                                </ns25:Error_UserErrDesc>
                            </xsl:if>
                            <xsl:if test="ns25:Error_Occurance_Time">
                                <ns25:Error_Occurance_Time>
                                    <xsl:value-of select="ns25:Error_Occurance_Time"/>
                                </ns25:Error_Occurance_Time>
                            </xsl:if>
                            <xsl:if test="ns25:Error_Additional_Desc1">
                                <ns25:Error_Additional_Desc1>
                                    <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                                </ns25:Error_Additional_Desc1>
                            </xsl:if>
                            <xsl:if test="ns25:Error_Additional_Desc2">
                                <ns25:Error_Additional_Desc2>
                                    <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                                </ns25:Error_Additional_Desc2>
                            </xsl:if>
                        </ns25:ErrorResponse>
                    </xsl:for-each>
                </xsl:when>
                <xsl:when test="exists($ContractPayment/ns25:ErrorResponse)&#xA;and&#xA;$Parse-XML/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                    <pfx12:PaymentInboundOutput>
                        <ns20:ZainCustomerPayment>
                            <ns21:Money>
                                <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                    <ns21:amount>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                    </ns21:amount>
                                </xsl:if>
                            </ns21:Money>
                            <ns20:TransactionID>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                            </ns20:TransactionID>
                            <ns20:PaymentMethod>
                                <ns20:CreditCardPM>
                                    <ns20:authorizationCode>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                    </ns20:authorizationCode>
                                    <ns20:creditCardType>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                                    </ns20:creditCardType>
                                    <ns20:CVV>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                                    </ns20:CVV>
                                    <ns20:ReceiptNumber>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                                    </ns20:ReceiptNumber>
                                </ns20:CreditCardPM>
                            </ns20:PaymentMethod>
                            <ns20:paymentStatus>
                                <xsl:value-of select="'PARTIALLY SUCCESS'"/>
                            </ns20:paymentStatus>
                            <ns20:MerchantID>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                            </ns20:MerchantID>
                            <ns20:AuthorizationStatus>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </ns20:AuthorizationStatus>
                            <ns20:ReceiptNumber>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                            </ns20:ReceiptNumber>
                            <ns20:SettlementDate>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </ns20:SettlementDate>
                            <ns20:AcquirerResponseCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns20:AcquirerResponseCode>
                            <ns20:ShoppingTransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </ns20:ShoppingTransactionReference>
                        </ns20:ZainCustomerPayment>
                        <ns20:Params>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseCode'"/>
                                </ns20:Name>
                                <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrCode">
                                    <ns20:Value>
                                        <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrCode"/>
                                    </ns20:Value>
                                </xsl:if>
                            </ns20:Param>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseDesc'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrDesc"/>
                                </ns20:Value>
                            </ns20:Param>
                        </ns20:Params>
                    </pfx12:PaymentInboundOutput>
                </xsl:when>
                <xsl:otherwise>
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="'AuthorizeCredit'"/>
                        </ns25:Error_SourceSystem>
                        <ns25:Error_SourceErrCode>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                        </ns25:Error_SourceErrCode>
                        <ns25:Error_SourceErrDesc>
                            <xsl:value-of select="'Failed to authorize'"/>
                        </ns25:Error_SourceErrDesc>
                    </ns25:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>699</pd:x>
        <pd:y>34</pd:y>
        <pd:width>342</pd:width>
        <pd:height>154</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx12:PaymentInboundInput/pfx12:Subscriber</pd:over>
            <pd:iterationElementSlot>Payment</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>PaymentRes</pd:outSlot>
            <pd:activityOutputName>MapRes</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>SubscriberPayment</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapRes</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SubscriberPayment</pd:from>
            <pd:to>MapRes</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="SubscriberPayment">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>794</pd:x>
            <pd:y>103</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Common/Payment/Implementation/PaymentLoop.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:for-each select="$Parse-XML/pfx12:PaymentInboundInput">
                        <pfx12:PaymentInboundInput>
                            <xsl:if test="pfx12:UserName">
                                <pfx12:UserName>
                                    <xsl:value-of select="pfx12:UserName"/>
                                </pfx12:UserName>
                            </xsl:if>
                            <xsl:if test="pfx12:AuthorizeCredit">
                                <pfx12:AuthorizeCredit>
                                    <xsl:value-of select="pfx12:AuthorizeCredit"/>
                                </pfx12:AuthorizeCredit>
                            </xsl:if>
                            <pfx12:Subscriber>
                                <xsl:if test="$Payment/pfx12:Subscriber/pfx12:MSISDN">
                                    <pfx12:MSISDN>
                                        <xsl:value-of select="$Payment/pfx12:Subscriber/pfx12:MSISDN"/>
                                    </pfx12:MSISDN>
                                </xsl:if>
                                <xsl:if test="$Payment/pfx12:Subscriber/pfx12:Area">
                                    <pfx12:Area>
                                        <xsl:value-of select="$Payment/pfx12:Subscriber/pfx12:Area"/>
                                    </pfx12:Area>
                                </xsl:if>
                                <xsl:if test="$Payment/pfx12:Subscriber/pfx12:Amount">
                                    <pfx12:Amount>
                                        <xsl:value-of select="$Payment/pfx12:Subscriber/pfx12:Amount"/>
                                    </pfx12:Amount>
                                </xsl:if>
                            </pfx12:Subscriber>
                            <xsl:for-each select="ns20:ZainCustomerPayment">
                                <ns20:ZainCustomerPayment>
                                    <xsl:for-each select="ns21:Money">
                                        <ns21:Money>
                                            <xsl:if test="$Payment/pfx12:Subscriber/pfx12:Amount">
                                                <ns21:amount>
                                                    <xsl:value-of select="$Payment/pfx12:Subscriber/pfx12:Amount"/>
                                                </ns21:amount>
                                            </xsl:if>
                                            <xsl:if test="ns21:units">
                                                <ns21:units>
                                                    <xsl:value-of select="ns21:units"/>
                                                </ns21:units>
                                            </xsl:if>
                                        </ns21:Money>
                                    </xsl:for-each>
                                    <xsl:if test="ns21:conversionRate">
                                        <ns21:conversionRate>
                                            <xsl:value-of select="ns21:conversionRate"/>
                                        </ns21:conversionRate>
                                    </xsl:if>
                                    <xsl:if test="ns20:TransactionID">
                                        <ns20:TransactionID>
                                            <xsl:value-of select="ns20:TransactionID"/>
                                        </ns20:TransactionID>
                                    </xsl:if>
                                    <xsl:if test="ns20:paymentDate">
                                        <ns20:paymentDate>
                                            <xsl:value-of select="ns20:paymentDate"/>
                                        </ns20:paymentDate>
                                    </xsl:if>
                                    <xsl:if test="ns20:paymentReceiptDate">
                                        <ns20:paymentReceiptDate>
                                            <xsl:value-of select="ns20:paymentReceiptDate"/>
                                        </ns20:paymentReceiptDate>
                                    </xsl:if>
                                    <xsl:if test="ns20:paymentType">
                                        <ns20:paymentType>
                                            <xsl:value-of select="ns20:paymentType"/>
                                        </ns20:paymentType>
                                    </xsl:if>
                                    <xsl:for-each select="ns20:PaymentMethod">
                                        <ns20:PaymentMethod>
                                            <xsl:if test="ns20:description">
                                                <ns20:description>
                                                    <xsl:value-of select="ns20:description"/>
                                                </ns20:description>
                                            </xsl:if>
                                            <xsl:if test="ns20:ID">
                                                <ns20:ID>
                                                    <xsl:value-of select="ns20:ID"/>
                                                </ns20:ID>
                                            </xsl:if>
                                            <xsl:if test="ns20:name">
                                                <ns20:name>
                                                    <xsl:value-of select="ns20:name"/>
                                                </ns20:name>
                                            </xsl:if>
                                            <xsl:if test="ns20:paymentMethodType">
                                                <ns20:paymentMethodType>
                                                    <xsl:value-of select="ns20:paymentMethodType"/>
                                                </ns20:paymentMethodType>
                                            </xsl:if>
                                            <xsl:for-each select="ns20:CreditCardPM">
                                                <ns20:CreditCardPM>
                                                    <xsl:if test="ns20:creditCardNumber">
                                                        <ns20:creditCardNumber>
                                                            <xsl:value-of select="ns20:creditCardNumber"/>
                                                        </ns20:creditCardNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:CreditCardCompanyName">
                                                        <ns20:CreditCardCompanyName>
                                                            <xsl:value-of select="ns20:CreditCardCompanyName"/>
                                                        </ns20:CreditCardCompanyName>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:expirationDate">
                                                        <ns20:expirationDate>
                                                            <xsl:value-of select="ns20:expirationDate"/>
                                                        </ns20:expirationDate>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:ExpirationMonth">
                                                        <ns20:ExpirationMonth>
                                                            <xsl:value-of select="ns20:ExpirationMonth"/>
                                                        </ns20:ExpirationMonth>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:ExpirationYear">
                                                        <ns20:ExpirationYear>
                                                            <xsl:value-of select="ns20:ExpirationYear"/>
                                                        </ns20:ExpirationYear>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:nameOnCard">
                                                        <ns20:nameOnCard>
                                                            <xsl:value-of select="ns20:nameOnCard"/>
                                                        </ns20:nameOnCard>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:authorizationCode">
                                                        <ns20:authorizationCode>
                                                            <xsl:value-of select="ns20:authorizationCode"/>
                                                        </ns20:authorizationCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:creditCardType">
                                                        <ns20:creditCardType>
                                                            <xsl:value-of select="ns20:creditCardType"/>
                                                        </ns20:creditCardType>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:CVV">
                                                        <ns20:CVV>
                                                            <xsl:value-of select="ns20:CVV"/>
                                                        </ns20:CVV>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:ReceiptNumber">
                                                        <ns20:ReceiptNumber>
                                                            <xsl:value-of select="ns20:ReceiptNumber"/>
                                                        </ns20:ReceiptNumber>
                                                    </xsl:if>
                                                </ns20:CreditCardPM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns20:CashPM">
                                                <ns20:CashPM>
                                                    <xsl:if test="ns20:cashierInfo">
                                                        <ns20:cashierInfo>
                                                            <xsl:value-of select="ns20:cashierInfo"/>
                                                        </ns20:cashierInfo>
                                                    </xsl:if>
                                                </ns20:CashPM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns20:ZainBankPM">
                                                <ns20:ZainBankPM>
                                                    <xsl:if test="ns20:accountNumber">
                                                        <ns20:accountNumber>
                                                            <xsl:value-of select="ns20:accountNumber"/>
                                                        </ns20:accountNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:accountowner">
                                                        <ns20:accountowner>
                                                            <xsl:value-of select="ns20:accountowner"/>
                                                        </ns20:accountowner>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankCode">
                                                        <ns20:BankCode>
                                                            <xsl:value-of select="ns20:BankCode"/>
                                                        </ns20:BankCode>
                                                    </xsl:if>
                                                    <xsl:for-each select="ns20:BankCountry">
                                                        <ns20:BankCountry>
                                                            <ns21:countryCode>
                                                                <xsl:value-of select="ns21:countryCode"/>
                                                            </ns21:countryCode>
                                                            <xsl:if test="ns21:Iso2Code">
                                                                <ns21:Iso2Code>
                                                                    <xsl:value-of select="ns21:Iso2Code"/>
                                                                </ns21:Iso2Code>
                                                            </xsl:if>
                                                            <xsl:if test="ns21:Iso3Code">
                                                                <ns21:Iso3Code>
                                                                    <xsl:value-of select="ns21:Iso3Code"/>
                                                                </ns21:Iso3Code>
                                                            </xsl:if>
                                                            <xsl:if test="ns21:name">
                                                                <ns21:name>
                                                                    <xsl:value-of select="ns21:name"/>
                                                                </ns21:name>
                                                            </xsl:if>
                                                            <xsl:if test="ns21:type">
                                                                <ns21:type>
                                                                    <xsl:value-of select="ns21:type"/>
                                                                </ns21:type>
                                                            </xsl:if>
                                                        </ns20:BankCountry>
                                                    </xsl:for-each>
                                                    <xsl:if test="ns20:BankName">
                                                        <ns20:BankName>
                                                            <xsl:value-of select="ns20:BankName"/>
                                                        </ns20:BankName>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankState">
                                                        <ns20:BankState>
                                                            <xsl:value-of select="ns20:BankState"/>
                                                        </ns20:BankState>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankStreetName">
                                                        <ns20:BankStreetName>
                                                            <xsl:value-of select="ns20:BankStreetName"/>
                                                        </ns20:BankStreetName>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankStreetNumber">
                                                        <ns20:BankStreetNumber>
                                                            <xsl:value-of select="ns20:BankStreetNumber"/>
                                                        </ns20:BankStreetNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankZipCode">
                                                        <ns20:BankZipCode>
                                                            <xsl:value-of select="ns20:BankZipCode"/>
                                                        </ns20:BankZipCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:CityOfBank">
                                                        <ns20:CityOfBank>
                                                            <xsl:value-of select="ns20:CityOfBank"/>
                                                        </ns20:CityOfBank>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:lso3Code">
                                                        <ns20:lso3Code>
                                                            <xsl:value-of select="ns20:lso3Code"/>
                                                        </ns20:lso3Code>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:swiftCode">
                                                        <ns20:swiftCode>
                                                            <xsl:value-of select="ns20:swiftCode"/>
                                                        </ns20:swiftCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:verificationCode">
                                                        <ns20:verificationCode>
                                                            <xsl:value-of select="ns20:verificationCode"/>
                                                        </ns20:verificationCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns20:BankBranchName">
                                                        <ns20:BankBranchName>
                                                            <xsl:value-of select="ns20:BankBranchName"/>
                                                        </ns20:BankBranchName>
                                                    </xsl:if>
                                                </ns20:ZainBankPM>
                                            </xsl:for-each>
                                            <xsl:if test="ns20:PreferredPaymentMode">
                                                <ns20:PreferredPaymentMode>
                                                    <xsl:value-of select="ns20:PreferredPaymentMode"/>
                                                </ns20:PreferredPaymentMode>
                                            </xsl:if>
                                            <xsl:for-each select="ns21:ChequeDetails">
                                                <ns21:ChequeDetails>
                                                    <ns21:chequeNumber>
                                                        <xsl:value-of select="ns21:chequeNumber"/>
                                                    </ns21:chequeNumber>
                                                    <xsl:if test="ns21:bankName">
                                                        <ns21:bankName>
                                                            <xsl:value-of select="ns21:bankName"/>
                                                        </ns21:bankName>
                                                    </xsl:if>
                                                </ns21:ChequeDetails>
                                            </xsl:for-each>
                                        </ns20:PaymentMethod>
                                    </xsl:for-each>
                                    <xsl:if test="ns21:paymentReferenceNumber">
                                        <ns21:paymentReferenceNumber>
                                            <xsl:value-of select="ns21:paymentReferenceNumber"/>
                                        </ns21:paymentReferenceNumber>
                                    </xsl:if>
                                    <xsl:if test="ns20:PaymentChannel">
                                        <ns20:PaymentChannel>
                                            <xsl:value-of select="ns20:PaymentChannel"/>
                                        </ns20:PaymentChannel>
                                    </xsl:if>
                                    <xsl:if test="ns20:paymentStatus">
                                        <ns20:paymentStatus>
                                            <xsl:value-of select="ns20:paymentStatus"/>
                                        </ns20:paymentStatus>
                                    </xsl:if>
                                    <xsl:if test="ns20:MerchantID">
                                        <ns20:MerchantID>
                                            <xsl:value-of select="ns20:MerchantID"/>
                                        </ns20:MerchantID>
                                    </xsl:if>
                                    <xsl:if test="ns20:MerchantPassword">
                                        <ns20:MerchantPassword>
                                            <xsl:value-of select="ns20:MerchantPassword"/>
                                        </ns20:MerchantPassword>
                                    </xsl:if>
                                    <xsl:if test="ns20:TerminalID">
                                        <ns20:TerminalID>
                                            <xsl:value-of select="ns20:TerminalID"/>
                                        </ns20:TerminalID>
                                    </xsl:if>
                                    <xsl:if test="ns20:AuthorizationStatus">
                                        <ns20:AuthorizationStatus>
                                            <xsl:value-of select="ns20:AuthorizationStatus"/>
                                        </ns20:AuthorizationStatus>
                                    </xsl:if>
                                    <xsl:if test="ns20:ReceiptNumber">
                                        <ns20:ReceiptNumber>
                                            <xsl:value-of select="ns20:ReceiptNumber"/>
                                        </ns20:ReceiptNumber>
                                    </xsl:if>
                                    <xsl:if test="ns20:SettlementDate">
                                        <ns20:SettlementDate>
                                            <xsl:value-of select="ns20:SettlementDate"/>
                                        </ns20:SettlementDate>
                                    </xsl:if>
                                    <xsl:if test="ns20:AcquirerResponseCode">
                                        <ns20:AcquirerResponseCode>
                                            <xsl:value-of select="ns20:AcquirerResponseCode"/>
                                        </ns20:AcquirerResponseCode>
                                    </xsl:if>
                                    <xsl:if test="ns20:ShoppingTransactionReference">
                                        <ns20:ShoppingTransactionReference>
                                            <xsl:value-of select="ns20:ShoppingTransactionReference"/>
                                        </ns20:ShoppingTransactionReference>
                                    </xsl:if>
                                </ns20:ZainCustomerPayment>
                            </xsl:for-each>
                            <xsl:copy-of select="ns21:ZainIdentifiers"/>
                            <xsl:for-each select="ns20:Params">
                                <ns20:Params>
                                    <xsl:for-each select="ns20:Param">
                                        <ns20:Param>
                                            <xsl:if test="ns20:Name">
                                                <ns20:Name>
                                                    <xsl:value-of select="ns20:Name"/>
                                                </ns20:Name>
                                            </xsl:if>
                                            <xsl:if test="ns20:Value">
                                                <ns20:Value>
                                                    <xsl:value-of select="ns20:Value"/>
                                                </ns20:Value>
                                            </xsl:if>
                                        </ns20:Param>
                                    </xsl:for-each>
                                </ns20:Params>
                            </xsl:for-each>
                        </pfx12:PaymentInboundInput>
                    </xsl:for-each>
                    <TransactionID>
                        <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapRes">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>915</pd:x>
            <pd:y>105</pd:y>
            <config>
                <element>
                    <xsd:choice>
                        <xsd:element ref="pfx12:PaymentInboundOutput"/>
                        <xsd:element ref="ns25:ErrorResponse"/>
                    </xsd:choice>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:choose>
                    <xsl:when test="string-length($SubscriberPayment/pfx12:PaymentInboundOutput)>0">
                        <xsl:for-each select="$SubscriberPayment/pfx12:PaymentInboundOutput">
                            <pfx12:PaymentInboundOutput>
                                <xsl:for-each select="ns20:ZainCustomerPayment">
                                    <ns20:ZainCustomerPayment>
                                        <xsl:for-each select="ns21:Money">
                                            <ns21:Money>
                                                <xsl:if test="ns21:amount">
                                                    <ns21:amount>
                                                        <xsl:value-of select="ns21:amount"/>
                                                    </ns21:amount>
                                                </xsl:if>
                                                <xsl:if test="ns21:units">
                                                    <ns21:units>
                                                        <xsl:value-of select="ns21:units"/>
                                                    </ns21:units>
                                                </xsl:if>
                                            </ns21:Money>
                                        </xsl:for-each>
                                        <xsl:if test="ns21:conversionRate">
                                            <ns21:conversionRate>
                                                <xsl:value-of select="ns21:conversionRate"/>
                                            </ns21:conversionRate>
                                        </xsl:if>
                                        <xsl:if test="ns20:TransactionID">
                                            <ns20:TransactionID>
                                                <xsl:value-of select="ns20:TransactionID"/>
                                            </ns20:TransactionID>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentDate">
                                            <ns20:paymentDate>
                                                <xsl:value-of select="ns20:paymentDate"/>
                                            </ns20:paymentDate>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentReceiptDate">
                                            <ns20:paymentReceiptDate>
                                                <xsl:value-of select="ns20:paymentReceiptDate"/>
                                            </ns20:paymentReceiptDate>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentType">
                                            <ns20:paymentType>
                                                <xsl:value-of select="ns20:paymentType"/>
                                            </ns20:paymentType>
                                        </xsl:if>
                                        <xsl:for-each select="ns20:PaymentMethod">
                                            <ns20:PaymentMethod>
                                                <xsl:if test="ns20:description">
                                                    <ns20:description>
                                                        <xsl:value-of select="ns20:description"/>
                                                    </ns20:description>
                                                </xsl:if>
                                                <xsl:if test="ns20:ID">
                                                    <ns20:ID>
                                                        <xsl:value-of select="ns20:ID"/>
                                                    </ns20:ID>
                                                </xsl:if>
                                                <xsl:if test="ns20:name">
                                                    <ns20:name>
                                                        <xsl:value-of select="ns20:name"/>
                                                    </ns20:name>
                                                </xsl:if>
                                                <xsl:if test="ns20:paymentMethodType">
                                                    <ns20:paymentMethodType>
                                                        <xsl:value-of select="ns20:paymentMethodType"/>
                                                    </ns20:paymentMethodType>
                                                </xsl:if>
                                                <xsl:for-each select="ns20:CreditCardPM">
                                                    <ns20:CreditCardPM>
                                                        <xsl:if test="ns20:creditCardNumber">
                                                            <ns20:creditCardNumber>
                                                                <xsl:value-of select="ns20:creditCardNumber"/>
                                                            </ns20:creditCardNumber>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:CreditCardCompanyName">
                                                            <ns20:CreditCardCompanyName>
                                                                <xsl:value-of select="ns20:CreditCardCompanyName"/>
                                                            </ns20:CreditCardCompanyName>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:expirationDate">
                                                            <ns20:expirationDate>
                                                                <xsl:value-of select="ns20:expirationDate"/>
                                                            </ns20:expirationDate>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:ExpirationMonth">
                                                            <ns20:ExpirationMonth>
                                                                <xsl:value-of select="ns20:ExpirationMonth"/>
                                                            </ns20:ExpirationMonth>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:ExpirationYear">
                                                            <ns20:ExpirationYear>
                                                                <xsl:value-of select="ns20:ExpirationYear"/>
                                                            </ns20:ExpirationYear>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:nameOnCard">
                                                            <ns20:nameOnCard>
                                                                <xsl:value-of select="ns20:nameOnCard"/>
                                                            </ns20:nameOnCard>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:authorizationCode">
                                                            <ns20:authorizationCode>
                                                                <xsl:value-of select="ns20:authorizationCode"/>
                                                            </ns20:authorizationCode>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:creditCardType">
                                                            <ns20:creditCardType>
                                                                <xsl:value-of select="ns20:creditCardType"/>
                                                            </ns20:creditCardType>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:CVV">
                                                            <ns20:CVV>
                                                                <xsl:value-of select="ns20:CVV"/>
                                                            </ns20:CVV>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:ReceiptNumber">
                                                            <ns20:ReceiptNumber>
                                                                <xsl:value-of select="ns20:ReceiptNumber"/>
                                                            </ns20:ReceiptNumber>
                                                        </xsl:if>
                                                    </ns20:CreditCardPM>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns20:CashPM">
                                                    <ns20:CashPM>
                                                        <xsl:if test="ns20:cashierInfo">
                                                            <ns20:cashierInfo>
                                                                <xsl:value-of select="ns20:cashierInfo"/>
                                                            </ns20:cashierInfo>
                                                        </xsl:if>
                                                    </ns20:CashPM>
                                                </xsl:for-each>
                                                <xsl:for-each select="ns20:ZainBankPM">
                                                    <ns20:ZainBankPM>
                                                        <xsl:if test="ns20:accountNumber">
                                                            <ns20:accountNumber>
                                                                <xsl:value-of select="ns20:accountNumber"/>
                                                            </ns20:accountNumber>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:accountowner">
                                                            <ns20:accountowner>
                                                                <xsl:value-of select="ns20:accountowner"/>
                                                            </ns20:accountowner>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankCode">
                                                            <ns20:BankCode>
                                                                <xsl:value-of select="ns20:BankCode"/>
                                                            </ns20:BankCode>
                                                        </xsl:if>
                                                        <xsl:for-each select="ns20:BankCountry">
                                                            <ns20:BankCountry>
                                                                <ns21:countryCode>
                                                                    <xsl:value-of select="ns21:countryCode"/>
                                                                </ns21:countryCode>
                                                                <xsl:if test="ns21:Iso2Code">
                                                                    <ns21:Iso2Code>
                                                                        <xsl:value-of select="ns21:Iso2Code"/>
                                                                    </ns21:Iso2Code>
                                                                </xsl:if>
                                                                <xsl:if test="ns21:Iso3Code">
                                                                    <ns21:Iso3Code>
                                                                        <xsl:value-of select="ns21:Iso3Code"/>
                                                                    </ns21:Iso3Code>
                                                                </xsl:if>
                                                                <xsl:if test="ns21:name">
                                                                    <ns21:name>
                                                                        <xsl:value-of select="ns21:name"/>
                                                                    </ns21:name>
                                                                </xsl:if>
                                                                <xsl:if test="ns21:type">
                                                                    <ns21:type>
                                                                        <xsl:value-of select="ns21:type"/>
                                                                    </ns21:type>
                                                                </xsl:if>
                                                            </ns20:BankCountry>
                                                        </xsl:for-each>
                                                        <xsl:if test="ns20:BankName">
                                                            <ns20:BankName>
                                                                <xsl:value-of select="ns20:BankName"/>
                                                            </ns20:BankName>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankState">
                                                            <ns20:BankState>
                                                                <xsl:value-of select="ns20:BankState"/>
                                                            </ns20:BankState>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankStreetName">
                                                            <ns20:BankStreetName>
                                                                <xsl:value-of select="ns20:BankStreetName"/>
                                                            </ns20:BankStreetName>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankStreetNumber">
                                                            <ns20:BankStreetNumber>
                                                                <xsl:value-of select="ns20:BankStreetNumber"/>
                                                            </ns20:BankStreetNumber>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankZipCode">
                                                            <ns20:BankZipCode>
                                                                <xsl:value-of select="ns20:BankZipCode"/>
                                                            </ns20:BankZipCode>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:CityOfBank">
                                                            <ns20:CityOfBank>
                                                                <xsl:value-of select="ns20:CityOfBank"/>
                                                            </ns20:CityOfBank>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:lso3Code">
                                                            <ns20:lso3Code>
                                                                <xsl:value-of select="ns20:lso3Code"/>
                                                            </ns20:lso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:swiftCode">
                                                            <ns20:swiftCode>
                                                                <xsl:value-of select="ns20:swiftCode"/>
                                                            </ns20:swiftCode>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:verificationCode">
                                                            <ns20:verificationCode>
                                                                <xsl:value-of select="ns20:verificationCode"/>
                                                            </ns20:verificationCode>
                                                        </xsl:if>
                                                        <xsl:if test="ns20:BankBranchName">
                                                            <ns20:BankBranchName>
                                                                <xsl:value-of select="ns20:BankBranchName"/>
                                                            </ns20:BankBranchName>
                                                        </xsl:if>
                                                    </ns20:ZainBankPM>
                                                </xsl:for-each>
                                                <xsl:if test="ns20:PreferredPaymentMode">
                                                    <ns20:PreferredPaymentMode>
                                                        <xsl:value-of select="ns20:PreferredPaymentMode"/>
                                                    </ns20:PreferredPaymentMode>
                                                </xsl:if>
                                                <xsl:for-each select="ns21:ChequeDetails">
                                                    <ns21:ChequeDetails>
                                                        <ns21:chequeNumber>
                                                            <xsl:value-of select="ns21:chequeNumber"/>
                                                        </ns21:chequeNumber>
                                                        <xsl:if test="ns21:bankName">
                                                            <ns21:bankName>
                                                                <xsl:value-of select="ns21:bankName"/>
                                                            </ns21:bankName>
                                                        </xsl:if>
                                                    </ns21:ChequeDetails>
                                                </xsl:for-each>
                                            </ns20:PaymentMethod>
                                        </xsl:for-each>
                                        <xsl:if test="ns21:paymentReferenceNumber">
                                            <ns21:paymentReferenceNumber>
                                                <xsl:value-of select="ns21:paymentReferenceNumber"/>
                                            </ns21:paymentReferenceNumber>
                                        </xsl:if>
                                        <xsl:if test="ns20:PaymentChannel">
                                            <ns20:PaymentChannel>
                                                <xsl:value-of select="ns20:PaymentChannel"/>
                                            </ns20:PaymentChannel>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentStatus">
                                            <ns20:paymentStatus>
                                                <xsl:value-of select="ns20:paymentStatus"/>
                                            </ns20:paymentStatus>
                                        </xsl:if>
                                        <xsl:if test="ns20:MerchantID">
                                            <ns20:MerchantID>
                                                <xsl:value-of select="ns20:MerchantID"/>
                                            </ns20:MerchantID>
                                        </xsl:if>
                                        <xsl:if test="ns20:MerchantPassword">
                                            <ns20:MerchantPassword>
                                                <xsl:value-of select="ns20:MerchantPassword"/>
                                            </ns20:MerchantPassword>
                                        </xsl:if>
                                        <xsl:if test="ns20:TerminalID">
                                            <ns20:TerminalID>
                                                <xsl:value-of select="ns20:TerminalID"/>
                                            </ns20:TerminalID>
                                        </xsl:if>
                                        <xsl:if test="ns20:AuthorizationStatus">
                                            <ns20:AuthorizationStatus>
                                                <xsl:value-of select="ns20:AuthorizationStatus"/>
                                            </ns20:AuthorizationStatus>
                                        </xsl:if>
                                        <xsl:if test="ns20:ReceiptNumber">
                                            <ns20:ReceiptNumber>
                                                <xsl:value-of select="ns20:ReceiptNumber"/>
                                            </ns20:ReceiptNumber>
                                        </xsl:if>
                                        <xsl:if test="ns20:SettlementDate">
                                            <ns20:SettlementDate>
                                                <xsl:value-of select="ns20:SettlementDate"/>
                                            </ns20:SettlementDate>
                                        </xsl:if>
                                        <xsl:if test="ns20:AcquirerResponseCode">
                                            <ns20:AcquirerResponseCode>
                                                <xsl:value-of select="ns20:AcquirerResponseCode"/>
                                            </ns20:AcquirerResponseCode>
                                        </xsl:if>
                                        <xsl:if test="ns20:ShoppingTransactionReference">
                                            <ns20:ShoppingTransactionReference>
                                                <xsl:value-of select="ns20:ShoppingTransactionReference"/>
                                            </ns20:ShoppingTransactionReference>
                                        </xsl:if>
                                    </ns20:ZainCustomerPayment>
                                </xsl:for-each>
                                <xsl:for-each select="ns20:Params">
                                    <ns20:Params>
                                        <xsl:for-each select="ns20:Param">
                                            <ns20:Param>
                                                <xsl:if test="ns20:Name">
                                                    <ns20:Name>
                                                        <xsl:value-of select="ns20:Name"/>
                                                    </ns20:Name>
                                                </xsl:if>
                                                <xsl:if test="ns20:Value">
                                                    <ns20:Value>
                                                        <xsl:value-of select="ns20:Value"/>
                                                    </ns20:Value>
                                                </xsl:if>
                                            </ns20:Param>
                                        </xsl:for-each>
                                    </ns20:Params>
                                </xsl:for-each>
                            </pfx12:PaymentInboundOutput>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$SubscriberPayment/ns25:ErrorResponse">
                            <ns25:ErrorResponse>
                                <xsl:if test="ns25:Error_SourceSystem">
                                    <ns25:Error_SourceSystem>
                                        <xsl:value-of select="ns25:Error_SourceSystem"/>
                                    </ns25:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrCode">
                                    <ns25:Error_SourceErrCode>
                                        <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                    </ns25:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrDesc">
                                    <ns25:Error_SourceErrDesc>
                                        <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                    </ns25:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Type">
                                    <ns25:Error_Type>
                                        <xsl:value-of select="ns25:Error_Type"/>
                                    </ns25:Error_Type>
                                </xsl:if>
                                <xsl:if test="ns25:Error_UserErrCode">
                                    <ns25:Error_UserErrCode>
                                        <xsl:value-of select="ns25:Error_UserErrCode"/>
                                    </ns25:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="ns25:Error_UserErrDesc">
                                    <ns25:Error_UserErrDesc>
                                        <xsl:value-of select="ns25:Error_UserErrDesc"/>
                                    </ns25:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Occurance_Time">
                                    <ns25:Error_Occurance_Time>
                                        <xsl:value-of select="ns25:Error_Occurance_Time"/>
                                    </ns25:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Additional_Desc1">
                                    <ns25:Error_Additional_Desc1>
                                        <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                                    </ns25:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Additional_Desc2">
                                    <ns25:Error_Additional_Desc2>
                                        <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                                    </ns25:Error_Additional_Desc2>
                                </xsl:if>
                            </ns25:ErrorResponse>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>583</pd:x>
        <pd:y>141</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ContractPayment">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>591</pd:x>
        <pd:y>243</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/Implementation/PaymentLoop.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$Parse-XML/pfx12:PaymentInboundInput">
                    <pfx12:PaymentInboundInput>
                        <xsl:if test="pfx12:UserName">
                            <pfx12:UserName>
                                <xsl:value-of select="pfx12:UserName"/>
                            </pfx12:UserName>
                        </xsl:if>
                        <xsl:if test="pfx12:AuthorizeCredit">
                            <pfx12:AuthorizeCredit>
                                <xsl:value-of select="pfx12:AuthorizeCredit"/>
                            </pfx12:AuthorizeCredit>
                        </xsl:if>
                        <xsl:for-each select="pfx12:Subscriber">
                            <pfx12:Subscriber>
                                <xsl:if test="pfx12:MSISDN">
                                    <pfx12:MSISDN>
                                        <xsl:value-of select="pfx12:MSISDN"/>
                                    </pfx12:MSISDN>
                                </xsl:if>
                                <xsl:if test="pfx12:Area">
                                    <pfx12:Area>
                                        <xsl:value-of select="pfx12:Area"/>
                                    </pfx12:Area>
                                </xsl:if>
                                <xsl:if test="pfx12:Amount">
                                    <pfx12:Amount>
                                        <xsl:value-of select="pfx12:Amount"/>
                                    </pfx12:Amount>
                                </xsl:if>
                            </pfx12:Subscriber>
                        </xsl:for-each>
                        <xsl:for-each select="ns20:ZainCustomerPayment">
                            <ns20:ZainCustomerPayment>
                                <xsl:for-each select="ns21:Money">
                                    <ns21:Money>
                                        <xsl:if test="ns21:amount">
                                            <ns21:amount>
                                                <xsl:value-of select="ns21:amount"/>
                                            </ns21:amount>
                                        </xsl:if>
                                        <xsl:if test="ns21:units">
                                            <ns21:units>
                                                <xsl:value-of select="ns21:units"/>
                                            </ns21:units>
                                        </xsl:if>
                                    </ns21:Money>
                                </xsl:for-each>
                                <xsl:if test="ns21:conversionRate">
                                    <ns21:conversionRate>
                                        <xsl:value-of select="ns21:conversionRate"/>
                                    </ns21:conversionRate>
                                </xsl:if>
                                <xsl:if test="ns20:TransactionID">
                                    <ns20:TransactionID>
                                        <xsl:value-of select="ns20:TransactionID"/>
                                    </ns20:TransactionID>
                                </xsl:if>
                                <xsl:if test="ns20:paymentDate">
                                    <ns20:paymentDate>
                                        <xsl:value-of select="ns20:paymentDate"/>
                                    </ns20:paymentDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentReceiptDate">
                                    <ns20:paymentReceiptDate>
                                        <xsl:value-of select="ns20:paymentReceiptDate"/>
                                    </ns20:paymentReceiptDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentType">
                                    <ns20:paymentType>
                                        <xsl:value-of select="ns20:paymentType"/>
                                    </ns20:paymentType>
                                </xsl:if>
                                <xsl:for-each select="ns20:PaymentMethod">
                                    <ns20:PaymentMethod>
                                        <xsl:if test="ns20:description">
                                            <ns20:description>
                                                <xsl:value-of select="ns20:description"/>
                                            </ns20:description>
                                        </xsl:if>
                                        <xsl:if test="ns20:ID">
                                            <ns20:ID>
                                                <xsl:value-of select="ns20:ID"/>
                                            </ns20:ID>
                                        </xsl:if>
                                        <xsl:if test="ns20:name">
                                            <ns20:name>
                                                <xsl:value-of select="ns20:name"/>
                                            </ns20:name>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentMethodType">
                                            <ns20:paymentMethodType>
                                                <xsl:value-of select="ns20:paymentMethodType"/>
                                            </ns20:paymentMethodType>
                                        </xsl:if>
                                        <xsl:for-each select="ns20:CreditCardPM">
                                            <ns20:CreditCardPM>
                                                <xsl:if test="ns20:creditCardNumber">
                                                    <ns20:creditCardNumber>
                                                        <xsl:value-of select="ns20:creditCardNumber"/>
                                                    </ns20:creditCardNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:CreditCardCompanyName">
                                                    <ns20:CreditCardCompanyName>
                                                        <xsl:value-of select="ns20:CreditCardCompanyName"/>
                                                    </ns20:CreditCardCompanyName>
                                                </xsl:if>
                                                <xsl:if test="ns20:expirationDate">
                                                    <ns20:expirationDate>
                                                        <xsl:value-of select="ns20:expirationDate"/>
                                                    </ns20:expirationDate>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationMonth">
                                                    <ns20:ExpirationMonth>
                                                        <xsl:value-of select="ns20:ExpirationMonth"/>
                                                    </ns20:ExpirationMonth>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationYear">
                                                    <ns20:ExpirationYear>
                                                        <xsl:value-of select="ns20:ExpirationYear"/>
                                                    </ns20:ExpirationYear>
                                                </xsl:if>
                                                <xsl:if test="ns20:nameOnCard">
                                                    <ns20:nameOnCard>
                                                        <xsl:value-of select="ns20:nameOnCard"/>
                                                    </ns20:nameOnCard>
                                                </xsl:if>
                                                <xsl:if test="ns20:authorizationCode">
                                                    <ns20:authorizationCode>
                                                        <xsl:value-of select="ns20:authorizationCode"/>
                                                    </ns20:authorizationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:creditCardType">
                                                    <ns20:creditCardType>
                                                        <xsl:value-of select="ns20:creditCardType"/>
                                                    </ns20:creditCardType>
                                                </xsl:if>
                                                <xsl:if test="ns20:CVV">
                                                    <ns20:CVV>
                                                        <xsl:value-of select="ns20:CVV"/>
                                                    </ns20:CVV>
                                                </xsl:if>
                                                <xsl:if test="ns20:ReceiptNumber">
                                                    <ns20:ReceiptNumber>
                                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                                    </ns20:ReceiptNumber>
                                                </xsl:if>
                                            </ns20:CreditCardPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:CashPM">
                                            <ns20:CashPM>
                                                <xsl:if test="ns20:cashierInfo">
                                                    <ns20:cashierInfo>
                                                        <xsl:value-of select="ns20:cashierInfo"/>
                                                    </ns20:cashierInfo>
                                                </xsl:if>
                                            </ns20:CashPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:ZainBankPM">
                                            <ns20:ZainBankPM>
                                                <xsl:if test="ns20:accountNumber">
                                                    <ns20:accountNumber>
                                                        <xsl:value-of select="ns20:accountNumber"/>
                                                    </ns20:accountNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:accountowner">
                                                    <ns20:accountowner>
                                                        <xsl:value-of select="ns20:accountowner"/>
                                                    </ns20:accountowner>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankCode">
                                                    <ns20:BankCode>
                                                        <xsl:value-of select="ns20:BankCode"/>
                                                    </ns20:BankCode>
                                                </xsl:if>
                                                <xsl:for-each select="ns20:BankCountry">
                                                    <ns20:BankCountry>
                                                        <ns21:countryCode>
                                                            <xsl:value-of select="ns21:countryCode"/>
                                                        </ns21:countryCode>
                                                        <xsl:if test="ns21:Iso2Code">
                                                            <ns21:Iso2Code>
                                                                <xsl:value-of select="ns21:Iso2Code"/>
                                                            </ns21:Iso2Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:Iso3Code">
                                                            <ns21:Iso3Code>
                                                                <xsl:value-of select="ns21:Iso3Code"/>
                                                            </ns21:Iso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:name">
                                                            <ns21:name>
                                                                <xsl:value-of select="ns21:name"/>
                                                            </ns21:name>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:type">
                                                            <ns21:type>
                                                                <xsl:value-of select="ns21:type"/>
                                                            </ns21:type>
                                                        </xsl:if>
                                                    </ns20:BankCountry>
                                                </xsl:for-each>
                                                <xsl:if test="ns20:BankName">
                                                    <ns20:BankName>
                                                        <xsl:value-of select="ns20:BankName"/>
                                                    </ns20:BankName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankState">
                                                    <ns20:BankState>
                                                        <xsl:value-of select="ns20:BankState"/>
                                                    </ns20:BankState>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetName">
                                                    <ns20:BankStreetName>
                                                        <xsl:value-of select="ns20:BankStreetName"/>
                                                    </ns20:BankStreetName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetNumber">
                                                    <ns20:BankStreetNumber>
                                                        <xsl:value-of select="ns20:BankStreetNumber"/>
                                                    </ns20:BankStreetNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankZipCode">
                                                    <ns20:BankZipCode>
                                                        <xsl:value-of select="ns20:BankZipCode"/>
                                                    </ns20:BankZipCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:CityOfBank">
                                                    <ns20:CityOfBank>
                                                        <xsl:value-of select="ns20:CityOfBank"/>
                                                    </ns20:CityOfBank>
                                                </xsl:if>
                                                <xsl:if test="ns20:lso3Code">
                                                    <ns20:lso3Code>
                                                        <xsl:value-of select="ns20:lso3Code"/>
                                                    </ns20:lso3Code>
                                                </xsl:if>
                                                <xsl:if test="ns20:swiftCode">
                                                    <ns20:swiftCode>
                                                        <xsl:value-of select="ns20:swiftCode"/>
                                                    </ns20:swiftCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:verificationCode">
                                                    <ns20:verificationCode>
                                                        <xsl:value-of select="ns20:verificationCode"/>
                                                    </ns20:verificationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankBranchName">
                                                    <ns20:BankBranchName>
                                                        <xsl:value-of select="ns20:BankBranchName"/>
                                                    </ns20:BankBranchName>
                                                </xsl:if>
                                            </ns20:ZainBankPM>
                                        </xsl:for-each>
                                        <xsl:if test="ns20:PreferredPaymentMode">
                                            <ns20:PreferredPaymentMode>
                                                <xsl:value-of select="ns20:PreferredPaymentMode"/>
                                            </ns20:PreferredPaymentMode>
                                        </xsl:if>
                                        <xsl:for-each select="ns21:ChequeDetails">
                                            <ns21:ChequeDetails>
                                                <ns21:chequeNumber>
                                                    <xsl:value-of select="ns21:chequeNumber"/>
                                                </ns21:chequeNumber>
                                                <xsl:if test="ns21:bankName">
                                                    <ns21:bankName>
                                                        <xsl:value-of select="ns21:bankName"/>
                                                    </ns21:bankName>
                                                </xsl:if>
                                            </ns21:ChequeDetails>
                                        </xsl:for-each>
                                    </ns20:PaymentMethod>
                                </xsl:for-each>
                                <xsl:if test="ns21:paymentReferenceNumber">
                                    <ns21:paymentReferenceNumber>
                                        <xsl:value-of select="ns21:paymentReferenceNumber"/>
                                    </ns21:paymentReferenceNumber>
                                </xsl:if>
                                <xsl:if test="ns20:PaymentChannel">
                                    <ns20:PaymentChannel>
                                        <xsl:value-of select="ns20:PaymentChannel"/>
                                    </ns20:PaymentChannel>
                                </xsl:if>
                                <xsl:if test="ns20:paymentStatus">
                                    <ns20:paymentStatus>
                                        <xsl:value-of select="ns20:paymentStatus"/>
                                    </ns20:paymentStatus>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantID">
                                    <ns20:MerchantID>
                                        <xsl:value-of select="ns20:MerchantID"/>
                                    </ns20:MerchantID>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantPassword">
                                    <ns20:MerchantPassword>
                                        <xsl:value-of select="ns20:MerchantPassword"/>
                                    </ns20:MerchantPassword>
                                </xsl:if>
                                <xsl:if test="ns20:TerminalID">
                                    <ns20:TerminalID>
                                        <xsl:value-of select="ns20:TerminalID"/>
                                    </ns20:TerminalID>
                                </xsl:if>
                                <xsl:if test="ns20:AuthorizationStatus">
                                    <ns20:AuthorizationStatus>
                                        <xsl:value-of select="ns20:AuthorizationStatus"/>
                                    </ns20:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="ns20:ReceiptNumber">
                                    <ns20:ReceiptNumber>
                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                    </ns20:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="ns20:SettlementDate">
                                    <ns20:SettlementDate>
                                        <xsl:value-of select="ns20:SettlementDate"/>
                                    </ns20:SettlementDate>
                                </xsl:if>
                                <xsl:if test="ns20:AcquirerResponseCode">
                                    <ns20:AcquirerResponseCode>
                                        <xsl:value-of select="ns20:AcquirerResponseCode"/>
                                    </ns20:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="ns20:ShoppingTransactionReference">
                                    <ns20:ShoppingTransactionReference>
                                        <xsl:value-of select="ns20:ShoppingTransactionReference"/>
                                    </ns20:ShoppingTransactionReference>
                                </xsl:if>
                            </ns20:ZainCustomerPayment>
                        </xsl:for-each>
                        <xsl:copy-of select="ns21:ZainIdentifiers"/>
                        <xsl:for-each select="ns20:Params">
                            <ns20:Params>
                                <xsl:for-each select="ns20:Param">
                                    <ns20:Param>
                                        <xsl:if test="ns20:Name">
                                            <ns20:Name>
                                                <xsl:value-of select="ns20:Name"/>
                                            </ns20:Name>
                                        </xsl:if>
                                        <xsl:if test="ns20:Value">
                                            <ns20:Value>
                                                <xsl:value-of select="ns20:Value"/>
                                            </ns20:Value>
                                        </xsl:if>
                                    </ns20:Param>
                                </xsl:for-each>
                            </ns20:Params>
                        </xsl:for-each>
                    </pfx12:PaymentInboundInput>
                </xsl:for-each>
                <TransactionID>
                    <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TransactionID>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ESI_CRM_Call_ExternalPaymentPosting">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>700</pd:x>
        <pd:y>338</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/ESI_CRM_Call_ExternalPaymentPosting.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns28:ListOfCbio2ExternalPmtPostingIo>
                    <ns28:Payments>
                        <ns28:AccountNumber>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                        </ns28:AccountNumber>
                        <ns28:CBiO2AuthorizeCredit>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit"/>
                        </ns28:CBiO2AuthorizeCredit>
                        <ns28:CBiO2BankBranch>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankBranchName"/>
                        </ns28:CBiO2BankBranch>
                        <ns28:CBiO2Channel>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentChannel"/>
                        </ns28:CBiO2Channel>
                        <ns28:CBiO2ChequeNum>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:chequeNumber"/>
                        </ns28:CBiO2ChequeNum>
                        <ns28:CBiO2CustomerSequenceNumber>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                        </ns28:CBiO2CustomerSequenceNumber>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrCode">
                            <ns28:CBiO2ErrorCode>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrCode"/>
                            </ns28:CBiO2ErrorCode>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrDesc">
                            <ns28:CBiO2ErrorMessage>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceErrDesc"/>
                            </ns28:CBiO2ErrorMessage>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_Type">
                            <ns28:CBiO2ErrorType>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_Type"/>
                            </ns28:CBiO2ErrorType>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_Additional_Desc1">
                            <ns28:CBiO2Error_Additional_Desc1>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_Additional_Desc1"/>
                            </ns28:CBiO2Error_Additional_Desc1>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_Additional_Desc2">
                            <ns28:CBiO2Error_Additional_Desc2>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_Additional_Desc2"/>
                            </ns28:CBiO2Error_Additional_Desc2>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_Occurance_Time">
                            <ns28:CBiO2Error_Occurance_Time>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_Occurance_Time"/>
                            </ns28:CBiO2Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceSystem">
                            <ns28:CBiO2Error_SourceSystem>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_SourceSystem"/>
                            </ns28:CBiO2Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_UserErrCode">
                            <ns28:CBiO2Error_UserErrCode>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_UserErrCode"/>
                            </ns28:CBiO2Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/ns25:ErrorResponse/ns25:Error_UserErrDesc">
                            <ns28:CBiO2Error_UserErrDesc>
                                <xsl:value-of select="$ContractPayment/ns25:ErrorResponse/ns25:Error_UserErrDesc"/>
                            </ns28:CBiO2Error_UserErrDesc>
                        </xsl:if>
                        <ns28:CBiO2ExtTransactionRef>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:paymentReferenceNumber"/>
                        </ns28:CBiO2ExtTransactionRef>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus)>0">
                                <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus">
                                    <ns28:CBiO2MerchantId>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                    </ns28:CBiO2MerchantId>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns28:CBiO2MerchantId>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:MerchantID"/>
                                </ns28:CBiO2MerchantId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode">
                            <ns28:CBiO2MrchntAcquireResCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns28:CBiO2MrchntAcquireResCode>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                            <ns28:CBiO2MrchntAmount>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                            </ns28:CBiO2MrchntAmount>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode)>0">
                                <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode">
                                    <ns28:CBiO2MrchntAuthorizationId>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode"/>
                                    </ns28:CBiO2MrchntAuthorizationId>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV">
                                    <ns28:CBiO2MrchntAuthorizationId>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                    </ns28:CBiO2MrchntAuthorizationId>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus">
                            <ns28:CBiO2MrchntAuthorizationStatus>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </ns28:CBiO2MrchntAuthorizationStatus>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName">
                            <ns28:CBiO2MrchntCardType>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                            </ns28:CBiO2MrchntCardType>
                        </xsl:if>
                        <ns28:CBiO2MrchntOrderInfo>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                        </ns28:CBiO2MrchntOrderInfo>
                        <ns28:CBiO2MrchntRecieptNo>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                        </ns28:CBiO2MrchntRecieptNo>
                        <ns28:CBiO2MrchntSettlementDate>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                        </ns28:CBiO2MrchntSettlementDate>
                        <ns28:CBiO2MrchntShoppingTranRef>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                        </ns28:CBiO2MrchntShoppingTranRef>
                        <ns28:CBiO2MrchntTransactionRef>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                        </ns28:CBiO2MrchntTransactionRef>
                        <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate)>0">
                            <ns28:CBiO2PaymentDateTime>
                                <xsl:value-of select="tib:format-date('MM/dd/yyyy HH:mm:ss',$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate)"/>
                            </ns28:CBiO2PaymentDateTime>
                        </xsl:if>
                        <xsl:if test="$ContractPayment/pfx12:PaymentInboundOutput/ns20:ZainCustomerPayment/ns20:TransactionID">
                            <ns28:CBiO2PaymentRef>
                                <xsl:value-of select="$ContractPayment/pfx12:PaymentInboundOutput/ns20:ZainCustomerPayment/ns20:TransactionID"/>
                            </ns28:CBiO2PaymentRef>
                        </xsl:if>
                        <ns28:CBiO2ReceiptNo>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                        </ns28:CBiO2ReceiptNo>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/pfx12:UserName">
                            <ns28:CBiO2SalesAgent>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/pfx12:UserName"/>
                            </ns28:CBiO2SalesAgent>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:TerminalID">
                            <ns28:CBiO2TerminalId>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:TerminalID"/>
                            </ns28:CBiO2TerminalId>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description">
                            <ns28:CBiO2WorkArea>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description"/>
                            </ns28:CBiO2WorkArea>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:nameOnCard">
                            <ns28:CardHolder>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:nameOnCard"/>
                            </ns28:CardHolder>
                        </xsl:if>
                        <ns28:ExpirationMonth>
                            <xsl:value-of select="substring($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear,1,2)"/>
                        </ns28:ExpirationMonth>
                        <ns28:ExpirationYear>
                            <xsl:value-of select="substring($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear,3,4)"/>
                        </ns28:ExpirationYear>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName)>0">
                                <ns28:IssuingBankName>
                                    <xsl:value-of select="tib:trim($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName)"/>
                                </ns28:IssuingBankName>
                            </xsl:when>
                            <xsl:when test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:bankName)>0">
                                <ns28:IssuingBankName>
                                    <xsl:value-of select="tib:trim($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:bankName)"/>
                                </ns28:IssuingBankName>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns28:IssuingBankName>
                                    <xsl:value-of select="tib:trim(&quot;&quot;)"/>
                                </ns28:IssuingBankName>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:variable name="var" select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:name"/>
                        <xsl:if test="$GetVariableLOV/ns14:ListOfValues/ns14:LOV[ns14:DESC_TEXT=$var]/ns14:VAL">
                            <ns28:PaymentMethod>
                                <xsl:value-of select="$GetVariableLOV/ns14:ListOfValues/ns14:LOV[ns14:DESC_TEXT=$var]/ns14:VAL"/>
                            </ns28:PaymentMethod>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="$PaymentRes/AccumulatedOutput/pfx12:PaymentInboundOutput/ns20:ZainCustomerPayment/ns20:paymentStatus='Success'">
                                <ns28:PaymentStatus>
                                    <xsl:value-of select="'Complete'"/>
                                </ns28:PaymentStatus>
                            </xsl:when>
                            <xsl:when test="$ContractPayment/pfx12:PaymentInboundOutput/ns20:ZainCustomerPayment/ns20:paymentStatus='Success'">
                                <ns28:PaymentStatus>
                                    <xsl:value-of select="'Complete'"/>
                                </ns28:PaymentStatus>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns28:PaymentStatus>
                                    <xsl:value-of select="'Failed'"/>
                                </ns28:PaymentStatus>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns28:TransactionAmount>
                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount"/>
                        </ns28:TransactionAmount>
                        <ns28:ListOfCbio2SubscriberPaymentInfo>
                            <xsl:for-each select="$PaymentRes/AccumulatedOutput/pfx12:PaymentInboundOutput">
                                <ns28:Cbio2SubscriberPaymentInfo>
                                    <xsl:if test="current()/ns20:ZainCustomerPayment/ns21:Money/ns21:amount">
                                        <ns28:CBiO2DueAmount>
                                            <xsl:value-of select="current()/ns20:ZainCustomerPayment/ns21:Money/ns21:amount"/>
                                        </ns28:CBiO2DueAmount>
                                    </xsl:if>
                                    <ns28:CBiO2ErrorCode>
                                        <xsl:value-of select="ns20:Params/ns20:Param[ns20:Name='ResponseCode']/ns20:Value"/>
                                    </ns28:CBiO2ErrorCode>
                                    <xsl:if test="ns20:Params/ns20:Param[ns20:Name='ResponseDesc']/ns20:Value">
                                        <ns28:CBiO2ErrorMessage>
                                            <xsl:value-of select="ns20:Params/ns20:Param[ns20:Name='ResponseDesc']/ns20:Value"/>
                                        </ns28:CBiO2ErrorMessage>
                                    </xsl:if>
                                    <ns28:CBiO2ErrorStatus>
                                        <xsl:value-of select="'Complete'"/>
                                    </ns28:CBiO2ErrorStatus>
                                    <ns28:CBiO2Msisdn2>
                                        <xsl:value-of select="format:FormatMSISDN(ns20:ZainCustomerPayment/ns21:conversionRate, $_globalVariables/ns1:GlobalVariables/MSISDNBaseLength)"/>
                                    </ns28:CBiO2Msisdn2>
                                    <xsl:if test="ns20:ZainCustomerPayment/ns20:paymentDate">
                                        <ns28:CBiO2PaymentDate>
                                            <xsl:value-of select="ns20:ZainCustomerPayment/ns20:paymentDate"/>
                                        </ns28:CBiO2PaymentDate>
                                    </xsl:if>
                                    <ns28:CBiO2PaymentRef2>
                                        <xsl:value-of select="ns20:ZainCustomerPayment/ns20:TransactionID"/>
                                    </ns28:CBiO2PaymentRef2>
                                    <xsl:if test="ns20:ZainCustomerPayment/ns20:paymentStatus">
                                        <ns28:CBiO2PaymentStatus>
                                            <xsl:value-of select="ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                        </ns28:CBiO2PaymentStatus>
                                    </xsl:if>
                                </ns28:Cbio2SubscriberPaymentInfo>
                            </xsl:for-each>
                            <xsl:for-each select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse">
                                <ns28:Cbio2SubscriberPaymentInfo>
                                    <xsl:if test="ns25:Error_Additional_Desc2">
                                        <ns28:CBiO2DueAmount>
                                            <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                                        </ns28:CBiO2DueAmount>
                                    </xsl:if>
                                    <xsl:if test="ns25:Error_SourceErrCode">
                                        <ns28:CBiO2ErrorCode>
                                            <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                        </ns28:CBiO2ErrorCode>
                                    </xsl:if>
                                    <ns28:CBiO2ErrorMessage>
                                        <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                    </ns28:CBiO2ErrorMessage>
                                    <ns28:CBiO2ErrorStatus>
                                        <xsl:value-of select="'Failed'"/>
                                    </ns28:CBiO2ErrorStatus>
                                    <xsl:if test="ns25:Error_Type">
                                        <ns28:CBiO2ErrorType>
                                            <xsl:value-of select="ns25:Error_Type"/>
                                        </ns28:CBiO2ErrorType>
                                    </xsl:if>
                                    <xsl:if test="ns25:Error_Occurance_Time">
                                        <ns28:CBiO2Error_Occurance_Time>
                                            <xsl:value-of select="ns25:Error_Occurance_Time"/>
                                        </ns28:CBiO2Error_Occurance_Time>
                                    </xsl:if>
                                    <xsl:if test="ns25:Error_SourceSystem">
                                        <ns28:CBiO2Error_SourceSystem>
                                            <xsl:value-of select="ns25:Error_SourceSystem"/>
                                        </ns28:CBiO2Error_SourceSystem>
                                    </xsl:if>
                                    <xsl:if test="ns25:Error_UserErrCode">
                                        <ns28:CBiO2Error_UserErrCode>
                                            <xsl:value-of select="ns25:Error_UserErrCode"/>
                                        </ns28:CBiO2Error_UserErrCode>
                                    </xsl:if>
                                    <xsl:if test="ns25:Error_UserErrDesc">
                                        <ns28:CBiO2Error_UserErrDesc>
                                            <xsl:value-of select="ns25:Error_UserErrDesc"/>
                                        </ns28:CBiO2Error_UserErrDesc>
                                    </xsl:if>
                                    <ns28:CBiO2Msisdn2>
                                        <xsl:value-of select="format:FormatMSISDN(ns25:Error_Additional_Desc1, $_globalVariables/ns1:GlobalVariables/MSISDNBaseLength)"/>
                                    </ns28:CBiO2Msisdn2>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate">
                                        <ns28:CBiO2PaymentDate>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate"/>
                                        </ns28:CBiO2PaymentDate>
                                    </xsl:if>
                                    <ns28:CBiO2PaymentStatus>
                                        <xsl:value-of select="'Failed'"/>
                                    </ns28:CBiO2PaymentStatus>
                                </ns28:Cbio2SubscriberPaymentInfo>
                            </xsl:for-each>
                        </ns28:ListOfCbio2SubscriberPaymentInfo>
                    </ns28:Payments>
                </ns28:ListOfCbio2ExternalPmtPostingIo>
                <TrackingId>
                    <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $PaymentTransactionsReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariableLOV">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>703</pd:x>
        <pd:y>241</pd:y>
        <config>
            <variableConfig>/CommonResources/SharedVariables/External/LOVs.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map-Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>904</pd:x>
        <pd:y>420</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx12:PaymentInboundOutput"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:when test="string-length($ContractPayment/pfx12:PaymentInboundOutput)>0">
                    <pfx12:PaymentInboundOutput>
                        <ns20:ZainCustomerPayment>
                            <ns21:Money>
                                <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                                        <ns21:amount>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                        </ns21:amount>
                                    </xsl:if>
                                </xsl:if>
                            </ns21:Money>
                            <ns20:TransactionID>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                            </ns20:TransactionID>
                            <ns20:PaymentMethod>
                                <ns20:CreditCardPM>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV">
                                        <ns20:authorizationCode>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                        </ns20:authorizationCode>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName">
                                        <ns20:creditCardType>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                                        </ns20:creditCardType>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo">
                                        <ns20:CVV>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                                        </ns20:CVV>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber">
                                        <ns20:ReceiptNumber>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                                        </ns20:ReceiptNumber>
                                    </xsl:if>
                                </ns20:CreditCardPM>
                            </ns20:PaymentMethod>
                            <ns20:paymentStatus>
                                <xsl:value-of select="'Success'"/>
                            </ns20:paymentStatus>
                            <ns20:MerchantID>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                            </ns20:MerchantID>
                            <ns20:AuthorizationStatus>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </ns20:AuthorizationStatus>
                            <ns20:ReceiptNumber>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                            </ns20:ReceiptNumber>
                            <ns20:SettlementDate>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </ns20:SettlementDate>
                            <ns20:AcquirerResponseCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns20:AcquirerResponseCode>
                            <ns20:ShoppingTransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </ns20:ShoppingTransactionReference>
                        </ns20:ZainCustomerPayment>
                        <ns20:Params>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseCode'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="'0'"/>
                                </ns20:Value>
                            </ns20:Param>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseDesc'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="'Success'"/>
                                </ns20:Value>
                            </ns20:Param>
                        </ns20:Params>
                    </pfx12:PaymentInboundOutput>
                </xsl:when>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/ns25:ErrorResponse)=0">
                    <pfx12:PaymentInboundOutput>
                        <ns20:ZainCustomerPayment>
                            <ns21:Money>
                                <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                                        <ns21:amount>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                        </ns21:amount>
                                    </xsl:if>
                                </xsl:if>
                            </ns21:Money>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth">
                                <ns20:TransactionID>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                                </ns20:TransactionID>
                            </xsl:if>
                            <ns20:PaymentMethod>
                                <ns20:CreditCardPM>
                                    <ns20:authorizationCode>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                    </ns20:authorizationCode>
                                    <ns20:creditCardType>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                                    </ns20:creditCardType>
                                    <ns20:CVV>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                                    </ns20:CVV>
                                    <ns20:ReceiptNumber>
                                        <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                                    </ns20:ReceiptNumber>
                                </ns20:CreditCardPM>
                            </ns20:PaymentMethod>
                            <ns20:paymentStatus>
                                <xsl:value-of select="'Success'"/>
                            </ns20:paymentStatus>
                            <ns20:MerchantID>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                            </ns20:MerchantID>
                            <ns20:AuthorizationStatus>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </ns20:AuthorizationStatus>
                            <ns20:ReceiptNumber>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                            </ns20:ReceiptNumber>
                            <ns20:SettlementDate>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </ns20:SettlementDate>
                            <ns20:AcquirerResponseCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns20:AcquirerResponseCode>
                            <ns20:ShoppingTransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </ns20:ShoppingTransactionReference>
                        </ns20:ZainCustomerPayment>
                        <ns20:Params>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseCode'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="'0'"/>
                                </ns20:Value>
                            </ns20:Param>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseDesc'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="'Success'"/>
                                </ns20:Value>
                            </ns20:Param>
                        </ns20:Params>
                    </pfx12:PaymentInboundOutput>
                </xsl:when>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/ns25:ErrorResponse)>0&#xA;and&#xA;count($PaymentRes/AccumulatedOutput/pfx12:PaymentInboundOutput)>0">
                    <pfx12:PaymentInboundOutput>
                        <ns20:ZainCustomerPayment>
                            <ns21:Money>
                                <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                                        <ns21:amount>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                        </ns21:amount>
                                    </xsl:if>
                                </xsl:if>
                            </ns21:Money>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth">
                                <ns20:TransactionID>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                                </ns20:TransactionID>
                            </xsl:if>
                            <ns20:PaymentMethod>
                                <ns20:CreditCardPM>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV">
                                        <ns20:authorizationCode>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                        </ns20:authorizationCode>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName">
                                        <ns20:creditCardType>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                                        </ns20:creditCardType>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo">
                                        <ns20:CVV>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                                        </ns20:CVV>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber">
                                        <ns20:ReceiptNumber>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                                        </ns20:ReceiptNumber>
                                    </xsl:if>
                                </ns20:CreditCardPM>
                            </ns20:PaymentMethod>
                            <ns20:paymentStatus>
                                <xsl:value-of select="'PARTIALLY SUCCESS'"/>
                            </ns20:paymentStatus>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus">
                                <ns20:MerchantID>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                </ns20:MerchantID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus">
                                <ns20:AuthorizationStatus>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                                </ns20:AuthorizationStatus>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID">
                                <ns20:ReceiptNumber>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                                </ns20:ReceiptNumber>
                            </xsl:if>
                            <ns20:SettlementDate>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </ns20:SettlementDate>
                            <ns20:AcquirerResponseCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns20:AcquirerResponseCode>
                            <ns20:ShoppingTransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </ns20:ShoppingTransactionReference>
                        </ns20:ZainCustomerPayment>
                        <ns20:Params>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseCode'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="tib:concat-sequence-format($PaymentRes/AccumulatedOutput/ns25:ErrorResponse/ns25:Error_SourceErrCode, '|')"/>
                                </ns20:Value>
                            </ns20:Param>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseDesc'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="tib:concat-sequence-format($PaymentRes/AccumulatedOutput/ns25:ErrorResponse/ns25:Error_SourceErrDesc, '||')"/>
                                </ns20:Value>
                            </ns20:Param>
                        </ns20:Params>
                    </pfx12:PaymentInboundOutput>
                </xsl:when>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/pfx12:PaymentInboundOutput)=0&#xA;and&#xA;$Parse-XML/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                    <pfx12:PaymentInboundOutput>
                        <ns20:ZainCustomerPayment>
                            <ns21:Money>
                                <xsl:if test="string-length($Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                                        <ns21:amount>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                        </ns21:amount>
                                    </xsl:if>
                                </xsl:if>
                            </ns21:Money>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth">
                                <ns20:TransactionID>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                                </ns20:TransactionID>
                            </xsl:if>
                            <ns20:PaymentMethod>
                                <ns20:CreditCardPM>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV">
                                        <ns20:authorizationCode>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                        </ns20:authorizationCode>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName">
                                        <ns20:creditCardType>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                                        </ns20:creditCardType>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo">
                                        <ns20:CVV>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                                        </ns20:CVV>
                                    </xsl:if>
                                    <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber">
                                        <ns20:ReceiptNumber>
                                            <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                                        </ns20:ReceiptNumber>
                                    </xsl:if>
                                </ns20:CreditCardPM>
                            </ns20:PaymentMethod>
                            <ns20:paymentStatus>
                                <xsl:value-of select="'PARTIALLY SUCCESS'"/>
                            </ns20:paymentStatus>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus">
                                <ns20:MerchantID>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                </ns20:MerchantID>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus">
                                <ns20:AuthorizationStatus>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                                </ns20:AuthorizationStatus>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID">
                                <ns20:ReceiptNumber>
                                    <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                                </ns20:ReceiptNumber>
                            </xsl:if>
                            <ns20:SettlementDate>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </ns20:SettlementDate>
                            <ns20:AcquirerResponseCode>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </ns20:AcquirerResponseCode>
                            <ns20:ShoppingTransactionReference>
                                <xsl:value-of select="$Parse-XML/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </ns20:ShoppingTransactionReference>
                        </ns20:ZainCustomerPayment>
                        <ns20:Params>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseCode'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="tib:concat-sequence-format($PaymentRes/AccumulatedOutput/ns25:ErrorResponse/ns25:Error_SourceErrCode, '|')"/>
                                </ns20:Value>
                            </ns20:Param>
                            <ns20:Param>
                                <ns20:Name>
                                    <xsl:value-of select="'ResponseDesc'"/>
                                </ns20:Name>
                                <ns20:Value>
                                    <xsl:value-of select="tib:concat-sequence-format($PaymentRes/AccumulatedOutput/ns25:ErrorResponse/ns25:Error_SourceErrDesc, '||')"/>
                                </ns20:Value>
                            </ns20:Param>
                        </ns20:Params>
                    </pfx12:PaymentInboundOutput>
                </xsl:when>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/pfx12:PaymentInboundOutput)=0&#xA;and&#xA;$Parse-XML/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='N'">
                    <ns25:ErrorResponse>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceSystem">
                            <ns25:Error_SourceSystem>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceSystem"/>
                            </ns25:Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceErrCode">
                            <ns25:Error_SourceErrCode>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceErrCode"/>
                            </ns25:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceErrDesc">
                            <ns25:Error_SourceErrDesc>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_SourceErrDesc"/>
                            </ns25:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Type">
                            <ns25:Error_Type>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Type"/>
                            </ns25:Error_Type>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_UserErrCode">
                            <ns25:Error_UserErrCode>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_UserErrCode"/>
                            </ns25:Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_UserErrDesc">
                            <ns25:Error_UserErrDesc>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_UserErrDesc"/>
                            </ns25:Error_UserErrDesc>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Occurance_Time">
                            <ns25:Error_Occurance_Time>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Occurance_Time"/>
                            </ns25:Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Additional_Desc1">
                            <ns25:Error_Additional_Desc1>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Additional_Desc1"/>
                            </ns25:Error_Additional_Desc1>
                        </xsl:if>
                        <xsl:if test="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Additional_Desc2">
                            <ns25:Error_Additional_Desc2>
                                <xsl:value-of select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse[1]/ns25:Error_Additional_Desc2"/>
                            </ns25:Error_Additional_Desc2>
                        </xsl:if>
                    </ns25:ErrorResponse>
                </xsl:when>
                <xsl:otherwise>
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="'TIBCO'"/>
                        </ns25:Error_SourceSystem>
                        <ns25:Error_SourceErrCode>
                            <xsl:value-of select="'1'"/>
                        </ns25:Error_SourceErrCode>
                        <ns25:Error_SourceErrDesc>
                            <xsl:value-of select="'Failed'"/>
                        </ns25:Error_SourceErrDesc>
                    </ns25:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>299</pd:x>
        <pd:y>249</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx12:PaymentInboundInput"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$PaymentTransactionsReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Parse-XML/pfx12:PaymentInboundInput/pfx12:Subscriber/pfx12:MSISDN)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>ContractPayment</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariableLOV</pd:from>
        <pd:to>ESI_CRM_Call_ExternalPaymentPosting</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ContractPayment</pd:from>
        <pd:to>GetVariableLOV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_CRM_Call_ExternalPaymentPosting</pd:from>
        <pd:to>Map-Data</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ESI_CRM_Call_ExternalPaymentPosting</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>ContractPaymentError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ContractPayment/ns25:ErrorResponse)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GetVariableLOV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PaymentTransactionsReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>