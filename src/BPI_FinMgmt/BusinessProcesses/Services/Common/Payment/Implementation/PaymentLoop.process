<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.ericsson.com/ZainKW/BusinessSchemas/ChequeDetails.xsd" xmlns:pfx15="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:pfx13="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:pfx17="http://www.ericsson.com/ZainKW/BusinessSchemas/AuthoriseDetails.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns110="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns26="http://siebel.com/CustomUI" xmlns:ns27="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:ns21="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://mastercard.zain.com/" xmlns:ns24="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/ChequeDetails.xsd" schemaLocation="/BusinessProcesses/Services/Common/Payment/Schema/ChequeDetails.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/AuthoriseDetails.xsd" schemaLocation="/BusinessProcesses/Services/Common/Payment/Schema/AuthoriseDetails.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalPaymentPostingWS.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Common/Payment/Implementation/PaymentLoop.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx12:PaymentInboundInput"/>
                    <xsd:element name="TransactionID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>445</pd:startX>
    <pd:startY>100</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($Map-Data/pfx12:PaymentInboundOutput)>0">
                <xsl:for-each select="$Map-Data/pfx12:PaymentInboundOutput">
                    <pfx12:PaymentInboundOutput>
                        <xsl:for-each select="ns20:ZainCustomerPayment">
                            <ns20:ZainCustomerPayment>
                                <xsl:for-each select="ns21:Money">
                                    <ns21:Money>
                                        <xsl:if test="ns21:amount">
                                            <ns21:amount>
                                                <xsl:value-of select="ns21:amount"/>
                                            </ns21:amount>
                                        </xsl:if>
                                        <xsl:if test="ns21:units">
                                            <ns21:units>
                                                <xsl:value-of select="ns21:units"/>
                                            </ns21:units>
                                        </xsl:if>
                                    </ns21:Money>
                                </xsl:for-each>
                                <xsl:if test="ns21:conversionRate">
                                    <ns21:conversionRate>
                                        <xsl:value-of select="ns21:conversionRate"/>
                                    </ns21:conversionRate>
                                </xsl:if>
                                <xsl:if test="ns20:TransactionID">
                                    <ns20:TransactionID>
                                        <xsl:value-of select="ns20:TransactionID"/>
                                    </ns20:TransactionID>
                                </xsl:if>
                                <xsl:if test="ns20:paymentDate">
                                    <ns20:paymentDate>
                                        <xsl:value-of select="ns20:paymentDate"/>
                                    </ns20:paymentDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentReceiptDate">
                                    <ns20:paymentReceiptDate>
                                        <xsl:value-of select="ns20:paymentReceiptDate"/>
                                    </ns20:paymentReceiptDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentType">
                                    <ns20:paymentType>
                                        <xsl:value-of select="ns20:paymentType"/>
                                    </ns20:paymentType>
                                </xsl:if>
                                <xsl:for-each select="ns20:PaymentMethod">
                                    <ns20:PaymentMethod>
                                        <xsl:if test="ns20:description">
                                            <ns20:description>
                                                <xsl:value-of select="ns20:description"/>
                                            </ns20:description>
                                        </xsl:if>
                                        <xsl:if test="ns20:ID">
                                            <ns20:ID>
                                                <xsl:value-of select="ns20:ID"/>
                                            </ns20:ID>
                                        </xsl:if>
                                        <xsl:if test="ns20:name">
                                            <ns20:name>
                                                <xsl:value-of select="ns20:name"/>
                                            </ns20:name>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentMethodType">
                                            <ns20:paymentMethodType>
                                                <xsl:value-of select="ns20:paymentMethodType"/>
                                            </ns20:paymentMethodType>
                                        </xsl:if>
                                        <xsl:for-each select="ns20:CreditCardPM">
                                            <ns20:CreditCardPM>
                                                <xsl:if test="ns20:creditCardNumber">
                                                    <ns20:creditCardNumber>
                                                        <xsl:value-of select="ns20:creditCardNumber"/>
                                                    </ns20:creditCardNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:CreditCardCompanyName">
                                                    <ns20:CreditCardCompanyName>
                                                        <xsl:value-of select="ns20:CreditCardCompanyName"/>
                                                    </ns20:CreditCardCompanyName>
                                                </xsl:if>
                                                <xsl:if test="ns20:expirationDate">
                                                    <ns20:expirationDate>
                                                        <xsl:value-of select="ns20:expirationDate"/>
                                                    </ns20:expirationDate>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationMonth">
                                                    <ns20:ExpirationMonth>
                                                        <xsl:value-of select="ns20:ExpirationMonth"/>
                                                    </ns20:ExpirationMonth>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationYear">
                                                    <ns20:ExpirationYear>
                                                        <xsl:value-of select="ns20:ExpirationYear"/>
                                                    </ns20:ExpirationYear>
                                                </xsl:if>
                                                <xsl:if test="ns20:nameOnCard">
                                                    <ns20:nameOnCard>
                                                        <xsl:value-of select="ns20:nameOnCard"/>
                                                    </ns20:nameOnCard>
                                                </xsl:if>
                                                <xsl:if test="ns20:authorizationCode">
                                                    <ns20:authorizationCode>
                                                        <xsl:value-of select="ns20:authorizationCode"/>
                                                    </ns20:authorizationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:creditCardType">
                                                    <ns20:creditCardType>
                                                        <xsl:value-of select="ns20:creditCardType"/>
                                                    </ns20:creditCardType>
                                                </xsl:if>
                                                <xsl:if test="ns20:CVV">
                                                    <ns20:CVV>
                                                        <xsl:value-of select="ns20:CVV"/>
                                                    </ns20:CVV>
                                                </xsl:if>
                                                <xsl:if test="ns20:ReceiptNumber">
                                                    <ns20:ReceiptNumber>
                                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                                    </ns20:ReceiptNumber>
                                                </xsl:if>
                                            </ns20:CreditCardPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:CashPM">
                                            <ns20:CashPM>
                                                <xsl:if test="ns20:cashierInfo">
                                                    <ns20:cashierInfo>
                                                        <xsl:value-of select="ns20:cashierInfo"/>
                                                    </ns20:cashierInfo>
                                                </xsl:if>
                                            </ns20:CashPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:ZainBankPM">
                                            <ns20:ZainBankPM>
                                                <xsl:if test="ns20:accountNumber">
                                                    <ns20:accountNumber>
                                                        <xsl:value-of select="ns20:accountNumber"/>
                                                    </ns20:accountNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:accountowner">
                                                    <ns20:accountowner>
                                                        <xsl:value-of select="ns20:accountowner"/>
                                                    </ns20:accountowner>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankCode">
                                                    <ns20:BankCode>
                                                        <xsl:value-of select="ns20:BankCode"/>
                                                    </ns20:BankCode>
                                                </xsl:if>
                                                <xsl:for-each select="ns20:BankCountry">
                                                    <ns20:BankCountry>
                                                        <ns21:countryCode>
                                                            <xsl:value-of select="ns21:countryCode"/>
                                                        </ns21:countryCode>
                                                        <xsl:if test="ns21:Iso2Code">
                                                            <ns21:Iso2Code>
                                                                <xsl:value-of select="ns21:Iso2Code"/>
                                                            </ns21:Iso2Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:Iso3Code">
                                                            <ns21:Iso3Code>
                                                                <xsl:value-of select="ns21:Iso3Code"/>
                                                            </ns21:Iso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:name">
                                                            <ns21:name>
                                                                <xsl:value-of select="ns21:name"/>
                                                            </ns21:name>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:type">
                                                            <ns21:type>
                                                                <xsl:value-of select="ns21:type"/>
                                                            </ns21:type>
                                                        </xsl:if>
                                                    </ns20:BankCountry>
                                                </xsl:for-each>
                                                <xsl:if test="ns20:BankName">
                                                    <ns20:BankName>
                                                        <xsl:value-of select="ns20:BankName"/>
                                                    </ns20:BankName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankState">
                                                    <ns20:BankState>
                                                        <xsl:value-of select="ns20:BankState"/>
                                                    </ns20:BankState>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetName">
                                                    <ns20:BankStreetName>
                                                        <xsl:value-of select="ns20:BankStreetName"/>
                                                    </ns20:BankStreetName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetNumber">
                                                    <ns20:BankStreetNumber>
                                                        <xsl:value-of select="ns20:BankStreetNumber"/>
                                                    </ns20:BankStreetNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankZipCode">
                                                    <ns20:BankZipCode>
                                                        <xsl:value-of select="ns20:BankZipCode"/>
                                                    </ns20:BankZipCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:CityOfBank">
                                                    <ns20:CityOfBank>
                                                        <xsl:value-of select="ns20:CityOfBank"/>
                                                    </ns20:CityOfBank>
                                                </xsl:if>
                                                <xsl:if test="ns20:lso3Code">
                                                    <ns20:lso3Code>
                                                        <xsl:value-of select="ns20:lso3Code"/>
                                                    </ns20:lso3Code>
                                                </xsl:if>
                                                <xsl:if test="ns20:swiftCode">
                                                    <ns20:swiftCode>
                                                        <xsl:value-of select="ns20:swiftCode"/>
                                                    </ns20:swiftCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:verificationCode">
                                                    <ns20:verificationCode>
                                                        <xsl:value-of select="ns20:verificationCode"/>
                                                    </ns20:verificationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankBranchName">
                                                    <ns20:BankBranchName>
                                                        <xsl:value-of select="ns20:BankBranchName"/>
                                                    </ns20:BankBranchName>
                                                </xsl:if>
                                            </ns20:ZainBankPM>
                                        </xsl:for-each>
                                        <xsl:if test="ns20:PreferredPaymentMode">
                                            <ns20:PreferredPaymentMode>
                                                <xsl:value-of select="ns20:PreferredPaymentMode"/>
                                            </ns20:PreferredPaymentMode>
                                        </xsl:if>
                                        <xsl:for-each select="ns21:ChequeDetails">
                                            <ns21:ChequeDetails>
                                                <ns21:chequeNumber>
                                                    <xsl:value-of select="ns21:chequeNumber"/>
                                                </ns21:chequeNumber>
                                                <xsl:if test="ns21:bankName">
                                                    <ns21:bankName>
                                                        <xsl:value-of select="ns21:bankName"/>
                                                    </ns21:bankName>
                                                </xsl:if>
                                            </ns21:ChequeDetails>
                                        </xsl:for-each>
                                    </ns20:PaymentMethod>
                                </xsl:for-each>
                                <xsl:if test="ns21:paymentReferenceNumber">
                                    <ns21:paymentReferenceNumber>
                                        <xsl:value-of select="ns21:paymentReferenceNumber"/>
                                    </ns21:paymentReferenceNumber>
                                </xsl:if>
                                <xsl:if test="ns20:PaymentChannel">
                                    <ns20:PaymentChannel>
                                        <xsl:value-of select="ns20:PaymentChannel"/>
                                    </ns20:PaymentChannel>
                                </xsl:if>
                                <xsl:if test="ns20:paymentStatus">
                                    <ns20:paymentStatus>
                                        <xsl:value-of select="ns20:paymentStatus"/>
                                    </ns20:paymentStatus>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantID">
                                    <ns20:MerchantID>
                                        <xsl:value-of select="ns20:MerchantID"/>
                                    </ns20:MerchantID>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantPassword">
                                    <ns20:MerchantPassword>
                                        <xsl:value-of select="ns20:MerchantPassword"/>
                                    </ns20:MerchantPassword>
                                </xsl:if>
                                <xsl:if test="ns20:TerminalID">
                                    <ns20:TerminalID>
                                        <xsl:value-of select="ns20:TerminalID"/>
                                    </ns20:TerminalID>
                                </xsl:if>
                                <xsl:if test="ns20:AuthorizationStatus">
                                    <ns20:AuthorizationStatus>
                                        <xsl:value-of select="ns20:AuthorizationStatus"/>
                                    </ns20:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="ns20:ReceiptNumber">
                                    <ns20:ReceiptNumber>
                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                    </ns20:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="ns20:SettlementDate">
                                    <ns20:SettlementDate>
                                        <xsl:value-of select="ns20:SettlementDate"/>
                                    </ns20:SettlementDate>
                                </xsl:if>
                                <xsl:if test="ns20:AcquirerResponseCode">
                                    <ns20:AcquirerResponseCode>
                                        <xsl:value-of select="ns20:AcquirerResponseCode"/>
                                    </ns20:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="ns20:ShoppingTransactionReference">
                                    <ns20:ShoppingTransactionReference>
                                        <xsl:value-of select="ns20:ShoppingTransactionReference"/>
                                    </ns20:ShoppingTransactionReference>
                                </xsl:if>
                            </ns20:ZainCustomerPayment>
                        </xsl:for-each>
                        <xsl:for-each select="ns20:Params">
                            <ns20:Params>
                                <xsl:for-each select="ns20:Param">
                                    <ns20:Param>
                                        <xsl:if test="ns20:Name">
                                            <ns20:Name>
                                                <xsl:value-of select="ns20:Name"/>
                                            </ns20:Name>
                                        </xsl:if>
                                        <xsl:if test="ns20:Value">
                                            <ns20:Value>
                                                <xsl:value-of select="ns20:Value"/>
                                            </ns20:Value>
                                        </xsl:if>
                                    </ns20:Param>
                                </xsl:for-each>
                            </ns20:Params>
                        </xsl:for-each>
                    </pfx12:PaymentInboundOutput>
                </xsl:for-each>
            </xsl:when>
            <xsl:when test="string-length($Map-Error/pfx12:PaymentInboundOutput)>0">
                <xsl:for-each select="$Map-Error/pfx12:PaymentInboundOutput">
                    <pfx12:PaymentInboundOutput>
                        <xsl:for-each select="ns20:ZainCustomerPayment">
                            <ns20:ZainCustomerPayment>
                                <xsl:for-each select="ns21:Money">
                                    <ns21:Money>
                                        <xsl:if test="ns21:amount">
                                            <ns21:amount>
                                                <xsl:value-of select="ns21:amount"/>
                                            </ns21:amount>
                                        </xsl:if>
                                        <xsl:if test="ns21:units">
                                            <ns21:units>
                                                <xsl:value-of select="ns21:units"/>
                                            </ns21:units>
                                        </xsl:if>
                                    </ns21:Money>
                                </xsl:for-each>
                                <xsl:if test="ns21:conversionRate">
                                    <ns21:conversionRate>
                                        <xsl:value-of select="ns21:conversionRate"/>
                                    </ns21:conversionRate>
                                </xsl:if>
                                <xsl:if test="ns20:TransactionID">
                                    <ns20:TransactionID>
                                        <xsl:value-of select="ns20:TransactionID"/>
                                    </ns20:TransactionID>
                                </xsl:if>
                                <xsl:if test="ns20:paymentDate">
                                    <ns20:paymentDate>
                                        <xsl:value-of select="ns20:paymentDate"/>
                                    </ns20:paymentDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentReceiptDate">
                                    <ns20:paymentReceiptDate>
                                        <xsl:value-of select="ns20:paymentReceiptDate"/>
                                    </ns20:paymentReceiptDate>
                                </xsl:if>
                                <xsl:if test="ns20:paymentType">
                                    <ns20:paymentType>
                                        <xsl:value-of select="ns20:paymentType"/>
                                    </ns20:paymentType>
                                </xsl:if>
                                <xsl:for-each select="ns20:PaymentMethod">
                                    <ns20:PaymentMethod>
                                        <xsl:if test="ns20:description">
                                            <ns20:description>
                                                <xsl:value-of select="ns20:description"/>
                                            </ns20:description>
                                        </xsl:if>
                                        <xsl:if test="ns20:ID">
                                            <ns20:ID>
                                                <xsl:value-of select="ns20:ID"/>
                                            </ns20:ID>
                                        </xsl:if>
                                        <xsl:if test="ns20:name">
                                            <ns20:name>
                                                <xsl:value-of select="ns20:name"/>
                                            </ns20:name>
                                        </xsl:if>
                                        <xsl:if test="ns20:paymentMethodType">
                                            <ns20:paymentMethodType>
                                                <xsl:value-of select="ns20:paymentMethodType"/>
                                            </ns20:paymentMethodType>
                                        </xsl:if>
                                        <xsl:for-each select="ns20:CreditCardPM">
                                            <ns20:CreditCardPM>
                                                <xsl:if test="ns20:creditCardNumber">
                                                    <ns20:creditCardNumber>
                                                        <xsl:value-of select="ns20:creditCardNumber"/>
                                                    </ns20:creditCardNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:CreditCardCompanyName">
                                                    <ns20:CreditCardCompanyName>
                                                        <xsl:value-of select="ns20:CreditCardCompanyName"/>
                                                    </ns20:CreditCardCompanyName>
                                                </xsl:if>
                                                <xsl:if test="ns20:expirationDate">
                                                    <ns20:expirationDate>
                                                        <xsl:value-of select="ns20:expirationDate"/>
                                                    </ns20:expirationDate>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationMonth">
                                                    <ns20:ExpirationMonth>
                                                        <xsl:value-of select="ns20:ExpirationMonth"/>
                                                    </ns20:ExpirationMonth>
                                                </xsl:if>
                                                <xsl:if test="ns20:ExpirationYear">
                                                    <ns20:ExpirationYear>
                                                        <xsl:value-of select="ns20:ExpirationYear"/>
                                                    </ns20:ExpirationYear>
                                                </xsl:if>
                                                <xsl:if test="ns20:nameOnCard">
                                                    <ns20:nameOnCard>
                                                        <xsl:value-of select="ns20:nameOnCard"/>
                                                    </ns20:nameOnCard>
                                                </xsl:if>
                                                <xsl:if test="ns20:authorizationCode">
                                                    <ns20:authorizationCode>
                                                        <xsl:value-of select="ns20:authorizationCode"/>
                                                    </ns20:authorizationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:creditCardType">
                                                    <ns20:creditCardType>
                                                        <xsl:value-of select="ns20:creditCardType"/>
                                                    </ns20:creditCardType>
                                                </xsl:if>
                                                <xsl:if test="ns20:CVV">
                                                    <ns20:CVV>
                                                        <xsl:value-of select="ns20:CVV"/>
                                                    </ns20:CVV>
                                                </xsl:if>
                                                <xsl:if test="ns20:ReceiptNumber">
                                                    <ns20:ReceiptNumber>
                                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                                    </ns20:ReceiptNumber>
                                                </xsl:if>
                                            </ns20:CreditCardPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:CashPM">
                                            <ns20:CashPM>
                                                <xsl:if test="ns20:cashierInfo">
                                                    <ns20:cashierInfo>
                                                        <xsl:value-of select="ns20:cashierInfo"/>
                                                    </ns20:cashierInfo>
                                                </xsl:if>
                                            </ns20:CashPM>
                                        </xsl:for-each>
                                        <xsl:for-each select="ns20:ZainBankPM">
                                            <ns20:ZainBankPM>
                                                <xsl:if test="ns20:accountNumber">
                                                    <ns20:accountNumber>
                                                        <xsl:value-of select="ns20:accountNumber"/>
                                                    </ns20:accountNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:accountowner">
                                                    <ns20:accountowner>
                                                        <xsl:value-of select="ns20:accountowner"/>
                                                    </ns20:accountowner>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankCode">
                                                    <ns20:BankCode>
                                                        <xsl:value-of select="ns20:BankCode"/>
                                                    </ns20:BankCode>
                                                </xsl:if>
                                                <xsl:for-each select="ns20:BankCountry">
                                                    <ns20:BankCountry>
                                                        <ns21:countryCode>
                                                            <xsl:value-of select="ns21:countryCode"/>
                                                        </ns21:countryCode>
                                                        <xsl:if test="ns21:Iso2Code">
                                                            <ns21:Iso2Code>
                                                                <xsl:value-of select="ns21:Iso2Code"/>
                                                            </ns21:Iso2Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:Iso3Code">
                                                            <ns21:Iso3Code>
                                                                <xsl:value-of select="ns21:Iso3Code"/>
                                                            </ns21:Iso3Code>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:name">
                                                            <ns21:name>
                                                                <xsl:value-of select="ns21:name"/>
                                                            </ns21:name>
                                                        </xsl:if>
                                                        <xsl:if test="ns21:type">
                                                            <ns21:type>
                                                                <xsl:value-of select="ns21:type"/>
                                                            </ns21:type>
                                                        </xsl:if>
                                                    </ns20:BankCountry>
                                                </xsl:for-each>
                                                <xsl:if test="ns20:BankName">
                                                    <ns20:BankName>
                                                        <xsl:value-of select="ns20:BankName"/>
                                                    </ns20:BankName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankState">
                                                    <ns20:BankState>
                                                        <xsl:value-of select="ns20:BankState"/>
                                                    </ns20:BankState>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetName">
                                                    <ns20:BankStreetName>
                                                        <xsl:value-of select="ns20:BankStreetName"/>
                                                    </ns20:BankStreetName>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankStreetNumber">
                                                    <ns20:BankStreetNumber>
                                                        <xsl:value-of select="ns20:BankStreetNumber"/>
                                                    </ns20:BankStreetNumber>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankZipCode">
                                                    <ns20:BankZipCode>
                                                        <xsl:value-of select="ns20:BankZipCode"/>
                                                    </ns20:BankZipCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:CityOfBank">
                                                    <ns20:CityOfBank>
                                                        <xsl:value-of select="ns20:CityOfBank"/>
                                                    </ns20:CityOfBank>
                                                </xsl:if>
                                                <xsl:if test="ns20:lso3Code">
                                                    <ns20:lso3Code>
                                                        <xsl:value-of select="ns20:lso3Code"/>
                                                    </ns20:lso3Code>
                                                </xsl:if>
                                                <xsl:if test="ns20:swiftCode">
                                                    <ns20:swiftCode>
                                                        <xsl:value-of select="ns20:swiftCode"/>
                                                    </ns20:swiftCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:verificationCode">
                                                    <ns20:verificationCode>
                                                        <xsl:value-of select="ns20:verificationCode"/>
                                                    </ns20:verificationCode>
                                                </xsl:if>
                                                <xsl:if test="ns20:BankBranchName">
                                                    <ns20:BankBranchName>
                                                        <xsl:value-of select="ns20:BankBranchName"/>
                                                    </ns20:BankBranchName>
                                                </xsl:if>
                                            </ns20:ZainBankPM>
                                        </xsl:for-each>
                                        <xsl:if test="ns20:PreferredPaymentMode">
                                            <ns20:PreferredPaymentMode>
                                                <xsl:value-of select="ns20:PreferredPaymentMode"/>
                                            </ns20:PreferredPaymentMode>
                                        </xsl:if>
                                        <xsl:for-each select="ns21:ChequeDetails">
                                            <ns21:ChequeDetails>
                                                <ns21:chequeNumber>
                                                    <xsl:value-of select="ns21:chequeNumber"/>
                                                </ns21:chequeNumber>
                                                <xsl:if test="ns21:bankName">
                                                    <ns21:bankName>
                                                        <xsl:value-of select="ns21:bankName"/>
                                                    </ns21:bankName>
                                                </xsl:if>
                                            </ns21:ChequeDetails>
                                        </xsl:for-each>
                                    </ns20:PaymentMethod>
                                </xsl:for-each>
                                <xsl:if test="ns21:paymentReferenceNumber">
                                    <ns21:paymentReferenceNumber>
                                        <xsl:value-of select="ns21:paymentReferenceNumber"/>
                                    </ns21:paymentReferenceNumber>
                                </xsl:if>
                                <xsl:if test="ns20:PaymentChannel">
                                    <ns20:PaymentChannel>
                                        <xsl:value-of select="ns20:PaymentChannel"/>
                                    </ns20:PaymentChannel>
                                </xsl:if>
                                <xsl:if test="ns20:paymentStatus">
                                    <ns20:paymentStatus>
                                        <xsl:value-of select="ns20:paymentStatus"/>
                                    </ns20:paymentStatus>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantID">
                                    <ns20:MerchantID>
                                        <xsl:value-of select="ns20:MerchantID"/>
                                    </ns20:MerchantID>
                                </xsl:if>
                                <xsl:if test="ns20:MerchantPassword">
                                    <ns20:MerchantPassword>
                                        <xsl:value-of select="ns20:MerchantPassword"/>
                                    </ns20:MerchantPassword>
                                </xsl:if>
                                <xsl:if test="ns20:TerminalID">
                                    <ns20:TerminalID>
                                        <xsl:value-of select="ns20:TerminalID"/>
                                    </ns20:TerminalID>
                                </xsl:if>
                                <xsl:if test="ns20:AuthorizationStatus">
                                    <ns20:AuthorizationStatus>
                                        <xsl:value-of select="ns20:AuthorizationStatus"/>
                                    </ns20:AuthorizationStatus>
                                </xsl:if>
                                <xsl:if test="ns20:ReceiptNumber">
                                    <ns20:ReceiptNumber>
                                        <xsl:value-of select="ns20:ReceiptNumber"/>
                                    </ns20:ReceiptNumber>
                                </xsl:if>
                                <xsl:if test="ns20:SettlementDate">
                                    <ns20:SettlementDate>
                                        <xsl:value-of select="ns20:SettlementDate"/>
                                    </ns20:SettlementDate>
                                </xsl:if>
                                <xsl:if test="ns20:AcquirerResponseCode">
                                    <ns20:AcquirerResponseCode>
                                        <xsl:value-of select="ns20:AcquirerResponseCode"/>
                                    </ns20:AcquirerResponseCode>
                                </xsl:if>
                                <xsl:if test="ns20:ShoppingTransactionReference">
                                    <ns20:ShoppingTransactionReference>
                                        <xsl:value-of select="ns20:ShoppingTransactionReference"/>
                                    </ns20:ShoppingTransactionReference>
                                </xsl:if>
                            </ns20:ZainCustomerPayment>
                        </xsl:for-each>
                        <xsl:for-each select="ns20:Params">
                            <ns20:Params>
                                <xsl:for-each select="ns20:Param">
                                    <ns20:Param>
                                        <xsl:if test="ns20:Name">
                                            <ns20:Name>
                                                <xsl:value-of select="ns20:Name"/>
                                            </ns20:Name>
                                        </xsl:if>
                                        <xsl:if test="ns20:Value">
                                            <ns20:Value>
                                                <xsl:value-of select="ns20:Value"/>
                                            </ns20:Value>
                                        </xsl:if>
                                    </ns20:Param>
                                </xsl:for-each>
                            </ns20:Params>
                        </xsl:for-each>
                    </pfx12:PaymentInboundOutput>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="$Map-Error/ns25:ErrorResponse">
                    <ns25:ErrorResponse>
                        <xsl:if test="ns25:Error_SourceSystem">
                            <ns25:Error_SourceSystem>
                                <xsl:value-of select="ns25:Error_SourceSystem"/>
                            </ns25:Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="ns25:Error_SourceErrCode">
                            <ns25:Error_SourceErrCode>
                                <xsl:value-of select="ns25:Error_SourceErrCode"/>
                            </ns25:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="ns25:Error_SourceErrDesc">
                            <ns25:Error_SourceErrDesc>
                                <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                            </ns25:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Type">
                            <ns25:Error_Type>
                                <xsl:value-of select="ns25:Error_Type"/>
                            </ns25:Error_Type>
                        </xsl:if>
                        <xsl:if test="ns25:Error_UserErrCode">
                            <ns25:Error_UserErrCode>
                                <xsl:value-of select="ns25:Error_UserErrCode"/>
                            </ns25:Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="ns25:Error_UserErrDesc">
                            <ns25:Error_UserErrDesc>
                                <xsl:value-of select="ns25:Error_UserErrDesc"/>
                            </ns25:Error_UserErrDesc>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Occurance_Time">
                            <ns25:Error_Occurance_Time>
                                <xsl:value-of select="ns25:Error_Occurance_Time"/>
                            </ns25:Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Additional_Desc1">
                            <ns25:Error_Additional_Desc1>
                                <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                            </ns25:Error_Additional_Desc1>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Additional_Desc2">
                            <ns25:Error_Additional_Desc2>
                                <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                            </ns25:Error_Additional_Desc2>
                        </xsl:if>
                    </ns25:ErrorResponse>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:choice>
            <xsd:element ref="pfx12:PaymentInboundOutput"/>
            <xsd:element ref="ns25:ErrorResponse"/>
        </xsd:choice>
    </pd:endType>
    <pd:endX>934</pd:endX>
    <pd:endY>361</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="ns25:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Call_FinancialTransactionWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>760</pd:x>
        <pd:y>101</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/ESI_BSCS_Call_FinancialTransactionWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns24:financialTransactionWriteRequest>
                    <ns24:inputAttributes>
                        <ns24:transactionRefnum>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                        </ns24:transactionRefnum>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value">
                            <ns24:csIdPub>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                            </ns24:csIdPub>
                        </xsl:if>
                        <ns24:useCaseCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/UseCaseCode"/>
                        </ns24:useCaseCode>
                        <ns24:amountCashPay>
                            <pfx9:amount>
                                <xsl:value-of select="if(string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount)>0)&#xA;then $Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount&#xA;else 0"/>
                            </pfx9:amount>
                            <pfx9:currency>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/Currency"/>
                            </pfx9:currency>
                        </ns24:amountCashPay>
                        <xsl:if test="string-length($Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Area)>0">
                            <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Area">
                                <ns24:billingAccountId>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Area"/>
                                </ns24:billingAccountId>
                            </xsl:if>
                        </xsl:if>
                    </ns24:inputAttributes>
                    <ns24:sessionChangeRequest>
                        <pfx13:values>
                            <pfx13:item>
                                <pfx13:key>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionKey"/>
                                </pfx13:key>
                                <pfx13:value>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionValue"/>
                                </pfx13:value>
                            </pfx13:item>
                        </pfx13:values>
                    </ns24:sessionChangeRequest>
                </ns24:financialTransactionWriteRequest>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ExtPaymentDetailsWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>924</pd:x>
        <pd:y>101</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Common/Payment/HelperProcess/ESI_BSCS_Call_ExtPaymentDetailsWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns27:extPaymentDetailsWriteRequest>
                    <ns27:inputAttributes>
                        <ns27:caxact>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                        </ns27:caxact>
                        <ns27:transactionRefnum>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                        </ns27:transactionRefnum>
                        <xsl:choose>
                            <xsl:when test="$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'&#xA;and&#xA;string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                <ns27:paymentAmount>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                </ns27:paymentAmount>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns27:paymentAmount>
                                    <xsl:value-of select="if(string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount)>0)&#xA;then $Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount&#xA;else 0"/>
                                </ns27:paymentAmount>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns27:payMethod>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:name"/>
                        </ns27:payMethod>
                        <xsl:choose>
                            <xsl:when test="$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                                <ns27:payAuthCode>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                                </ns27:payAuthCode>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns27:payAuthCode>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode"/>
                                </ns27:payAuthCode>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns27:channel>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentChannel"/>
                        </ns27:channel>
                        <ns27:user>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:UserName"/>
                        </ns27:user>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus)>0&#xA;and&#xA;$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus">
                                    <ns27:merchantId>
                                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                    </ns27:merchantId>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:MerchantID">
                                    <ns27:merchantId>
                                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:MerchantID"/>
                                    </ns27:merchantId>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:TerminalID">
                            <ns27:terminalId>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:TerminalID"/>
                            </ns27:terminalId>
                        </xsl:if>
                        <ns27:crcardno>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                        </ns27:crcardno>
                        <xsl:if test="string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate)>0">
                            <ns27:payDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate"/>
                            </ns27:payDate>
                        </xsl:if>
                        <ns27:sourceTransactionId>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:paymentReferenceNumber"/>
                        </ns27:sourceTransactionId>
                        <ns27:location>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description"/>
                        </ns27:location>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName">
                            <ns27:issuerBank>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName"/>
                            </ns27:issuerBank>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear">
                            <ns27:expiryDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear"/>
                            </ns27:expiryDate>
                        </xsl:if>
                        <ns27:remarks>
                            <xsl:value-of select="tib:render-xml($MapRemarksData/root)"/>
                        </ns27:remarks>
                    </ns27:inputAttributes>
                    <ns27:sessionChangeRequest>
                        <pfx13:values>
                            <pfx13:item>
                                <pfx13:key>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionKey"/>
                                </pfx13:key>
                                <pfx13:value>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionValue"/>
                                </pfx13:value>
                            </pfx13:item>
                        </pfx13:values>
                    </ns27:sessionChangeRequest>
                </ns27:extPaymentDetailsWriteRequest>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>931</pd:x>
        <pd:y>252</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($Start/root/pfx12:PaymentInboundInput)"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="if (string-length($Map-Error/ns25:ErrorResponse)>0)&#xA;then &#xA;tib:render-xml($Map-Error/ns25:ErrorResponse)&#xA;else&#xA;tib:render-xml($Map-Data/pfx12:PaymentInboundOutput)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;SecretValue&quot;"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="&quot;MaskedValue&quot;"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,6),'XXXXXX',tib:right($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($Start/root/StartTimeStamp))&#xA;then&#xA;$Start/root/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1241</pd:x>
        <pd:y>251</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx12:PaymentInboundOutput"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <pfx12:PaymentInboundOutput>
                <ns20:ZainCustomerPayment>
                    <ns21:Money>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Amount">
                            <ns21:amount>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Amount"/>
                            </ns21:amount>
                        </xsl:if>
                    </ns21:Money>
                    <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:MSISDN">
                        <ns21:conversionRate>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:MSISDN"/>
                        </ns21:conversionRate>
                    </xsl:if>
                    <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                        <ns20:TransactionID>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                        </ns20:TransactionID>
                    </xsl:if>
                    <xsl:if test="string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate)>0">
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate">
                            <ns20:paymentDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate"/>
                            </ns20:paymentDate>
                        </xsl:if>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:paymentReferenceNumber">
                        <ns21:paymentReferenceNumber>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:paymentReferenceNumber"/>
                        </ns21:paymentReferenceNumber>
                    </xsl:if>
                    <ns20:PaymentChannel>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentChannel"/>
                    </ns20:PaymentChannel>
                    <ns20:paymentStatus>
                        <xsl:value-of select="'Success'"/>
                    </ns20:paymentStatus>
                    <ns20:MerchantID>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description"/>
                    </ns20:MerchantID>
                </ns20:ZainCustomerPayment>
                <ns20:Params>
                    <ns20:Param>
                        <ns20:Name>
                            <xsl:value-of select="'ResponseDesc'"/>
                        </ns20:Name>
                        <ns20:Value>
                            <xsl:value-of select="'Success'"/>
                        </ns20:Value>
                    </ns20:Param>
                    <ns20:Param>
                        <ns20:Name>
                            <xsl:value-of select="'ResponseCode'"/>
                        </ns20:Name>
                        <ns20:Value>
                            <xsl:value-of select="'0'"/>
                        </ns20:Value>
                    </ns20:Param>
                </ns20:Params>
            </pfx12:PaymentInboundOutput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>762</pd:x>
        <pd:y>253</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx12:PaymentInboundOutput"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <ns25:ErrorResponse>
                <ns25:Error_SourceSystem>
                    <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                </ns25:Error_SourceSystem>
                <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionRefnum">
                    <ns25:Error_SourceErrCode>
                        <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionRefnum"/>
                    </ns25:Error_SourceErrCode>
                </xsl:if>
                <ns25:Error_SourceErrDesc>
                    <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then substring-after($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|')&#xA;else substring-after($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,':')"/>
                </ns25:Error_SourceErrDesc>
                <ns25:Error_Type>
                    <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'Bussiness'&#xA;else 'Technical'"/>
                </ns25:Error_Type>
                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:MSISDN">
                    <ns25:Error_Additional_Desc1>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:MSISDN"/>
                    </ns25:Error_Additional_Desc1>
                </xsl:if>
                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Amount">
                    <ns25:Error_Additional_Desc2>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:Amount"/>
                    </ns25:Error_Additional_Desc2>
                </xsl:if>
            </ns25:ErrorResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendToLocalErrorQueue">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>1269</pd:x>
        <pd:y>103</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Common/Payments/EXT_Payment_Failure_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                    <CorrelationId>
                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                    </CorrelationId>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($Map-Error-Payload/ns26:ExternalPaymentPosting_Input)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error-Payload">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1107</pd:x>
        <pd:y>103</pd:y>
        <config>
            <element ref="ns26:ExternalPaymentPosting_Input"/>
        </config>
        <pd:inputBindings>
            <ns26:ExternalPaymentPosting_Input>
                <pfx14:ListOfCbio2paymenttransactionpostingio>
                    <pfx14:Payments>
                        <pfx14:AccountNumber>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardNumber"/>
                        </pfx14:AccountNumber>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode">
                            <pfx14:AuthorizationCode>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:authorizationCode"/>
                            </pfx14:AuthorizationCode>
                        </xsl:if>
                        <pfx14:AuthorizeCredit>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit"/>
                        </pfx14:AuthorizeCredit>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentChannel">
                            <pfx14:Channel>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentChannel"/>
                            </pfx14:Channel>
                        </xsl:if>
                        <pfx14:CustomerId>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns21:ZainIdentifiers/ns21:customerId/ns21:value"/>
                        </pfx14:CustomerId>
                        <pfx14:ExtTransactionRef>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:paymentReferenceNumber"/>
                        </pfx14:ExtTransactionRef>
                        <pfx14:MSISDN>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:Subscriber[1]/pfx12:MSISDN"/>
                        </pfx14:MSISDN>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus)>0&#xA;and&#xA;$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                                <pfx14:MerchantId>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                                </pfx14:MerchantId>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx14:MerchantId>
                                    <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:MerchantID"/>
                                </pfx14:MerchantId>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx14:AcquireResCode>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                        </pfx14:AcquireResCode>
                        <pfx14:MerchantAmount>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                        </pfx14:MerchantAmount>
                        <pfx14:AuthorizeID>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                        </pfx14:AuthorizeID>
                        <pfx14:MerchantCardType>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                        </pfx14:MerchantCardType>
                        <pfx14:OrderInfo>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                        </pfx14:OrderInfo>
                        <pfx14:MerchantReceiptNo>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                        </pfx14:MerchantReceiptNo>
                        <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                            <pfx14:MerchTxnRef>
                                <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                            </pfx14:MerchTxnRef>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate">
                            <pfx14:CBiO2PaymentDateTime>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate"/>
                            </pfx14:CBiO2PaymentDateTime>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:UserName">
                            <pfx14:UserName>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/pfx12:UserName"/>
                            </pfx14:UserName>
                        </xsl:if>
                        <pfx14:TerminalId>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:TerminalID"/>
                        </pfx14:TerminalId>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description">
                            <pfx14:CBiO2WorkArea>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:description"/>
                            </pfx14:CBiO2WorkArea>
                        </xsl:if>
                        <pfx14:CardHolder>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:nameOnCard"/>
                        </pfx14:CardHolder>
                        <pfx14:ExpirationMonth>
                            <xsl:value-of select="substring($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear,1,2)"/>
                        </pfx14:ExpirationMonth>
                        <pfx14:ExpirationYear>
                            <xsl:value-of select="substring($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationYear,3,4)"/>
                        </pfx14:ExpirationYear>
                        <xsl:variable name="var" select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:name"/>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName">
                            <pfx14:IssuingBankName>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankName"/>
                            </pfx14:IssuingBankName>
                        </xsl:if>
                        <pfx14:PaymentMethod>
                            <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:name"/>
                        </pfx14:PaymentMethod>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardType">
                            <pfx14:CCCardType>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:creditCardType"/>
                            </pfx14:CCCardType>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'&#xA;and&#xA;string-length($Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber)>0">
                                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                                    <pfx14:TransactionAmount>
                                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                                    </pfx14:TransactionAmount>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount">
                                    <pfx14:TransactionAmount>
                                        <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns21:Money/ns21:amount"/>
                                    </pfx14:TransactionAmount>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx14:ChequeNum>
                            <xsl:value-of select="tib:render-xml($MapRemarksData/root)"/>
                        </pfx14:ChequeNum>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate">
                            <pfx14:SettlementDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </pfx14:SettlementDate>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference">
                            <pfx14:ShoppingTranRef>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </pfx14:ShoppingTranRef>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus">
                            <pfx14:AuthorizationStatus>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </pfx14:AuthorizationStatus>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID">
                            <pfx14:CRMReceiptNo>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ID"/>
                            </pfx14:CRMReceiptNo>
                        </xsl:if>
                    </pfx14:Payments>
                </pfx14:ListOfCbio2paymenttransactionpostingio>
            </ns26:ExternalPaymentPosting_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapRemarksData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>589</pd:x>
        <pd:y>101</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx16:ChequeDetails" minOccurs="0"/>
                            <xsd:element ref="pfx17:AuthoriseDetails" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod/ns20:name=$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/Payments/ChequeModPay&#xA;and&#xA;$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='N'">
                    <pfx16:ChequeDetails>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:chequeNumber">
                            <pfx16:chequeNumber>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:chequeNumber"/>
                            </pfx16:chequeNumber>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:bankName">
                            <pfx16:bankName>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns21:ChequeDetails/ns21:bankName"/>
                            </pfx16:bankName>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankBranchName">
                            <pfx16:BankBranchName>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:BankBranchName"/>
                            </pfx16:BankBranchName>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:accountNumber">
                            <pfx16:accountNumber>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:ZainBankPM/ns20:accountNumber"/>
                            </pfx16:accountNumber>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate">
                            <pfx16:paymentDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentDate"/>
                            </pfx16:paymentDate>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:expirationDate">
                            <pfx16:expirationDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:expirationDate"/>
                            </pfx16:expirationDate>
                        </xsl:if>
                    </pfx16:ChequeDetails>
                </xsl:if>
                <xsl:if test="$Start/root/pfx12:PaymentInboundInput/pfx12:AuthorizeCredit='Y'">
                    <pfx17:AuthoriseDetails>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus">
                            <pfx17:MerchantId>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:paymentStatus"/>
                            </pfx17:MerchantId>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber">
                            <pfx17:Amount>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ReceiptNumber"/>
                            </pfx17:Amount>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth">
                            <pfx17:TransactionReference>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:ExpirationMonth"/>
                            </pfx17:TransactionReference>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference">
                            <pfx17:ShoppingTransactionReference>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ShoppingTransactionReference"/>
                            </pfx17:ShoppingTransactionReference>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName">
                            <pfx17:CardType>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CreditCardCompanyName"/>
                            </pfx17:CardType>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo">
                            <pfx17:OrderInfo>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CashPM/ns20:cashierInfo"/>
                            </pfx17:OrderInfo>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus">
                            <pfx17:AuthorizationStatus>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AuthorizationStatus"/>
                            </pfx17:AuthorizationStatus>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber">
                            <pfx17:ReceiptNumber>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:ReceiptNumber"/>
                            </pfx17:ReceiptNumber>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV">
                            <pfx17:AuthorizationID>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:PaymentMethod[1]/ns20:CreditCardPM/ns20:CVV"/>
                            </pfx17:AuthorizationID>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode">
                            <pfx17:AcquirerResponseCode>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:AcquirerResponseCode"/>
                            </pfx17:AcquirerResponseCode>
                        </xsl:if>
                        <xsl:if test="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate">
                            <pfx17:SettlementDate>
                                <xsl:value-of select="$Start/root/pfx12:PaymentInboundInput/ns20:ZainCustomerPayment/ns20:SettlementDate"/>
                            </pfx17:SettlementDate>
                        </xsl:if>
                    </pfx17:AuthoriseDetails>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response='External Payment Data Inserted Successfully'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map-Error-Payload</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error-Payload</pd:from>
        <pd:to>SendToLocalErrorQueue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendToLocalErrorQueue</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>MapRemarksData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRemarksData</pd:from>
        <pd:to>Call_FinancialTransactionWrite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Call_ExtPaymentDetailsWrite</pd:to>
        <pd:xpathDescription>FTWSuccess</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>FTWError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId)=0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>