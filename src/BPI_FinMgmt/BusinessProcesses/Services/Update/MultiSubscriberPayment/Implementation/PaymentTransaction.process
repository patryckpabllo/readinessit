<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx13="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" xmlns:ns25="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx12="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_3_CBIO_2_2/financialtransactionwrite" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:format="java://MSISDNFormatter" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/MultiSubscriberPayment.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <pd:name>BusinessProcesses/Services/Update/MultiSubscriberPayment/Implementation/PaymentTransaction.process</pd:name>
    <pd:startName>PaymentTransactionReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="PaymentTransactionReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>61</pd:x>
        <pd:y>135</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>%%BusinessProcesses/CommonSettings/JMSReceiver/MaxSessions%%</maxSessions>
                <destination>%%BusinessProcesses/Services/Update/MultiSubscriberPayment/BPI_Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1399</pd:endX>
    <pd:endY>123</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>182</pd:x>
        <pd:y>135</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx13:MultiSubsPaymentReq"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1279</pd:x>
        <pd:y>137</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>PaymentTransactionReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($MapRes/*)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>59</pd:x>
        <pd:y>274</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>180</pd:x>
        <pd:y>280</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>290</pd:x>
        <pd:y>137</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="string-length($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:when test="string-length($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:BillingAccountID)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:BillingAccountID"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:CRMCustomerID"/>
                            </ns22:InterfaceID>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($PaymentTransactionReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum,6),'XXXXXX',tib:right($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1215</pd:x>
        <pd:y>258</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN">
                        <ns22:InterfaceID>
                            <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN"/>
                        </ns22:InterfaceID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($MapRes/*)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum, 7,6),'XXXX')"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>142</pd:x>
        <pd:y>481</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>280</pd:x>
        <pd:y>484</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>408</pd:x>
        <pd:y>486</pd:y>
        <config>
            <element ref="ns25:ErrorResponse"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="string-length($Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse)>0">
                    <xsl:copy-of select="$Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse"/>
                </xsl:when>
                <xsl:otherwise>
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="'Tibco'"/>
                        </ns25:Error_SourceSystem>
                        <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                            <ns25:Error_SourceErrCode>
                                <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                            </ns25:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="$_error/ns2:ErrorReport/Msg">
                            <ns25:Error_SourceErrDesc>
                                <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                            </ns25:Error_SourceErrDesc>
                        </xsl:if>
                        <ns25:Error_Type>
                            <xsl:value-of select="'Technical'"/>
                        </ns25:Error_Type>
                    </ns25:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>712</pd:x>
        <pd:y>482</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN">
                        <ns22:InterfaceID>
                            <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[1]/pfx13:MSISDN"/>
                        </ns22:InterfaceID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns25:ErrorResponse)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum, 7,6),'XXXX')"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails/pfx13:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>583</pd:x>
        <pd:y>605</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>566</pd:x>
        <pd:y>483</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>PaymentTransactionReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/ns25:ErrorResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>382</pd:x>
        <pd:y>49</pd:y>
        <pd:width>647</pd:width>
        <pd:height>246</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails</pd:over>
            <pd:iterationElementSlot>Payment</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>PaymentRes</pd:outSlot>
            <pd:activityOutputName>Map Data</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SubscriberPayment</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_MULTI_MSISDN_BA_Read</pd:from>
            <pd:to>SubscriberPayment</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Call_MULTI_MSISDN_BA_Read</pd:to>
            <pd:xpathDescription>NOBAID</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>SubscriberPayment</pd:to>
            <pd:xpathDescription>BAorInvoiceIDExists</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>(string-length($Payment/pfx13:PaymentDetails/pfx13:BillingAccountID)&gt;0)
or
(string-length($Payment/pfx13:PaymentDetails/pfx13:documentId)&gt;0)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_MULTI_MSISDN_BA_Read</pd:from>
            <pd:to>ErrorBARead</pd:to>
            <pd:xpathDescription>ErrorBA</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>string-length($Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse/ns25:Error_SourceErrCode)&gt;0</pd:xpath>
        </pd:transition>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>853</pd:x>
            <pd:y>135</pd:y>
            <config>
                <element>
                    <xsd:choice>
                        <xsd:element ref="pfx13:MultiSubsPaymentRes"/>
                        <xsd:element ref="ns25:ErrorResponse"/>
                    </xsd:choice>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:choose>
                    <xsl:when test="exists($SubscriberPayment/pfx13:MultiSubsPaymentRes)">
                        <xsl:for-each select="$SubscriberPayment/pfx13:MultiSubsPaymentRes">
                            <pfx13:MultiSubsPaymentRes>
                                <xsl:if test="pfx13:TransactionStatus">
                                    <pfx13:TransactionStatus>
                                        <xsl:value-of select="pfx13:TransactionStatus"/>
                                    </pfx13:TransactionStatus>
                                </xsl:if>
                                <xsl:if test="pfx13:transactionId">
                                    <pfx13:transactionId>
                                        <xsl:value-of select="pfx13:transactionId"/>
                                    </pfx13:transactionId>
                                </xsl:if>
                                <xsl:if test="pfx13:CorrelationID">
                                    <pfx13:CorrelationID>
                                        <xsl:value-of select="pfx13:CorrelationID"/>
                                    </pfx13:CorrelationID>
                                </xsl:if>
                                <xsl:if test="pfx13:ResponseCode">
                                    <pfx13:ResponseCode>
                                        <xsl:value-of select="pfx13:ResponseCode"/>
                                    </pfx13:ResponseCode>
                                </xsl:if>
                                <xsl:if test="pfx13:ResponseDesc">
                                    <pfx13:ResponseDesc>
                                        <xsl:value-of select="pfx13:ResponseDesc"/>
                                    </pfx13:ResponseDesc>
                                </xsl:if>
                                <xsl:for-each select="pfx13:SubscribersResponse">
                                    <pfx13:SubscribersResponse>
                                        <xsl:if test="pfx13:MSISDN">
                                            <pfx13:MSISDN>
                                                <xsl:value-of select="pfx13:MSISDN"/>
                                            </pfx13:MSISDN>
                                        </xsl:if>
                                        <xsl:if test="pfx13:PaymentReferenceId">
                                            <pfx13:PaymentReferenceId>
                                                <xsl:value-of select="pfx13:PaymentReferenceId"/>
                                            </pfx13:PaymentReferenceId>
                                        </xsl:if>
                                        <xsl:if test="pfx13:ResponseCode">
                                            <pfx13:ResponseCode>
                                                <xsl:value-of select="pfx13:ResponseCode"/>
                                            </pfx13:ResponseCode>
                                        </xsl:if>
                                        <xsl:if test="pfx13:ResponseDesc">
                                            <pfx13:ResponseDesc>
                                                <xsl:value-of select="pfx13:ResponseDesc"/>
                                            </pfx13:ResponseDesc>
                                        </xsl:if>
                                        <xsl:for-each select="pfx13:Error">
                                            <pfx13:Error>
                                                <xsl:if test="pfx13:Error_SourceSystem">
                                                    <pfx13:Error_SourceSystem>
                                                        <xsl:value-of select="pfx13:Error_SourceSystem"/>
                                                    </pfx13:Error_SourceSystem>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_SourceErrCode">
                                                    <pfx13:Error_SourceErrCode>
                                                        <xsl:value-of select="pfx13:Error_SourceErrCode"/>
                                                    </pfx13:Error_SourceErrCode>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_SourceErrDesc">
                                                    <pfx13:Error_SourceErrDesc>
                                                        <xsl:value-of select="pfx13:Error_SourceErrDesc"/>
                                                    </pfx13:Error_SourceErrDesc>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_Type">
                                                    <pfx13:Error_Type>
                                                        <xsl:value-of select="pfx13:Error_Type"/>
                                                    </pfx13:Error_Type>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_UserErrCode">
                                                    <pfx13:Error_UserErrCode>
                                                        <xsl:value-of select="pfx13:Error_UserErrCode"/>
                                                    </pfx13:Error_UserErrCode>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_UserErrDesc">
                                                    <pfx13:Error_UserErrDesc>
                                                        <xsl:value-of select="pfx13:Error_UserErrDesc"/>
                                                    </pfx13:Error_UserErrDesc>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_Occurance_Time">
                                                    <pfx13:Error_Occurance_Time>
                                                        <xsl:value-of select="pfx13:Error_Occurance_Time"/>
                                                    </pfx13:Error_Occurance_Time>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_Additional_Desc1">
                                                    <pfx13:Error_Additional_Desc1>
                                                        <xsl:value-of select="pfx13:Error_Additional_Desc1"/>
                                                    </pfx13:Error_Additional_Desc1>
                                                </xsl:if>
                                                <xsl:if test="pfx13:Error_Additional_Desc2">
                                                    <pfx13:Error_Additional_Desc2>
                                                        <xsl:value-of select="pfx13:Error_Additional_Desc2"/>
                                                    </pfx13:Error_Additional_Desc2>
                                                </xsl:if>
                                            </pfx13:Error>
                                        </xsl:for-each>
                                    </pfx13:SubscribersResponse>
                                </xsl:for-each>
                                <xsl:for-each select="pfx13:Error">
                                    <pfx13:Error>
                                        <xsl:if test="pfx13:Error_SourceSystem">
                                            <pfx13:Error_SourceSystem>
                                                <xsl:value-of select="pfx13:Error_SourceSystem"/>
                                            </pfx13:Error_SourceSystem>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_SourceErrCode">
                                            <pfx13:Error_SourceErrCode>
                                                <xsl:value-of select="pfx13:Error_SourceErrCode"/>
                                            </pfx13:Error_SourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_SourceErrDesc">
                                            <pfx13:Error_SourceErrDesc>
                                                <xsl:value-of select="pfx13:Error_SourceErrDesc"/>
                                            </pfx13:Error_SourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Type">
                                            <pfx13:Error_Type>
                                                <xsl:value-of select="pfx13:Error_Type"/>
                                            </pfx13:Error_Type>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_UserErrCode">
                                            <pfx13:Error_UserErrCode>
                                                <xsl:value-of select="pfx13:Error_UserErrCode"/>
                                            </pfx13:Error_UserErrCode>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_UserErrDesc">
                                            <pfx13:Error_UserErrDesc>
                                                <xsl:value-of select="pfx13:Error_UserErrDesc"/>
                                            </pfx13:Error_UserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Occurance_Time">
                                            <pfx13:Error_Occurance_Time>
                                                <xsl:value-of select="pfx13:Error_Occurance_Time"/>
                                            </pfx13:Error_Occurance_Time>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Additional_Desc1">
                                            <pfx13:Error_Additional_Desc1>
                                                <xsl:value-of select="pfx13:Error_Additional_Desc1"/>
                                            </pfx13:Error_Additional_Desc1>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Additional_Desc2">
                                            <pfx13:Error_Additional_Desc2>
                                                <xsl:value-of select="pfx13:Error_Additional_Desc2"/>
                                            </pfx13:Error_Additional_Desc2>
                                        </xsl:if>
                                    </pfx13:Error>
                                </xsl:for-each>
                            </pfx13:MultiSubsPaymentRes>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$SubscriberPayment/ns25:ErrorResponse">
                            <ns25:ErrorResponse>
                                <xsl:if test="ns25:Error_SourceSystem">
                                    <ns25:Error_SourceSystem>
                                        <xsl:value-of select="ns25:Error_SourceSystem"/>
                                    </ns25:Error_SourceSystem>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrCode">
                                    <ns25:Error_SourceErrCode>
                                        <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                    </ns25:Error_SourceErrCode>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrDesc">
                                    <ns25:Error_SourceErrDesc>
                                        <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                    </ns25:Error_SourceErrDesc>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Type">
                                    <ns25:Error_Type>
                                        <xsl:value-of select="ns25:Error_Type"/>
                                    </ns25:Error_Type>
                                </xsl:if>
                                <xsl:if test="ns25:Error_UserErrCode">
                                    <ns25:Error_UserErrCode>
                                        <xsl:value-of select="ns25:Error_UserErrCode"/>
                                    </ns25:Error_UserErrCode>
                                </xsl:if>
                                <xsl:if test="ns25:Error_UserErrDesc">
                                    <ns25:Error_UserErrDesc>
                                        <xsl:value-of select="ns25:Error_UserErrDesc"/>
                                    </ns25:Error_UserErrDesc>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Occurance_Time">
                                    <ns25:Error_Occurance_Time>
                                        <xsl:value-of select="ns25:Error_Occurance_Time"/>
                                    </ns25:Error_Occurance_Time>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Additional_Desc1">
                                    <ns25:Error_Additional_Desc1>
                                        <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                                    </ns25:Error_Additional_Desc1>
                                </xsl:if>
                                <xsl:if test="ns25:Error_Additional_Desc2">
                                    <ns25:Error_Additional_Desc2>
                                        <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                                    </ns25:Error_Additional_Desc2>
                                </xsl:if>
                            </ns25:ErrorResponse>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SubscriberPayment">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>696</pd:x>
            <pd:y>128</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Update/MultiSubscriberPayment/Implementation/PaymentLoop.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <pfx13:MultiSubsPaymentReq>
                        <xsl:copy-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:Header"/>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentType">
                            <pfx13:PaymentType>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentType"/>
                            </pfx13:PaymentType>
                        </xsl:if>
                        <pfx13:totalAmount>
                            <pfx13:amount>
                                <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)>0)&#xA;then&#xA;number($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)&#xA;else &#xA;$Payment/pfx13:PaymentDetails/pfx13:amount/pfx13:amount"/>
                            </pfx13:amount>
                        </pfx13:totalAmount>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:paymentMethod">
                            <pfx13:paymentMethod>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:paymentMethod"/>
                            </pfx13:paymentMethod>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:documentId">
                            <pfx13:documentId>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:documentId"/>
                            </pfx13:documentId>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:CRMCustomerID">
                            <pfx13:CRMCustomerID>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:CRMCustomerID"/>
                            </pfx13:CRMCustomerID>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:customerCategory">
                            <pfx13:customerCategory>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:customerCategory"/>
                            </pfx13:customerCategory>
                        </xsl:if>
                        <xsl:copy-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:ChannelDetails"/>
                        <pfx13:PaymentDetails>
                            <xsl:if test="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/MSISDN)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/MSISDN&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:MSISDN">
                                <pfx13:MSISDN>
                                    <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/MSISDN)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/MSISDN&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:MSISDN"/>
                                </pfx13:MSISDN>
                            </xsl:if>
                            <xsl:if test="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:BillingAccountID">
                                <pfx13:BillingAccountID>
                                    <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:BillingAccountID"/>
                                </pfx13:BillingAccountID>
                            </xsl:if>
                            <pfx13:amount>
                                <pfx13:amount>
                                    <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)>0)&#xA;then&#xA;number($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)&#xA;else &#xA;$Payment/pfx13:PaymentDetails/pfx13:amount/pfx13:amount"/>
                                </pfx13:amount>
                            </pfx13:amount>
                            <xsl:if test="$Payment/pfx13:PaymentDetails/pfx13:documentId">
                                <pfx13:documentId>
                                    <xsl:value-of select="$Payment/pfx13:PaymentDetails/pfx13:documentId"/>
                                </pfx13:documentId>
                            </xsl:if>
                        </pfx13:PaymentDetails>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:reasonCode">
                            <pfx13:reasonCode>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:reasonCode"/>
                            </pfx13:reasonCode>
                        </xsl:if>
                        <pfx13:References>
                            <pfx13:items>
                                <pfx13:Name>
                                    <xsl:value-of select="'BAID'"/>
                                </pfx13:Name>
                                <xsl:if test="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:BillingAccountID">
                                    <pfx13:Value>
                                        <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID)>0)&#xA;then&#xA;$Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/BAID&#xA;else&#xA;$Payment/pfx13:PaymentDetails/pfx13:BillingAccountID"/>
                                    </pfx13:Value>
                                </xsl:if>
                            </pfx13:items>
                            <pfx13:items>
                                <pfx13:Name>
                                    <xsl:value-of select="'Amount'"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="if(string-length($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)>0)&#xA;then&#xA;number($Call_MULTI_MSISDN_BA_Read/group/Res/MSISDNList[1]/Amount)&#xA;else &#xA;$Payment/pfx13:PaymentDetails/pfx13:amount/pfx13:amount"/>
                                </pfx13:Value>
                            </pfx13:items>
                            <pfx13:items>
                                <pfx13:Name>
                                    <xsl:value-of select="'DocumentId'"/>
                                </pfx13:Name>
                                <pfx13:Value>
                                    <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:PaymentDetails[$i]/pfx13:documentId"/>
                                </pfx13:Value>
                            </pfx13:items>
                        </pfx13:References>
                    </pfx13:MultiSubsPaymentReq>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TransactionID>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TransactionID>
                    </xsl:if>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_MULTI_MSISDN_BA_Read">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>596</pd:x>
            <pd:y>234</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Update/MultiSubscriberPayment/HelperProcess/ESI_BSCS_MULTI_MSISDN_BA_Read.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <BARead>
                        <xsl:for-each select="$Payment/pfx13:PaymentDetails">
                            <group>
                                <xsl:if test="current()/pfx13:MSISDN">
                                    <MSISDN>
                                        <xsl:value-of select="current()/pfx13:MSISDN"/>
                                    </MSISDN>
                                </xsl:if>
                                <xsl:if test="not((pfx13:amount/pfx13:amount/@xsi:nil=(&quot;true&quot;)) or (pfx13:amount/pfx13:amount/@xsi:nil=(&quot;1&quot;)))">
                                    <Amount>
                                        <xsl:value-of select="pfx13:amount/pfx13:amount"/>
                                    </Amount>
                                </xsl:if>
                            </group>
                        </xsl:for-each>
                    </BARead>
                    <xsl:if test="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <StartTimeStamp>
                        <xsl:value-of select="if(exists($PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $PaymentTransactionReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                    </StartTimeStamp>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>466</pd:x>
            <pd:y>178</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="ErrorBARead">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>813</pd:x>
            <pd:y>230</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="$Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse/ns25:Error_SourceErrDesc">
                        <message>
                            <xsl:value-of select="$Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse/ns25:Error_SourceErrDesc"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="$Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse/ns25:Error_SourceErrCode">
                        <messageCode>
                            <xsl:value-of select="$Call_MULTI_MSISDN_BA_Read/group/ns25:ErrorResponse/ns25:Error_SourceErrCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="MapRes">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1137</pd:x>
        <pd:y>129</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx13:MultiSubsPaymentRes"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/ns25:ErrorResponse)=0">
                    <pfx13:MultiSubsPaymentRes>
                        <pfx13:TransactionStatus>
                            <xsl:value-of select="'Success'"/>
                        </pfx13:TransactionStatus>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:Header/pfx13:ExternalTransactionID">
                            <pfx13:transactionId>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:Header/pfx13:ExternalTransactionID"/>
                            </pfx13:transactionId>
                        </xsl:if>
                        <pfx13:ResponseCode>
                            <xsl:value-of select="'0'"/>
                        </pfx13:ResponseCode>
                        <pfx13:ResponseDesc>
                            <xsl:value-of select="'Success'"/>
                        </pfx13:ResponseDesc>
                        <xsl:for-each select="$PaymentRes/AccumulatedOutput/pfx13:MultiSubsPaymentRes/pfx13:SubscribersResponse">
                            <pfx13:SubscribersResponse>
                                <xsl:if test="pfx13:MSISDN">
                                    <pfx13:MSISDN>
                                        <xsl:value-of select="pfx13:MSISDN"/>
                                    </pfx13:MSISDN>
                                </xsl:if>
                                <xsl:if test="pfx13:PaymentReferenceId">
                                    <pfx13:PaymentReferenceId>
                                        <xsl:value-of select="pfx13:PaymentReferenceId"/>
                                    </pfx13:PaymentReferenceId>
                                </xsl:if>
                                <xsl:if test="pfx13:ResponseCode">
                                    <pfx13:ResponseCode>
                                        <xsl:value-of select="pfx13:ResponseCode"/>
                                    </pfx13:ResponseCode>
                                </xsl:if>
                                <xsl:if test="pfx13:ResponseDesc">
                                    <pfx13:ResponseDesc>
                                        <xsl:value-of select="pfx13:ResponseDesc"/>
                                    </pfx13:ResponseDesc>
                                </xsl:if>
                                <xsl:for-each select="pfx13:Error">
                                    <pfx13:Error>
                                        <xsl:if test="pfx13:Error_SourceSystem">
                                            <pfx13:Error_SourceSystem>
                                                <xsl:value-of select="pfx13:Error_SourceSystem"/>
                                            </pfx13:Error_SourceSystem>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_SourceErrCode">
                                            <pfx13:Error_SourceErrCode>
                                                <xsl:value-of select="pfx13:Error_SourceErrCode"/>
                                            </pfx13:Error_SourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_SourceErrDesc">
                                            <pfx13:Error_SourceErrDesc>
                                                <xsl:value-of select="pfx13:Error_SourceErrDesc"/>
                                            </pfx13:Error_SourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Type">
                                            <pfx13:Error_Type>
                                                <xsl:value-of select="pfx13:Error_Type"/>
                                            </pfx13:Error_Type>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_UserErrCode">
                                            <pfx13:Error_UserErrCode>
                                                <xsl:value-of select="pfx13:Error_UserErrCode"/>
                                            </pfx13:Error_UserErrCode>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_UserErrDesc">
                                            <pfx13:Error_UserErrDesc>
                                                <xsl:value-of select="pfx13:Error_UserErrDesc"/>
                                            </pfx13:Error_UserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Occurance_Time">
                                            <pfx13:Error_Occurance_Time>
                                                <xsl:value-of select="pfx13:Error_Occurance_Time"/>
                                            </pfx13:Error_Occurance_Time>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Additional_Desc1">
                                            <pfx13:Error_Additional_Desc1>
                                                <xsl:value-of select="pfx13:Error_Additional_Desc1"/>
                                            </pfx13:Error_Additional_Desc1>
                                        </xsl:if>
                                        <xsl:if test="pfx13:Error_Additional_Desc2">
                                            <pfx13:Error_Additional_Desc2>
                                                <xsl:value-of select="pfx13:Error_Additional_Desc2"/>
                                            </pfx13:Error_Additional_Desc2>
                                        </xsl:if>
                                    </pfx13:Error>
                                </xsl:for-each>
                            </pfx13:SubscribersResponse>
                        </xsl:for-each>
                    </pfx13:MultiSubsPaymentRes>
                </xsl:when>
                <xsl:when test="count($PaymentRes/AccumulatedOutput/pfx13:MultiSubsPaymentRes)=0">
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="'BSCS'"/>
                        </ns25:Error_SourceSystem>
                        <ns25:Error_SourceErrCode>
                            <xsl:value-of select="'1'"/>
                        </ns25:Error_SourceErrCode>
                        <ns25:Error_SourceErrDesc>
                            <xsl:value-of select="'Failure'"/>
                        </ns25:Error_SourceErrDesc>
                        <ns25:Error_Type>
                            <xsl:value-of select="'Bussiness'"/>
                        </ns25:Error_Type>
                    </ns25:ErrorResponse>
                </xsl:when>
                <xsl:otherwise>
                    <pfx13:MultiSubsPaymentRes>
                        <pfx13:TransactionStatus>
                            <xsl:value-of select="'Partial Success'"/>
                        </pfx13:TransactionStatus>
                        <xsl:if test="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:Header/pfx13:ExternalTransactionID">
                            <pfx13:transactionId>
                                <xsl:value-of select="$Parse-XML/pfx13:MultiSubsPaymentReq/pfx13:Header/pfx13:ExternalTransactionID"/>
                            </pfx13:transactionId>
                        </xsl:if>
                        <xsl:copy-of select="$PaymentRes/AccumulatedOutput/pfx13:MultiSubsPaymentRes/pfx13:SubscribersResponse"/>
                        <xsl:for-each select="$PaymentRes/AccumulatedOutput/ns25:ErrorResponse">
                            <pfx13:SubscribersResponse>
                                <xsl:if test="ns25:Error_Additional_Desc1">
                                    <pfx13:MSISDN>
                                        <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                                    </pfx13:MSISDN>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrCode">
                                    <pfx13:ResponseCode>
                                        <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                    </pfx13:ResponseCode>
                                </xsl:if>
                                <xsl:if test="ns25:Error_SourceErrDesc">
                                    <pfx13:ResponseDesc>
                                        <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                    </pfx13:ResponseDesc>
                                </xsl:if>
                                <xsl:for-each select=".">
                                    <pfx13:Error>
                                        <xsl:if test="ns25:Error_SourceSystem">
                                            <pfx13:Error_SourceSystem>
                                                <xsl:value-of select="ns25:Error_SourceSystem"/>
                                            </pfx13:Error_SourceSystem>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_SourceErrCode">
                                            <pfx13:Error_SourceErrCode>
                                                <xsl:value-of select="ns25:Error_SourceErrCode"/>
                                            </pfx13:Error_SourceErrCode>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_SourceErrDesc">
                                            <pfx13:Error_SourceErrDesc>
                                                <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                                            </pfx13:Error_SourceErrDesc>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_Type">
                                            <pfx13:Error_Type>
                                                <xsl:value-of select="ns25:Error_Type"/>
                                            </pfx13:Error_Type>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_UserErrCode">
                                            <pfx13:Error_UserErrCode>
                                                <xsl:value-of select="ns25:Error_UserErrCode"/>
                                            </pfx13:Error_UserErrCode>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_UserErrDesc">
                                            <pfx13:Error_UserErrDesc>
                                                <xsl:value-of select="ns25:Error_UserErrDesc"/>
                                            </pfx13:Error_UserErrDesc>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_Occurance_Time">
                                            <pfx13:Error_Occurance_Time>
                                                <xsl:value-of select="ns25:Error_Occurance_Time"/>
                                            </pfx13:Error_Occurance_Time>
                                        </xsl:if>
                                        <xsl:if test="ns25:Error_Additional_Desc2">
                                            <pfx13:Error_Additional_Desc2>
                                                <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                                            </pfx13:Error_Additional_Desc2>
                                        </xsl:if>
                                    </pfx13:Error>
                                </xsl:for-each>
                            </pfx13:SubscribersResponse>
                        </xsl:for-each>
                    </pfx13:MultiSubsPaymentRes>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>408</pd:x>
        <pd:y>376</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>PaymentTransactionReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>PaymentTransactionReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>MapRes</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapRes</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>