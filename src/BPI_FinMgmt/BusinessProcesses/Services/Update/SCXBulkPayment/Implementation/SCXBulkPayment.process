<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns25="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx12="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:ns26="http://siebel.com/CustomUI" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:ns27="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns21="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:pfx18="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" xmlns:ns20="http://ericsson.com/services/ws_CIL_3_CBIO_2_2/financialtransactionwrite" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/MultiSubscriberPayment.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalPaymentPostingWS.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Update/SCXBulkPayment/Implementation/SCXBulkPayment.process</pd:name>
    <pd:startName>SCXBulkPaymentReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SCXBulkPaymentReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>63</pd:x>
        <pd:y>124</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>%%BusinessProcesses/CommonSettings/JMSReceiver/MaxSessions%%</maxSessions>
                <destination>%%BusinessProcesses/Services/Update/SCXBulkPayment/BPIQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1068</pd:endX>
    <pd:endY>286</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>181</pd:x>
        <pd:y>124</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx8:PaymentTransactionRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_FinancialTransactionWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>445</pd:x>
        <pd:y>125</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/SCXBulkPayment/HelperProcess/ESI_BSCS_Call_FinancialTransactionWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns21:financialTransactionWriteRequest>
                    <ns21:inputAttributes>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId">
                            <ns21:transactionRefnum>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId"/>
                            </ns21:transactionRefnum>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:transactionID">
                            <ns21:secTransactionId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:transactionID"/>
                            </ns21:secTransactionId>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentType">
                            <ns21:useCaseCode>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentType"/>
                            </ns21:useCaseCode>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks">
                            <ns21:handlingReasonPub>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks"/>
                            </ns21:handlingReasonPub>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:paymentMethod">
                            <ns21:payMethodIdPub>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:paymentMethod"/>
                            </ns21:payMethodIdPub>
                        </xsl:if>
                        <xsl:for-each select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount">
                            <ns21:amountCashPay>
                                <pfx9:amount>
                                    <xsl:value-of select="pfx8:amount"/>
                                </pfx9:amount>
                                <pfx9:currency>
                                    <xsl:value-of select="if(string-length(pfx8:currency)>0)&#xA;then current()/pfx8:currency&#xA;else $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/defaultCurrencyCode"/>
                                </pfx9:currency>
                            </ns21:amountCashPay>
                        </xsl:for-each>
                        <xsl:if test="upper-case(tib:trim($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentType))=upper-case(tib:trim($_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/InvoicePaymentTrans))&#xA;or&#xA;upper-case(tib:trim($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentType))=upper-case(tib:trim($_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/DepositPaymentTrans))">
                            <ns21:details>
                                <xsl:for-each select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails">
                                    <ns21:item>
                                        <ns21:documentId>
                                            <xsl:value-of select="pfx8:documentId"/>
                                        </ns21:documentId>
                                        <ns21:creditDebit>
                                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/CreditCode"/>
                                        </ns21:creditDebit>
                                        <ns21:assAmountCashPay>
                                            <pfx9:amount>
                                                <xsl:value-of select="pfx8:amount/pfx8:amount"/>
                                            </pfx9:amount>
                                            <pfx9:currency>
                                                <xsl:value-of select="if(string-length(pfx8:amount/pfx8:currency)>0)&#xA;then current()/pfx8:amount/pfx8:currency&#xA;else $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/defaultCurrencyCode"/>
                                            </pfx9:currency>
                                        </ns21:assAmountCashPay>
                                    </ns21:item>
                                </xsl:for-each>
                            </ns21:details>
                        </xsl:if>
                        <ns21:csIdPub>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                        </ns21:csIdPub>
                    </ns21:inputAttributes>
                </ns21:financialTransactionWriteRequest>
                <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ExtPaymentDetailsWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>606</pd:x>
        <pd:y>126</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/SCXBulkPayment/HelperProcess/ESI_BSCS_Call_ExtPaymentDetailsWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx12:extPaymentDetailsWriteRequest>
                    <pfx12:inputAttributes>
                        <xsl:choose>
                            <xsl:when test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:reasonCode='PAYMENT REVERSAL'">
                                <pfx12:transactionRefnum>
                                    <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum"/>
                                </pfx12:transactionRefnum>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx12:transactionRefnum>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId"/>
                                </pfx12:transactionRefnum>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx12:paymentAmount>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount/pfx8:amount"/>
                        </pfx12:paymentAmount>
                        <pfx12:payMethod>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:modPay"/>
                        </pfx12:payMethod>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payAuthCode">
                            <pfx12:payAuthCode>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payAuthCode"/>
                            </pfx12:payAuthCode>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:channel)>0">
                                <pfx12:channel>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:channel"/>
                                </pfx12:channel>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:user">
                            <pfx12:user>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:user"/>
                            </pfx12:user>
                        </xsl:if>
                        <xsl:if test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:merchantId)>0">
                            <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:merchantId">
                                <pfx12:merchantId>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:merchantId"/>
                                </pfx12:merchantId>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:terminalId)>0">
                            <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:terminalId">
                                <pfx12:terminalId>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:terminalId"/>
                                </pfx12:terminalId>
                            </xsl:if>
                        </xsl:if>
                        <pfx12:customerCategory>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:customerCategory"/>
                        </pfx12:customerCategory>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum">
                            <pfx12:crcardno>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum"/>
                            </pfx12:crcardno>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks">
                            <pfx12:remarks>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks"/>
                            </pfx12:remarks>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payDate)>0">
                                <pfx12:payDate>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payDate"/>
                                </pfx12:payDate>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId">
                            <pfx12:sourceTransactionId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId"/>
                            </pfx12:sourceTransactionId>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:workArea)>0">
                                <pfx12:location>
                                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:workArea"/>
                                </pfx12:location>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:issuerBank">
                            <pfx12:issuerBank>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:issuerBank"/>
                            </pfx12:issuerBank>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:expiryDate)>0">
                                <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:expiryDate">
                                    <pfx12:expiryDate>
                                        <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:expiryDate"/>
                                    </pfx12:expiryDate>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <pfx12:caxact>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId"/>
                        </pfx12:caxact>
                    </pfx12:inputAttributes>
                </pfx12:extPaymentDetailsWriteRequest>
                <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN)>0">
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN">
                            <InterfaceId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN"/>
                            </InterfaceId>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID)>0">
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID">
                            <InterfaceId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID"/>
                            </InterfaceId>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID">
                            <InterfaceId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                            </InterfaceId>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>973</pd:x>
        <pd:y>294</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>SCXBulkPaymentReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="if (string-length($Map-Error/pfx8:PaymentTransactionResponse)>0)&#xA;then &#xA;tib:render-xml($Map-Error/pfx8:PaymentTransactionResponse)&#xA;else&#xA;tib:render-xml($Map-Data/pfx8:PaymentTransactionResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>63</pd:x>
        <pd:y>245</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>187</pd:x>
        <pd:y>244</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>310</pd:x>
        <pd:y>124</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                            </ns22:InterfaceID>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($SCXBulkPaymentReceiver/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat(tib:left($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum,6),'XXXXXX',tib:right($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum,4))"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>846</pd:x>
        <pd:y>285</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/SCXBulkPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <xsl:choose>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                            </ns22:InterfaceID>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="if (string-length($Map-Error/pfx8:PaymentTransactionResponse)>0)&#xA;then &#xA;tib:render-xml($Map-Error/pfx8:PaymentTransactionResponse)&#xA;else&#xA;tib:render-xml($Map-Data/pfx8:PaymentTransactionResponse)"/>
                    </ns22:Message>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum, 7,6),'XXXX')"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>166</pd:x>
        <pd:y>365</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>304</pd:x>
        <pd:y>368</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>370</pd:y>
        <config>
            <element ref="pfx8:PaymentTransactionResponse"/>
        </config>
        <pd:inputBindings>
            <pfx8:PaymentTransactionResponse>
                <pfx8:Status>
                    <xsl:value-of select="'Failed'"/>
                </pfx8:Status>
                <xsl:choose>
                    <xsl:when test="string-length($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId)>0">
                        <pfx8:transactionId>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId"/>
                        </pfx8:transactionId>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx8:transactionId>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </pfx8:transactionId>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx8:CorrelationID>
                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:Header/pfx8:ExternalTransactionID"/>
                </pfx8:CorrelationID>
                <pfx8:ResponseCode>
                    <xsl:value-of select="if(string-length($_error/ns2:ErrorReport/MsgCode)>0)&#xA;then $_error/ns2:ErrorReport/MsgCode&#xA;else '-1'"/>
                </pfx8:ResponseCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <pfx8:ResponseDesc>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </pfx8:ResponseDesc>
                </xsl:if>
                <pfx8:Error>
                    <pfx8:Error_SourceSystem>
                        <xsl:value-of select="'TIBCO'"/>
                    </pfx8:Error_SourceSystem>
                    <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                        <pfx8:Error_SourceErrCode>
                            <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                        </pfx8:Error_SourceErrCode>
                    </xsl:if>
                    <pfx8:Error_SourceErrDesc>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                    </pfx8:Error_SourceErrDesc>
                    <pfx8:Error_Type>
                        <xsl:value-of select="'Technical'"/>
                    </pfx8:Error_Type>
                    <pfx8:Error_Occurance_Time>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx8:Error_Occurance_Time>
                </pfx8:Error>
            </pfx8:PaymentTransactionResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>736</pd:x>
        <pd:y>366</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message_Masking.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID)>0">
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:BillingAccountID"/>
                            </ns22:InterfaceID>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns22:InterfaceID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                            </ns22:InterfaceID>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx8:PaymentTransactionResponse)"/>
                    </ns22:Transaction>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'MaskedValue'"/>
                        </ns22:AltKeyName>
                        <ns22:AltKeyValue>
                            <xsl:value-of select="concat('XXXXXX',substring($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum, 7,6),'XXXX')"/>
                        </ns22:AltKeyValue>
                    </ns22:AltKey>
                    <ns22:AltKey>
                        <ns22:AltKeyName>
                            <xsl:value-of select="'SecretValue'"/>
                        </ns22:AltKeyName>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum">
                            <ns22:AltKeyValue>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum"/>
                            </ns22:AltKeyValue>
                        </xsl:if>
                    </ns22:AltKey>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp))&#xA;then&#xA;$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>607</pd:x>
        <pd:y>489</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>768</pd:x>
        <pd:y>208</pd:y>
        <config>
            <element ref="pfx8:PaymentTransactionResponse"/>
        </config>
        <pd:inputBindings>
            <pfx8:PaymentTransactionResponse>
                <pfx8:Status>
                    <xsl:value-of select="'Success'"/>
                </pfx8:Status>
                <pfx8:transactionId>
                    <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId"/>
                </pfx8:transactionId>
                <pfx8:CorrelationID>
                    <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:Header/pfx8:ExternalTransactionID"/>
                </pfx8:CorrelationID>
                <pfx8:ResponseCode>
                    <xsl:value-of select="'0'"/>
                </pfx8:ResponseCode>
                <pfx8:ResponseDesc>
                    <xsl:value-of select="'Success'"/>
                </pfx8:ResponseDesc>
            </pfx8:PaymentTransactionResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ReplyError">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>590</pd:x>
        <pd:y>367</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>SCXBulkPaymentReceiver</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx8:PaymentTransactionResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>445</pd:x>
        <pd:y>286</pd:y>
        <config>
            <element ref="pfx8:PaymentTransactionResponse"/>
        </config>
        <pd:inputBindings>
            <pfx8:PaymentTransactionResponse>
                <pfx8:Status>
                    <xsl:value-of select="'Failed'"/>
                </pfx8:Status>
                <pfx8:transactionId>
                    <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                </pfx8:transactionId>
                <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:Header/pfx8:ExternalTransactionID">
                    <pfx8:CorrelationID>
                        <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:Header/pfx8:ExternalTransactionID"/>
                    </pfx8:CorrelationID>
                </xsl:if>
                <pfx8:ResponseCode>
                    <xsl:value-of select="if(string-length($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum)>0)&#xA;then $Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum&#xA;else '-1'"/>
                </pfx8:ResponseCode>
                <pfx8:ResponseDesc>
                    <xsl:value-of select="if(string-length($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo)>0)&#xA;then $Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo&#xA;else 'error'"/>
                </pfx8:ResponseDesc>
                <pfx8:Error>
                    <pfx8:Error_SourceSystem>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                    </pfx8:Error_SourceSystem>
                    <xsl:if test="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum">
                        <pfx8:Error_SourceErrCode>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum"/>
                        </pfx8:Error_SourceErrCode>
                    </xsl:if>
                    <pfx8:Error_SourceErrDesc>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo,'|'))&#xA;then substring-after($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo,'|')&#xA;else substring-after($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo,':')"/>
                    </pfx8:Error_SourceErrDesc>
                    <pfx8:Error_Type>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionDocumentNo,'|'))&#xA;then 'Bussiness'&#xA;else 'Technical'"/>
                    </pfx8:Error_Type>
                    <pfx8:Error_Occurance_Time>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx8:Error_Occurance_Time>
                </pfx8:Error>
            </pfx8:PaymentTransactionResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendToLocalErrorQueue">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>925</pd:x>
        <pd:y>120</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Update/MultiSubscriberPayment/EXT_Payment_Failure_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TransactionID>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TransactionID>
                    </xsl:if>
                    <xsl:if test="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$SCXBulkPaymentReceiver/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($Map-Error-Payload/ns26:ExternalPaymentPosting_Input)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error-Payload">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>760</pd:x>
        <pd:y>73</pd:y>
        <config>
            <element ref="ns26:ExternalPaymentPosting_Input"/>
        </config>
        <pd:inputBindings>
            <ns26:ExternalPaymentPosting_Input>
                <ns27:ListOfCbio2paymenttransactionpostingio>
                    <ns27:Payments>
                        <ns27:AccountNumber>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:cardnum"/>
                        </ns27:AccountNumber>
                        <ns27:AuthorizationCode>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payAuthCode"/>
                        </ns27:AuthorizationCode>
                        <ns27:Channel>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:channel"/>
                        </ns27:Channel>
                        <ns27:CustomerId>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:CRMCustomerID"/>
                        </ns27:CustomerId>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId">
                            <ns27:ExtTransactionRef>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId"/>
                            </ns27:ExtTransactionRef>
                        </xsl:if>
                        <ns27:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:PaymentDetails[1]/pfx8:MSISDN"/>
                        </ns27:MSISDN>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:merchantId">
                            <ns27:MerchantId>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:merchantId"/>
                            </ns27:MerchantId>
                        </xsl:if>
                        <ns27:MerchantAmount>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount/pfx8:amount"/>
                        </ns27:MerchantAmount>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payAuthCode">
                            <ns27:AuthorizeID>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payAuthCode"/>
                            </ns27:AuthorizeID>
                        </xsl:if>
                        <ns27:MerchTxnRef>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId"/>
                        </ns27:MerchTxnRef>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payDate)>0">
                                <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payDate">
                                    <ns27:CBiO2PaymentDateTime>
                                        <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:payDate"/>
                                    </ns27:CBiO2PaymentDateTime>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <ns27:UserName>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:user"/>
                        </ns27:UserName>
                        <ns27:TerminalId>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:terminalId"/>
                        </ns27:TerminalId>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:workArea">
                            <ns27:CBiO2WorkArea>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:workArea"/>
                            </ns27:CBiO2WorkArea>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:customerCategory">
                            <ns27:CardHolder>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:customerCategory"/>
                            </ns27:CardHolder>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:expiryDate">
                            <ns27:ExpirationDate>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:expiryDate"/>
                            </ns27:ExpirationDate>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:issuerBank">
                            <ns27:IssuingBankName>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:issuerBank"/>
                            </ns27:IssuingBankName>
                        </xsl:if>
                        <ns27:PaymentMethod>
                            <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:modPay"/>
                        </ns27:PaymentMethod>
                        <xsl:if test="not(($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount/pfx8:amount/@xsi:nil=(&quot;true&quot;)) or ($Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount/pfx8:amount/@xsi:nil=(&quot;1&quot;)))">
                            <ns27:TransactionAmount>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:totalAmount/pfx8:amount"/>
                            </ns27:TransactionAmount>
                        </xsl:if>
                        <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks">
                            <ns27:ChequeNum>
                                <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:remarks"/>
                            </ns27:ChequeNum>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:reasonCode='PAYMENT REVERSAL'">
                                <ns27:CRMReceiptNo>
                                    <xsl:value-of select="$Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionRefnum"/>
                                </ns27:CRMReceiptNo>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId">
                                    <ns27:CRMReceiptNo>
                                        <xsl:value-of select="$Parse-XML/pfx8:PaymentTransactionRequest/pfx8:ChannelDetails/pfx8:sourceTransactionId"/>
                                    </ns27:CRMReceiptNo>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns27:Payments>
                </ns27:ListOfCbio2paymenttransactionpostingio>
            </ns26:ExternalPaymentPosting_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SCXBulkPaymentReceiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SCXBulkPaymentReceiver</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>ReplyError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_ExtPaymentDetailsWrite/pfx12:extPaymentDetailsWriteResponse/pfx12:response='External Payment Data Inserted Successfully'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>NotValidated</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReplyError</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReplyError</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map-Error-Payload</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_FinancialTransactionWrite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Call_ExtPaymentDetailsWrite</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Call_FinancialTransactionWrite/ns21:financialTransactionWriteResponse/ns21:resultList/ns21:item[1]/ns21:transactionId)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SendToLocalErrorQueue</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error-Payload</pd:from>
        <pd:to>SendToLocalErrorQueue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>