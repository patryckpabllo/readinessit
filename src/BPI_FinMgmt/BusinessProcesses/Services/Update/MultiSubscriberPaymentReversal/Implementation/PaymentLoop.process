<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.ericsson.com/ZainKW/BusinessSchemas/ChequeDetails.xsd" xmlns:pfx15="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/EmpOrgDetails.xsd" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:pfx13="http://ericsson.com/services/ws_CIL_5/sessionchange" xmlns:pfx12="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" xmlns:pfx11="http://www.zain.com/ZESB/Services/Payment/Types" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:pfx19="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPaymentReversal.xsd" xmlns:pfx18="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" xmlns:pfx17="http://www.ericsson.com/ZainKW/BusinessSchemas/AuthoriseDetails.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:format="java://MSISDNFormatter" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns110="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns25="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns26="http://siebel.com/CustomUI" xmlns:ns27="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:ns21="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://mastercard.zain.com/" xmlns:ns24="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/Payment/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/Payment/PaymentInbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/PaymentInbound.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/PaymentInbound.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/ChequeDetails.xsd" schemaLocation="/BusinessProcesses/Services/Common/Payment/Schema/ChequeDetails.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/AuthoriseDetails.xsd" schemaLocation="/BusinessProcesses/Services/Common/Payment/Schema/AuthoriseDetails.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalPaymentPostingWS.WSDL.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPayment.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/MultiSubscriberPayment.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Transaction/MultiSubscriberPaymentReversal.xsd" schemaLocation="/BusinessSchemas/Services/Transaction/Payments/MultiSubscriberPaymentReversal.xsd"/>
    <pd:name>BusinessProcesses/Services/Update/MultiSubscriberPaymentReversal/Implementation/PaymentLoop.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx19:MultiSubsPaymentReversalReq"/>
                    <xsd:element name="TransactionID" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>18</pd:startX>
    <pd:startY>90</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($Map-Data/pfx19:MultiSubsPaymentReversalRes)>0">
                <xsl:for-each select="$Map-Data/pfx19:MultiSubsPaymentReversalRes">
                    <pfx19:MultiSubsPaymentReversalRes>
                        <pfx19:TransactionStatus>
                            <xsl:value-of select="pfx19:TransactionStatus"/>
                        </pfx19:TransactionStatus>
                        <pfx19:transactionId>
                            <xsl:value-of select="pfx19:transactionId"/>
                        </pfx19:transactionId>
                        <pfx19:CorrelationID>
                            <xsl:value-of select="pfx19:CorrelationID"/>
                        </pfx19:CorrelationID>
                        <pfx19:ResponseCode>
                            <xsl:value-of select="pfx19:ResponseCode"/>
                        </pfx19:ResponseCode>
                        <pfx19:ResponseDesc>
                            <xsl:value-of select="pfx19:ResponseDesc"/>
                        </pfx19:ResponseDesc>
                        <xsl:for-each select="pfx19:SubscribersResponse">
                            <pfx19:SubscribersResponse>
                                <pfx19:MSISDN>
                                    <xsl:value-of select="pfx19:MSISDN"/>
                                </pfx19:MSISDN>
                                <pfx19:PaymentReferenceId>
                                    <xsl:value-of select="pfx19:PaymentReferenceId"/>
                                </pfx19:PaymentReferenceId>
                                <pfx19:ResponseCode>
                                    <xsl:value-of select="pfx19:ResponseCode"/>
                                </pfx19:ResponseCode>
                                <pfx19:ResponseDesc>
                                    <xsl:value-of select="pfx19:ResponseDesc"/>
                                </pfx19:ResponseDesc>
                                <xsl:if test="pfx19:CRMRowID">
                                    <pfx19:CRMRowID>
                                        <xsl:value-of select="pfx19:CRMRowID"/>
                                    </pfx19:CRMRowID>
                                </xsl:if>
                                <xsl:if test="pfx19:CRMPaymentRef">
                                    <pfx19:CRMPaymentRef>
                                        <xsl:value-of select="pfx19:CRMPaymentRef"/>
                                    </pfx19:CRMPaymentRef>
                                </xsl:if>
                                <xsl:for-each select="pfx19:Error">
                                    <pfx19:Error>
                                        <pfx19:Error_SourceSystem>
                                            <xsl:value-of select="pfx19:Error_SourceSystem"/>
                                        </pfx19:Error_SourceSystem>
                                        <pfx19:Error_SourceErrCode>
                                            <xsl:value-of select="pfx19:Error_SourceErrCode"/>
                                        </pfx19:Error_SourceErrCode>
                                        <pfx19:Error_SourceErrDesc>
                                            <xsl:value-of select="pfx19:Error_SourceErrDesc"/>
                                        </pfx19:Error_SourceErrDesc>
                                        <pfx19:Error_Type>
                                            <xsl:value-of select="pfx19:Error_Type"/>
                                        </pfx19:Error_Type>
                                        <pfx19:Error_UserErrCode>
                                            <xsl:value-of select="pfx19:Error_UserErrCode"/>
                                        </pfx19:Error_UserErrCode>
                                        <pfx19:Error_UserErrDesc>
                                            <xsl:value-of select="pfx19:Error_UserErrDesc"/>
                                        </pfx19:Error_UserErrDesc>
                                        <pfx19:Error_Occurance_Time>
                                            <xsl:value-of select="pfx19:Error_Occurance_Time"/>
                                        </pfx19:Error_Occurance_Time>
                                        <pfx19:Error_Additional_Desc1>
                                            <xsl:value-of select="pfx19:Error_Additional_Desc1"/>
                                        </pfx19:Error_Additional_Desc1>
                                        <pfx19:Error_Additional_Desc2>
                                            <xsl:value-of select="pfx19:Error_Additional_Desc2"/>
                                        </pfx19:Error_Additional_Desc2>
                                    </pfx19:Error>
                                </xsl:for-each>
                            </pfx19:SubscribersResponse>
                        </xsl:for-each>
                        <xsl:for-each select="pfx19:Error">
                            <pfx19:Error>
                                <pfx19:Error_SourceSystem>
                                    <xsl:value-of select="pfx19:Error_SourceSystem"/>
                                </pfx19:Error_SourceSystem>
                                <pfx19:Error_SourceErrCode>
                                    <xsl:value-of select="pfx19:Error_SourceErrCode"/>
                                </pfx19:Error_SourceErrCode>
                                <pfx19:Error_SourceErrDesc>
                                    <xsl:value-of select="pfx19:Error_SourceErrDesc"/>
                                </pfx19:Error_SourceErrDesc>
                                <pfx19:Error_Type>
                                    <xsl:value-of select="pfx19:Error_Type"/>
                                </pfx19:Error_Type>
                                <pfx19:Error_UserErrCode>
                                    <xsl:value-of select="pfx19:Error_UserErrCode"/>
                                </pfx19:Error_UserErrCode>
                                <pfx19:Error_UserErrDesc>
                                    <xsl:value-of select="pfx19:Error_UserErrDesc"/>
                                </pfx19:Error_UserErrDesc>
                                <pfx19:Error_Occurance_Time>
                                    <xsl:value-of select="pfx19:Error_Occurance_Time"/>
                                </pfx19:Error_Occurance_Time>
                                <pfx19:Error_Additional_Desc1>
                                    <xsl:value-of select="pfx19:Error_Additional_Desc1"/>
                                </pfx19:Error_Additional_Desc1>
                                <pfx19:Error_Additional_Desc2>
                                    <xsl:value-of select="pfx19:Error_Additional_Desc2"/>
                                </pfx19:Error_Additional_Desc2>
                            </pfx19:Error>
                        </xsl:for-each>
                    </pfx19:MultiSubsPaymentReversalRes>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="$Map-Error/ns25:ErrorResponse">
                    <ns25:ErrorResponse>
                        <xsl:if test="ns25:Error_SourceSystem">
                            <ns25:Error_SourceSystem>
                                <xsl:value-of select="ns25:Error_SourceSystem"/>
                            </ns25:Error_SourceSystem>
                        </xsl:if>
                        <xsl:if test="ns25:Error_SourceErrCode">
                            <ns25:Error_SourceErrCode>
                                <xsl:value-of select="ns25:Error_SourceErrCode"/>
                            </ns25:Error_SourceErrCode>
                        </xsl:if>
                        <xsl:if test="ns25:Error_SourceErrDesc">
                            <ns25:Error_SourceErrDesc>
                                <xsl:value-of select="ns25:Error_SourceErrDesc"/>
                            </ns25:Error_SourceErrDesc>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Type">
                            <ns25:Error_Type>
                                <xsl:value-of select="ns25:Error_Type"/>
                            </ns25:Error_Type>
                        </xsl:if>
                        <xsl:if test="ns25:Error_UserErrCode">
                            <ns25:Error_UserErrCode>
                                <xsl:value-of select="ns25:Error_UserErrCode"/>
                            </ns25:Error_UserErrCode>
                        </xsl:if>
                        <xsl:if test="ns25:Error_UserErrDesc">
                            <ns25:Error_UserErrDesc>
                                <xsl:value-of select="ns25:Error_UserErrDesc"/>
                            </ns25:Error_UserErrDesc>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Occurance_Time">
                            <ns25:Error_Occurance_Time>
                                <xsl:value-of select="ns25:Error_Occurance_Time"/>
                            </ns25:Error_Occurance_Time>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Additional_Desc1">
                            <ns25:Error_Additional_Desc1>
                                <xsl:value-of select="ns25:Error_Additional_Desc1"/>
                            </ns25:Error_Additional_Desc1>
                        </xsl:if>
                        <xsl:if test="ns25:Error_Additional_Desc2">
                            <ns25:Error_Additional_Desc2>
                                <xsl:value-of select="ns25:Error_Additional_Desc2"/>
                            </ns25:Error_Additional_Desc2>
                        </xsl:if>
                    </ns25:ErrorResponse>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:choice>
            <xsd:element ref="pfx19:MultiSubsPaymentReversalRes"/>
            <xsd:element ref="ns25:ErrorResponse"/>
        </xsd:choice>
    </pd:endType>
    <pd:endX>920</pd:endX>
    <pd:endY>85</pd:endY>
    <pd:errorSchemas>
        <Schema0 ref="ns25:ErrorResponse"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Call_FinancialTransactionWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>147</pd:x>
        <pd:y>91</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/MultiSubscriberPaymentReversal/HelperProcess/ESI_BSCS_Call_FinancialTransactionWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns24:financialTransactionWriteRequest>
                    <ns24:inputAttributes>
                        <ns24:transactionRefnum>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId"/>
                        </ns24:transactionRefnum>
                        <ns24:useCaseCode>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentType"/>
                        </ns24:useCaseCode>
                        <xsl:if test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID)>0">
                            <ns24:secTransactionId>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID"/>
                            </ns24:secTransactionId>
                        </xsl:if>
                        <ns24:handlingReasonPub>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:remarks"/>
                        </ns24:handlingReasonPub>
                        <ns24:payMethodIdPub>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:paymentMethod"/>
                        </ns24:payMethodIdPub>
                        <ns24:amountCashPay>
                            <xsl:choose>
                                <xsl:when test="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='Amount']/pfx19:Value">
                                    <pfx9:amount>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='Amount']/pfx19:Value"/>
                                    </pfx9:amount>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx9:amount>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:amount/pfx19:amount"/>
                                    </pfx9:amount>
                                </xsl:otherwise>
                            </xsl:choose>
                            <pfx9:currency>
                                <xsl:value-of select="if(string-length(current()/pfx18:amount/pfx18:currency)>0)&#xA;then current()/pfx18:amount/pfx18:currency&#xA;else $_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/defaultCurrencyCode"/>
                            </pfx9:currency>
                        </ns24:amountCashPay>
                        <xsl:if test="upper-case(tib:trim($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentType))=upper-case(tib:trim($_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/InvoicePaymentTrans))&#xA;or&#xA;upper-case(tib:trim($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentType))=upper-case(tib:trim($_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/DepositPaymentTrans))">
                            <ns24:details>
                                <ns24:item>
                                    <ns24:documentId>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='DocumentId']/pfx19:Value"/>
                                    </ns24:documentId>
                                    <ns24:creditDebit>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/CreditCode"/>
                                    </ns24:creditDebit>
                                    <ns24:assAmountCashPay>
                                        <pfx9:amount>
                                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='Amount']/pfx19:Value"/>
                                        </pfx9:amount>
                                        <pfx9:currency>
                                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/defaultCurrencyCode"/>
                                        </pfx9:currency>
                                    </ns24:assAmountCashPay>
                                </ns24:item>
                            </ns24:details>
                        </xsl:if>
                        <xsl:if test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:BillingAccountID)>0&#xA;or&#xA;string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='BAID']/pfx19:Value)>0">
                            <xsl:choose>
                                <xsl:when test="($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='BAID']/pfx19:Value)>0">
                                    <ns24:billingAccountId>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='BAID']/pfx19:Value"/>
                                    </ns24:billingAccountId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns24:billingAccountId>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:BillingAccountID"/>
                                    </ns24:billingAccountId>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                        <ns24:csIdPub>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:CRMCustomerID"/>
                        </ns24:csIdPub>
                        <ns24:reversalFlag>
                            <xsl:value-of select="1"/>
                        </ns24:reversalFlag>
                    </ns24:inputAttributes>
                    <ns24:sessionChangeRequest>
                        <pfx13:values>
                            <pfx13:item>
                                <pfx13:key>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionKey"/>
                                </pfx13:key>
                                <pfx13:value>
                                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CommonSettings/BSCSSession/SessionValue"/>
                                </pfx13:value>
                            </pfx13:item>
                        </pfx13:values>
                    </ns24:sessionChangeRequest>
                </ns24:financialTransactionWriteRequest>
                <TrackingId>
                    <xsl:value-of select="$Start/root/TransactionID"/>
                </TrackingId>
                <StartTimeStamp>
                    <xsl:value-of select="$Start/root/StartTimeStamp"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>773</pd:x>
        <pd:y>73</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPayment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/UPDATE"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="if (string-length($Map-Data/pfx19:MultiSubsPaymentReversalRes)>0)&#xA;then &#xA;tib:render-xml($Map-Data/pfx19:MultiSubsPaymentReversalRes)&#xA;else&#xA;tib:render-xml($Map-Error/ns25:ErrorResponse)"/>
                    </ns22:Message>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="if(exists($Start/root/StartTimeStamp))&#xA;then&#xA;$Start/root/StartTimeStamp&#xA;else&#xA;0"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>633</pd:x>
        <pd:y>26</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx19:MultiSubsPaymentReversalRes"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="1=2">
                    <xsl:choose>
                        <xsl:when test="$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response='External Payment Data Inserted Successfully'">
                            <pfx19:MultiSubsPaymentReversalRes>
                                <pfx19:SubscribersResponse>
                                    <pfx19:MSISDN>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                                    </pfx19:MSISDN>
                                    <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                                        <pfx19:PaymentReferenceId>
                                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                                        </pfx19:PaymentReferenceId>
                                    </xsl:if>
                                    <pfx19:ResponseCode>
                                        <xsl:value-of select="'0'"/>
                                    </pfx19:ResponseCode>
                                    <pfx19:ResponseDesc>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx19:ResponseDesc>
                                    <pfx19:CRMRowID>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name='CRMRowID']/pfx19:Value"/>
                                    </pfx19:CRMRowID>
                                    <pfx19:CRMPaymentRef>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID"/>
                                    </pfx19:CRMPaymentRef>
                                </pfx19:SubscribersResponse>
                            </pfx19:MultiSubsPaymentReversalRes>
                        </xsl:when>
                        <xsl:when test="contains($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response,'Activity timed out')">
                            <ns25:ErrorResponse>
                                <ns25:Error_SourceSystem>
                                    <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                                </ns25:Error_SourceSystem>
                                <ns25:Error_SourceErrCode>
                                    <xsl:value-of select="$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response"/>
                                </ns25:Error_SourceErrCode>
                                <ns25:Error_SourceErrDesc>
                                    <xsl:value-of select="concat($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN,'|',&#xA;(if (contains($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response,'|'))&#xA;then tib:substring-after-last($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response[1],'|')&#xA;else tib:substring-after-last($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response[1],':')))"/>
                                </ns25:Error_SourceErrDesc>
                                <ns25:Error_Type>
                                    <xsl:value-of select="if (contains($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response,'|'))&#xA;then 'Bussiness'&#xA;else 'Technical'"/>
                                </ns25:Error_Type>
                                <ns25:Error_UserErrCode>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name=&quot;CRMRowID&quot;]/pfx19:Value"/>
                                </ns25:Error_UserErrCode>
                                <ns25:Error_Additional_Desc1>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                                </ns25:Error_Additional_Desc1>
                                <ns25:Error_Additional_Desc2>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:amount/pfx19:amount"/>
                                </ns25:Error_Additional_Desc2>
                            </ns25:ErrorResponse>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx19:MultiSubsPaymentReversalRes>
                                <pfx19:SubscribersResponse>
                                    <pfx19:MSISDN>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                                    </pfx19:MSISDN>
                                    <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                                        <pfx19:PaymentReferenceId>
                                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                                        </pfx19:PaymentReferenceId>
                                    </xsl:if>
                                    <pfx19:ResponseCode>
                                        <xsl:value-of select="'0'"/>
                                    </pfx19:ResponseCode>
                                    <pfx19:ResponseDesc>
                                        <xsl:value-of select="'Success'"/>
                                    </pfx19:ResponseDesc>
                                    <pfx19:CRMRowID>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name='CRMRowID']/pfx19:Value"/>
                                    </pfx19:CRMRowID>
                                    <pfx19:CRMPaymentRef>
                                        <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID"/>
                                    </pfx19:CRMPaymentRef>
                                </pfx19:SubscribersResponse>
                            </pfx19:MultiSubsPaymentReversalRes>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <pfx19:MultiSubsPaymentReversalRes>
                        <pfx19:SubscribersResponse>
                            <pfx19:MSISDN>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                            </pfx19:MSISDN>
                            <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                                <pfx19:PaymentReferenceId>
                                    <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                                </pfx19:PaymentReferenceId>
                            </xsl:if>
                            <pfx19:ResponseCode>
                                <xsl:value-of select="'0'"/>
                            </pfx19:ResponseCode>
                            <pfx19:ResponseDesc>
                                <xsl:value-of select="'Success'"/>
                            </pfx19:ResponseDesc>
                            <pfx19:CRMRowID>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name='CRMRowID']/pfx19:Value"/>
                            </pfx19:CRMRowID>
                            <pfx19:CRMPaymentRef>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID"/>
                            </pfx19:CRMPaymentRef>
                        </pfx19:SubscribersResponse>
                    </pfx19:MultiSubsPaymentReversalRes>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>148</pd:x>
        <pd:y>205</pd:y>
        <config>
            <element>
                <xsd:choice>
                    <xsd:element ref="pfx18:MultiSubsPaymentRes"/>
                    <xsd:element ref="ns25:ErrorResponse"/>
                </xsd:choice>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="not(exists($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID))&#xA;or&#xA;string-length(tib:trim($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID))=0">
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                        </ns25:Error_SourceSystem>
                        <ns25:Error_SourceErrCode>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPaymentReversal/BSCSPaymentRefErrCode"/>
                        </ns25:Error_SourceErrCode>
                        <ns25:Error_SourceErrDesc>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/MultiSubscriberPaymentReversal/BSCSPaymentRefErrMsg"/>
                        </ns25:Error_SourceErrDesc>
                        <ns25:Error_Type>
                            <xsl:value-of select="'Business'"/>
                        </ns25:Error_Type>
                        <ns25:Error_UserErrCode>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name=&quot;CRMRowID&quot;]/pfx19:Value"/>
                        </ns25:Error_UserErrCode>
                        <ns25:Error_Additional_Desc1>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                        </ns25:Error_Additional_Desc1>
                        <ns25:Error_Additional_Desc2>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:amount/pfx19:amount"/>
                        </ns25:Error_Additional_Desc2>
                    </ns25:ErrorResponse>
                </xsl:when>
                <xsl:otherwise>
                    <ns25:ErrorResponse>
                        <ns25:Error_SourceSystem>
                            <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                        </ns25:Error_SourceSystem>
                        <ns25:Error_SourceErrCode>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionRefnum"/>
                        </ns25:Error_SourceErrCode>
                        <ns25:Error_SourceErrDesc>
                            <xsl:value-of select="concat($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN,'|',&#xA;(if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then substring-after($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|')&#xA;else substring-after($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,':')))"/>
                        </ns25:Error_SourceErrDesc>
                        <ns25:Error_Type>
                            <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionDocumentNo,'|'))&#xA;then 'Business'&#xA;else 'Technical'"/>
                        </ns25:Error_Type>
                        <ns25:Error_UserErrCode>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:References/pfx19:items[pfx19:Name=&quot;CRMRowID&quot;]/pfx19:Value"/>
                        </ns25:Error_UserErrCode>
                        <ns25:Error_Additional_Desc1>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                        </ns25:Error_Additional_Desc1>
                        <ns25:Error_Additional_Desc2>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:amount/pfx19:amount"/>
                        </ns25:Error_Additional_Desc2>
                    </ns25:ErrorResponse>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendToLocalErrorQueue">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>634</pd:x>
        <pd:y>153</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Update/MultiSubscriberPayment/EXT_Payment_Failure_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TransactionID>
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="tib:render-xml($Map-Error-Payload/ns26:ExternalPaymentPosting_Input)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error-Payload">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>491</pd:x>
        <pd:y>150</pd:y>
        <config>
            <element ref="ns26:ExternalPaymentPosting_Input"/>
        </config>
        <pd:inputBindings>
            <ns26:ExternalPaymentPosting_Input>
                <pfx14:ListOfCbio2paymenttransactionpostingio>
                    <pfx14:Payments>
                        <pfx14:AccountNumber>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:cardnum"/>
                        </pfx14:AccountNumber>
                        <pfx14:AuthorizationCode>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payAuthCode"/>
                        </pfx14:AuthorizationCode>
                        <pfx14:Channel>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:channel"/>
                        </pfx14:Channel>
                        <pfx14:CustomerId>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:CRMCustomerID"/>
                        </pfx14:CustomerId>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId)>0">
                                <pfx14:ExtTransactionRef>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId"/>
                                </pfx14:ExtTransactionRef>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx14:ExtTransactionRef>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:Header/pfx19:ExternalTransactionID"/>
                                </pfx14:ExtTransactionRef>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx14:MSISDN>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                        </pfx14:MSISDN>
                        <pfx14:MerchantId>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:merchantId"/>
                        </pfx14:MerchantId>
                        <pfx14:MerchantAmount>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:totalAmount/pfx19:amount"/>
                        </pfx14:MerchantAmount>
                        <pfx14:AuthorizeID>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payAuthCode"/>
                        </pfx14:AuthorizeID>
                        <xsl:if test="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId">
                            <pfx14:MerchTxnRef>
                                <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                            </pfx14:MerchTxnRef>
                        </xsl:if>
                        <pfx14:CBiO2PaymentDateTime>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payDate"/>
                        </pfx14:CBiO2PaymentDateTime>
                        <pfx14:UserName>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:user"/>
                        </pfx14:UserName>
                        <pfx14:TerminalId>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:terminalId"/>
                        </pfx14:TerminalId>
                        <pfx14:CBiO2WorkArea>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:workArea"/>
                        </pfx14:CBiO2WorkArea>
                        <pfx14:CardHolder>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:customerCategory"/>
                        </pfx14:CardHolder>
                        <xsl:if test="$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response">
                            <pfx14:Message>
                                <xsl:value-of select="$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response"/>
                            </pfx14:Message>
                        </xsl:if>
                        <pfx14:ExpirationDate>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:expiryDate"/>
                        </pfx14:ExpirationDate>
                        <pfx14:IssuingBankName>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:issuerBank"/>
                        </pfx14:IssuingBankName>
                        <pfx14:PaymentMethod>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:modPay"/>
                        </pfx14:PaymentMethod>
                        <pfx14:TransactionAmount>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:totalAmount/pfx19:amount"/>
                        </pfx14:TransactionAmount>
                        <pfx14:ChequeNum>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:remarks"/>
                        </pfx14:ChequeNum>
                        <pfx14:CRMReceiptNo>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId"/>
                        </pfx14:CRMReceiptNo>
                    </pfx14:Payments>
                </pfx14:ListOfCbio2paymenttransactionpostingio>
            </ns26:ExternalPaymentPosting_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_ExtPaymentDetailsWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>292</pd:x>
        <pd:y>93</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/MultiSubscriberPaymentReversal/HelperProcess/ESI_BSCS_Call_ExtPaymentDetailsWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns27:extPaymentDetailsWriteRequest>
                    <ns27:inputAttributes>
                        <ns27:caxact>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId"/>
                        </ns27:caxact>
                        <ns27:transactionRefnum>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId"/>
                        </ns27:transactionRefnum>
                        <ns27:paymentAmount>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:References/pfx19:items[pfx19:Name='Amount']/pfx19:Value"/>
                        </ns27:paymentAmount>
                        <ns27:payMethod>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:paymentMethod"/>
                        </ns27:payMethod>
                        <ns27:payAuthCode>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payAuthCode"/>
                        </ns27:payAuthCode>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:channel)>0">
                                <ns27:channel>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:channel"/>
                                </ns27:channel>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <ns27:user>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:user"/>
                        </ns27:user>
                        <xsl:if test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:merchantId)>0">
                            <ns27:merchantId>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:merchantId"/>
                            </ns27:merchantId>
                        </xsl:if>
                        <xsl:if test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:terminalId)>0">
                            <ns27:terminalId>
                                <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:terminalId"/>
                            </ns27:terminalId>
                        </xsl:if>
                        <ns27:customerCategory>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:customerCategory"/>
                        </ns27:customerCategory>
                        <ns27:crcardno>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:cardnum"/>
                        </ns27:crcardno>
                        <ns27:remarks>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:remarks"/>
                        </ns27:remarks>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payDate)>0">
                                <ns27:payDate>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:payDate"/>
                                </ns27:payDate>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <ns27:sourceTransactionId>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:sourceTransactionId"/>
                        </ns27:sourceTransactionId>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:workArea)>0">
                                <ns27:location>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:workArea"/>
                                </ns27:location>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <ns27:issuerBank>
                            <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:issuerBank"/>
                        </ns27:issuerBank>
                        <xsl:choose>
                            <xsl:when test="string-length($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:expiryDate)>0">
                                <ns27:expiryDate>
                                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:ChannelDetails/pfx19:expiryDate"/>
                                </ns27:expiryDate>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                    </ns27:inputAttributes>
                </ns27:extPaymentDetailsWriteRequest>
                <xsl:if test="$Start/root/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$Start/root/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <xsl:if test="$Start/root/StartTimeStamp">
                    <StartTimeStamp>
                        <xsl:value-of select="$Start/root/StartTimeStamp"/>
                    </StartTimeStamp>
                </xsl:if>
                <InterfaceId>
                    <xsl:value-of select="$Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:MSISDN"/>
                </InterfaceId>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error-Payload</pd:from>
        <pd:to>SendToLocalErrorQueue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendToLocalErrorQueue</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Call_FinancialTransactionWrite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Call_ExtPaymentDetailsWrite</pd:to>
        <pd:xpathDescription>FTWSuccess</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>FTWError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Call_FinancialTransactionWrite/ns24:financialTransactionWriteResponse/ns24:resultList/ns24:item[1]/ns24:transactionId)=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map-Error-Payload</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response='External Payment Data Inserted Successfully'
{-- or contains($Call_ExtPaymentDetailsWrite/ns27:extPaymentDetailsWriteResponse/ns27:response,'Activity timed out')--}</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>BSCSPaymentRefNULL</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID))
or
string-length(tib:trim($Start/root/pfx19:MultiSubsPaymentReversalReq/pfx19:PaymentDetails[1]/pfx19:transactionID))=0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>