<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx12="http://www.tibco.com/schemas/GW_FinMgmt/BusinessProcesses/Services/CRM/Update/DepositMgmt/Schema.xsd" xmlns:ns25="http://ericsson.com/services/ws_CIL_5/extpaymentdetailswrite" xmlns:ns26="http://siebel.com/CustomUI" xmlns:pfx11="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" xmlns:pfx10="http://ericsson.com/services/ws_CMI_5/sessionchange" xmlns:ns27="http://www.siebel.com/xml/CBiO2PaymentTransactionPostingIO" xmlns:ns21="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:ns22="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns23="http://ericsson.com/services/ws_CIL_5/financialtransactionwrite" xmlns:ns24="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Query/QueryCustomerIDBAID.xsd" xmlns:ns20="http://xmlns.zain.com/BSS/ESB/CDM/Finance" xmlns:pfx5="http://www.zain.com/ZESB/Services/ManageFnF/Types" xmlns:pfx31="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileRequest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" xmlns:pfx3="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" xmlns:pfx2="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx9="http://lhsgroup.com/lhsws/money" xmlns:pfx8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" xmlns:pfx7="http://www.ericsson.com/CDM/telecom/FAF" xmlns:pfx6="http://www.ericsson.com/CDM/telecom/Subscriber" xmlns:ns16="http://ericsson.com/services/ws_CMI_5/extpaymentdetailswrite" xmlns:zainesbcustom1="java://com.commonresources.utilities.CustomFunctions" xmlns:ns17="http://ericsson.com/services/ws_CMI_4/sessionchange" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://www.ericsson.com/ZainKW/CommonResources/SharedVariables/External/ListOfValues.xsd" xmlns:ns15="http://ericsson.com/services/ws_CMI_4/financialtransactionwrite" xmlns:ns18="http://www.tibco.com/schemas/CommonProject/CommonResources/SharedVariables/Internal/ESBLOV.xsd" xmlns:ns19="http://xmlns.zain.com/BSS/ESB/CDM/Base" xmlns:ns9="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/UpdatePaymentProfileResponse.xsd" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns5="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" xmlns:ns6="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://ericsson.com/services/ws_CMI_5/paymentprofileread" xmlns:pfx="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" xmlns:ns7="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" xmlns:ns10="http://www.ericsson.com/ZainKW/CommonProject/BusinessSchemas/Services/Modification/UpdateFnF/UpdateFnFReq.xsd" xmlns:ns11="http://www.ericsson.com/CDM/telecom/Header" xmlns:ns8="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerReq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Services/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/ModifyCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ModifyCustomer/ModifyCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/CreateOrderRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateOrder/CreateOrderRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Modification/ContractResourceChangeResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/ContractResourceChange/ContractResourceChangeRespose.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/ManageFnF/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/ManageFnF/ManageFnF_wsdl.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction.xsd" schemaLocation="/BusinessSchemas/Services/Applications/ConceptWave/PaymentTransaction/PaymentTransaction.xsd"/>
    <xsd:import namespace="http://xmlns.zain.com/BSS/ESB/CDM/BillAdjustment" schemaLocation="/BusinessSchemas/Services/Common/BillAdjustment/BillAdjustment.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GW_FinMgmt/BusinessProcesses/Services/CRM/Update/DepositMgmt/Schema.xsd" schemaLocation="/BusinessSchemas/Services/Common/DepositMgmt/DepositMgmt.xsd"/>
    <xsd:import namespace="http://siebel.com/CustomUI" schemaLocation="/BusinessWSDLS/Services/CRM/CBiO2ExternalPaymentPostingWS.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/Update/DepositMgmt/Implementation/depositRefund.process</pd:name>
    <pd:startName>depositRefund</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="depositRefund">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>64</pd:x>
        <pd:y>113</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%BusinessProcesses/Services/Update/DepostMgmt/BPI_Request_Queue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1075</pd:endX>
    <pd:endY>116</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1442397282862</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>203</pd:x>
        <pd:y>113</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx12:DepositRefundRequest"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$depositRefund/ns3:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call_FinancialTransactionWrite">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>454</pd:x>
        <pd:y>110</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/DepositMgmt/HelperProcess/ESI_BSCS_Call_FinancialTransactionWrite.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns23:financialTransactionWriteRequest>
                    <ns23:inputAttributes>
                        <ns23:transactionRefnum>
                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:depositID"/>
                        </ns23:transactionRefnum>
                        <xsl:choose>
                            <xsl:when test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId)>0">
                                <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId">
                                    <ns23:csIdPub>
                                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                                    </ns23:csIdPub>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:customerId/ns19:value">
                                    <ns23:csIdPub>
                                        <xsl:value-of select="$Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:customerId/ns19:value"/>
                                    </ns23:csIdPub>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns23:useCaseCode>
                            <xsl:value-of select="if(upper-case($Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ComponentName)='EOM')&#xA;then 'Refund Advance'&#xA;else 'Refund'"/>
                        </ns23:useCaseCode>
                        <ns23:details>
                            <xsl:for-each select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit">
                                <ns23:item>
                                    <ns23:documentId>
                                        <xsl:value-of select="../ns20:ZainDeposit[1]/ns20:depositID"/>
                                    </ns23:documentId>
                                    <ns23:creditDebit>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/PaymentTransaction/CreditCode"/>
                                    </ns23:creditDebit>
                                    <ns23:assAmountCashPay>
                                        <pfx9:amount>
                                            <xsl:value-of select="ns20:depositAmount/ns19:amount"/>
                                        </pfx9:amount>
                                        <pfx9:currency>
                                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/defaultCurrencyCode"/>
                                        </pfx9:currency>
                                    </ns23:assAmountCashPay>
                                </ns23:item>
                            </xsl:for-each>
                        </ns23:details>
                        <ns23:amountCashPay>
                            <pfx9:amount>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:depositAmount/ns19:amount"/>
                            </pfx9:amount>
                            <pfx9:currency>
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/defaultCurrencyCode"/>
                            </pfx9:currency>
                        </ns23:amountCashPay>
                        <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber!=0">
                            <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber">
                                <ns23:remark>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber"/>
                                </ns23:remark>
                            </xsl:if>
                        </xsl:if>
                        <xsl:if test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue)>0&#xA;or&#xA;string-length($Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:billId/ns19:value)>0">
                            <xsl:choose>
                                <xsl:when test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue)>0">
                                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue">
                                        <ns23:billingAccountId>
                                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue"/>
                                        </ns23:billingAccountId>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="$Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:billId/ns19:value">
                                        <ns23:billingAccountId>
                                            <xsl:value-of select="$Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:billId/ns19:value"/>
                                        </ns23:billingAccountId>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:if>
                    </ns23:inputAttributes>
                </ns23:financialTransactionWriteRequest>
                <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>973</pd:x>
        <pd:y>391</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>depositRefund</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <OtherProperties>
                    <TransactionID>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TransactionID>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/ReplyToEngineID">
                        <ReplyToEngineID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/ReplyToEngineID"/>
                        </ReplyToEngineID>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName">
                        <ReplyToDeploymentName>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/ReplyToDeploymentName"/>
                        </ReplyToDeploymentName>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <CorrelationId>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </CorrelationId>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionDetails">
                        <TransactionDetails>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionDetails"/>
                        </TransactionDetails>
                    </xsl:if>
                </OtherProperties>
                <Body>
                    <xsl:value-of select="if (string-length($Map-Error/pfx12:DepostRefundResponse)>0)&#xA;then &#xA;tib:render-xml($Map-Error/pfx12:DepostRefundResponse)&#xA;else&#xA;tib:render-xml($Map-Data/pfx12:DepostRefundResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMSReceiverError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>62</pd:x>
        <pd:y>255</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/JMSErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ParsingError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>205</pd:x>
        <pd:y>251</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonErrors/ParsingErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogIn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>112</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/DepostMgmt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId">
                        <ns22:InterfaceID>
                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                        </ns22:InterfaceID>
                    </xsl:if>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="tib:render-xml($depositRefund/ns3:ActivityOutput/Body)"/>
                    </ns22:Message>
                    <xsl:for-each select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit">
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'MaskedValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="concat('XXXXXX',substring(current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber, 7,6),'XXXX')"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'SecretValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_REQ_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogOut">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>793</pd:x>
        <pd:y>384</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Update/DepostMgmt/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <ns22:CorrelationID>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                    </ns22:CorrelationID>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="if (string-length($Map-Error/pfx12:DepostRefundResponse)>0)&#xA;then &#xA;tib:render-xml($Map-Error/pfx12:DepostRefundResponse)&#xA;else&#xA;tib:render-xml($Map-Data/pfx12:DepostRefundResponse)"/>
                    </ns22:Transaction>
                    <xsl:for-each select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit">
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'MaskedValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="concat('XXXXXX',substring(current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber, 7,6),'XXXX')"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'SecretValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>181</pd:x>
        <pd:y>509</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandler">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>319</pd:x>
        <pd:y>512</pd:y>
        <config>
            <processName>/CommonProcesses/ErrorHandlingProcess/Exception_Message.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:ExceptionRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <ns22:TransactionID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </ns22:TransactionID>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <ns22:Message>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/Body"/>
                    </ns22:Message>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($_error/ns2:ErrorReport)"/>
                    </ns22:Transaction>
                </ns22:Header>
                <ExceptionCode>
                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                </ExceptionCode>
                <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                    <StackTrace>
                        <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                    </StackTrace>
                </xsl:if>
            </pfx2:ExceptionRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CLE_to_CDM">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>448</pd:x>
        <pd:y>514</pd:y>
        <config>
            <element ref="pfx12:DepostRefundResponse"/>
        </config>
        <pd:inputBindings>
            <pfx12:DepostRefundResponse>
                <ns21:ErrorResponse>
                    <ns21:Error_SourceSystem>
                        <xsl:value-of select="''"/>
                    </ns21:Error_SourceSystem>
                </ns21:ErrorResponse>
            </pfx12:DepostRefundResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>751</pd:x>
        <pd:y>510</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:LogRequest>
                <ns22:Header>
                    <ns22:ApplicationID>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns22:ApplicationID>
                    <ns22:ComponentName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/Services/Common/BillAdjustment/ComponentName"/>
                    </ns22:ComponentName>
                    <ns22:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns22:Hostname>
                    <ns22:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns22:Timestamp>
                    <ns22:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns22:TransactionDomain>
                    <ns22:TransactionType>
                        <xsl:value-of select="zainesbcustom1:getTransactionType(BW:getCurrentProcessName($_processContext/ns2:ProcessContext/ProcessId))"/>
                    </ns22:TransactionType>
                    <ns22:TransactionID>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </ns22:TransactionID>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId">
                        <ns22:CorrelationID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/CorrelationId"/>
                        </ns22:CorrelationID>
                    </xsl:if>
                    <ns22:InterfaceID>
                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                    </ns22:InterfaceID>
                    <ns22:Filename>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/Deployment"/>
                    </ns22:Filename>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <ns22:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </ns22:Message>
                    </xsl:if>
                    <ns22:Transaction>
                        <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx12:DepostRefundResponse)"/>
                    </ns22:Transaction>
                    <xsl:for-each select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit">
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'MaskedValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="concat('XXXXXX',substring(current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber, 7,6),'XXXX')"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                        <ns22:AltKey>
                            <ns22:AltKeyName>
                                <xsl:value-of select="'SecretValue'"/>
                            </ns22:AltKeyName>
                            <ns22:AltKeyValue>
                                <xsl:value-of select="current()/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns22:AltKeyValue>
                        </ns22:AltKey>
                    </xsl:for-each>
                </ns22:Header>
                <TimeDuration>
                    <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                </TimeDuration>
                <xsl:if test="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError">
                    <Category>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleError"/>
                    </Category>
                </xsl:if>
                <Status>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CommonProcesses/Constants/CLE/Status/BPI/BPI_ERR_RES_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns12:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>633</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns6:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns6:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>667</pd:x>
        <pd:y>326</pd:y>
        <config>
            <element ref="pfx12:DepostRefundResponse"/>
        </config>
        <pd:inputBindings>
            <pfx12:DepostRefundResponse>
                <ns19:Response>
                    <ns19:ResponseCode>
                        <xsl:value-of select="0"/>
                    </ns19:ResponseCode>
                    <ns19:ResponseDescription>
                        <xsl:value-of select="'Success'"/>
                    </ns19:ResponseDescription>
                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID">
                        <ns19:CorrelationID>
                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID"/>
                        </ns19:CorrelationID>
                    </xsl:if>
                </ns19:Response>
            </pfx12:DepostRefundResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply-to-JMS-Message-1">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>605</pd:x>
        <pd:y>511</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>depositRefund</EventSource>
            </ConfigurableHeaders>
            <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <xsl:copy-of select="$depositRefund/ns3:ActivityOutput/OtherProperties"/>
                <Body>
                    <xsl:value-of select="tib:render-xml($CLE_to_CDM/pfx12:DepostRefundResponse)"/>
                </Body>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Error">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>455</pd:x>
        <pd:y>382</pd:y>
        <config>
            <element ref="pfx12:DepostRefundResponse"/>
        </config>
        <pd:inputBindings>
            <pfx12:DepostRefundResponse>
                <ns19:Response>
                    <ns19:ResponseCode>
                        <xsl:value-of select="if(string-length($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum)>0)&#xA;then $Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum&#xA;else '-1'"/>
                    </ns19:ResponseCode>
                    <ns19:ResponseDescription>
                        <xsl:value-of select="if(string-length($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo)>0)&#xA;then $Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo&#xA;else 'error'"/>
                    </ns19:ResponseDescription>
                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID">
                        <ns19:CorrelationID>
                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID"/>
                        </ns19:CorrelationID>
                    </xsl:if>
                </ns19:Response>
                <ns21:ErrorResponse>
                    <ns21:Error_SourceSystem>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo,'|'))&#xA;then 'BSCS'&#xA;else 'TIBCO'"/>
                    </ns21:Error_SourceSystem>
                    <xsl:if test="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum">
                        <ns21:Error_SourceErrCode>
                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum"/>
                        </ns21:Error_SourceErrCode>
                    </xsl:if>
                    <ns21:Error_SourceErrDesc>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo,'|'))&#xA;then substring-after($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo,'|')&#xA;else substring-after($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo,':')"/>
                    </ns21:Error_SourceErrDesc>
                    <ns21:Error_Type>
                        <xsl:value-of select="if (contains($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionDocumentNo,'|'))&#xA;then 'Bussiness'&#xA;else 'Technical'"/>
                    </ns21:Error_Type>
                </ns21:ErrorResponse>
            </pfx12:DepostRefundResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>523</pd:x>
        <pd:y>1</pd:y>
        <pd:width>458</pd:width>
        <pd:height>277</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit</pd:over>
            <pd:iterationElementSlot>Deposit</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName>Call_ExtPaymentDetailsWrite</pd:activityOutputName>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call_ExtPaymentDetailsWrite</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SendToLocalErrorQueue</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>Success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Call_ExtPaymentDetailsWrite/ns25:extPaymentDetailsWriteResponse/ns25:response='External Payment Data Inserted Successfully'</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ExtPaymentDetailsWrite</pd:from>
            <pd:to>Map-Error-Payload</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Error-Payload</pd:from>
            <pd:to>SendToLocalErrorQueue</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Call_ExtPaymentDetailsWrite">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>745</pd:x>
            <pd:y>55</pd:y>
            <config>
                <processName>/BusinessProcesses/Services/Update/DepositMgmt/HelperProcess/ESI_BSCS_Call_ExtPaymentDetailsWrite.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <ns25:extPaymentDetailsWriteRequest>
                        <ns25:inputAttributes>
                            <ns25:caxact>
                                <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionId"/>
                            </ns25:caxact>
                            <ns25:transactionRefnum>
                                <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum"/>
                            </ns25:transactionRefnum>
                            <ns25:paymentAmount>
                                <xsl:value-of select="$Deposit/ns20:ZainDeposit/ns20:depositAmount/ns19:amount"/>
                            </ns25:paymentAmount>
                            <ns25:payMethod>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:PreferredPaymentMode"/>
                            </ns25:payMethod>
                            <ns25:payAuthCode>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:CreditCardPM/ns20:authorizationCode"/>
                            </ns25:payAuthCode>
                            <ns25:channel>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[pfx12:name='payDesk']/pfx12:value"/>
                            </ns25:channel>
                            <ns25:user>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[pfx12:name='user']/pfx12:value"/>
                            </ns25:user>
                            <xsl:if test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:merchantId)>0">
                                <ns25:merchantId>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:merchantId"/>
                                </ns25:merchantId>
                            </xsl:if>
                            <xsl:if test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:terminalId)>0">
                                <ns25:terminalId>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:terminalId"/>
                                </ns25:terminalId>
                            </xsl:if>
                            <ns25:customerCategory>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[1]/pfx12:name"/>
                            </ns25:customerCategory>
                            <ns25:crcardno>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns25:crcardno>
                            <xsl:if test="$Deposit/ns20:ZainDeposit/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber!=0">
                                <ns25:remarks>
                                    <xsl:value-of select="concat(substring(tib:trim($Deposit/ns20:ZainDeposit/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber), 1,10),'|')"/>
                                </ns25:remarks>
                            </xsl:if>
                            <ns25:sourceTransactionId>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID"/>
                            </ns25:sourceTransactionId>
                            <ns25:location>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:location"/>
                            </ns25:location>
                        </ns25:inputAttributes>
                    </ns25:extPaymentDetailsWriteRequest>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID">
                        <TrackingId>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TrackingId>
                    </xsl:if>
                    <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp">
                        <StartTimeStamp>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </xsl:if>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map-Error-Payload">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>651</pd:x>
            <pd:y>196</pd:y>
            <config>
                <element ref="ns26:ExternalPaymentPosting_Input"/>
            </config>
            <pd:inputBindings>
                <ns26:ExternalPaymentPosting_Input>
                    <ns27:ListOfCbio2paymenttransactionpostingio>
                        <ns27:Payments>
                            <ns27:AccountNumber>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:CreditCardPM/ns20:creditCardNumber"/>
                            </ns27:AccountNumber>
                            <ns27:AuthorizationCode>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:CreditCardPM/ns20:authorizationCode"/>
                            </ns27:AuthorizationCode>
                            <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[pfx12:name='payDesk']/pfx12:value">
                                <ns27:Channel>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[pfx12:name='payDesk']/pfx12:value"/>
                                </ns27:Channel>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId)>0">
                                    <ns27:CustomerId>
                                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId"/>
                                    </ns27:CustomerId>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns27:CustomerId>
                                        <xsl:value-of select="$Call_MSISDN_BA_Read/ns24:QueryResponse/ns19:customerId/ns19:value"/>
                                    </ns27:CustomerId>
                                </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                                <xsl:when test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID)>0">
                                    <ns27:ExtTransactionRef>
                                        <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:ExternalTransactionID"/>
                                    </ns27:ExtTransactionRef>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:if test="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum">
                                        <ns27:ExtTransactionRef>
                                            <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum"/>
                                        </ns27:ExtTransactionRef>
                                    </xsl:if>
                                </xsl:otherwise>
                            </xsl:choose>
                            <ns27:MSISDN>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='MSISDN']/ns20:IDvalue"/>
                            </ns27:MSISDN>
                            <ns27:MerchantId>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:merchantId"/>
                            </ns27:MerchantId>
                            <ns27:MerchantAmount>
                                <xsl:value-of select="$Deposit/ns20:ZainDeposit/ns20:depositAmount/ns19:amount"/>
                            </ns27:MerchantAmount>
                            <ns27:MerchTxnRef>
                                <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionId"/>
                            </ns27:MerchTxnRef>
                            <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                                <xsl:when test="string-length($Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:Timestamp)>0">
                                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:Timestamp">
                                        <ns27:CBiO2PaymentDateTime>
                                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns19:Header/ns19:Timestamp"/>
                                        </ns27:CBiO2PaymentDateTime>
                                    </xsl:if>
                                </xsl:when>
                                <xsl:otherwise/>
                            </xsl:choose>
                            <ns27:UserName>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[pfx12:name='user']/pfx12:value"/>
                            </ns27:UserName>
                            <ns27:TerminalId>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:terminalId"/>
                            </ns27:TerminalId>
                            <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:location">
                                <ns27:CBiO2WorkArea>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:SourceDetails/ns20:location"/>
                                </ns27:CBiO2WorkArea>
                            </xsl:if>
                            <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[1]/pfx12:name">
                                <ns27:CardHolder>
                                    <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/pfx12:References/pfx12:items[1]/pfx12:name"/>
                                </ns27:CardHolder>
                            </xsl:if>
                            <ns27:PaymentMethod>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:PaymentMethod/ns20:PreferredPaymentMode"/>
                            </ns27:PaymentMethod>
                            <xsl:if test="$Deposit/ns20:ZainDeposit/ns20:depositAmount/ns19:amount">
                                <ns27:TransactionAmount>
                                    <xsl:value-of select="$Deposit/ns20:ZainDeposit/ns20:depositAmount/ns19:amount"/>
                                </ns27:TransactionAmount>
                            </xsl:if>
                            <xsl:if test="$Deposit/ns20:ZainDeposit/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber!=0">
                                <ns27:ChequeNum>
                                    <xsl:value-of select="concat(substring(tib:trim($Deposit/ns20:ZainDeposit/ns20:PaymentMethod/ns19:ChequeDetails/ns19:chequeNumber), 1,10),'|')"/>
                                </ns27:ChequeNum>
                            </xsl:if>
                            <xsl:if test="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum">
                                <ns27:CRMReceiptNo>
                                    <xsl:value-of select="$Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionRefnum"/>
                                </ns27:CRMReceiptNo>
                            </xsl:if>
                        </ns27:Payments>
                    </ns27:ListOfCbio2paymenttransactionpostingio>
                </ns26:ExternalPaymentPosting_Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SendToLocalErrorQueue">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>836</pd:x>
            <pd:y>193</pd:y>
            <config>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>%%BusinessProcesses/Services/Update/MultiSubscriberPayment/EXT_Payment_Failure_Queue%%</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/CommonResources/Connections/JMS/Internal/EAI_EMSConnection.sharedjmscon</ConnectionReference>
                <ApplicationProperties>/CommonResources/Connections/JMS/Internal/EAI_EMSApplicationProperties.sharedjmsapp</ApplicationProperties>
            </config>
            <pd:inputBindings>
                <ns3:ActivityInput>
                    <OtherProperties>
                        <TransactionID>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                        </TransactionID>
                        <StartTimeStamp>
                            <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp"/>
                        </StartTimeStamp>
                    </OtherProperties>
                    <Body>
                        <xsl:value-of select="tib:render-xml($Map-Error-Payload/ns26:ExternalPaymentPosting_Input)"/>
                    </Body>
                </ns3:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Call_MSISDN_BA_Read">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>327</pd:x>
        <pd:y>242</pd:y>
        <config>
            <processName>/BusinessProcesses/Services/Update/DepositMgmt/HelperProcess/ESI_BSCS_MSISDN_BA_Read.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns24:QueryRequest>
                    <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='MSISDN']/ns20:IDvalue">
                        <ns19:MSISDN>
                            <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='MSISDN']/ns20:IDvalue"/>
                        </ns19:MSISDN>
                    </xsl:if>
                    <ns19:billId>
                        <xsl:if test="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue">
                            <ns19:value>
                                <xsl:value-of select="$Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue"/>
                            </ns19:value>
                        </xsl:if>
                    </ns19:billId>
                </ns24:QueryRequest>
                <xsl:if test="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID">
                    <TrackingId>
                        <xsl:value-of select="$depositRefund/ns3:ActivityOutput/OtherProperties/TransactionID"/>
                    </TrackingId>
                </xsl:if>
                <StartTimeStamp>
                    <xsl:value-of select="if(exists($depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp) and string-length($depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp) > 0)&#xA;then $depositRefund/ns3:ActivityOutput/OtherProperties/StartTimeStamp&#xA;else 0"/>
                </StartTimeStamp>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>depositRefund</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>LogIn</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>depositRefund</pd:from>
        <pd:to>JMSReceiverError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>ParsingError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogOut</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandler</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandler</pd:from>
        <pd:to>CLE_to_CDM</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Reply-to-JMS-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CLE_to_CDM</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Map-Error</pd:to>
        <pd:xpathDescription>NotValidated</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply-to-JMS-Message-1</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Error</pd:from>
        <pd:to>LogOut</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_FinancialTransactionWrite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_FinancialTransactionWrite</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>Validated</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Call_FinancialTransactionWrite/ns23:financialTransactionWriteResponse/ns23:resultList/ns23:item[1]/ns23:transactionId)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogIn</pd:from>
        <pd:to>Call_MSISDN_BA_Read</pd:to>
        <pd:xpathDescription>MSISDN Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='MSISDN']/ns20:IDvalue)&gt;0
or
(string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit[1]/ns20:customerId)=0
and
string-length($Parse-XML/pfx12:DepositRefundRequest/ns20:ZainDeposit/ns20:depositLevel[ns20:IDname='BAID']/ns20:IDvalue)&gt;0)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_MSISDN_BA_Read</pd:from>
        <pd:to>Call_FinancialTransactionWrite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>