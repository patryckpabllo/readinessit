<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx15="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Res" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx14="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" xmlns:pfx13="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" xmlns:pfx12="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" xmlns:pfx11="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" xmlns:pfx10="http://www.siebel.com/xml/MOZ1%20Error%20Log%20Res" xmlns:ns101="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:zainesbcustom="java://com.commonresources.utilities.CustomFunctions" xmlns:pfx19="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" xmlns:pfx18="http://www.lhsgroup.com/ws_v3_CBIO_2_1" xmlns:pfx17="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" xmlns:ns02="www.tibco.com/plugin/Sleep" xmlns:ns41="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/portfolio" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns16="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Inbound%20IO" xmlns:pfx51="http://xmlns.example.com/1323156482391/OperationImpl" xmlns:ns17="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20IO" xmlns:ns14="http://www.zain.com/schemas/CommonProject/BusinessSchemas/Common/CRM/ListOfValues.xsd" xmlns:ns15="http://xmlns.tibco.com/encodings/mime" xmlns:ns18="http://www.siebel.com/xml/MOZ1%20Kurmalak%20Redemption%20Points%20IO" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns13="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns10="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:pfx="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" xmlns:ns11="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns51="www.tibco.com/createcustomer" xmlns:pfx46="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/ProcessKNETPayments.xsd" xmlns:pfx44="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" xmlns:pfx45="http://mastercard.zain.com/" xmlns:pfx42="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" xmlns:pfx43="http://www.zain.com/ZESB/Services/SalesOrder/Types" xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx41="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Res" xmlns:pfx40="http://www.zain.com/ZESB/Services/AuthorizeCredit" xmlns:pfx81="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/XML/AccountCreationReq_13Jan2012.xsd" xmlns:pfx39="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx31="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" xmlns:pfx32="http://siebel.com/BillDeliveryMethodAPI" xmlns:pfx4="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" xmlns:pfx33="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" xmlns:pfx34="http://www.zain.com/ZESB/Services/eAccountManagement/Types" xmlns:pfx2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" xmlns:pfx9="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx35="http://www.zain.com/ZESB/Services/eAccountManagement" xmlns:pfx36="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:pfx8="http://www.tibco.com/ns/no_namespace_schema_location/CDM/CDM.xsd" xmlns:pfx37="http://www.tibco.com/schemas/CommonProject/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" xmlns:pfx7="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" xmlns:pfx6="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" xmlns:pfx38="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" xmlns:ns9="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns5="http://xmlns.zain.jo.org/CDM/CustomerAndOrder" xmlns:ns6="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:ns7="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx71="http://www.tibco.com/pe/SignalInActivitySchema" xmlns:ns8="http://www.tibco.com/pe/EngineTypes" xmlns:ns2="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/billingAccount" xmlns:ns1="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customer" xmlns:pfx28="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" xmlns:ns4="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/contactPerson" xmlns:pfx29="http://siebel.com/GetRTAAPI" xmlns:ns3="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/address" xmlns:ns0="http://xml.apache.org/axis/wsdd/providers/java" xmlns:pfx22="http://tempuri.org/ZainWS/Service1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://www.ericsson.com/Mozaic/BusinessSchemas/Generic/SendNotificationAck.xsd" xmlns:pfx20="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" xmlns:pfx21="http://www.siebel.com/xml/MOZ1%20Account%20Creation%20Req" xmlns:pfx26="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetCustomerDemographicsReq.xsd" xmlns:pfx27="http://www.siebel.com/xml/MOZ1%20Arab%20Bank%20Redemption%20IO" xmlns:pfx24="http://siebel.com/ArabKurmalakPoint" xmlns:pfx25="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetInvoiceCDMRes.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.ericsson.com/EAI/SchemaDefinitions/CDM/customerAccount" schemaLocation="/CDM/customerAccount.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CustomerAndOrder.xsd" schemaLocation="/CustomerAndOrder.xsd"/>
    <xsd:import namespace="http://xmlns.zain.jo.org/CDM/CustomerAndOrder"/>
    <xsd:import namespace="http://www.siebel.com/xml/MOZ1%20Customer%20Creation%20Req" schemaLocation="/AccountCreationRes_22Jan2012.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.3.xsd" schemaLocation="/CDM/Zain_EAIV2.3.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/CDM/Zain_EAIV2.8.xsd" schemaLocation="/CDM/Zain_EAIV2.8.xsd"/>
    <xsd:import namespace="http://www.tibco.com/CommonLE2/namespace/Public/Exception/ExceptionRequest.xsd" schemaLocation="/BusinessSchemas/Common/CLE/ExceptionRequest.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerReq.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Provisioning/CreateCustomerRes.xsd" schemaLocation="/BusinessSchemas/Services/Provisioning/CreateCustomer/CreateCustomerRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/CDM/telecom/canonicaldatamodel" schemaLocation="/CDM/CDM.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeReq.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/AddressChangeRes.xsd" schemaLocation="/BusinessSchemas/Services/Modification/AddressChange/AddressChangeRes.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoRes.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoRes.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd" schemaLocation="/BusinessSchemas/ESI/SDP/GenericRPCReq.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/GetBalanceInfoReq.xsd" schemaLocation="/BusinessSchemas/Services/Query/GetBalance/GetBalanceInfoReq.xsd"/>
    <xsd:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" schemaLocation="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <xsd:import namespace="http://tempuri.org/ZainWS/Service1" schemaLocation="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <xsd:import namespace="http://siebel.com/ArabKurmalakPoint" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTARequest.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTARequest.xsd"/>
    <xsd:import namespace="http://siebel.com/GetRTAAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Query/RTAResponse.xsd" schemaLocation="/BusinessSchemas/Services/Query/RTA/RTAResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodRequest.xsd"/>
    <xsd:import namespace="http://siebel.com/BillDeliveryMethodAPI" schemaLocation="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/Mozaic/BusinessSchemas/Modification/BillDeliveryMethodResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/BillDeliveryMethod/BillDeliveryMethodResponse.xsd"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerRequest.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerRequest.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Provisioning/eAccountManagerResponse.xsd" schemaLocation="/BusinessSchemas/Services/Modification/eAccountManager/eAccountManagerResponse.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/SalesOrder/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/SalesOrder/SalesOrder.wsdl"/>
    <xsd:import namespace="http://mastercard.zain.com/" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/MasterCardWS_schema1.xsd"/>
    <xsd:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit/Types" schemaLocation="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <xsd:import namespace="http://www.ericsson.com/ZainKW/BusinessSchemas/Services/Applications/Common/ProcessKNETPayments.xsd" schemaLocation="/BusinessSchemas/Services/Applications/Common/ProcessKNETPayments/ProcessKNETPayments.xsd"/>
    <xsd:import namespace="http://www.xmlns.zain.com/BSS/ESB/ZainKWFault.xsd" schemaLocation="/CDM/ZainKWFault.xsd"/>
    <wsdl:import namespace="http://www.lhsgroup.com/ws_v3_CBIO_2_1" location="/BusinessSchemas/ESI/BSCS/Query/WSDLs/UnbilledUsageRead.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/ZainWS/Service1" location="/BusinessSchemas/ESI/EPoints/Epoints.wsdl"/>
    <wsdl:import namespace="http://siebel.com/ArabKurmalakPoint" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/ArabKurmalakPoint.wsdl"/>
    <wsdl:import namespace="http://siebel.com/GetRTAAPI" location="/BusinessSchemas/ESI/CRM/Query/WSDLs/GetRTA.wsdl"/>
    <wsdl:import namespace="http://siebel.com/BillDeliveryMethodAPI" location="/BusinessSchemas/ESI/CRM/Modification/WSDLs/BillDeliveryMethod.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/eAccountManagement" location="/BusinessWSDLS/Services/WSDLS/eAccountManagementOutbound/eAccountManagementOutbound.wsdl"/>
    <wsdl:import namespace="http://www.zain.com/ZESB/Services/AuthorizeCredit" location="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/AuthorizeCreditInbound.WSDL.wsdl"/>
    <wsdl:import namespace="http://mastercard.zain.com/" location="/BusinessWSDLS/Services/WSDLS/AuthorizeCredit/Outbound-MasterCardWS.WSDL.wsdl"/>
    <pd:name>BusinessProcesses/Services/ProcessKNETPayment/HelperProcess/Call_PaymentGateway_KNETPayments.process</pd:name>
    <pd:startName>Call_ProcessKNETPayments</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx46:CreateOrderInput"/>
                    <xsd:element name="TrackingId" type="xsd:string"/>
                    <xsd:element name="StartTimeStamp" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>132</pd:startX>
    <pd:startY>183</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="contains($Send-HTTP-Request/RequestActivityOutput/asciiContent,'|')!='true'">
                <pfx44:ErrorResponse>
                    <pfx44:Error_SourceSystem>
                        <xsl:value-of select="'PGW'"/>
                    </pfx44:Error_SourceSystem>
                    <xsl:if test="$Send-HTTP-Request/RequestActivityOutput/asciiContent">
                        <pfx44:Error_SourceErrDesc>
                            <xsl:value-of select="$Send-HTTP-Request/RequestActivityOutput/asciiContent"/>
                        </pfx44:Error_SourceErrDesc>
                    </xsl:if>
                </pfx44:ErrorResponse>
            </xsl:when>
            <xsl:otherwise>
                <pfx46:CreateOrderOutput>
                    <xsl:if test="$MapOutput/root/PaymentID">
                        <pfx46:PaymentID>
                            <xsl:value-of select="$MapOutput/root/PaymentID"/>
                        </pfx46:PaymentID>
                    </xsl:if>
                    <xsl:if test="$MapOutput/root/responseURL">
                        <pfx46:PaymentPage>
                            <xsl:value-of select="$MapOutput/root/responseURL"/>
                        </pfx46:PaymentPage>
                    </xsl:if>
                    <xsl:if test="$MapOutput/root/TerminalID">
                        <pfx46:TerminalID>
                            <xsl:value-of select="$MapOutput/root/TerminalID"/>
                        </pfx46:TerminalID>
                    </xsl:if>
                    <xsl:if test="$MapOutput/root/MerchantID">
                        <pfx46:MerchantID>
                            <xsl:value-of select="$MapOutput/root/MerchantID"/>
                        </pfx46:MerchantID>
                    </xsl:if>
                </pfx46:CreateOrderOutput>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:choice>
            <xsd:element ref="pfx46:CreateOrderOutput"/>
            <xsd:element ref="pfx44:ErrorResponse"/>
        </xsd:choice>
    </pd:endType>
    <pd:endX>1313</pd:endX>
    <pd:endY>188</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="count" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1323154311057</pd:targetNamespace>
    <pd:activity name="CommunicationException">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>1086</pd:x>
        <pd:y>322</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/HTTPErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GenerateTimeOutError">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>328</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorDesc"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonErrors/TimeOutErrorCode"/>
                </messageCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Request">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>537</pd:x>
        <pd:y>184</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BunisessProcesses/Services/Transaction/ProcessKNETPayments/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Call_ProcessKNETPayments/group/pfx46:CreateOrderInput)"/>
                    </ns6:Message>
                    <xsl:if test="$ComposeQueryString/root/QueryString">
                        <ns6:Transaction>
                            <xsl:value-of select="$ComposeQueryString/root/QueryString"/>
                        </ns6:Transaction>
                    </xsl:if>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$Call_ProcessKNETPayments/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_REQ_SENT"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_Response">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1117</pd:x>
        <pd:y>188</pd:y>
        <config>
            <processName>/CommonProcesses/LoggingProcess/Logging_Message.process</processName>
        </config>
        <pd:inputBindings>
            <ns11:LogRequest>
                <ns6:Header>
                    <ns6:ApplicationID>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/ApplicationID"/>
                    </ns6:ApplicationID>
                    <ns6:ComponentName>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BunisessProcesses/Services/Transaction/ProcessKNETPayments/ComponentName"/>
                    </ns6:ComponentName>
                    <ns6:Hostname>
                        <xsl:value-of select="BW:getHostName()"/>
                    </ns6:Hostname>
                    <ns6:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns6:Timestamp>
                    <ns6:TransactionDomain>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Header/TransactionDomain/TRANSACTION"/>
                    </ns6:TransactionDomain>
                    <ns6:TransactionType>
                        <xsl:value-of select="zainesbcustom:getTransactionType(BW:getCurrentProcessName($_processContext/ns8:ProcessContext/ProcessId))"/>
                    </ns6:TransactionType>
                    <ns6:TransactionID>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/TrackingId"/>
                    </ns6:TransactionID>
                    <ns6:Message>
                        <xsl:value-of select="tib:render-xml($Call_ProcessKNETPayments/group/pfx46:CreateOrderInput)"/>
                    </ns6:Message>
                    <xsl:if test="$Send-HTTP-Request/RequestActivityOutput/asciiContent">
                        <ns6:Transaction>
                            <xsl:value-of select="$Send-HTTP-Request/RequestActivityOutput/asciiContent"/>
                        </ns6:Transaction>
                    </xsl:if>
                </ns6:Header>
                <TimeDuration>
                    <xsl:value-of select="tib:timestamp()-$Call_ProcessKNETPayments/group/StartTimeStamp"/>
                </TimeDuration>
                <Category>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Category/LogRoleInfo"/>
                </Category>
                <Status>
                    <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/CommonProcesses/Constants/CLE/Status/ESI/ESI_RES_RECV"/>
                </Status>
                <Audit>
                    <xsl:value-of select="0"/>
                </Audit>
            </ns11:LogRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>628</pd:x>
        <pd:y>8</pd:y>
        <pd:width>347</pd:width>
        <pd:height>337</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>errorLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>iError</pd:indexSlot>
            <pd:errorCondition>$iError=$_globalVariables/pfx9:GlobalVariables/CommonProcesses/ErrorHandling/Retry/MaxRetryCount</pd:errorCondition>
            <pd:suspendAfterErrorRetry>false</pd:suspendAfterErrorRetry>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Send HTTP Request</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>end</pd:to>
            <pd:xpathDescription>otherwise</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16776961</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Send HTTP Request</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>GenerateRetriableError</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407668</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Retriable</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65281</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException)
or
exists($_error_Send-HTTP-Request/ActivityErrors/ns10:ActivityTimedOutException)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Send HTTP Request</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="GenerateRetriableError">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>753</pd:x>
            <pd:y>267</pd:y>
            <config>
                <faultName/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <xsl:if test="$_error/ns8:ErrorReport/Data/*">
                        <message>
                            <xsl:value-of select="$_error/ns8:ErrorReport/Data/*"/>
                        </message>
                    </xsl:if>
                    <xsl:if test="$_error/ns8:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns8:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>906</pd:x>
            <pd:y>265</pd:y>
            <config/>
            <pd:inputBindings>
                <ns02:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BusinessProcesses/Common/ErrorHandling/RetryInterval"/>
                    </IntervalInMillisec>
                </ns02:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>775</pd:x>
            <pd:y>181</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Send HTTP Request">
            <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
            <pd:resourceType>httppalette.httpRequest</pd:resourceType>
            <pd:x>770</pd:x>
            <pd:y>78</pd:y>
            <config>
                <inputOutputVersion>5.3.0</inputOutputVersion>
                <newMimeSupport>true</newMimeSupport>
                <serverhost>%%BunisessProcesses/Services/Transaction/ProcessKNETPayments/Host%%</serverhost>
                <serverport>%%BunisessProcesses/Services/Transaction/ProcessKNETPayments/Port%%</serverport>
                <requireBasicAuth>false</requireBasicAuth>
                <basicHttpAuthIdentity/>
                <authScheme>NONE</authScheme>
                <customField/>
                <InputHeaders>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="User-Agent" type="xsd:string"/>
                                <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </InputHeaders>
                <OutputHeaders>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </OutputHeaders>
            </config>
            <pd:inputBindings>
                <RequestActivityInput>
                    <RequestURI>
                        <xsl:value-of select="$_globalVariables/pfx9:GlobalVariables/BunisessProcesses/Services/Transaction/ProcessKNETPayments/Request_URI"/>
                    </RequestURI>
                    <xsl:if test="$ComposeQueryString/root/QueryString">
                        <QueryString>
                            <xsl:value-of select="$ComposeQueryString/root/QueryString"/>
                        </QueryString>
                    </xsl:if>
                </RequestActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="MapFields">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>267</pd:x>
        <pd:y>184</pd:y>
        <config>
            <element>
                <xsd:element name="query-parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="MSISDN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Amount" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="OrderID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="returnURL" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ErrorURL" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="OrderDesc" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Lang" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="lang" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CardNo" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="CardExp" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="actionClassName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Channel" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="UDF1" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="UDF-" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="UDF3" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="UDF4" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="UDF5" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <query-parameters>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:MSISDN">
                    <MSISDN>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:MSISDN"/>
                    </MSISDN>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Amount">
                    <Amount>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Amount"/>
                    </Amount>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:OrderID">
                    <OrderID>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:OrderID"/>
                    </OrderID>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:ReturnPage">
                    <returnURL>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:ReturnPage"/>
                    </returnURL>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:ErrorPage">
                    <ErrorURL>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:ErrorPage"/>
                    </ErrorURL>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:OrderDesc">
                    <OrderDesc>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:OrderDesc"/>
                    </OrderDesc>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel='Kiosk'">
                    <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Language">
                        <Lang>
                            <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Language"/>
                        </Lang>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel!='Kiosk'">
                    <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Language">
                        <lang>
                            <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Language"/>
                        </lang>
                    </xsl:if>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:CardNum">
                    <CardNo>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:CardNum"/>
                    </CardNo>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:CardExpiry">
                    <CardExp>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:CardExpiry"/>
                    </CardExp>
                </xsl:if>
                <actionClassName>
                    <xsl:value-of select="if(string-length($Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:HandlerClass='0'))&#xA;then&#xA; &#x9;(if($Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel = 'Kiosk') then&#xA;&#x9;&quot;com.mtc.knetpayment.PaymentHandlerZain&quot;&#xA;&#x9;else if ($Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel = 'OldWeb') then&#xA;&#x9;&quot;com.mtc.knetpayment.PaymentHandlerZain&quot;&#xA;&#x9;else&#xA;&#x9;&quot;com.mtc.knetpayment.GenericPaymentHandlerImpl&quot; )&#xA;else&#xA;$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:HandlerClass"/>
                </actionClassName>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel">
                    <Channel>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Channel"/>
                    </Channel>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF1']/pfx46:Value">
                    <UDF1>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF1']/pfx46:Value"/>
                    </UDF1>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF2']/pfx46:Value">
                    <UDF->
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF2']/pfx46:Value"/>
                    </UDF->
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF3']/pfx46:Value">
                    <UDF3>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF3']/pfx46:Value"/>
                    </UDF3>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF4']/pfx46:Value">
                    <UDF4>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF4']/pfx46:Value"/>
                    </UDF4>
                </xsl:if>
                <xsl:if test="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF5']/pfx46:Value">
                    <UDF5>
                        <xsl:value-of select="$Call_ProcessKNETPayments/group/pfx46:CreateOrderInput/pfx46:Params/pfx46:Param[pfx46:Name='UDF5']/pfx46:Value"/>
                    </UDF5>
                </xsl:if>
            </query-parameters>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ComposeQueryString">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>381</pd:x>
        <pd:y>183</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="QueryString" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:variable name="var" select="if(exists($MapFields/query-parameters/Lang))&#xA;then&#xA;concat('&amp;','Lang=',$MapFields/query-parameters/Lang)&#xA;else&#xA;if (exists($MapFields/query-parameters/lang))&#xA;then&#xA;concat('&amp;','lang=',$MapFields/query-parameters/lang)&#xA;else&#xA;''"/>
                <QueryString>
                    <xsl:value-of select="concat(if(exists($MapFields/query-parameters/MSISDN) ) then 'MSISDN=' else '',$MapFields/query-parameters/MSISDN,if(exists($MapFields/query-parameters/Amount) ) then concat('&amp;','Amount=') else '',$MapFields/query-parameters/Amount,if(exists($MapFields/query-parameters/OrderID) ) then concat('&amp;','OrderID=') else '',$MapFields/query-parameters/OrderID,if(exists($MapFields/query-parameters/returnURL) ) then concat('&amp;','returnURL=') else '',$MapFields/query-parameters/returnURL,if(exists($MapFields/query-parameters/ErrorURL) ) then concat('&amp;','ErrorURL=') else '',$MapFields/query-parameters/ErrorURL,if(exists($MapFields/query-parameters/OrderDesc) ) then concat('&amp;','OrderDesc=') else '',$MapFields/query-parameters/OrderDesc,$var,if(exists($MapFields/query-parameters/CardNo) ) then concat('&amp;','CardNo=') else '',$MapFields/query-parameters/CardNo,if(exists($MapFields/query-parameters/CardExp) ) then concat('&amp;','CardExp=') else '',$MapFields/query-parameters/CardExp,if(exists($MapFields/query-parameters/actionClassName) ) then concat('&amp;','actionClassName=') else &#xA;'',$MapFields/query-parameters/CardExp,$MapFields/query-parameters/actionClassName,&#xA;if(exists($MapFields/query-parameters/Channel)) then concat('&amp;','Channel=') else '',$MapFields/query-parameters/Channel,&#xA;if(exists($MapFields/query-parameters/UDF1)) then concat('&amp;','UDF1=') else '',$MapFields/query-parameters/UDF1,&#xA;if(exists($MapFields/query-parameters/UDF-)) then concat('&amp;','UDF2=') else '',$MapFields/query-parameters/UDF-,&#xA;if(exists($MapFields/query-parameters/UDF3)) then concat('&amp;','UDF3=') else '',$MapFields/query-parameters/UDF3,&#xA;if(exists($MapFields/query-parameters/UDF4)) then concat('&amp;','UDF4=') else '',$MapFields/query-parameters/UDF4,&#xA;if(exists($MapFields/query-parameters/UDF5)) then concat('&amp;','UDF5=') else '',$MapFields/query-parameters/UDF5,&#xA;$MapFields/query-parameters/Channel)"/>
                </QueryString>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapOutput">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1216</pd:x>
        <pd:y>188</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="responseURL" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="PaymentID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="TerminalID" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MerchantID" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:variable name="var" select="tib:tokenize($Send-HTTP-Request/RequestActivityOutput/asciiContent, '|')"/>
                <xsl:if test="$var[2]">
                    <responseURL>
                        <xsl:value-of select="$var[2]"/>
                    </responseURL>
                </xsl:if>
                <xsl:if test="$var[1]">
                    <PaymentID>
                        <xsl:value-of select="$var[1]"/>
                    </PaymentID>
                </xsl:if>
                <xsl:if test="$var[3]">
                    <TerminalID>
                        <xsl:value-of select="$var[3]"/>
                    </TerminalID>
                </xsl:if>
                <xsl:if test="$var[4]">
                    <MerchantID>
                        <xsl:value-of select="$var[4]"/>
                    </MerchantID>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Log_Response</pd:from>
        <pd:to>MapOutput</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log_Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>GenerateTimeOutError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>CommunicationException</pd:to>
        <pd:xpathDescription>CommunicationException</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpClientException)
or
exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpServerException)
or
exists($_error_Send-HTTP-Request/ActivityErrors/ns9:HttpCommunicationException)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapFields</pd:from>
        <pd:to>ComposeQueryString</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call_ProcessKNETPayments</pd:from>
        <pd:to>MapFields</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ComposeQueryString</pd:from>
        <pd:to>Log_Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapOutput</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>